// Created by Microsoft (R) C/C++ Compiler Version 10.00.40219.01 (928876d4).
//
// d:\visualprolog\++liraread\robot\ak_robot_1\ak_robot_1\debug\robotom.tli
//
// Wrapper implementations for Win32 type library c:\\Program Files\\Autodesk\\Autodesk Robot Structural Analysis Professional 2019\\System\\Exe\\robotom.tlb
// compiler-generated file created 11/28/21 at 10:22:44 - DO NOT EDIT!


//
// interface IDontUseIt wrapper method implementations
//

#pragma implementation_key(1)
inline long IDontUseIt::GetRX ( ) {
    long _result = 0;
    HRESULT _hr = get_RX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2)
inline long IDontUseIt::GetRY ( ) {
    long _result = 0;
    HRESULT _hr = get_RY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3)
inline long IDontUseIt::GetRZ ( ) {
    long _result = 0;
    HRESULT _hr = get_RZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotLabel wrapper method implementations
//

#pragma implementation_key(4)
inline enum IRobotLabelType IRobotLabel::GetType ( ) {
    enum IRobotLabelType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5)
inline _bstr_t IRobotLabel::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6)
inline IDispatchPtr IRobotLabel::GetData ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7)
inline long IRobotLabel::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8)
inline long IRobotLabel::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9)
inline void IRobotLabel::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotCollection wrapper method implementations
//

#pragma implementation_key(10)
inline long IRobotCollection::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(11)
inline IDispatchPtr IRobotCollection::Get ( long idx ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface IRobotNamesArray wrapper method implementations
//

#pragma implementation_key(12)
inline long IRobotNamesArray::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(13)
inline HRESULT IRobotNamesArray::SetSize ( long Count ) {
    HRESULT _hr = raw_SetSize(Count);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(14)
inline _bstr_t IRobotNamesArray::Get ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(15)
inline HRESULT IRobotNamesArray::Set ( long idx, _bstr_t text ) {
    HRESULT _hr = raw_Set(idx, text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(16)
inline long IRobotNamesArray::Find ( _bstr_t _to_find, long _start_idx ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_to_find, _start_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotLabelServer wrapper method implementations
//

#pragma implementation_key(17)
inline IRobotLabelPtr IRobotLabelServer::Create ( enum IRobotLabelType lab_type, _bstr_t lab_name ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_Create(lab_type, lab_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(18)
inline HRESULT IRobotLabelServer::Store ( struct IRobotLabel * label ) {
    HRESULT _hr = raw_Store(label);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(19)
inline HRESULT IRobotLabelServer::Delete ( enum IRobotLabelType lab_type, _bstr_t lab_name ) {
    HRESULT _hr = raw_Delete(lab_type, lab_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(20)
inline long IRobotLabelServer::Exist ( enum IRobotLabelType lab_type, _bstr_t lab_name ) {
    long _result = 0;
    HRESULT _hr = raw_Exist(lab_type, lab_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(21)
inline IRobotLabelPtr IRobotLabelServer::Get ( enum IRobotLabelType lab_type, _bstr_t lab_name ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_Get(lab_type, lab_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(22)
inline IRobotCollectionPtr IRobotLabelServer::GetMany ( enum IRobotLabelType lab_type ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetMany(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(23)
inline IRobotCollectionPtr IRobotLabelServer::GetAll ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetAll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(24)
inline IRobotLabelPtr IRobotLabelServer::FindWithId ( long unique_id ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_FindWithId(unique_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(25)
inline HRESULT IRobotLabelServer::StoreWithName ( struct IRobotLabel * _label, _bstr_t _label_name ) {
    HRESULT _hr = raw_StoreWithName(_label, _label_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(26)
inline IRobotNamesArrayPtr IRobotLabelServer::GetAvailableNames ( enum IRobotLabelType _label_type ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = raw_GetAvailableNames(_label_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(27)
inline VARIANT_BOOL IRobotLabelServer::IsAvailable ( enum IRobotLabelType _lab_type, _bstr_t _lab_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsAvailable(_lab_type, _lab_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(28)
inline IRobotLabelPtr IRobotLabelServer::CreateLike ( enum IRobotLabelType _lab_type, _bstr_t _lab_name, _bstr_t _like_name ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_CreateLike(_lab_type, _lab_name, _like_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(29)
inline VARIANT_BOOL IRobotLabelServer::SetDefault ( enum IRobotLabelType _lab_type, _bstr_t _lab_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetDefault(_lab_type, _lab_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(30)
inline _bstr_t IRobotLabelServer::GetDefault ( enum IRobotLabelType _lab_type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDefault(_lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(31)
inline VARIANT_BOOL IRobotLabelServer::IsUsed ( enum IRobotLabelType _lab_type, _bstr_t _lab_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsUsed(_lab_type, _lab_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(32)
inline long IRobotLabelServer::GetUniqueId ( enum IRobotLabelType _lab_type, _bstr_t _lab_name ) {
    long _result = 0;
    HRESULT _hr = raw_GetUniqueId(_lab_type, _lab_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(33)
inline _bstr_t IRobotLabelServer::GetPredefinedName ( enum IRobotPredefinedLabel _predef_label ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetPredefinedName(_predef_label, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(34)
inline VARIANT_BOOL IRobotLabelServer::IsPredefinedName ( enum IRobotLabelType _lab_type, _bstr_t _lab_name, enum IRobotPredefinedLabel * _ret_predef_lab ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsPredefinedName(_lab_type, _lab_name, _ret_predef_lab, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotSelection wrapper method implementations
//

#pragma implementation_key(35)
inline enum IRobotObjectType IRobotSelection::GetType ( ) {
    enum IRobotObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(36)
inline HRESULT IRobotSelection::FromText ( _bstr_t sel_text ) {
    HRESULT _hr = raw_FromText(sel_text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(37)
inline _bstr_t IRobotSelection::ToText ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ToText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(38)
inline HRESULT IRobotSelection::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(39)
inline HRESULT IRobotSelection::Add ( struct IRobotSelection * sel ) {
    HRESULT _hr = raw_Add(sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(40)
inline HRESULT IRobotSelection::Exclude ( struct IRobotSelection * sel ) {
    HRESULT _hr = raw_Exclude(sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(41)
inline HRESULT IRobotSelection::And ( struct IRobotSelection * sel ) {
    HRESULT _hr = raw_And(sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(42)
inline long IRobotSelection::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(43)
inline HRESULT IRobotSelection::AddOne ( long _obj_num ) {
    HRESULT _hr = raw_AddOne(_obj_num);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(44)
inline HRESULT IRobotSelection::ExcludeOne ( long _obj_num ) {
    HRESULT _hr = raw_ExcludeOne(_obj_num);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(45)
inline VARIANT_BOOL IRobotSelection::Contains ( long _obj_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Contains(_obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(46)
inline long IRobotSelection::Get ( long _idx ) {
    long _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(47)
inline HRESULT IRobotSelection::AddText ( _bstr_t _sel_text ) {
    HRESULT _hr = raw_AddText(_sel_text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(48)
inline HRESULT IRobotSelection::ExcludeText ( _bstr_t _sel_text ) {
    HRESULT _hr = raw_ExcludeText(_sel_text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(49)
inline HRESULT IRobotSelection::AndText ( _bstr_t _sel_text ) {
    HRESULT _hr = raw_AndText(_sel_text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotLoadRecord wrapper method implementations
//

#pragma implementation_key(50)
inline enum IRobotLoadRecordType IRobotLoadRecord::GetType ( ) {
    enum IRobotLoadRecordType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(51)
inline enum IRobotObjectType IRobotLoadRecord::GetObjectType ( ) {
    enum IRobotObjectType _result;
    HRESULT _hr = get_ObjectType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(52)
inline void IRobotLoadRecord::PutObjectType ( enum IRobotObjectType ret ) {
    HRESULT _hr = put_ObjectType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(53)
inline IRobotSelectionPtr IRobotLoadRecord::GetObjects ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_Objects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(54)
inline _bstr_t IRobotLoadRecord::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(55)
inline void IRobotLoadRecord::PutDescription ( _bstr_t ret ) {
    HRESULT _hr = put_Description(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(56)
inline double IRobotLoadRecord::GetValue ( short val_id ) {
    double _result = 0;
    HRESULT _hr = raw_GetValue(val_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(57)
inline HRESULT IRobotLoadRecord::SetValue ( short val_id, double val ) {
    HRESULT _hr = raw_SetValue(val_id, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotGeoPoint3D wrapper method implementations
//

#pragma implementation_key(58)
inline double IRobotGeoPoint3D::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(59)
inline void IRobotGeoPoint3D::PutX ( double ret ) {
    HRESULT _hr = put_X(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(60)
inline double IRobotGeoPoint3D::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(61)
inline void IRobotGeoPoint3D::PutY ( double ret ) {
    HRESULT _hr = put_Y(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(62)
inline double IRobotGeoPoint3D::GetZ ( ) {
    double _result = 0;
    HRESULT _hr = get_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(63)
inline void IRobotGeoPoint3D::PutZ ( double ret ) {
    HRESULT _hr = put_Z(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(64)
inline HRESULT IRobotGeoPoint3D::Get ( double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_Get(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(65)
inline HRESULT IRobotGeoPoint3D::Set ( double _x, double _y, double _z ) {
    HRESULT _hr = raw_Set(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotGeoLayer wrapper method implementations
//

#pragma implementation_key(66)
inline IRobotGeoPoint3DPtr IRobotGeoLayer::GetP1 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(67)
inline IRobotGeoPoint3DPtr IRobotGeoLayer::GetP2 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(68)
inline IRobotGeoPoint3DPtr IRobotGeoLayer::GetP3 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(69)
inline IRobotGeoPoint3DPtr IRobotGeoLayer::GetPDir ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_PDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(70)
inline double IRobotGeoLayer::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(71)
inline void IRobotGeoLayer::PutThickness ( double ret ) {
    HRESULT _hr = put_Thickness(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(72)
inline VARIANT_BOOL IRobotGeoLayer::GetIsThickDefined ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsThickDefined(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(73)
inline void IRobotGeoLayer::PutIsThickDefined ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsThickDefined(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLoadRecord2 wrapper method implementations
//

#pragma implementation_key(74)
inline long IRobotLoadRecord2::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(75)
inline VARIANT_BOOL IRobotLoadRecord2::SetGeoLimits ( struct IRobotGeoLayer * layer_def ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetGeoLimits(layer_def, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(76)
inline IRobotGeoLayerPtr IRobotLoadRecord2::GetGeoLimits ( ) {
    struct IRobotGeoLayer * _result = 0;
    HRESULT _hr = raw_GetGeoLimits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoLayerPtr(_result, false);
}

#pragma implementation_key(77)
inline long IRobotLoadRecord2::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(78)
inline void IRobotLoadRecord2::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLoadRecordCommon wrapper method implementations
//

#pragma implementation_key(79)
inline VARIANT_BOOL IRobotLoadRecordCommon::GetIsAutoGenerated ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAutoGenerated(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotLoadRecordMngr wrapper method implementations
//

#pragma implementation_key(80)
inline long IRobotLoadRecordMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(81)
inline long IRobotLoadRecordMngr::New ( enum IRobotLoadRecordType record_type ) {
    long _result = 0;
    HRESULT _hr = raw_New(record_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(82)
inline IRobotLoadRecordPtr IRobotLoadRecordMngr::Get ( long record_index ) {
    struct IRobotLoadRecord * _result = 0;
    HRESULT _hr = raw_Get(record_index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLoadRecordPtr(_result, false);
}

#pragma implementation_key(83)
inline HRESULT IRobotLoadRecordMngr::Delete ( long record_index ) {
    HRESULT _hr = raw_Delete(record_index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(84)
inline IRobotLoadRecordPtr IRobotLoadRecordMngr::Create ( enum IRobotLoadRecordType _load_type ) {
    struct IRobotLoadRecord * _result = 0;
    HRESULT _hr = raw_Create(_load_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLoadRecordPtr(_result, false);
}

//
// interface IRobotLoadRecordLinear wrapper method implementations
//

#pragma implementation_key(85)
inline HRESULT IRobotLoadRecordLinear::SetPoint ( int which_point, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetPoint(which_point, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(86)
inline HRESULT IRobotLoadRecordLinear::GetPoint ( int which_point, double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_GetPoint(which_point, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(87)
inline long IRobotLoadRecordLinear::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(88)
inline long IRobotLoadRecordLinear::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(89)
inline void IRobotLoadRecordLinear::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLoadRecordLinear3D wrapper method implementations
//

#pragma implementation_key(90)
inline HRESULT IRobotLoadRecordLinear3D::SetPoint ( int which_point, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetPoint(which_point, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(91)
inline HRESULT IRobotLoadRecordLinear3D::GetPoint ( int which_point, double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_GetPoint(which_point, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(92)
inline long IRobotLoadRecordLinear3D::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(93)
inline long IRobotLoadRecordLinear3D::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(94)
inline void IRobotLoadRecordLinear3D::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLoadRecordIn3Points wrapper method implementations
//

#pragma implementation_key(95)
inline HRESULT IRobotLoadRecordIn3Points::SetPoint ( int which_point, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetPoint(which_point, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(96)
inline long IRobotLoadRecordIn3Points::GetPoint ( int which_point, double * _x, double * _y, double * _z ) {
    long _result = 0;
    HRESULT _hr = raw_GetPoint(which_point, _x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(97)
inline long IRobotLoadRecordIn3Points::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(98)
inline VARIANT_BOOL IRobotLoadRecordIn3Points::SetGeoLimits ( struct IRobotGeoLayer * layer_def ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetGeoLimits(layer_def, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(99)
inline IRobotGeoLayerPtr IRobotLoadRecordIn3Points::GetGeoLimits ( ) {
    struct IRobotGeoLayer * _result = 0;
    HRESULT _hr = raw_GetGeoLimits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoLayerPtr(_result, false);
}

#pragma implementation_key(100)
inline long IRobotLoadRecordIn3Points::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(101)
inline void IRobotLoadRecordIn3Points::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLoadRecordThermalIn3Points wrapper method implementations
//

#pragma implementation_key(102)
inline HRESULT IRobotLoadRecordThermalIn3Points::SetPoint ( int which_point, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetPoint(which_point, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(103)
inline long IRobotLoadRecordThermalIn3Points::GetPoint ( int which_point, double * _x, double * _y, double * _z ) {
    long _result = 0;
    HRESULT _hr = raw_GetPoint(which_point, _x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(104)
inline long IRobotLoadRecordThermalIn3Points::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(105)
inline VARIANT_BOOL IRobotLoadRecordThermalIn3Points::SetGeoLimits ( struct IRobotGeoLayer * layer_def ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetGeoLimits(layer_def, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(106)
inline IRobotGeoLayerPtr IRobotLoadRecordThermalIn3Points::GetGeoLimits ( ) {
    struct IRobotGeoLayer * _result = 0;
    HRESULT _hr = raw_GetGeoLimits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoLayerPtr(_result, false);
}

#pragma implementation_key(107)
inline long IRobotLoadRecordThermalIn3Points::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(108)
inline void IRobotLoadRecordThermalIn3Points::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLoadRecordInContour wrapper method implementations
//

#pragma implementation_key(109)
inline HRESULT IRobotLoadRecordInContour::SetVector ( double vx, double vy, double vz ) {
    HRESULT _hr = raw_SetVector(vx, vy, vz);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(110)
inline HRESULT IRobotLoadRecordInContour::GetVector ( double * vx, double * vy, double * vz ) {
    HRESULT _hr = raw_GetVector(vx, vy, vz);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(111)
inline HRESULT IRobotLoadRecordInContour::SetPoint ( int which_point, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetPoint(which_point, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(112)
inline long IRobotLoadRecordInContour::GetPoint ( int which_point, double * _x, double * _y, double * _z ) {
    long _result = 0;
    HRESULT _hr = raw_GetPoint(which_point, _x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(113)
inline HRESULT IRobotLoadRecordInContour::SetContourPoint ( int which_point, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetContourPoint(which_point, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(114)
inline HRESULT IRobotLoadRecordInContour::GetContourPoint ( int which_point, double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_GetContourPoint(which_point, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(115)
inline long IRobotLoadRecordInContour::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(116)
inline VARIANT_BOOL IRobotLoadRecordInContour::SetGeoLimits ( struct IRobotGeoLayer * layer_def ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetGeoLimits(layer_def, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(117)
inline IRobotGeoLayerPtr IRobotLoadRecordInContour::GetGeoLimits ( ) {
    struct IRobotGeoLayer * _result = 0;
    HRESULT _hr = raw_GetGeoLimits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoLayerPtr(_result, false);
}

#pragma implementation_key(118)
inline long IRobotLoadRecordInContour::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(119)
inline void IRobotLoadRecordInContour::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotCase wrapper method implementations
//

#pragma implementation_key(120)
inline long IRobotCase::GetNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(121)
inline void IRobotCase::PutNumber ( long ret ) {
    HRESULT _hr = put_Number(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(122)
inline enum IRobotCaseType IRobotCase::GetType ( ) {
    enum IRobotCaseType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(123)
inline _bstr_t IRobotCase::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(124)
inline void IRobotCase::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(125)
inline enum IRobotCaseNature IRobotCase::GetNature ( ) {
    enum IRobotCaseNature _result;
    HRESULT _hr = get_Nature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(126)
inline void IRobotCase::PutNature ( enum IRobotCaseNature ret ) {
    HRESULT _hr = put_Nature(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(127)
inline enum IRobotCaseAnalizeType IRobotCase::GetAnalizeType ( ) {
    enum IRobotCaseAnalizeType _result;
    HRESULT _hr = get_AnalizeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(128)
inline void IRobotCase::PutAnalizeType ( enum IRobotCaseAnalizeType ret ) {
    HRESULT _hr = put_AnalizeType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSimpleCase wrapper method implementations
//

#pragma implementation_key(129)
inline IRobotLoadRecordMngrPtr IRobotSimpleCase::GetRecords ( ) {
    struct IRobotLoadRecordMngr * _result = 0;
    HRESULT _hr = get_Records(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLoadRecordMngrPtr(_result, false);
}

#pragma implementation_key(130)
inline long IRobotSimpleCase::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(131)
inline long IRobotSimpleCase::GetModesCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ModesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(132)
inline void IRobotSimpleCase::PutModesCount ( long ret ) {
    HRESULT _hr = put_ModesCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(133)
inline long IRobotSimpleCase::GetMainMode ( ) {
    long _result = 0;
    HRESULT _hr = get_MainMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(134)
inline void IRobotSimpleCase::PutMainMode ( long ret ) {
    HRESULT _hr = put_MainMode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(135)
inline IDispatchPtr IRobotSimpleCase::GetAnalysisParams ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetAnalysisParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(136)
inline VARIANT_BOOL IRobotSimpleCase::SetAnalysisParams ( IDispatch * _params ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetAnalysisParams(_params, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(137)
inline _bstr_t IRobotSimpleCase::GetSeismicCode ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSeismicCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(138)
inline long IRobotSimpleCase::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(139)
inline void IRobotSimpleCase::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(140)
inline _bstr_t IRobotSimpleCase::GetNatureName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NatureName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(141)
inline HRESULT IRobotSimpleCase::SetNatureExt ( long _rgl_action ) {
    HRESULT _hr = raw_SetNatureExt(_rgl_action);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(142)
inline long IRobotSimpleCase::GetTimeStepCount ( ) {
    long _result = 0;
    HRESULT _hr = get_TimeStepCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(143)
inline _bstr_t IRobotSimpleCase::Getlabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(144)
inline void IRobotSimpleCase::Putlabel ( _bstr_t ret ) {
    HRESULT _hr = put_label(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(145)
inline VARIANT_BOOL IRobotSimpleCase::GetIsAuxiliary ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAuxiliary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(146)
inline void IRobotSimpleCase::PutIsAuxiliary ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsAuxiliary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotCaseFactor wrapper method implementations
//

#pragma implementation_key(147)
inline long IRobotCaseFactor::GetCaseNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(148)
inline void IRobotCaseFactor::PutCaseNumber ( long ret ) {
    HRESULT _hr = put_CaseNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(149)
inline double IRobotCaseFactor::GetFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_Factor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(150)
inline void IRobotCaseFactor::PutFactor ( double ret ) {
    HRESULT _hr = put_Factor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotCaseFactorMngr wrapper method implementations
//

#pragma implementation_key(151)
inline long IRobotCaseFactorMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(152)
inline long IRobotCaseFactorMngr::New ( long case_number, double _factor ) {
    long _result = 0;
    HRESULT _hr = raw_New(case_number, _factor, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(153)
inline IRobotCaseFactorPtr IRobotCaseFactorMngr::Get ( long index ) {
    struct IRobotCaseFactor * _result = 0;
    HRESULT _hr = raw_Get(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseFactorPtr(_result, false);
}

#pragma implementation_key(154)
inline HRESULT IRobotCaseFactorMngr::Delete ( long index ) {
    HRESULT _hr = raw_Delete(index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotCaseCombination wrapper method implementations
//

#pragma implementation_key(155)
inline IRobotCaseFactorMngrPtr IRobotCaseCombination::GetCaseFactors ( ) {
    struct IRobotCaseFactorMngr * _result = 0;
    HRESULT _hr = get_CaseFactors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseFactorMngrPtr(_result, false);
}

#pragma implementation_key(156)
inline enum IRobotCombinationType IRobotCaseCombination::GetCombinationType ( ) {
    enum IRobotCombinationType _result;
    HRESULT _hr = get_CombinationType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(157)
inline void IRobotCaseCombination::PutCombinationType ( enum IRobotCombinationType ret ) {
    HRESULT _hr = put_CombinationType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(158)
inline enum IRobotModeCombinationType IRobotCaseCombination::GetSeismicType ( ) {
    enum IRobotModeCombinationType _result;
    HRESULT _hr = get_SeismicType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(159)
inline void IRobotCaseCombination::PutSeismicType ( enum IRobotModeCombinationType ret ) {
    HRESULT _hr = put_SeismicType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(160)
inline long IRobotCaseCombination::GetQuadratic ( ) {
    long _result = 0;
    HRESULT _hr = get_Quadratic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(161)
inline void IRobotCaseCombination::PutQuadratic ( long ret ) {
    HRESULT _hr = put_Quadratic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(162)
inline long IRobotCaseCombination::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(163)
inline VARIANT_BOOL IRobotCaseCombination::GetSigned ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Signed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(164)
inline void IRobotCaseCombination::PutSigned ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Signed(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(165)
inline IDispatchPtr IRobotCaseCombination::GetAnalysisParams ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetAnalysisParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(166)
inline VARIANT_BOOL IRobotCaseCombination::SetAnalysisParams ( IDispatch * _params ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetAnalysisParams(_params, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(167)
inline long IRobotCaseCombination::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(168)
inline void IRobotCaseCombination::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(169)
inline _bstr_t IRobotCaseCombination::GetNatureName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NatureName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(170)
inline HRESULT IRobotCaseCombination::SetNatureExt ( long _rgl_action ) {
    HRESULT _hr = raw_SetNatureExt(_rgl_action);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(171)
inline _bstr_t IRobotCaseCombination::Getlabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(172)
inline void IRobotCaseCombination::Putlabel ( _bstr_t ret ) {
    HRESULT _hr = put_label(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(173)
inline VARIANT_BOOL IRobotCaseCombination::GetIsAuxiliary ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAuxiliary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(174)
inline void IRobotCaseCombination::PutIsAuxiliary ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsAuxiliary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSnowWindParams wrapper method implementations
//

#pragma implementation_key(175)
inline double IRobotSnowWindParams::GetBaySpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_BaySpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(176)
inline void IRobotSnowWindParams::PutBaySpacing ( double ret ) {
    HRESULT _hr = put_BaySpacing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(177)
inline double IRobotSnowWindParams::GetTotalDepth ( ) {
    double _result = 0;
    HRESULT _hr = get_TotalDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(178)
inline void IRobotSnowWindParams::PutTotalDepth ( double ret ) {
    HRESULT _hr = put_TotalDepth(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(179)
inline _bstr_t IRobotSnowWindParams::GetEnvelope ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Envelope(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(180)
inline void IRobotSnowWindParams::PutEnvelope ( _bstr_t ret ) {
    HRESULT _hr = put_Envelope(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(181)
inline VARIANT_BOOL IRobotSnowWindParams::GetWithParapets ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WithParapets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(182)
inline void IRobotSnowWindParams::PutWithParapets ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WithParapets(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(183)
inline VARIANT_BOOL IRobotSnowWindParams::GetWithCavities ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WithCavities(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(184)
inline void IRobotSnowWindParams::PutWithCavities ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WithCavities(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(185)
inline VARIANT_BOOL IRobotSnowWindParams::GetBaseOnGround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BaseOnGround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(186)
inline void IRobotSnowWindParams::PutBaseOnGround ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_BaseOnGround(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(187)
inline VARIANT_BOOL IRobotSnowWindParams::GetIsolatedRoofs ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsolatedRoofs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(188)
inline void IRobotSnowWindParams::PutIsolatedRoofs ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsolatedRoofs(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(189)
inline VARIANT_BOOL IRobotSnowWindParams::GetIsWind ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsWind(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(190)
inline void IRobotSnowWindParams::PutIsWind ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsWind(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(191)
inline VARIANT_BOOL IRobotSnowWindParams::GetIsSnow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSnow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(192)
inline void IRobotSnowWindParams::PutIsSnow ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSnow(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNumbersCollection wrapper method implementations
//

#pragma implementation_key(193)
inline long IRobotNumbersCollection::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(194)
inline long IRobotNumbersCollection::Get ( long idx ) {
    long _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotValuesArray wrapper method implementations
//

#pragma implementation_key(195)
inline long IRobotValuesArray::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(196)
inline HRESULT IRobotValuesArray::SetSize ( long Count ) {
    HRESULT _hr = raw_SetSize(Count);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(197)
inline HRESULT IRobotValuesArray::Set ( long idx, double val ) {
    HRESULT _hr = raw_Set(idx, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(198)
inline double IRobotValuesArray::Get ( long idx ) {
    double _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotSWStruct3DPurlinGenParams wrapper method implementations
//

#pragma implementation_key(199)
inline _bstr_t IRobotSWStruct3DPurlinGenParams::GetSectionName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SectionName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(200)
inline void IRobotSWStruct3DPurlinGenParams::PutSectionName ( _bstr_t ret ) {
    HRESULT _hr = put_SectionName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(201)
inline VARIANT_BOOL IRobotSWStruct3DPurlinGenParams::GetRelativeLocations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RelativeLocations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(202)
inline void IRobotSWStruct3DPurlinGenParams::PutRelativeLocations ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RelativeLocations(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(203)
inline IRobotValuesArrayPtr IRobotSWStruct3DPurlinGenParams::GetLocations ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_Locations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

//
// interface IRobotSWStruct3DGenParams wrapper method implementations
//

#pragma implementation_key(204)
inline long IRobotSWStruct3DGenParams::GetFrameCount ( ) {
    long _result = 0;
    HRESULT _hr = get_FrameCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(205)
inline void IRobotSWStruct3DGenParams::PutFrameCount ( long ret ) {
    HRESULT _hr = put_FrameCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(206)
inline IRobotValuesArrayPtr IRobotSWStruct3DGenParams::GetSpacings ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_Spacings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(207)
inline _bstr_t IRobotSWStruct3DGenParams::GetFacadeOnlyBars ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FacadeOnlyBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(208)
inline void IRobotSWStruct3DGenParams::PutFacadeOnlyBars ( _bstr_t ret ) {
    HRESULT _hr = put_FacadeOnlyBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(209)
inline _bstr_t IRobotSWStruct3DGenParams::GetFacadeLoadedBars ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FacadeLoadedBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(210)
inline void IRobotSWStruct3DGenParams::PutFacadeLoadedBars ( _bstr_t ret ) {
    HRESULT _hr = put_FacadeLoadedBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(211)
inline VARIANT_BOOL IRobotSWStruct3DGenParams::GetOffsets ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Offsets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(212)
inline void IRobotSWStruct3DGenParams::PutOffsets ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Offsets(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(213)
inline _bstr_t IRobotSWStruct3DGenParams::GetBars ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Bars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(214)
inline void IRobotSWStruct3DGenParams::PutBars ( _bstr_t ret ) {
    HRESULT _hr = put_Bars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(215)
inline HRESULT IRobotSWStruct3DGenParams::SetPurlins ( long _bar_num, struct IRobotSWStruct3DPurlinGenParams * _purlins_def ) {
    HRESULT _hr = raw_SetPurlins(_bar_num, _purlins_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(216)
inline IRobotSWStruct3DPurlinGenParamsPtr IRobotSWStruct3DGenParams::GetPurlins ( long _bar_num ) {
    struct IRobotSWStruct3DPurlinGenParams * _result = 0;
    HRESULT _hr = raw_GetPurlins(_bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSWStruct3DPurlinGenParamsPtr(_result, false);
}

//
// interface IRobotNumbersArray wrapper method implementations
//

#pragma implementation_key(217)
inline long IRobotNumbersArray::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(218)
inline HRESULT IRobotNumbersArray::SetSize ( long Count ) {
    HRESULT _hr = raw_SetSize(Count);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(219)
inline long IRobotNumbersArray::Get ( long idx ) {
    long _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(220)
inline HRESULT IRobotNumbersArray::Set ( long idx, long val ) {
    HRESULT _hr = raw_Set(idx, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSWStruct3DElement wrapper method implementations
//

#pragma implementation_key(221)
inline long IRobotSWStruct3DElement::GetBar ( ) {
    long _result = 0;
    HRESULT _hr = get_Bar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(222)
inline void IRobotSWStruct3DElement::PutBar ( long ret ) {
    HRESULT _hr = put_Bar(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(223)
inline VARIANT_BOOL IRobotSWStruct3DElement::GetIsFacadeOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFacadeOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(224)
inline void IRobotSWStruct3DElement::PutIsFacadeOnly ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsFacadeOnly(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(225)
inline VARIANT_BOOL IRobotSWStruct3DElement::GetIsFacadeLoaded ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFacadeLoaded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(226)
inline void IRobotSWStruct3DElement::PutIsFacadeLoaded ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsFacadeLoaded(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(227)
inline IRobotNumbersArrayPtr IRobotSWStruct3DElement::GetPurlins ( ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = get_Purlins(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

//
// interface IRobotSWStruct3DFrame wrapper method implementations
//

#pragma implementation_key(228)
inline long IRobotSWStruct3DFrame::GetElemCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ElemCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(229)
inline HRESULT IRobotSWStruct3DFrame::SetElem ( long _elem_idx, struct IRobotSWStruct3DElement * _elem ) {
    HRESULT _hr = raw_SetElem(_elem_idx, _elem);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(230)
inline IRobotSWStruct3DElementPtr IRobotSWStruct3DFrame::GetElem ( long _elem_idx ) {
    struct IRobotSWStruct3DElement * _result = 0;
    HRESULT _hr = raw_GetElem(_elem_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSWStruct3DElementPtr(_result, false);
}

//
// interface IRobotSWStruct3D wrapper method implementations
//

#pragma implementation_key(231)
inline long IRobotSWStruct3D::GetFrameCount ( ) {
    long _result = 0;
    HRESULT _hr = get_FrameCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(232)
inline void IRobotSWStruct3D::PutFrameCount ( long ret ) {
    HRESULT _hr = put_FrameCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(233)
inline long IRobotSWStruct3D::GetFrameElemCount ( ) {
    long _result = 0;
    HRESULT _hr = get_FrameElemCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(234)
inline IRobotSWStruct3DFramePtr IRobotSWStruct3D::GetFrame ( long _frame_idx ) {
    struct IRobotSWStruct3DFrame * _result = 0;
    HRESULT _hr = raw_GetFrame(_frame_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSWStruct3DFramePtr(_result, false);
}

#pragma implementation_key(235)
inline HRESULT IRobotSWStruct3D::SetFrame ( long _frame_idx, struct IRobotSWStruct3DFrame * _frame ) {
    HRESULT _hr = raw_SetFrame(_frame_idx, _frame);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSnowWindEngine wrapper method implementations
//

#pragma implementation_key(236)
inline IRobotSnowWindParamsPtr IRobotSnowWindEngine::GetParams ( ) {
    struct IRobotSnowWindParams * _result = 0;
    HRESULT _hr = get_Params(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSnowWindParamsPtr(_result, false);
}

#pragma implementation_key(237)
inline IDispatchPtr IRobotSnowWindEngine::GetCodeParams ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CodeParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(238)
inline IRobotNumbersCollectionPtr IRobotSnowWindEngine::Generate ( ) {
    struct IRobotNumbersCollection * _result = 0;
    HRESULT _hr = raw_Generate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersCollectionPtr(_result, false);
}

#pragma implementation_key(239)
inline IRobotSWStruct3DPtr IRobotSnowWindEngine::GenerateStruct3D ( struct IRobotSWStruct3DGenParams * _gen_params ) {
    struct IRobotSWStruct3D * _result = 0;
    HRESULT _hr = raw_GenerateStruct3D(_gen_params, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSWStruct3DPtr(_result, false);
}

#pragma implementation_key(240)
inline IRobotNumbersCollectionPtr IRobotSnowWindEngine::Generate3D ( struct IRobotSWStruct3D * _struct_3d ) {
    struct IRobotNumbersCollection * _result = 0;
    HRESULT _hr = raw_Generate3D(_struct_3d, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersCollectionPtr(_result, false);
}

#pragma implementation_key(241)
inline long IRobotSnowWindEngine::ShowParamsDlg ( ) {
    long _result = 0;
    HRESULT _hr = raw_ShowParamsDlg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotCodeCmbActionServer wrapper method implementations
//

#pragma implementation_key(242)
inline long IRobotCodeCmbActionServer::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(243)
inline HRESULT IRobotCodeCmbActionServer::SetCoeff ( long idx, enum IRobotCodeCmbActionCoeffType coeff_type, double coeff_val ) {
    HRESULT _hr = raw_SetCoeff(idx, coeff_type, coeff_val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(244)
inline double IRobotCodeCmbActionServer::GetCoeff ( long idx, enum IRobotCodeCmbActionCoeffType coeff_type ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff(idx, coeff_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(245)
inline long IRobotCodeCmbActionServer::New ( enum IRobotCaseNature case_nature, _bstr_t _name ) {
    long _result = 0;
    HRESULT _hr = raw_New(case_nature, _name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(246)
inline HRESULT IRobotCodeCmbActionServer::Remove ( long idx ) {
    HRESULT _hr = raw_Remove(idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(247)
inline enum IRobotCaseNature IRobotCodeCmbActionServer::GetNature ( long idx ) {
    enum IRobotCaseNature _result;
    HRESULT _hr = raw_GetNature(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(248)
inline HRESULT IRobotCodeCmbActionServer::SetNature ( long idx, enum IRobotCaseNature case_nat ) {
    HRESULT _hr = raw_SetNature(idx, case_nat);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(249)
inline _bstr_t IRobotCodeCmbActionServer::GetName ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(250)
inline HRESULT IRobotCodeCmbActionServer::SetName ( long idx, _bstr_t _name ) {
    HRESULT _hr = raw_SetName(idx, _name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotCodeCmbCombs wrapper method implementations
//

#pragma implementation_key(251)
inline long IRobotCodeCmbCombs::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(252)
inline long IRobotCodeCmbCombs::New ( enum IRobotLimitState lim_state, enum IRobotCodeCmbCombType cmb_type, _bstr_t _name, short dead_coeff, short live_coeff, short acc_coeff, short seis_coeff ) {
    long _result = 0;
    HRESULT _hr = raw_New(lim_state, cmb_type, _name, dead_coeff, live_coeff, acc_coeff, seis_coeff, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(253)
inline HRESULT IRobotCodeCmbCombs::Get ( long idx, enum IRobotLimitState * limit_state, enum IRobotCodeCmbCombType * cmb_type, BSTR * _name, short * dead_coef, short * live_coef, short * acc_coef, short * seis_coef ) {
    HRESULT _hr = raw_Get(idx, limit_state, cmb_type, _name, dead_coef, live_coef, acc_coef, seis_coef);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(254)
inline HRESULT IRobotCodeCmbCombs::Set ( long idx, enum IRobotLimitState limit_state, enum IRobotCodeCmbCombType cmb_type, _bstr_t _name, short dead_coef, short live_coef, short acc_coef, short seis_coef ) {
    HRESULT _hr = raw_Set(idx, limit_state, cmb_type, _name, dead_coef, live_coef, acc_coef, seis_coef);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(255)
inline HRESULT IRobotCodeCmbCombs::Remove ( long idx ) {
    HRESULT _hr = raw_Remove(idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotCodeCmbRegulations wrapper method implementations
//

#pragma implementation_key(256)
inline VARIANT_BOOL IRobotCodeCmbRegulations::GetIsEuroCode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsEuroCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(257)
inline void IRobotCodeCmbRegulations::PutIsEuroCode ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsEuroCode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(258)
inline _bstr_t IRobotCodeCmbRegulations::GetCodeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(259)
inline void IRobotCodeCmbRegulations::PutCodeName ( _bstr_t ret ) {
    HRESULT _hr = put_CodeName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(260)
inline enum IRobotMaterialType IRobotCodeCmbRegulations::GetMaterialType ( ) {
    enum IRobotMaterialType _result;
    HRESULT _hr = get_MaterialType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(261)
inline void IRobotCodeCmbRegulations::PutMaterialType ( enum IRobotMaterialType ret ) {
    HRESULT _hr = put_MaterialType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(262)
inline _bstr_t IRobotCodeCmbRegulations::GetVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Version(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(263)
inline void IRobotCodeCmbRegulations::PutVersion ( _bstr_t ret ) {
    HRESULT _hr = put_Version(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(264)
inline IRobotCodeCmbActionServerPtr IRobotCodeCmbRegulations::GetActions ( ) {
    struct IRobotCodeCmbActionServer * _result = 0;
    HRESULT _hr = get_Actions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbActionServerPtr(_result, false);
}

#pragma implementation_key(265)
inline IRobotCodeCmbCombsPtr IRobotCodeCmbRegulations::GetCombinations ( ) {
    struct IRobotCodeCmbCombs * _result = 0;
    HRESULT _hr = get_Combinations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbCombsPtr(_result, false);
}

//
// interface IRobotCodeCmbGroup wrapper method implementations
//

#pragma implementation_key(266)
inline enum IRobotCaseNature IRobotCodeCmbGroup::GetNature ( ) {
    enum IRobotCaseNature _result;
    HRESULT _hr = get_Nature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(267)
inline enum IRobotCodeCmbOperator IRobotCodeCmbGroup::GetOperator ( ) {
    enum IRobotCodeCmbOperator _result;
    HRESULT _hr = get_Operator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(268)
inline void IRobotCodeCmbGroup::PutOperator ( enum IRobotCodeCmbOperator ret ) {
    HRESULT _hr = put_Operator(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(269)
inline long IRobotCodeCmbGroup::GetCaseCount ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(270)
inline VARIANT_BOOL IRobotCodeCmbGroup::Add ( long case_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Add(case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(271)
inline HRESULT IRobotCodeCmbGroup::AddAll ( ) {
    HRESULT _hr = raw_AddAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(272)
inline VARIANT_BOOL IRobotCodeCmbGroup::IsFull ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsFull(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotCodeCmbGroupServer wrapper method implementations
//

#pragma implementation_key(273)
inline long IRobotCodeCmbGroupServer::New ( enum IRobotCaseNature grp_nature, enum IRobotCodeCmbOperator oper, _bstr_t case_list ) {
    long _result = 0;
    HRESULT _hr = raw_New(grp_nature, oper, case_list, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(274)
inline IRobotCodeCmbGroupPtr IRobotCodeCmbGroupServer::Get ( enum IRobotCaseNature grp_nature, long grp_number ) {
    struct IRobotCodeCmbGroup * _result = 0;
    HRESULT _hr = raw_Get(grp_nature, grp_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbGroupPtr(_result, false);
}

#pragma implementation_key(275)
inline long IRobotCodeCmbGroupServer::FindByCase ( long case_num ) {
    long _result = 0;
    HRESULT _hr = raw_FindByCase(case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(276)
inline long IRobotCodeCmbGroupServer::GetCount ( enum IRobotCaseNature grp_nature ) {
    long _result = 0;
    HRESULT _hr = raw_GetCount(grp_nature, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotCodeCmbGroupRelation wrapper method implementations
//

#pragma implementation_key(277)
inline enum IRobotCaseNature IRobotCodeCmbGroupRelation::GetNature ( ) {
    enum IRobotCaseNature _result;
    HRESULT _hr = get_Nature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(278)
inline long IRobotCodeCmbGroupRelation::GetRowCount ( ) {
    long _result = 0;
    HRESULT _hr = get_RowCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(279)
inline long IRobotCodeCmbGroupRelation::GetGroupCount ( long row_idx ) {
    long _result = 0;
    HRESULT _hr = raw_GetGroupCount(row_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(280)
inline long IRobotCodeCmbGroupRelation::GetGroup ( long row_idx, long grp_idx ) {
    long _result = 0;
    HRESULT _hr = raw_GetGroup(row_idx, grp_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(281)
inline HRESULT IRobotCodeCmbGroupRelation::SetGroup ( long row_idx, long grp_idx, long grp_number ) {
    HRESULT _hr = raw_SetGroup(row_idx, grp_idx, grp_number);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(282)
inline HRESULT IRobotCodeCmbGroupRelation::AddGroup ( long row_idx, long grp_number ) {
    HRESULT _hr = raw_AddGroup(row_idx, grp_number);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(283)
inline HRESULT IRobotCodeCmbGroupRelation::SetOperator ( long row_idx, enum IRobotCodeCmbOperator oper_id ) {
    HRESULT _hr = raw_SetOperator(row_idx, oper_id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(284)
inline enum IRobotCodeCmbOperator IRobotCodeCmbGroupRelation::GetOperator ( long row_idx ) {
    enum IRobotCodeCmbOperator _result;
    HRESULT _hr = raw_GetOperator(row_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(285)
inline long IRobotCodeCmbGroupRelation::NewRow ( enum IRobotCodeCmbOperator oper_id ) {
    long _result = 0;
    HRESULT _hr = raw_NewRow(oper_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(286)
inline HRESULT IRobotCodeCmbGroupRelation::RemoveRow ( long row_idx ) {
    HRESULT _hr = raw_RemoveRow(row_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(287)
inline HRESULT IRobotCodeCmbGroupRelation::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotCodeCmbGroupRelationServer wrapper method implementations
//

#pragma implementation_key(288)
inline IRobotCodeCmbGroupRelationPtr IRobotCodeCmbGroupRelationServer::Get ( enum IRobotCaseNature rel_nature ) {
    struct IRobotCodeCmbGroupRelation * _result = 0;
    HRESULT _hr = raw_Get(rel_nature, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbGroupRelationPtr(_result, false);
}

#pragma implementation_key(289)
inline HRESULT IRobotCodeCmbGroupRelationServer::Set ( struct IRobotCodeCmbGroupRelation * rel_def ) {
    HRESULT _hr = raw_Set(rel_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotCodeCmbGenerationParams wrapper method implementations
//

#pragma implementation_key(290)
inline VARIANT_BOOL IRobotCodeCmbGenerationParams::GetAllNodes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(291)
inline void IRobotCodeCmbGenerationParams::PutAllNodes ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AllNodes(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(292)
inline _bstr_t IRobotCodeCmbGenerationParams::GetNodeSel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NodeSel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(293)
inline void IRobotCodeCmbGenerationParams::PutNodeSel ( _bstr_t ret ) {
    HRESULT _hr = put_NodeSel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(294)
inline VARIANT_BOOL IRobotCodeCmbGenerationParams::GetAllBars ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(295)
inline void IRobotCodeCmbGenerationParams::PutAllBars ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AllBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(296)
inline _bstr_t IRobotCodeCmbGenerationParams::GetBarSel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BarSel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(297)
inline void IRobotCodeCmbGenerationParams::PutBarSel ( _bstr_t ret ) {
    HRESULT _hr = put_BarSel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(298)
inline VARIANT_BOOL IRobotCodeCmbGenerationParams::GetSimplified ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Simplified(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(299)
inline void IRobotCodeCmbGenerationParams::PutSimplified ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Simplified(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(300)
inline short IRobotCodeCmbGenerationParams::GetPointsOnBar ( ) {
    short _result = 0;
    HRESULT _hr = get_PointsOnBar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(301)
inline void IRobotCodeCmbGenerationParams::PutPointsOnBar ( short ret ) {
    HRESULT _hr = put_PointsOnBar(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(302)
inline double IRobotCodeCmbGenerationParams::GetExtremalSnowFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ExtremalSnowFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(303)
inline void IRobotCodeCmbGenerationParams::PutExtremalSnowFactor ( double ret ) {
    HRESULT _hr = put_ExtremalSnowFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(304)
inline IRobotCodeCmbRegulationsPtr IRobotCodeCmbGenerationParams::GetRegulations ( ) {
    struct IRobotCodeCmbRegulations * _result = 0;
    HRESULT _hr = get_Regulations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbRegulationsPtr(_result, false);
}

#pragma implementation_key(305)
inline IRobotCodeCmbGroupServerPtr IRobotCodeCmbGenerationParams::GetGroups ( ) {
    struct IRobotCodeCmbGroupServer * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbGroupServerPtr(_result, false);
}

#pragma implementation_key(306)
inline IRobotCodeCmbGroupRelationServerPtr IRobotCodeCmbGenerationParams::GetRelations ( ) {
    struct IRobotCodeCmbGroupRelationServer * _result = 0;
    HRESULT _hr = get_Relations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbGroupRelationServerPtr(_result, false);
}

#pragma implementation_key(307)
inline IRobotCollectionPtr IRobotCodeCmbGenerationParams::GetActiveCases ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_ActiveCases(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(308)
inline HRESULT IRobotCodeCmbGenerationParams::SelectDecidingValue ( enum IRobotCodeCmbDecidingValueType dvalue, VARIANT_BOOL _select ) {
    HRESULT _hr = raw_SelectDecidingValue(dvalue, _select);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(309)
inline VARIANT_BOOL IRobotCodeCmbGenerationParams::IsDecidingValueSelected ( enum IRobotCodeCmbDecidingValueType dvalue ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsDecidingValueSelected(dvalue, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(310)
inline HRESULT IRobotCodeCmbGenerationParams::SelectCombination ( long cmb_idx, VARIANT_BOOL _select ) {
    HRESULT _hr = raw_SelectCombination(cmb_idx, _select);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(311)
inline VARIANT_BOOL IRobotCodeCmbGenerationParams::IsCombinationSelected ( long cmd_idx ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsCombinationSelected(cmd_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(312)
inline enum IRobotCodeCmbGenerationType IRobotCodeCmbGenerationParams::GetGenType ( ) {
    enum IRobotCodeCmbGenerationType _result;
    HRESULT _hr = get_GenType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(313)
inline void IRobotCodeCmbGenerationParams::PutGenType ( enum IRobotCodeCmbGenerationType ret ) {
    HRESULT _hr = put_GenType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(314)
inline HRESULT IRobotCodeCmbGenerationParams::SelectCombinationType ( enum IRobotCombinationType _cmb_type, VARIANT_BOOL _select ) {
    HRESULT _hr = raw_SelectCombinationType(_cmb_type, _select);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(315)
inline VARIANT_BOOL IRobotCodeCmbGenerationParams::IsCombinationTypeSelected ( enum IRobotCombinationType _cmb_type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsCombinationTypeSelected(_cmb_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotCodeCombinationEngine wrapper method implementations
//

#pragma implementation_key(316)
inline IRobotCodeCmbGenerationParamsPtr IRobotCodeCombinationEngine::GetParams ( ) {
    struct IRobotCodeCmbGenerationParams * _result = 0;
    HRESULT _hr = get_Params(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbGenerationParamsPtr(_result, false);
}

#pragma implementation_key(317)
inline HRESULT IRobotCodeCombinationEngine::Generate ( ) {
    HRESULT _hr = raw_Generate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotTimeHistoryPointsCollection wrapper method implementations
//

#pragma implementation_key(318)
inline long IRobotTimeHistoryPointsCollection::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(319)
inline HRESULT IRobotTimeHistoryPointsCollection::Add ( double _x, double _y ) {
    HRESULT _hr = raw_Add(_x, _y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(320)
inline HRESULT IRobotTimeHistoryPointsCollection::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(321)
inline long IRobotTimeHistoryPointsCollection::Find ( double _x ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_x, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(322)
inline HRESULT IRobotTimeHistoryPointsCollection::Get ( long _idx, double * _x, double * _y ) {
    HRESULT _hr = raw_Get(_idx, _x, _y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(323)
inline HRESULT IRobotTimeHistoryPointsCollection::Delete ( long _idx ) {
    HRESULT _hr = raw_Delete(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(324)
inline HRESULT IRobotTimeHistoryPointsCollection::LoadFromFile ( _bstr_t _file_path ) {
    HRESULT _hr = raw_LoadFromFile(_file_path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(325)
inline HRESULT IRobotTimeHistoryPointsCollection::SaveToFile ( _bstr_t _file_path ) {
    HRESULT _hr = raw_SaveToFile(_file_path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotTimeHistoryFunctionList wrapper method implementations
//

#pragma implementation_key(326)
inline long IRobotTimeHistoryFunctionList::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(327)
inline IRobotTimeHistoryPointsCollectionPtr IRobotTimeHistoryFunctionList::Get ( long _idx ) {
    struct IRobotTimeHistoryPointsCollection * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTimeHistoryPointsCollectionPtr(_result, false);
}

#pragma implementation_key(328)
inline HRESULT IRobotTimeHistoryFunctionList::Delete ( long _idx ) {
    HRESULT _hr = raw_Delete(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(329)
inline IRobotTimeHistoryPointsCollectionPtr IRobotTimeHistoryFunctionList::Create ( ) {
    struct IRobotTimeHistoryPointsCollection * _result = 0;
    HRESULT _hr = raw_Create(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTimeHistoryPointsCollectionPtr(_result, false);
}

#pragma implementation_key(330)
inline long IRobotTimeHistoryFunctionList::Store ( _bstr_t _function_name, struct IRobotTimeHistoryPointsCollection * _points ) {
    long _result = 0;
    HRESULT _hr = raw_Store(_function_name, _points, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(331)
inline long IRobotTimeHistoryFunctionList::Find ( _bstr_t _function_name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_function_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(332)
inline _bstr_t IRobotTimeHistoryFunctionList::GetName ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(333)
inline IRobotTimeHistoryPointsCollectionPtr IRobotTimeHistoryFunctionList::CreateSum ( long _fun1_idx, double _fun1_coeff, long _fun2_idx, double _fun2_coeff ) {
    struct IRobotTimeHistoryPointsCollection * _result = 0;
    HRESULT _hr = raw_CreateSum(_fun1_idx, _fun1_coeff, _fun2_idx, _fun2_coeff, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTimeHistoryPointsCollectionPtr(_result, false);
}

#pragma implementation_key(334)
inline HRESULT IRobotTimeHistoryFunctionList::AddFromFile ( _bstr_t _file_path ) {
    HRESULT _hr = raw_AddFromFile(_file_path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(335)
inline HRESULT IRobotTimeHistoryFunctionList::SaveToFile ( _bstr_t _file_path ) {
    HRESULT _hr = raw_SaveToFile(_file_path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotMobileCaseComponent wrapper method implementations
//

#pragma implementation_key(336)
inline long IRobotMobileCaseComponent::GetPoint ( ) {
    long _result = 0;
    HRESULT _hr = get_Point(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(337)
inline IRobotLoadRecordMngrPtr IRobotMobileCaseComponent::GetRecords ( ) {
    struct IRobotLoadRecordMngr * _result = 0;
    HRESULT _hr = get_Records(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLoadRecordMngrPtr(_result, false);
}

//
// interface IRobotMobileCaseComponentMngr wrapper method implementations
//

#pragma implementation_key(338)
inline long IRobotMobileCaseComponentMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(339)
inline IRobotMobileCaseComponentPtr IRobotMobileCaseComponentMngr::Get ( long _cmpnt_idx ) {
    struct IRobotMobileCaseComponent * _result = 0;
    HRESULT _hr = raw_Get(_cmpnt_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMobileCaseComponentPtr(_result, false);
}

//
// interface IRobotMobileCaseSegmentFactors wrapper method implementations
//

#pragma implementation_key(340)
inline double IRobotMobileCaseSegmentFactors::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(341)
inline void IRobotMobileCaseSegmentFactors::PutGamma ( double ret ) {
    HRESULT _hr = put_Gamma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(342)
inline double IRobotMobileCaseSegmentFactors::GetVR ( ) {
    double _result = 0;
    HRESULT _hr = get_VR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(343)
inline void IRobotMobileCaseSegmentFactors::PutVR ( double ret ) {
    HRESULT _hr = put_VR(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(344)
inline double IRobotMobileCaseSegmentFactors::GetVL ( ) {
    double _result = 0;
    HRESULT _hr = get_VL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(345)
inline void IRobotMobileCaseSegmentFactors::PutVL ( double ret ) {
    HRESULT _hr = put_VL(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(346)
inline double IRobotMobileCaseSegmentFactors::GetHR ( ) {
    double _result = 0;
    HRESULT _hr = get_HR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(347)
inline void IRobotMobileCaseSegmentFactors::PutHR ( double ret ) {
    HRESULT _hr = put_HR(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(348)
inline double IRobotMobileCaseSegmentFactors::GetHL ( ) {
    double _result = 0;
    HRESULT _hr = get_HL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(349)
inline void IRobotMobileCaseSegmentFactors::PutHL ( double ret ) {
    HRESULT _hr = put_HL(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(350)
inline double IRobotMobileCaseSegmentFactors::GetLR ( ) {
    double _result = 0;
    HRESULT _hr = get_LR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(351)
inline void IRobotMobileCaseSegmentFactors::PutLR ( double ret ) {
    HRESULT _hr = put_LR(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(352)
inline double IRobotMobileCaseSegmentFactors::GetLL ( ) {
    double _result = 0;
    HRESULT _hr = get_LL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(353)
inline void IRobotMobileCaseSegmentFactors::PutLL ( double ret ) {
    HRESULT _hr = put_LL(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotMobileCaseRoute wrapper method implementations
//

#pragma implementation_key(354)
inline long IRobotMobileCaseRoute::GetGeometry ( ) {
    long _result = 0;
    HRESULT _hr = get_Geometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(355)
inline void IRobotMobileCaseRoute::PutGeometry ( long ret ) {
    HRESULT _hr = put_Geometry(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(356)
inline double IRobotMobileCaseRoute::GetStep ( ) {
    double _result = 0;
    HRESULT _hr = get_Step(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(357)
inline void IRobotMobileCaseRoute::PutStep ( double ret ) {
    HRESULT _hr = put_Step(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(358)
inline IRobotGeoPoint3DPtr IRobotMobileCaseRoute::GetLoadDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_LoadDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(359)
inline VARIANT_BOOL IRobotMobileCaseRoute::GetEndRouteLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EndRouteLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(360)
inline void IRobotMobileCaseRoute::PutEndRouteLimit ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_EndRouteLimit(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(361)
inline VARIANT_BOOL IRobotMobileCaseRoute::GetBeginingRouteLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BeginingRouteLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(362)
inline void IRobotMobileCaseRoute::PutBeginingRouteLimit ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_BeginingRouteLimit(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(363)
inline double IRobotMobileCaseRoute::GetTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_Tolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(364)
inline void IRobotMobileCaseRoute::PutTolerance ( double ret ) {
    HRESULT _hr = put_Tolerance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(365)
inline IRobotMobileCaseSegmentFactorsPtr IRobotMobileCaseRoute::GetFactors ( long segment ) {
    struct IRobotMobileCaseSegmentFactors * _result = 0;
    HRESULT _hr = raw_GetFactors(segment, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMobileCaseSegmentFactorsPtr(_result, false);
}

#pragma implementation_key(366)
inline HRESULT IRobotMobileCaseRoute::SetFactors ( long segment, struct IRobotMobileCaseSegmentFactors * _factors ) {
    HRESULT _hr = raw_SetFactors(segment, _factors);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotMobileCase wrapper method implementations
//

#pragma implementation_key(367)
inline IRobotMobileCaseComponentMngrPtr IRobotMobileCase::GetComponents ( ) {
    struct IRobotMobileCaseComponentMngr * _result = 0;
    HRESULT _hr = get_Components(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMobileCaseComponentMngrPtr(_result, false);
}

#pragma implementation_key(368)
inline enum IRobotMobileCaseFlag IRobotMobileCase::GetFlag ( ) {
    enum IRobotMobileCaseFlag _result;
    HRESULT _hr = get_Flag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(369)
inline long IRobotMobileCase::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(370)
inline long IRobotMobileCase::FindByFlag ( enum IRobotMobileCaseFlag _mc_flag ) {
    long _result = 0;
    HRESULT _hr = raw_FindByFlag(_mc_flag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(371)
inline long IRobotMobileCase::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(372)
inline void IRobotMobileCase::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(373)
inline enum IRobotMobileCaseApplicationPlaneType IRobotMobileCase::GetApplicationPlaneType ( ) {
    enum IRobotMobileCaseApplicationPlaneType _result;
    HRESULT _hr = get_ApplicationPlaneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(374)
inline void IRobotMobileCase::PutApplicationPlaneType ( enum IRobotMobileCaseApplicationPlaneType ret ) {
    HRESULT _hr = put_ApplicationPlaneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(375)
inline _bstr_t IRobotMobileCase::GetVehicle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Vehicle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(376)
inline void IRobotMobileCase::PutVehicle ( _bstr_t ret ) {
    HRESULT _hr = put_Vehicle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(377)
inline IRobotMobileCaseRoutePtr IRobotMobileCase::GetRoute ( ) {
    struct IRobotMobileCaseRoute * _result = 0;
    HRESULT _hr = raw_GetRoute(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMobileCaseRoutePtr(_result, false);
}

#pragma implementation_key(378)
inline HRESULT IRobotMobileCase::SetRoute ( struct IRobotMobileCaseRoute * _route ) {
    HRESULT _hr = raw_SetRoute(_route);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(379)
inline _bstr_t IRobotMobileCase::GetApplicationPlaneBars ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ApplicationPlaneBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(380)
inline void IRobotMobileCase::PutApplicationPlaneBars ( _bstr_t ret ) {
    HRESULT _hr = put_ApplicationPlaneBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(381)
inline _bstr_t IRobotMobileCase::GetNatureName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NatureName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(382)
inline HRESULT IRobotMobileCase::SetNatureExt ( long _rgl_action ) {
    HRESULT _hr = raw_SetNatureExt(_rgl_action);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(383)
inline _bstr_t IRobotMobileCase::Getlabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(384)
inline void IRobotMobileCase::Putlabel ( _bstr_t ret ) {
    HRESULT _hr = put_label(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(385)
inline VARIANT_BOOL IRobotMobileCase::GetIsAuxiliary ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAuxiliary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(386)
inline void IRobotMobileCase::PutIsAuxiliary ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsAuxiliary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotModalAnalysisShifts wrapper method implementations
//

#pragma implementation_key(387)
inline long IRobotModalAnalysisShifts::GetIterationsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_IterationsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(388)
inline void IRobotModalAnalysisShifts::PutIterationsCount ( long ret ) {
    HRESULT _hr = put_IterationsCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(389)
inline HRESULT IRobotModalAnalysisShifts::SetDefault ( ) {
    HRESULT _hr = raw_SetDefault();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotModalAnalysisLimits wrapper method implementations
//

#pragma implementation_key(390)
inline double IRobotModalAnalysisLimits::GetPulsationLimitValue ( ) {
    double _result = 0;
    HRESULT _hr = get_PulsationLimitValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(391)
inline double IRobotModalAnalysisLimits::GetFrequencyLimitValue ( ) {
    double _result = 0;
    HRESULT _hr = get_FrequencyLimitValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(392)
inline double IRobotModalAnalysisLimits::GetPeriodLimitValue ( ) {
    double _result = 0;
    HRESULT _hr = get_PeriodLimitValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(393)
inline HRESULT IRobotModalAnalysisLimits::DefineLimits ( enum IRobotModalAnalysisLimitType _limit_type, double _value ) {
    HRESULT _hr = raw_DefineLimits(_limit_type, _value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotModalAnalysisBase wrapper method implementations
//

#pragma implementation_key(394)
inline long IRobotModalAnalysisBase::Add ( _bstr_t _nodes, VARIANT_BOOL _ux, VARIANT_BOOL _uy, VARIANT_BOOL _uz ) {
    long _result = 0;
    HRESULT _hr = raw_Add(_nodes, _ux, _uy, _uz, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(395)
inline VARIANT_BOOL IRobotModalAnalysisBase::Delete ( long _idx ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Delete(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(396)
inline HRESULT IRobotModalAnalysisBase::Get ( long _idx, BSTR * _nodes, long * _ux, long * _uy, long * _uz ) {
    HRESULT _hr = raw_Get(_idx, _nodes, _ux, _uy, _uz);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(397)
inline long IRobotModalAnalysisBase::Count ( ) {
    long _result = 0;
    HRESULT _hr = raw_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotMassEccentricities wrapper method implementations
//

#pragma implementation_key(398)
inline VARIANT_BOOL IRobotMassEccentricities::GetRelativeValues ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RelativeValues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(399)
inline void IRobotMassEccentricities::PutRelativeValues ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RelativeValues(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(400)
inline VARIANT_BOOL IRobotMassEccentricities::GetIsDirX ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDirX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(401)
inline void IRobotMassEccentricities::PutIsDirX ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsDirX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(402)
inline VARIANT_BOOL IRobotMassEccentricities::GetIsDirY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDirY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(403)
inline void IRobotMassEccentricities::PutIsDirY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsDirY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(404)
inline double IRobotMassEccentricities::GetValueDirX ( ) {
    double _result = 0;
    HRESULT _hr = get_ValueDirX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(405)
inline void IRobotMassEccentricities::PutValueDirX ( double ret ) {
    HRESULT _hr = put_ValueDirX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(406)
inline double IRobotMassEccentricities::GetValueDirY ( ) {
    double _result = 0;
    HRESULT _hr = get_ValueDirY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(407)
inline void IRobotMassEccentricities::PutValueDirY ( double ret ) {
    HRESULT _hr = put_ValueDirY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotModalAnalysisParams wrapper method implementations
//

#pragma implementation_key(408)
inline enum IRobotModalAnalysisMode IRobotModalAnalysisParams::GetMode ( ) {
    enum IRobotModalAnalysisMode _result;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(409)
inline void IRobotModalAnalysisParams::PutMode ( enum IRobotModalAnalysisMode ret ) {
    HRESULT _hr = put_Mode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(410)
inline long IRobotModalAnalysisParams::GetModesCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ModesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(411)
inline void IRobotModalAnalysisParams::PutModesCount ( long ret ) {
    HRESULT _hr = put_ModesCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(412)
inline double IRobotModalAnalysisParams::GetTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_Tolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(413)
inline void IRobotModalAnalysisParams::PutTolerance ( double ret ) {
    HRESULT _hr = put_Tolerance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(414)
inline long IRobotModalAnalysisParams::GetIterationsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_IterationsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(415)
inline void IRobotModalAnalysisParams::PutIterationsCount ( long ret ) {
    HRESULT _hr = put_IterationsCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(416)
inline double IRobotModalAnalysisParams::GetDamping ( ) {
    double _result = 0;
    HRESULT _hr = get_Damping(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(417)
inline void IRobotModalAnalysisParams::PutDamping ( double ret ) {
    HRESULT _hr = put_Damping(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(418)
inline VARIANT_BOOL IRobotModalAnalysisParams::GetIncludeDampingInCalculations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeDampingInCalculations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(419)
inline void IRobotModalAnalysisParams::PutIncludeDampingInCalculations ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeDampingInCalculations(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(420)
inline enum IRobotModalAnalysisMassMatrixType IRobotModalAnalysisParams::GetMassMatrix ( ) {
    enum IRobotModalAnalysisMassMatrixType _result;
    HRESULT _hr = get_MassMatrix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(421)
inline void IRobotModalAnalysisParams::PutMassMatrix ( enum IRobotModalAnalysisMassMatrixType ret ) {
    HRESULT _hr = put_MassMatrix(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(422)
inline double IRobotModalAnalysisParams::GetMassParticipation ( ) {
    double _result = 0;
    HRESULT _hr = get_MassParticipation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(423)
inline void IRobotModalAnalysisParams::PutMassParticipation ( double ret ) {
    HRESULT _hr = put_MassParticipation(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(424)
inline VARIANT_BOOL IRobotModalAnalysisParams::GetDisregardDensity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisregardDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(425)
inline void IRobotModalAnalysisParams::PutDisregardDensity ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DisregardDensity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(426)
inline enum IRobotModalAnalysisAlgorithm IRobotModalAnalysisParams::GetMethod ( ) {
    enum IRobotModalAnalysisAlgorithm _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(427)
inline void IRobotModalAnalysisParams::PutMethod ( enum IRobotModalAnalysisAlgorithm ret ) {
    HRESULT _hr = put_Method(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(428)
inline IRobotModalAnalysisShiftsPtr IRobotModalAnalysisParams::GetShifts ( ) {
    struct IRobotModalAnalysisShifts * _result = 0;
    HRESULT _hr = get_Shifts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotModalAnalysisShiftsPtr(_result, false);
}

#pragma implementation_key(429)
inline double IRobotModalAnalysisParams::GetAcceleration ( ) {
    double _result = 0;
    HRESULT _hr = get_Acceleration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(430)
inline void IRobotModalAnalysisParams::PutAcceleration ( double ret ) {
    HRESULT _hr = put_Acceleration(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(431)
inline IRobotModalAnalysisLimitsPtr IRobotModalAnalysisParams::GetLimits ( ) {
    struct IRobotModalAnalysisLimits * _result = 0;
    HRESULT _hr = get_Limits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotModalAnalysisLimitsPtr(_result, false);
}

#pragma implementation_key(432)
inline VARIANT_BOOL IRobotModalAnalysisParams::GetSturmVerification ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SturmVerification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(433)
inline void IRobotModalAnalysisParams::PutSturmVerification ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SturmVerification(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(434)
inline IRobotModalAnalysisBasePtr IRobotModalAnalysisParams::GetBase ( ) {
    struct IRobotModalAnalysisBase * _result = 0;
    HRESULT _hr = get_Base(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotModalAnalysisBasePtr(_result, false);
}

#pragma implementation_key(435)
inline IRobotMassEccentricitiesPtr IRobotModalAnalysisParams::GetMassEccentricities ( ) {
    struct IRobotMassEccentricities * _result = 0;
    HRESULT _hr = get_MassEccentricities(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMassEccentricitiesPtr(_result, false);
}

//
// interface IRobotDynamicAnalysisExcitationDirection wrapper method implementations
//

#pragma implementation_key(436)
inline double IRobotDynamicAnalysisExcitationDirection::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(437)
inline void IRobotDynamicAnalysisExcitationDirection::PutX ( double ret ) {
    HRESULT _hr = put_X(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(438)
inline double IRobotDynamicAnalysisExcitationDirection::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(439)
inline void IRobotDynamicAnalysisExcitationDirection::PutY ( double ret ) {
    HRESULT _hr = put_Y(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(440)
inline double IRobotDynamicAnalysisExcitationDirection::GetZ ( ) {
    double _result = 0;
    HRESULT _hr = get_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(441)
inline void IRobotDynamicAnalysisExcitationDirection::PutZ ( double ret ) {
    HRESULT _hr = put_Z(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(442)
inline VARIANT_BOOL IRobotDynamicAnalysisExcitationDirection::GetUseNormalized ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseNormalized(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(443)
inline void IRobotDynamicAnalysisExcitationDirection::PutUseNormalized ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UseNormalized(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(444)
inline double IRobotDynamicAnalysisExcitationDirection::GetNormalizedX ( ) {
    double _result = 0;
    HRESULT _hr = get_NormalizedX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(445)
inline double IRobotDynamicAnalysisExcitationDirection::GetNormalizedY ( ) {
    double _result = 0;
    HRESULT _hr = get_NormalizedY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(446)
inline double IRobotDynamicAnalysisExcitationDirection::GetNormalizedZ ( ) {
    double _result = 0;
    HRESULT _hr = get_NormalizedZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(447)
inline VARIANT_BOOL IRobotDynamicAnalysisExcitationDirection::GetResolutionActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ResolutionActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(448)
inline void IRobotDynamicAnalysisExcitationDirection::PutResolutionActive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ResolutionActive(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(449)
inline VARIANT_BOOL IRobotDynamicAnalysisExcitationDirection::GetQuadraticActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_QuadraticActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(450)
inline void IRobotDynamicAnalysisExcitationDirection::PutQuadraticActive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_QuadraticActive(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(451)
inline double IRobotDynamicAnalysisExcitationDirection::GetRX ( ) {
    double _result = 0;
    HRESULT _hr = get_RX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(452)
inline void IRobotDynamicAnalysisExcitationDirection::PutRX ( double ret ) {
    HRESULT _hr = put_RX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(453)
inline double IRobotDynamicAnalysisExcitationDirection::GetRY ( ) {
    double _result = 0;
    HRESULT _hr = get_RY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(454)
inline void IRobotDynamicAnalysisExcitationDirection::PutRY ( double ret ) {
    HRESULT _hr = put_RY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(455)
inline double IRobotDynamicAnalysisExcitationDirection::GetRZ ( ) {
    double _result = 0;
    HRESULT _hr = get_RZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(456)
inline void IRobotDynamicAnalysisExcitationDirection::PutRZ ( double ret ) {
    HRESULT _hr = put_RZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(457)
inline VARIANT_BOOL IRobotDynamicAnalysisExcitationDirection::GetQuadraticSigned ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_QuadraticSigned(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(458)
inline void IRobotDynamicAnalysisExcitationDirection::PutQuadraticSigned ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_QuadraticSigned(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(459)
inline VARIANT_BOOL IRobotDynamicAnalysisExcitationDirection::GetGroup1 ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Group1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(460)
inline void IRobotDynamicAnalysisExcitationDirection::PutGroup1 ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Group1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(461)
inline VARIANT_BOOL IRobotDynamicAnalysisExcitationDirection::GetGroup2 ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Group2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(462)
inline void IRobotDynamicAnalysisExcitationDirection::PutGroup2 ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Group2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(463)
inline VARIANT_BOOL IRobotDynamicAnalysisExcitationDirection::GetGroup3 ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Group3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(464)
inline void IRobotDynamicAnalysisExcitationDirection::PutGroup3 ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Group3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(465)
inline double IRobotDynamicAnalysisExcitationDirection::GetMi ( ) {
    double _result = 0;
    HRESULT _hr = get_Mi(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(466)
inline void IRobotDynamicAnalysisExcitationDirection::PutMi ( double ret ) {
    HRESULT _hr = put_Mi(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(467)
inline double IRobotDynamicAnalysisExcitationDirection::GetLambda ( ) {
    double _result = 0;
    HRESULT _hr = get_Lambda(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(468)
inline void IRobotDynamicAnalysisExcitationDirection::PutLambda ( double ret ) {
    HRESULT _hr = put_Lambda(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(469)
inline enum IRobotModeCombinationType IRobotDynamicAnalysisExcitationDirection::GetCombType ( ) {
    enum IRobotModeCombinationType _result;
    HRESULT _hr = get_CombType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(470)
inline void IRobotDynamicAnalysisExcitationDirection::PutCombType ( enum IRobotModeCombinationType ret ) {
    HRESULT _hr = put_CombType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSELFSeismicStructureParams wrapper method implementations
//

#pragma implementation_key(471)
inline enum IRobotSELFSeismicLevelDefinitionMethod IRobotSELFSeismicStructureParams::GetBaseLevelDefMethod ( ) {
    enum IRobotSELFSeismicLevelDefinitionMethod _result;
    HRESULT _hr = get_BaseLevelDefMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(472)
inline void IRobotSELFSeismicStructureParams::PutBaseLevelDefMethod ( enum IRobotSELFSeismicLevelDefinitionMethod ret ) {
    HRESULT _hr = put_BaseLevelDefMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(473)
inline double IRobotSELFSeismicStructureParams::GetBaseLevelCoordZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BaseLevelCoordZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(474)
inline void IRobotSELFSeismicStructureParams::PutBaseLevelCoordZ ( double ret ) {
    HRESULT _hr = put_BaseLevelCoordZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(475)
inline long IRobotSELFSeismicStructureParams::GetBaseLevelStorey ( ) {
    long _result = 0;
    HRESULT _hr = get_BaseLevelStorey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(476)
inline void IRobotSELFSeismicStructureParams::PutBaseLevelStorey ( long ret ) {
    HRESULT _hr = put_BaseLevelStorey(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(477)
inline enum IRobotSELFSeismicLevelDefinitionMethod IRobotSELFSeismicStructureParams::GetTopLevelDefMethod ( ) {
    enum IRobotSELFSeismicLevelDefinitionMethod _result;
    HRESULT _hr = get_TopLevelDefMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(478)
inline void IRobotSELFSeismicStructureParams::PutTopLevelDefMethod ( enum IRobotSELFSeismicLevelDefinitionMethod ret ) {
    HRESULT _hr = put_TopLevelDefMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(479)
inline double IRobotSELFSeismicStructureParams::GetTopLevelCoordZ ( ) {
    double _result = 0;
    HRESULT _hr = get_TopLevelCoordZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(480)
inline void IRobotSELFSeismicStructureParams::PutTopLevelCoordZ ( double ret ) {
    HRESULT _hr = put_TopLevelCoordZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(481)
inline long IRobotSELFSeismicStructureParams::GetTopLevelStorey ( ) {
    long _result = 0;
    HRESULT _hr = get_TopLevelStorey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(482)
inline void IRobotSELFSeismicStructureParams::PutTopLevelStorey ( long ret ) {
    HRESULT _hr = put_TopLevelStorey(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSELFSeismicAnalysisParams wrapper method implementations
//

#pragma implementation_key(483)
inline IRobotMassEccentricitiesPtr IRobotSELFSeismicAnalysisParams::GetEccentricities ( ) {
    struct IRobotMassEccentricities * _result = 0;
    HRESULT _hr = get_Eccentricities(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMassEccentricitiesPtr(_result, false);
}

#pragma implementation_key(484)
inline IRobotSELFSeismicStructureParamsPtr IRobotSELFSeismicAnalysisParams::GetStructureParams ( ) {
    struct IRobotSELFSeismicStructureParams * _result = 0;
    HRESULT _hr = get_StructureParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSELFSeismicStructureParamsPtr(_result, false);
}

#pragma implementation_key(485)
inline enum IRobotSELFSeismicTBaseMethod IRobotSELFSeismicAnalysisParams::GetTBaseMethod ( ) {
    enum IRobotSELFSeismicTBaseMethod _result;
    HRESULT _hr = get_TBaseMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(486)
inline IDispatchPtr IRobotSELFSeismicAnalysisParams::GetCodeParams ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CodeParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(487)
inline _bstr_t IRobotSELFSeismicAnalysisParams::GetCodeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(488)
inline long IRobotSELFSeismicAnalysisParams::GetCodeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_CodeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(489)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSELFSeismicAnalysisParams::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = raw_GetExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

//
// interface IRobotSELFSeismicGenerationParams wrapper method implementations
//

#pragma implementation_key(490)
inline IRobotModalAnalysisParamsPtr IRobotSELFSeismicGenerationParams::GetModalCaseParams ( ) {
    struct IRobotModalAnalysisParams * _result = 0;
    HRESULT _hr = get_ModalCaseParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotModalAnalysisParamsPtr(_result, false);
}

#pragma implementation_key(491)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSELFSeismicGenerationParams::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(492)
inline enum IRobotSELFSeismicTBaseMethod IRobotSELFSeismicGenerationParams::GetTBaseMethod ( ) {
    enum IRobotSELFSeismicTBaseMethod _result;
    HRESULT _hr = get_TBaseMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(493)
inline void IRobotSELFSeismicGenerationParams::PutTBaseMethod ( enum IRobotSELFSeismicTBaseMethod ret ) {
    HRESULT _hr = put_TBaseMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(494)
inline IRobotSELFSeismicAnalysisParamsPtr IRobotSELFSeismicGenerationParams::GetSeismicParams ( ) {
    struct IRobotSELFSeismicAnalysisParams * _result = 0;
    HRESULT _hr = get_SeismicParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSELFSeismicAnalysisParamsPtr(_result, false);
}

#pragma implementation_key(495)
inline _bstr_t IRobotSELFSeismicGenerationParams::GetCodeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(496)
inline void IRobotSELFSeismicGenerationParams::PutCodeName ( _bstr_t ret ) {
    HRESULT _hr = put_CodeName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(497)
inline long IRobotSELFSeismicGenerationParams::GetCodeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_CodeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(498)
inline void IRobotSELFSeismicGenerationParams::PutCodeNumber ( long ret ) {
    HRESULT _hr = put_CodeNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSELFSeismicEngine wrapper method implementations
//

#pragma implementation_key(499)
inline IRobotSELFSeismicGenerationParamsPtr IRobotSELFSeismicEngine::GetGenerationParams ( ) {
    struct IRobotSELFSeismicGenerationParams * _result = 0;
    HRESULT _hr = get_GenerationParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSELFSeismicGenerationParamsPtr(_result, false);
}

#pragma implementation_key(500)
inline long IRobotSELFSeismicEngine::GenerateLoadCases ( ) {
    long _result = 0;
    HRESULT _hr = raw_GenerateLoadCases(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotWindLoadsSimulationParams wrapper method implementations
//

#pragma implementation_key(501)
inline IRobotSelectionPtr IRobotWindLoadsSimulationParams::GetElements ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_Elements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(502)
inline VARIANT_BOOL IRobotWindLoadsSimulationParams::GetDirectionXPEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DirectionXPEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(503)
inline void IRobotWindLoadsSimulationParams::PutDirectionXPEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DirectionXPEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(504)
inline VARIANT_BOOL IRobotWindLoadsSimulationParams::GetDirectionXPYPEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DirectionXPYPEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(505)
inline void IRobotWindLoadsSimulationParams::PutDirectionXPYPEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DirectionXPYPEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(506)
inline VARIANT_BOOL IRobotWindLoadsSimulationParams::GetDirectionYPEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DirectionYPEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(507)
inline void IRobotWindLoadsSimulationParams::PutDirectionYPEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DirectionYPEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(508)
inline VARIANT_BOOL IRobotWindLoadsSimulationParams::GetDirectionXNYPEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DirectionXNYPEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(509)
inline void IRobotWindLoadsSimulationParams::PutDirectionXNYPEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DirectionXNYPEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(510)
inline VARIANT_BOOL IRobotWindLoadsSimulationParams::GetDirectionXNEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DirectionXNEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(511)
inline void IRobotWindLoadsSimulationParams::PutDirectionXNEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DirectionXNEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(512)
inline VARIANT_BOOL IRobotWindLoadsSimulationParams::GetDirectionXNYNEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DirectionXNYNEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(513)
inline void IRobotWindLoadsSimulationParams::PutDirectionXNYNEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DirectionXNYNEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(514)
inline VARIANT_BOOL IRobotWindLoadsSimulationParams::GetDirectionYNEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DirectionYNEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(515)
inline void IRobotWindLoadsSimulationParams::PutDirectionYNEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DirectionYNEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(516)
inline VARIANT_BOOL IRobotWindLoadsSimulationParams::GetDirectionXPYNEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DirectionXPYNEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(517)
inline void IRobotWindLoadsSimulationParams::PutDirectionXPYNEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DirectionXPYNEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(518)
inline double IRobotWindLoadsSimulationParams::GetVelocity ( ) {
    double _result = 0;
    HRESULT _hr = get_Velocity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(519)
inline void IRobotWindLoadsSimulationParams::PutVelocity ( double ret ) {
    HRESULT _hr = put_Velocity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(520)
inline double IRobotWindLoadsSimulationParams::GetTerrainLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_TerrainLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(521)
inline void IRobotWindLoadsSimulationParams::PutTerrainLevel ( double ret ) {
    HRESULT _hr = put_TerrainLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(522)
inline VARIANT_BOOL IRobotWindLoadsSimulationParams::GetOpeningsClosed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OpeningsClosed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(523)
inline void IRobotWindLoadsSimulationParams::PutOpeningsClosed ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_OpeningsClosed(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(524)
inline double IRobotWindLoadsSimulationParams::GetDeviationPercent ( ) {
    double _result = 0;
    HRESULT _hr = get_DeviationPercent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(525)
inline void IRobotWindLoadsSimulationParams::PutDeviationPercent ( double ret ) {
    HRESULT _hr = put_DeviationPercent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotWindLoadsSimulationEngine wrapper method implementations
//

#pragma implementation_key(526)
inline VARIANT_BOOL IRobotWindLoadsSimulationEngine::Generate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Generate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(527)
inline IRobotWindLoadsSimulationParamsPtr IRobotWindLoadsSimulationEngine::GetParams ( ) {
    struct IRobotWindLoadsSimulationParams * _result = 0;
    HRESULT _hr = get_Params(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotWindLoadsSimulationParamsPtr(_result, false);
}

//
// interface IRobotCaseServer wrapper method implementations
//

#pragma implementation_key(528)
inline IRobotSimpleCasePtr IRobotCaseServer::CreateSimple ( long num, _bstr_t Name, enum IRobotCaseNature Nature, enum IRobotCaseAnalizeType analize ) {
    struct IRobotSimpleCase * _result = 0;
    HRESULT _hr = raw_CreateSimple(num, Name, Nature, analize, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSimpleCasePtr(_result, false);
}

#pragma implementation_key(529)
inline IRobotCaseCombinationPtr IRobotCaseServer::CreateCombination ( long num, _bstr_t Name, enum IRobotCombinationType ctype, enum IRobotCaseNature Nature, enum IRobotCaseAnalizeType analize ) {
    struct IRobotCaseCombination * _result = 0;
    HRESULT _hr = raw_CreateCombination(num, Name, ctype, Nature, analize, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseCombinationPtr(_result, false);
}

#pragma implementation_key(530)
inline long IRobotCaseServer::Exist ( long case_num ) {
    long _result = 0;
    HRESULT _hr = raw_Exist(case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(531)
inline IRobotCasePtr IRobotCaseServer::Get ( long num ) {
    struct IRobotCase * _result = 0;
    HRESULT _hr = raw_Get(num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCasePtr(_result, false);
}

#pragma implementation_key(532)
inline IRobotCaseCollectionPtr IRobotCaseServer::GetMany ( struct IRobotSelection * case_sel ) {
    struct IRobotCaseCollection * _result = 0;
    HRESULT _hr = raw_GetMany(case_sel, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseCollectionPtr(_result, false);
}

#pragma implementation_key(533)
inline IRobotCaseCollectionPtr IRobotCaseServer::GetAll ( ) {
    struct IRobotCaseCollection * _result = 0;
    HRESULT _hr = raw_GetAll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseCollectionPtr(_result, false);
}

#pragma implementation_key(534)
inline HRESULT IRobotCaseServer::Delete ( long num ) {
    HRESULT _hr = raw_Delete(num);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(535)
inline HRESULT IRobotCaseServer::DeleteMany ( struct IRobotSelection * case_sel ) {
    HRESULT _hr = raw_DeleteMany(case_sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(536)
inline long IRobotCaseServer::GetFreeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_FreeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(537)
inline long IRobotCaseServer::FindWithId ( long unique_id ) {
    long _result = 0;
    HRESULT _hr = raw_FindWithId(unique_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(538)
inline IRobotSnowWindEnginePtr IRobotCaseServer::GetSnowWindEngine ( ) {
    struct IRobotSnowWindEngine * _result = 0;
    HRESULT _hr = get_SnowWindEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSnowWindEnginePtr(_result, false);
}

#pragma implementation_key(539)
inline IRobotCodeCombinationEnginePtr IRobotCaseServer::GetCodeCmbEngine ( ) {
    struct IRobotCodeCombinationEngine * _result = 0;
    HRESULT _hr = get_CodeCmbEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCombinationEnginePtr(_result, false);
}

#pragma implementation_key(540)
inline IRobotTimeHistoryFunctionListPtr IRobotCaseServer::GetTimeHistoryFunctions ( ) {
    struct IRobotTimeHistoryFunctionList * _result = 0;
    HRESULT _hr = get_TimeHistoryFunctions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTimeHistoryFunctionListPtr(_result, false);
}

#pragma implementation_key(541)
inline IRobotMobileCasePtr IRobotCaseServer::CreateMobile ( long _number, _bstr_t _name, enum IRobotCaseNature _nature ) {
    struct IRobotMobileCase * _result = 0;
    HRESULT _hr = raw_CreateMobile(_number, _name, _nature, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMobileCasePtr(_result, false);
}

#pragma implementation_key(542)
inline double IRobotCaseServer::GetQCmbTau ( ) {
    double _result = 0;
    HRESULT _hr = get_QCmbTau(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(543)
inline void IRobotCaseServer::PutQCmbTau ( double ret ) {
    HRESULT _hr = put_QCmbTau(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(544)
inline VARIANT_BOOL IRobotCaseServer::IsAuxiliary ( long _case_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsAuxiliary(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(545)
inline HRESULT IRobotCaseServer::SetAuxiliary ( long _case_num, VARIANT_BOOL _is_aux ) {
    HRESULT _hr = raw_SetAuxiliary(_case_num, _is_aux);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(546)
inline long IRobotCaseServer::GetUniqueId ( long _case_num ) {
    long _result = 0;
    HRESULT _hr = raw_GetUniqueId(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(547)
inline _variant_t IRobotCaseServer::GetRelatedValue ( enum IRobotCaseRelatedValueType _val_type, long _case, long _case_cmpnt ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_GetRelatedValue(_val_type, _case, _case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(548)
inline long IRobotCaseServer::GetCmpntCount ( long _case ) {
    long _result = 0;
    HRESULT _hr = raw_GetCmpntCount(_case, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(549)
inline IRobotSELFSeismicEnginePtr IRobotCaseServer::GetSELFSeismicEngine ( ) {
    struct IRobotSELFSeismicEngine * _result = 0;
    HRESULT _hr = get_SELFSeismicEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSELFSeismicEnginePtr(_result, false);
}

#pragma implementation_key(550)
inline HRESULT IRobotCaseServer::BeginMultiOperation ( ) {
    HRESULT _hr = raw_BeginMultiOperation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(551)
inline HRESULT IRobotCaseServer::EndMultiOperation ( ) {
    HRESULT _hr = raw_EndMultiOperation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(552)
inline IRobotWindLoadsSimulationEnginePtr IRobotCaseServer::GetWindLoadsSimulationEngine ( ) {
    struct IRobotWindLoadsSimulationEngine * _result = 0;
    HRESULT _hr = get_WindLoadsSimulationEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotWindLoadsSimulationEnginePtr(_result, false);
}

//
// interface IRobotCodeCmbFactor wrapper method implementations
//

#pragma implementation_key(553)
inline long IRobotCodeCmbFactor::GetCaseNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(554)
inline double IRobotCodeCmbFactor::GetFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_Factor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotCodeCmbComponent wrapper method implementations
//

#pragma implementation_key(555)
inline long IRobotCodeCmbComponent::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(556)
inline IRobotCodeCmbFactorPtr IRobotCodeCmbComponent::Get ( long idx ) {
    struct IRobotCodeCmbFactor * _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbFactorPtr(_result, false);
}

//
// interface IRobotCodeCmbComponentMngr wrapper method implementations
//

#pragma implementation_key(557)
inline long IRobotCodeCmbComponentMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(558)
inline IRobotCodeCmbComponentPtr IRobotCodeCmbComponentMngr::Get ( long cmb_idx ) {
    struct IRobotCodeCmbComponent * _result = 0;
    HRESULT _hr = raw_Get(cmb_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbComponentPtr(_result, false);
}

//
// interface IRobotCodeCombination wrapper method implementations
//

#pragma implementation_key(559)
inline long IRobotCodeCombination::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(560)
inline enum IRobotCombinationType IRobotCodeCombination::GetCombinationType ( ) {
    enum IRobotCombinationType _result;
    HRESULT _hr = get_CombinationType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(561)
inline void IRobotCodeCombination::PutCombinationType ( enum IRobotCombinationType ret ) {
    HRESULT _hr = put_CombinationType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(562)
inline enum IRobotCodeCmbFlag IRobotCodeCombination::GetFlag ( ) {
    enum IRobotCodeCmbFlag _result;
    HRESULT _hr = get_Flag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(563)
inline IRobotCodeCmbComponentMngrPtr IRobotCodeCombination::GetComponents ( ) {
    struct IRobotCodeCmbComponentMngr * _result = 0;
    HRESULT _hr = get_Components(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCodeCmbComponentMngrPtr(_result, false);
}

#pragma implementation_key(564)
inline long IRobotCodeCombination::FindByFlag ( enum IRobotCodeCmbFlag cmb_flag ) {
    long _result = 0;
    HRESULT _hr = raw_FindByFlag(cmb_flag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(565)
inline long IRobotCodeCombination::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(566)
inline void IRobotCodeCombination::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotDataObject wrapper method implementations
//

#pragma implementation_key(567)
inline long IRobotDataObject::GetNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(568)
inline HRESULT IRobotDataObject::SetLabel ( enum IRobotLabelType lab_type, _bstr_t lab_name ) {
    HRESULT _hr = raw_SetLabel(lab_type, lab_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(569)
inline long IRobotDataObject::HasLabel ( enum IRobotLabelType lab_type ) {
    long _result = 0;
    HRESULT _hr = raw_HasLabel(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(570)
inline HRESULT IRobotDataObject::RemoveLabel ( enum IRobotLabelType lab_type ) {
    HRESULT _hr = raw_RemoveLabel(lab_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(571)
inline _bstr_t IRobotDataObject::GetLabelName ( enum IRobotLabelType lab_type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetLabelName(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(572)
inline IRobotLabelPtr IRobotDataObject::GetLabel ( enum IRobotLabelType lab_type ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_GetLabel(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(573)
inline IRobotCollectionPtr IRobotDataObject::GetLabels ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetLabels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

//
// interface IRobotEmitter wrapper method implementations
//

#pragma implementation_key(574)
inline VARIANT_BOOL IRobotEmitter::GetVariableMeshDensityIncrement ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_VariableMeshDensityIncrement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(575)
inline void IRobotEmitter::PutVariableMeshDensityIncrement ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_VariableMeshDensityIncrement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(576)
inline double IRobotEmitter::GetH0 ( ) {
    double _result = 0;
    HRESULT _hr = get_H0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(577)
inline void IRobotEmitter::PutH0 ( double ret ) {
    HRESULT _hr = put_H0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(578)
inline double IRobotEmitter::GetR1 ( ) {
    double _result = 0;
    HRESULT _hr = get_R1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(579)
inline void IRobotEmitter::PutR1 ( double ret ) {
    HRESULT _hr = put_R1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(580)
inline double IRobotEmitter::GetR2 ( ) {
    double _result = 0;
    HRESULT _hr = get_R2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(581)
inline void IRobotEmitter::PutR2 ( double ret ) {
    HRESULT _hr = put_R2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(582)
inline long IRobotEmitter::GetEstimatedElemNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_EstimatedElemNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNonlinearLinkMngr wrapper method implementations
//

#pragma implementation_key(583)
inline HRESULT IRobotNonlinearLinkMngr::Set ( enum IRobotDegreeOfFreedom _direction, _bstr_t _model_name ) {
    HRESULT _hr = raw_Set(_direction, _model_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(584)
inline _bstr_t IRobotNonlinearLinkMngr::Get ( enum IRobotDegreeOfFreedom _direction ) {
    BSTR _result = 0;
    HRESULT _hr = raw_Get(_direction, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(585)
inline VARIANT_BOOL IRobotNonlinearLinkMngr::IsDefined ( enum IRobotDegreeOfFreedom _direction ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsDefined(_direction, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(586)
inline HRESULT IRobotNonlinearLinkMngr::Delete ( enum IRobotDegreeOfFreedom _direction ) {
    HRESULT _hr = raw_Delete(_direction);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSupportEquivalentElasticity wrapper method implementations
//

#pragma implementation_key(587)
inline enum IRobotSupportEquivalentElasticityType IRobotSupportEquivalentElasticity::GetType ( ) {
    enum IRobotSupportEquivalentElasticityType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(588)
inline double IRobotSupportEquivalentElasticity::GetE ( ) {
    double _result = 0;
    HRESULT _hr = get_E(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(589)
inline void IRobotSupportEquivalentElasticity::PutE ( double ret ) {
    HRESULT _hr = put_E(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(590)
inline double IRobotSupportEquivalentElasticity::GetPoissonRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_PoissonRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(591)
inline void IRobotSupportEquivalentElasticity::PutPoissonRatio ( double ret ) {
    HRESULT _hr = put_PoissonRatio(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(592)
inline HRESULT IRobotSupportEquivalentElasticity::SetMaterial ( _bstr_t _material_name ) {
    HRESULT _hr = raw_SetMaterial(_material_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotAdvancedSupportData wrapper method implementations
//

#pragma implementation_key(593)
inline enum IRobotAdvancedSupportType IRobotAdvancedSupportData::GetType ( ) {
    enum IRobotAdvancedSupportType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(594)
inline void IRobotAdvancedSupportData::PutType ( enum IRobotAdvancedSupportType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(595)
inline double IRobotAdvancedSupportData::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(596)
inline void IRobotAdvancedSupportData::PutB ( double ret ) {
    HRESULT _hr = put_B(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(597)
inline double IRobotAdvancedSupportData::GetH ( ) {
    double _result = 0;
    HRESULT _hr = get_H(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(598)
inline void IRobotAdvancedSupportData::PutH ( double ret ) {
    HRESULT _hr = put_H(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(599)
inline double IRobotAdvancedSupportData::GetD ( ) {
    double _result = 0;
    HRESULT _hr = get_D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(600)
inline void IRobotAdvancedSupportData::PutD ( double ret ) {
    HRESULT _hr = put_D(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(601)
inline VARIANT_BOOL IRobotAdvancedSupportData::GetIsEquivalentElasticity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsEquivalentElasticity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(602)
inline void IRobotAdvancedSupportData::PutIsEquivalentElasticity ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsEquivalentElasticity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(603)
inline IRobotSupportEquivalentElasticityPtr IRobotAdvancedSupportData::GetEquivalentElasticity ( ) {
    struct IRobotSupportEquivalentElasticity * _result = 0;
    HRESULT _hr = get_EquivalentElasticity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSupportEquivalentElasticityPtr(_result, false);
}

//
// interface IRobotNodeSupportData wrapper method implementations
//

#pragma implementation_key(604)
inline long IRobotNodeSupportData::GetUX ( ) {
    long _result = 0;
    HRESULT _hr = get_UX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(605)
inline void IRobotNodeSupportData::PutUX ( long ret ) {
    HRESULT _hr = put_UX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(606)
inline long IRobotNodeSupportData::GetUY ( ) {
    long _result = 0;
    HRESULT _hr = get_UY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(607)
inline void IRobotNodeSupportData::PutUY ( long ret ) {
    HRESULT _hr = put_UY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(608)
inline long IRobotNodeSupportData::GetUZ ( ) {
    long _result = 0;
    HRESULT _hr = get_UZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(609)
inline void IRobotNodeSupportData::PutUZ ( long ret ) {
    HRESULT _hr = put_UZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(610)
inline long IRobotNodeSupportData::GetRX ( ) {
    long _result = 0;
    HRESULT _hr = get_RX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(611)
inline void IRobotNodeSupportData::PutRX ( long ret ) {
    HRESULT _hr = put_RX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(612)
inline long IRobotNodeSupportData::GetRY ( ) {
    long _result = 0;
    HRESULT _hr = get_RY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(613)
inline void IRobotNodeSupportData::PutRY ( long ret ) {
    HRESULT _hr = put_RY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(614)
inline long IRobotNodeSupportData::GetRZ ( ) {
    long _result = 0;
    HRESULT _hr = get_RZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(615)
inline void IRobotNodeSupportData::PutRZ ( long ret ) {
    HRESULT _hr = put_RZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(616)
inline double IRobotNodeSupportData::GetKX ( ) {
    double _result = 0;
    HRESULT _hr = get_KX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(617)
inline void IRobotNodeSupportData::PutKX ( double ret ) {
    HRESULT _hr = put_KX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(618)
inline double IRobotNodeSupportData::GetKY ( ) {
    double _result = 0;
    HRESULT _hr = get_KY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(619)
inline void IRobotNodeSupportData::PutKY ( double ret ) {
    HRESULT _hr = put_KY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(620)
inline double IRobotNodeSupportData::GetKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_KZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(621)
inline void IRobotNodeSupportData::PutKZ ( double ret ) {
    HRESULT _hr = put_KZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(622)
inline double IRobotNodeSupportData::GetHX ( ) {
    double _result = 0;
    HRESULT _hr = get_HX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(623)
inline void IRobotNodeSupportData::PutHX ( double ret ) {
    HRESULT _hr = put_HX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(624)
inline double IRobotNodeSupportData::GetHY ( ) {
    double _result = 0;
    HRESULT _hr = get_HY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(625)
inline void IRobotNodeSupportData::PutHY ( double ret ) {
    HRESULT _hr = put_HY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(626)
inline double IRobotNodeSupportData::GetHZ ( ) {
    double _result = 0;
    HRESULT _hr = get_HZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(627)
inline void IRobotNodeSupportData::PutHZ ( double ret ) {
    HRESULT _hr = put_HZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(628)
inline double IRobotNodeSupportData::GetAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_Alpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(629)
inline void IRobotNodeSupportData::PutAlpha ( double ret ) {
    HRESULT _hr = put_Alpha(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(630)
inline double IRobotNodeSupportData::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(631)
inline void IRobotNodeSupportData::PutBeta ( double ret ) {
    HRESULT _hr = put_Beta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(632)
inline double IRobotNodeSupportData::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(633)
inline void IRobotNodeSupportData::PutGamma ( double ret ) {
    HRESULT _hr = put_Gamma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(634)
inline double IRobotNodeSupportData::GetAX ( ) {
    double _result = 0;
    HRESULT _hr = get_AX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(635)
inline void IRobotNodeSupportData::PutAX ( double ret ) {
    HRESULT _hr = put_AX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(636)
inline double IRobotNodeSupportData::GetAY ( ) {
    double _result = 0;
    HRESULT _hr = get_AY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(637)
inline void IRobotNodeSupportData::PutAY ( double ret ) {
    HRESULT _hr = put_AY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(638)
inline double IRobotNodeSupportData::GetAZ ( ) {
    double _result = 0;
    HRESULT _hr = get_AZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(639)
inline void IRobotNodeSupportData::PutAZ ( double ret ) {
    HRESULT _hr = put_AZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(640)
inline double IRobotNodeSupportData::GetBX ( ) {
    double _result = 0;
    HRESULT _hr = get_BX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(641)
inline void IRobotNodeSupportData::PutBX ( double ret ) {
    HRESULT _hr = put_BX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(642)
inline double IRobotNodeSupportData::GetBY ( ) {
    double _result = 0;
    HRESULT _hr = get_BY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(643)
inline void IRobotNodeSupportData::PutBY ( double ret ) {
    HRESULT _hr = put_BY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(644)
inline double IRobotNodeSupportData::GetBZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(645)
inline void IRobotNodeSupportData::PutBZ ( double ret ) {
    HRESULT _hr = put_BZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(646)
inline VARIANT_BOOL IRobotNodeSupportData::GetGlobalCoordSystem ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GlobalCoordSystem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(647)
inline void IRobotNodeSupportData::PutGlobalCoordSystem ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GlobalCoordSystem(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(648)
inline VARIANT_BOOL IRobotNodeSupportData::GetElasticLinear ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ElasticLinear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(649)
inline void IRobotNodeSupportData::PutElasticLinear ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ElasticLinear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(650)
inline VARIANT_BOOL IRobotNodeSupportData::GetElasticSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ElasticSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(651)
inline void IRobotNodeSupportData::PutElasticSurface ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ElasticSurface(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(652)
inline long IRobotNodeSupportData::IsFixed ( enum IRobotNodeSupportFixingDirection _direction ) {
    long _result = 0;
    HRESULT _hr = raw_IsFixed(_direction, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(653)
inline HRESULT IRobotNodeSupportData::SetFixed ( enum IRobotNodeSupportFixingDirection _direction, long fixed ) {
    HRESULT _hr = raw_SetFixed(_direction, fixed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(654)
inline enum IRobotNodeSupportOneDirectionFixingType IRobotNodeSupportData::GetOneDir ( enum IRobotNodeSupportFixingDirection _direction ) {
    enum IRobotNodeSupportOneDirectionFixingType _result;
    HRESULT _hr = raw_GetOneDir(_direction, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(655)
inline HRESULT IRobotNodeSupportData::SetOneDir ( enum IRobotNodeSupportFixingDirection _direction, enum IRobotNodeSupportOneDirectionFixingType how_blocked ) {
    HRESULT _hr = raw_SetOneDir(_direction, how_blocked);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(656)
inline HRESULT IRobotNodeSupportData::SetAdvanced ( enum IRobotAdvancedSupportType _type, double _b, double _h ) {
    HRESULT _hr = raw_SetAdvanced(_type, _b, _h);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(657)
inline enum IRobotAdvancedSupportType IRobotNodeSupportData::GetAdvanced ( double * _b, double * _h ) {
    enum IRobotAdvancedSupportType _result;
    HRESULT _hr = raw_GetAdvanced(_b, _h, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(658)
inline IRobotNonlinearLinkMngrPtr IRobotNodeSupportData::GetNonlinearModel ( ) {
    struct IRobotNonlinearLinkMngr * _result = 0;
    HRESULT _hr = get_NonlinearModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearLinkMngrPtr(_result, false);
}

#pragma implementation_key(659)
inline IRobotAdvancedSupportDataPtr IRobotNodeSupportData::GetAdvanced ( ) {
    struct IRobotAdvancedSupportData * _result = 0;
    HRESULT _hr = get_Advanced(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotAdvancedSupportDataPtr(_result, false);
}

//
// interface IRobotNode wrapper method implementations
//

#pragma implementation_key(660)
inline double IRobotNode::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(661)
inline void IRobotNode::PutX ( double __MIDL__IRobotNode0000 ) {
    HRESULT _hr = put_X(__MIDL__IRobotNode0000);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(662)
inline double IRobotNode::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(663)
inline void IRobotNode::PutY ( double __MIDL__IRobotNode0002 ) {
    HRESULT _hr = put_Y(__MIDL__IRobotNode0002);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(664)
inline double IRobotNode::GetZ ( ) {
    double _result = 0;
    HRESULT _hr = get_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(665)
inline void IRobotNode::PutZ ( double __MIDL__IRobotNode0004 ) {
    HRESULT _hr = put_Z(__MIDL__IRobotNode0004);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(666)
inline long IRobotNode::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(667)
inline VARIANT_BOOL IRobotNode::GetHasEmitter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasEmitter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(668)
inline HRESULT IRobotNode::SetEmitter ( struct IRobotEmitter * emit ) {
    HRESULT _hr = raw_SetEmitter(emit);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(669)
inline IRobotEmitterPtr IRobotNode::GetEmitter ( ) {
    struct IRobotEmitter * _result = 0;
    HRESULT _hr = raw_GetEmitter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotEmitterPtr(_result, false);
}

#pragma implementation_key(670)
inline HRESULT IRobotNode::RemoveEmitter ( ) {
    HRESULT _hr = raw_RemoveEmitter();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(671)
inline long IRobotNode::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(672)
inline void IRobotNode::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(673)
inline VARIANT_BOOL IRobotNode::GetIsCalc ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCalc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(674)
inline VARIANT_BOOL IRobotNode::GetHasCalcSupport ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasCalcSupport(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(675)
inline IRobotNodeSupportDataPtr IRobotNode::GetCalcSupport ( ) {
    struct IRobotNodeSupportData * _result = 0;
    HRESULT _hr = raw_GetCalcSupport(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeSupportDataPtr(_result, false);
}

//
// interface IRobotDataObjectServer wrapper method implementations
//

#pragma implementation_key(676)
inline long IRobotDataObjectServer::Exist ( long obj_num ) {
    long _result = 0;
    HRESULT _hr = raw_Exist(obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(677)
inline IRobotDataObjectPtr IRobotDataObjectServer::Get ( long obj_num ) {
    struct IRobotDataObject * _result = 0;
    HRESULT _hr = raw_Get(obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDataObjectPtr(_result, false);
}

#pragma implementation_key(678)
inline IRobotCollectionPtr IRobotDataObjectServer::GetMany ( struct IRobotSelection * obj_sel ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetMany(obj_sel, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(679)
inline IRobotCollectionPtr IRobotDataObjectServer::GetAll ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetAll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(680)
inline HRESULT IRobotDataObjectServer::Delete ( long obj_num ) {
    HRESULT _hr = raw_Delete(obj_num);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(681)
inline HRESULT IRobotDataObjectServer::DeleteMany ( struct IRobotSelection * obj_sel ) {
    HRESULT _hr = raw_DeleteMany(obj_sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(682)
inline HRESULT IRobotDataObjectServer::SetLabel ( struct IRobotSelection * obj_sel, enum IRobotLabelType lab_type, _bstr_t lab_name ) {
    HRESULT _hr = raw_SetLabel(obj_sel, lab_type, lab_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(683)
inline HRESULT IRobotDataObjectServer::RemoveLabel ( struct IRobotSelection * obj_sel, enum IRobotLabelType lab_type ) {
    HRESULT _hr = raw_RemoveLabel(obj_sel, lab_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotNodeRigidLinkDef wrapper method implementations
//

#pragma implementation_key(684)
inline long IRobotNodeRigidLinkDef::GetMaster ( ) {
    long _result = 0;
    HRESULT _hr = get_Master(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(685)
inline void IRobotNodeRigidLinkDef::PutMaster ( long ret ) {
    HRESULT _hr = put_Master(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(686)
inline _bstr_t IRobotNodeRigidLinkDef::GetSlaves ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Slaves(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(687)
inline void IRobotNodeRigidLinkDef::PutSlaves ( _bstr_t ret ) {
    HRESULT _hr = put_Slaves(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(688)
inline _bstr_t IRobotNodeRigidLinkDef::GetLabelName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LabelName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(689)
inline void IRobotNodeRigidLinkDef::PutLabelName ( _bstr_t ret ) {
    HRESULT _hr = put_LabelName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNodeRigidLinkServer wrapper method implementations
//

#pragma implementation_key(690)
inline long IRobotNodeRigidLinkServer::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(691)
inline VARIANT_BOOL IRobotNodeRigidLinkServer::Set ( long _master, _bstr_t _slaves, _bstr_t _label_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Set(_master, _slaves, _label_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(692)
inline HRESULT IRobotNodeRigidLinkServer::RemoveSlave ( long _slave ) {
    HRESULT _hr = raw_RemoveSlave(_slave);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(693)
inline long IRobotNodeRigidLinkServer::FindMaster ( long _master ) {
    long _result = 0;
    HRESULT _hr = raw_FindMaster(_master, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(694)
inline IRobotNodeRigidLinkDefPtr IRobotNodeRigidLinkServer::Get ( long _def_idx ) {
    struct IRobotNodeRigidLinkDef * _result = 0;
    HRESULT _hr = raw_Get(_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeRigidLinkDefPtr(_result, false);
}

#pragma implementation_key(695)
inline HRESULT IRobotNodeRigidLinkServer::Remove ( long _def_idx ) {
    HRESULT _hr = raw_Remove(_def_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(696)
inline IRobotLabelPtr IRobotNodeRigidLinkServer::GetLabel ( long _def_idx ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_GetLabel(_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(697)
inline long IRobotNodeRigidLinkServer::FindSlave ( long _slave_node ) {
    long _result = 0;
    HRESULT _hr = raw_FindSlave(_slave_node, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(698)
inline long IRobotNodeRigidLinkServer::Find ( long _node_num ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_node_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(699)
inline long IRobotNodeRigidLinkServer::FindLabel ( _bstr_t _label_name, long _start_def_idx ) {
    long _result = 0;
    HRESULT _hr = raw_FindLabel(_label_name, _start_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNodeCompatibilityDef wrapper method implementations
//

#pragma implementation_key(700)
inline long IRobotNodeCompatibilityDef::GetMain ( ) {
    long _result = 0;
    HRESULT _hr = get_Main(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(701)
inline void IRobotNodeCompatibilityDef::PutMain ( long ret ) {
    HRESULT _hr = put_Main(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(702)
inline long IRobotNodeCompatibilityDef::GetCompatible ( ) {
    long _result = 0;
    HRESULT _hr = get_Compatible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(703)
inline void IRobotNodeCompatibilityDef::PutCompatible ( long ret ) {
    HRESULT _hr = put_Compatible(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(704)
inline _bstr_t IRobotNodeCompatibilityDef::GetLabelName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LabelName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(705)
inline void IRobotNodeCompatibilityDef::PutLabelName ( _bstr_t ret ) {
    HRESULT _hr = put_LabelName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(706)
inline _bstr_t IRobotNodeCompatibilityDef::GetBars ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Bars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(707)
inline void IRobotNodeCompatibilityDef::PutBars ( _bstr_t ret ) {
    HRESULT _hr = put_Bars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNodeCompatibilityServer wrapper method implementations
//

#pragma implementation_key(708)
inline long IRobotNodeCompatibilityServer::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(709)
inline long IRobotNodeCompatibilityServer::FindMain ( long _main_node, long _start_def_idx ) {
    long _result = 0;
    HRESULT _hr = raw_FindMain(_main_node, _start_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(710)
inline VARIANT_BOOL IRobotNodeCompatibilityServer::Set ( long _node, _bstr_t _bar_list, _bstr_t _label_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Set(_node, _bar_list, _label_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(711)
inline IRobotNodeCompatibilityDefPtr IRobotNodeCompatibilityServer::Get ( long _def_idx ) {
    struct IRobotNodeCompatibilityDef * _result = 0;
    HRESULT _hr = raw_Get(_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeCompatibilityDefPtr(_result, false);
}

#pragma implementation_key(712)
inline HRESULT IRobotNodeCompatibilityServer::Remove ( long _def_idx ) {
    HRESULT _hr = raw_Remove(_def_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(713)
inline IRobotLabelPtr IRobotNodeCompatibilityServer::GetLabel ( long _def_idx ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_GetLabel(_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(714)
inline long IRobotNodeCompatibilityServer::FindCompatible ( long _compatible_node ) {
    long _result = 0;
    HRESULT _hr = raw_FindCompatible(_compatible_node, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(715)
inline long IRobotNodeCompatibilityServer::Find ( long _node, long _start_def_idx ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_node, _start_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(716)
inline long IRobotNodeCompatibilityServer::FindLabel ( _bstr_t _label_name, long _start_def_idx ) {
    long _result = 0;
    HRESULT _hr = raw_FindLabel(_label_name, _start_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNonlinearLinkParams wrapper method implementations
//

#pragma implementation_key(717)
inline enum IRobotNonlinearLinkCurveType IRobotNonlinearLinkParams::GetCurveType ( ) {
    enum IRobotNonlinearLinkCurveType _result;
    HRESULT _hr = get_CurveType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNonlinearLink wrapper method implementations
//

#pragma implementation_key(718)
inline _bstr_t IRobotNonlinearLink::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(719)
inline void IRobotNonlinearLink::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(720)
inline enum IRobotNonlinearLinkModelType IRobotNonlinearLink::GetModelType ( ) {
    enum IRobotNonlinearLinkModelType _result;
    HRESULT _hr = get_ModelType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(721)
inline void IRobotNonlinearLink::PutModelType ( enum IRobotNonlinearLinkModelType ret ) {
    HRESULT _hr = put_ModelType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(722)
inline IRobotNonlinearLinkParamsPtr IRobotNonlinearLink::GetParams ( enum IRobotNonlinearLinkSemiAxisType _axis_type ) {
    struct IRobotNonlinearLinkParams * _result = 0;
    HRESULT _hr = raw_GetParams(_axis_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearLinkParamsPtr(_result, false);
}

#pragma implementation_key(723)
inline HRESULT IRobotNonlinearLink::SetParams ( struct IRobotNonlinearLinkParams * _params, enum IRobotNonlinearLinkSemiAxisType _axis_type ) {
    HRESULT _hr = raw_SetParams(_params, _axis_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(724)
inline VARIANT_BOOL IRobotNonlinearLink::GetSymetry ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Symetry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(725)
inline HRESULT IRobotNonlinearLink::SetCurveType ( enum IRobotNonlinearLinkCurveType _curve_type, enum IRobotNonlinearLinkSemiAxisType _axis_type ) {
    HRESULT _hr = raw_SetCurveType(_curve_type, _axis_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(726)
inline enum IRobotNonlinearLinkCurveType IRobotNonlinearLink::GetCurveType ( enum IRobotNonlinearLinkSemiAxisType _axis_type ) {
    enum IRobotNonlinearLinkCurveType _result;
    HRESULT _hr = raw_GetCurveType(_axis_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNonlinearLinkServer wrapper method implementations
//

#pragma implementation_key(727)
inline long IRobotNonlinearLinkServer::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(728)
inline IRobotNonlinearLinkPtr IRobotNonlinearLinkServer::Get ( long _idx ) {
    struct IRobotNonlinearLink * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearLinkPtr(_result, false);
}

#pragma implementation_key(729)
inline IRobotNonlinearLinkPtr IRobotNonlinearLinkServer::Create ( _bstr_t _name ) {
    struct IRobotNonlinearLink * _result = 0;
    HRESULT _hr = raw_Create(_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearLinkPtr(_result, false);
}

#pragma implementation_key(730)
inline long IRobotNonlinearLinkServer::Find ( _bstr_t _name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(731)
inline HRESULT IRobotNonlinearLinkServer::Remove ( long _idx ) {
    HRESULT _hr = raw_Remove(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotNodeServer wrapper method implementations
//

#pragma implementation_key(732)
inline HRESULT IRobotNodeServer::Create ( long num, double _x, double _y, double _z ) {
    HRESULT _hr = raw_Create(num, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(733)
inline long IRobotNodeServer::GetFreeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_FreeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(734)
inline long IRobotNodeServer::FindWithId ( long unique_id ) {
    long _result = 0;
    HRESULT _hr = raw_FindWithId(unique_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(735)
inline HRESULT IRobotNodeServer::SetEmitter ( struct IRobotSelection * node_sel, struct IRobotEmitter * emit ) {
    HRESULT _hr = raw_SetEmitter(node_sel, emit);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(736)
inline HRESULT IRobotNodeServer::RemoveEmitter ( struct IRobotSelection * node_sel ) {
    HRESULT _hr = raw_RemoveEmitter(node_sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(737)
inline IRobotNodeRigidLinkServerPtr IRobotNodeServer::GetRigidLinks ( ) {
    struct IRobotNodeRigidLinkServer * _result = 0;
    HRESULT _hr = get_RigidLinks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeRigidLinkServerPtr(_result, false);
}

#pragma implementation_key(738)
inline IRobotNodeCompatibilityServerPtr IRobotNodeServer::GetCompatibleNodes ( ) {
    struct IRobotNodeCompatibilityServer * _result = 0;
    HRESULT _hr = get_CompatibleNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeCompatibilityServerPtr(_result, false);
}

#pragma implementation_key(739)
inline VARIANT_BOOL IRobotNodeServer::IsCalc ( long _node_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsCalc(_node_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(740)
inline IRobotCollectionPtr IRobotNodeServer::GetUserNodes ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetUserNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(741)
inline IRobotCollectionPtr IRobotNodeServer::GetCalcNodes ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetCalcNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(742)
inline IRobotNonlinearLinkServerPtr IRobotNodeServer::GetNonlinearLinks ( ) {
    struct IRobotNonlinearLinkServer * _result = 0;
    HRESULT _hr = get_NonlinearLinks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearLinkServerPtr(_result, false);
}

#pragma implementation_key(743)
inline IRobotNumbersArrayPtr IRobotNodeServer::GetConnectedBars ( _bstr_t _node_sel ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = raw_GetConnectedBars(_node_sel, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

#pragma implementation_key(744)
inline VARIANT_BOOL IRobotNodeServer::HasCalcSupport ( long _node_number ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasCalcSupport(_node_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(745)
inline IRobotNodeSupportDataPtr IRobotNodeServer::GetCalcSupport ( long _node_number ) {
    struct IRobotNodeSupportData * _result = 0;
    HRESULT _hr = raw_GetCalcSupport(_node_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeSupportDataPtr(_result, false);
}

#pragma implementation_key(746)
inline long IRobotNodeServer::GetUniqueId ( long _node_num ) {
    long _result = 0;
    HRESULT _hr = raw_GetUniqueId(_node_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarEndOffsetData wrapper method implementations
//

#pragma implementation_key(747)
inline double IRobotBarEndOffsetData::GetUX ( ) {
    double _result = 0;
    HRESULT _hr = get_UX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(748)
inline void IRobotBarEndOffsetData::PutUX ( double ret ) {
    HRESULT _hr = put_UX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(749)
inline double IRobotBarEndOffsetData::GetUY ( ) {
    double _result = 0;
    HRESULT _hr = get_UY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(750)
inline void IRobotBarEndOffsetData::PutUY ( double ret ) {
    HRESULT _hr = put_UY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(751)
inline double IRobotBarEndOffsetData::GetUZ ( ) {
    double _result = 0;
    HRESULT _hr = get_UZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(752)
inline void IRobotBarEndOffsetData::PutUZ ( double ret ) {
    HRESULT _hr = put_UZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(753)
inline enum IRobotBarOffsetMemberLength IRobotBarEndOffsetData::GetMemberLength ( ) {
    enum IRobotBarOffsetMemberLength _result;
    HRESULT _hr = get_MemberLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(754)
inline void IRobotBarEndOffsetData::PutMemberLength ( enum IRobotBarOffsetMemberLength ret ) {
    HRESULT _hr = put_MemberLength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotBarEnd wrapper method implementations
//

#pragma implementation_key(755)
inline long IRobotBarEnd::GetNode ( ) {
    long _result = 0;
    HRESULT _hr = get_Node(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(756)
inline void IRobotBarEnd::PutNode ( long ret ) {
    HRESULT _hr = put_Node(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(757)
inline HRESULT IRobotBarEnd::SetLabel ( enum IRobotLabelType lab_type, _bstr_t lab_name ) {
    HRESULT _hr = raw_SetLabel(lab_type, lab_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(758)
inline long IRobotBarEnd::HasLabel ( enum IRobotLabelType lab_type ) {
    long _result = 0;
    HRESULT _hr = raw_HasLabel(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(759)
inline IRobotLabelPtr IRobotBarEnd::GetLabel ( enum IRobotLabelType lab_type ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_GetLabel(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(760)
inline HRESULT IRobotBarEnd::RemoveLabel ( enum IRobotLabelType lab_type ) {
    HRESULT _hr = raw_RemoveLabel(lab_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(761)
inline _bstr_t IRobotBarEnd::GetLabelName ( enum IRobotLabelType lab_type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetLabelName(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(762)
inline IRobotCollectionPtr IRobotBarEnd::GetLabels ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetLabels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(763)
inline IRobotBarEndOffsetDataPtr IRobotBarEnd::GetOffsetValue ( ) {
    struct IRobotBarEndOffsetData * _result = 0;
    HRESULT _hr = raw_GetOffsetValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarEndOffsetDataPtr(_result, false);
}

//
// interface IRobotBarElementData wrapper method implementations
//

#pragma implementation_key(764)
inline long IRobotBarElementData::GetNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(765)
inline long IRobotBarElementData::GetStartNode ( double * _x, double * _y, double * _z ) {
    long _result = 0;
    HRESULT _hr = raw_GetStartNode(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(766)
inline long IRobotBarElementData::GetEndNode ( double * _x, double * _y, double * _z ) {
    long _result = 0;
    HRESULT _hr = raw_GetEndNode(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(767)
inline long IRobotBarElementData::GetBar ( ) {
    long _result = 0;
    HRESULT _hr = get_Bar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarElementDataSet wrapper method implementations
//

#pragma implementation_key(768)
inline long IRobotBarElementDataSet::GetElemCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ElemCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(769)
inline long IRobotBarElementDataSet::GetElem ( long _elem_idx, struct IRobotBarElementData * _ret_data ) {
    long _result = 0;
    HRESULT _hr = raw_GetElem(_elem_idx, _ret_data, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(770)
inline long IRobotBarElementDataSet::GetBarCount ( ) {
    long _result = 0;
    HRESULT _hr = get_BarCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(771)
inline long IRobotBarElementDataSet::GetBarNumber ( long _bar_idx ) {
    long _result = 0;
    HRESULT _hr = raw_GetBarNumber(_bar_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(772)
inline long IRobotBarElementDataSet::GetElemCountForBar ( long _bar_idx ) {
    long _result = 0;
    HRESULT _hr = raw_GetElemCountForBar(_bar_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(773)
inline long IRobotBarElementDataSet::GetElemForBar ( long _bar_idx, long _elem_idx, struct IRobotBarElementData * _ret_data ) {
    long _result = 0;
    HRESULT _hr = raw_GetElemForBar(_bar_idx, _elem_idx, _ret_data, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBar wrapper method implementations
//

#pragma implementation_key(774)
inline long IRobotBar::GetStartNode ( ) {
    long _result = 0;
    HRESULT _hr = get_StartNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(775)
inline void IRobotBar::PutStartNode ( long ret ) {
    HRESULT _hr = put_StartNode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(776)
inline long IRobotBar::GetEndNode ( ) {
    long _result = 0;
    HRESULT _hr = get_EndNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(777)
inline void IRobotBar::PutEndNode ( long ret ) {
    HRESULT _hr = put_EndNode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(778)
inline double IRobotBar::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(779)
inline void IRobotBar::PutGamma ( double ret ) {
    HRESULT _hr = put_Gamma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(780)
inline IRobotBarEndPtr IRobotBar::GetStart ( ) {
    struct IRobotBarEnd * _result = 0;
    HRESULT _hr = get_Start(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarEndPtr(_result, false);
}

#pragma implementation_key(781)
inline IRobotBarEndPtr IRobotBar::GetEnd ( ) {
    struct IRobotBarEnd * _result = 0;
    HRESULT _hr = get_End(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarEndPtr(_result, false);
}

#pragma implementation_key(782)
inline long IRobotBar::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(783)
inline enum IRobotBarTensionCompression IRobotBar::GetTensionCompression ( ) {
    enum IRobotBarTensionCompression _result;
    HRESULT _hr = get_TensionCompression(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(784)
inline void IRobotBar::PutTensionCompression ( enum IRobotBarTensionCompression ret ) {
    HRESULT _hr = put_TensionCompression(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(785)
inline VARIANT_BOOL IRobotBar::GetShearForces ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShearForces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(786)
inline void IRobotBar::PutShearForces ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ShearForces(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(787)
inline double IRobotBar::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(788)
inline VARIANT_BOOL IRobotBar::GetReversedSection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReversedSection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(789)
inline void IRobotBar::PutReversedSection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ReversedSection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(790)
inline HRESULT IRobotBar::SetSection ( _bstr_t _section_name, VARIANT_BOOL _reverse ) {
    HRESULT _hr = raw_SetSection(_section_name, _reverse);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(791)
inline long IRobotBar::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(792)
inline void IRobotBar::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(793)
inline VARIANT_BOOL IRobotBar::GetTrussBar ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TrussBar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(794)
inline void IRobotBar::PutTrussBar ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_TrussBar(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(795)
inline IRobotCollectionPtr IRobotBar::GetElements ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Elements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(796)
inline VARIANT_BOOL IRobotBar::GetIsSuperBar ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSuperBar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(797)
inline IRobotSelectionPtr IRobotBar::GetSimpleBars ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_GetSimpleBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(798)
inline VARIANT_BOOL IRobotBar::GetReversedOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReversedOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(799)
inline void IRobotBar::PutReversedOffset ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ReversedOffset(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(800)
inline HRESULT IRobotBar::SetOffset ( _bstr_t _offset_name, VARIANT_BOOL _reverse ) {
    HRESULT _hr = raw_SetOffset(_offset_name, _reverse);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(801)
inline HRESULT IRobotBar::ChangeOrientation ( ) {
    HRESULT _hr = raw_ChangeOrientation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(802)
inline HRESULT IRobotBar::SetOrientation ( enum IRobotGeoCoordinateAxisSense _dir ) {
    HRESULT _hr = raw_SetOrientation(_dir);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(803)
inline VARIANT_BOOL IRobotBar::GetInactiveBar ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InactiveBar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(804)
inline void IRobotBar::PutInactiveBar ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_InactiveBar(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(805)
inline HRESULT IRobotBar::GetLocalMtx ( double * _m00, double * _m01, double * _m02, double * _m10, double * _m11, double * _m12, double * _m20, double * _m21, double * _m22 ) {
    HRESULT _hr = raw_GetLocalMtx(_m00, _m01, _m02, _m10, _m11, _m12, _m20, _m21, _m22);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(806)
inline double IRobotBar::CalcGamma ( double _local_Z_x, double _local_Z_y, double _local_Z_z ) {
    double _result = 0;
    HRESULT _hr = raw_CalcGamma(_local_Z_x, _local_Z_y, _local_Z_z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(807)
inline _bstr_t IRobotBar::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(808)
inline _bstr_t IRobotBar::GetNameTemplate ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NameTemplate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(809)
inline void IRobotBar::PutNameTemplate ( _bstr_t ret ) {
    HRESULT _hr = put_NameTemplate(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(810)
inline HRESULT IRobotBar::GetElemsData ( struct IRobotBarElementDataSet * _ret_data ) {
    HRESULT _hr = raw_GetElemsData(_ret_data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(811)
inline enum IRobotObjectStructuralType IRobotBar::GetStructuralType ( ) {
    enum IRobotObjectStructuralType _result;
    HRESULT _hr = get_StructuralType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(812)
inline void IRobotBar::PutStructuralType ( enum IRobotObjectStructuralType ret ) {
    HRESULT _hr = put_StructuralType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(813)
inline VARIANT_BOOL IRobotBar::GetReversedRelease ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReversedRelease(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(814)
inline void IRobotBar::PutReversedRelease ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ReversedRelease(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(815)
inline VARIANT_BOOL IRobotBar::GetAnalyzeTTMethod ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AnalyzeTTMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(816)
inline void IRobotBar::PutAnalyzeTTMethod ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AnalyzeTTMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(817)
inline HRESULT IRobotBar::GetLCS ( struct IRobotGeoPoint3D * _x, struct IRobotGeoPoint3D * _y, struct IRobotGeoPoint3D * _z ) {
    HRESULT _hr = raw_GetLCS(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotGeoPoint2D wrapper method implementations
//

#pragma implementation_key(818)
inline double IRobotGeoPoint2D::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(819)
inline void IRobotGeoPoint2D::PutX ( double ret ) {
    HRESULT _hr = put_X(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(820)
inline double IRobotGeoPoint2D::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(821)
inline void IRobotGeoPoint2D::PutY ( double ret ) {
    HRESULT _hr = put_Y(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(822)
inline HRESULT IRobotGeoPoint2D::Get ( double * _x, double * _y ) {
    HRESULT _hr = raw_Get(_x, _y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(823)
inline HRESULT IRobotGeoPoint2D::Set ( double _x, double _y ) {
    HRESULT _hr = raw_Set(_x, _y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotNonlinearHingeModelPoints wrapper method implementations
//

#pragma implementation_key(824)
inline long IRobotNonlinearHingeModelPoints::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(825)
inline IRobotGeoPoint2DPtr IRobotNonlinearHingeModelPoints::Get ( long _idx ) {
    struct IRobotGeoPoint2D * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint2DPtr(_result, false);
}

#pragma implementation_key(826)
inline HRESULT IRobotNonlinearHingeModelPoints::Set ( long _idx, struct IRobotGeoPoint2D * _point ) {
    HRESULT _hr = raw_Set(_idx, _point);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotNonlinearHingeModelAxisParams wrapper method implementations
//

#pragma implementation_key(827)
inline double IRobotNonlinearHingeModelAxisParams::GetImmediateOccupancy ( ) {
    double _result = 0;
    HRESULT _hr = get_ImmediateOccupancy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(828)
inline void IRobotNonlinearHingeModelAxisParams::PutImmediateOccupancy ( double ret ) {
    HRESULT _hr = put_ImmediateOccupancy(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(829)
inline double IRobotNonlinearHingeModelAxisParams::GetLifeSafety ( ) {
    double _result = 0;
    HRESULT _hr = get_LifeSafety(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(830)
inline void IRobotNonlinearHingeModelAxisParams::PutLifeSafety ( double ret ) {
    HRESULT _hr = put_LifeSafety(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(831)
inline double IRobotNonlinearHingeModelAxisParams::GetStructuralStability ( ) {
    double _result = 0;
    HRESULT _hr = get_StructuralStability(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(832)
inline void IRobotNonlinearHingeModelAxisParams::PutStructuralStability ( double ret ) {
    HRESULT _hr = put_StructuralStability(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearHingeModel wrapper method implementations
//

#pragma implementation_key(833)
inline _bstr_t IRobotNonlinearHingeModel::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(834)
inline void IRobotNonlinearHingeModel::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(835)
inline enum IRobotNonlinearHingeModelType IRobotNonlinearHingeModel::GetModelType ( ) {
    enum IRobotNonlinearHingeModelType _result;
    HRESULT _hr = get_ModelType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(836)
inline void IRobotNonlinearHingeModel::PutModelType ( enum IRobotNonlinearHingeModelType ret ) {
    HRESULT _hr = put_ModelType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(837)
inline VARIANT_BOOL IRobotNonlinearHingeModel::GetSymetry ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Symetry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(838)
inline VARIANT_BOOL IRobotNonlinearHingeModel::GetLimitCoordX ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LimitCoordX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(839)
inline void IRobotNonlinearHingeModel::PutLimitCoordX ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_LimitCoordX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(840)
inline VARIANT_BOOL IRobotNonlinearHingeModel::GetLimitCoordY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LimitCoordY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(841)
inline void IRobotNonlinearHingeModel::PutLimitCoordY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_LimitCoordY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(842)
inline double IRobotNonlinearHingeModel::GetLimitCoordXValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LimitCoordXValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(843)
inline void IRobotNonlinearHingeModel::PutLimitCoordXValue ( double ret ) {
    HRESULT _hr = put_LimitCoordXValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(844)
inline double IRobotNonlinearHingeModel::GetLimitCoordYValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LimitCoordYValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(845)
inline void IRobotNonlinearHingeModel::PutLimitCoordYValue ( double ret ) {
    HRESULT _hr = put_LimitCoordYValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(846)
inline enum IRobotNonlinearHingeModelUnloadingType IRobotNonlinearHingeModel::GetUnloadingMethod ( ) {
    enum IRobotNonlinearHingeModelUnloadingType _result;
    HRESULT _hr = get_UnloadingMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(847)
inline void IRobotNonlinearHingeModel::PutUnloadingMethod ( enum IRobotNonlinearHingeModelUnloadingType ret ) {
    HRESULT _hr = put_UnloadingMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(848)
inline double IRobotNonlinearHingeModel::GetMixedUnloadingValue ( ) {
    double _result = 0;
    HRESULT _hr = get_MixedUnloadingValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(849)
inline void IRobotNonlinearHingeModel::PutMixedUnloadingValue ( double ret ) {
    HRESULT _hr = put_MixedUnloadingValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(850)
inline IRobotNonlinearHingeModelPointsPtr IRobotNonlinearHingeModel::GetPoints ( enum IRobotNonlinearLinkSemiAxisType _axis ) {
    struct IRobotNonlinearHingeModelPoints * _result = 0;
    HRESULT _hr = raw_GetPoints(_axis, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearHingeModelPointsPtr(_result, false);
}

#pragma implementation_key(851)
inline HRESULT IRobotNonlinearHingeModel::SetPoints ( enum IRobotNonlinearLinkSemiAxisType _axis, struct IRobotNonlinearHingeModelPoints * _points ) {
    HRESULT _hr = raw_SetPoints(_axis, _points);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(852)
inline IRobotNonlinearHingeModelAxisParamsPtr IRobotNonlinearHingeModel::GetAxisParams ( enum IRobotNonlinearLinkSemiAxisType _axis ) {
    struct IRobotNonlinearHingeModelAxisParams * _result = 0;
    HRESULT _hr = raw_GetAxisParams(_axis, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearHingeModelAxisParamsPtr(_result, false);
}

#pragma implementation_key(853)
inline HRESULT IRobotNonlinearHingeModel::SetAxisParams ( enum IRobotNonlinearLinkSemiAxisType _axis, struct IRobotNonlinearHingeModelAxisParams * _params ) {
    HRESULT _hr = raw_SetAxisParams(_axis, _params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotNonlinearHingeModelServer wrapper method implementations
//

#pragma implementation_key(854)
inline long IRobotNonlinearHingeModelServer::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(855)
inline IRobotNonlinearHingeModelPtr IRobotNonlinearHingeModelServer::Get ( long _idx ) {
    struct IRobotNonlinearHingeModel * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearHingeModelPtr(_result, false);
}

#pragma implementation_key(856)
inline IRobotNonlinearHingeModelPtr IRobotNonlinearHingeModelServer::Create ( _bstr_t _name ) {
    struct IRobotNonlinearHingeModel * _result = 0;
    HRESULT _hr = raw_Create(_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearHingeModelPtr(_result, false);
}

#pragma implementation_key(857)
inline long IRobotNonlinearHingeModelServer::Find ( _bstr_t _name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(858)
inline HRESULT IRobotNonlinearHingeModelServer::Delete ( long _idx ) {
    HRESULT _hr = raw_Delete(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotNonlinearHingeDef wrapper method implementations
//

#pragma implementation_key(859)
inline _bstr_t IRobotNonlinearHingeDef::GetLabelName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LabelName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(860)
inline void IRobotNonlinearHingeDef::PutLabelName ( _bstr_t ret ) {
    HRESULT _hr = put_LabelName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(861)
inline long IRobotNonlinearHingeDef::GetOffset ( ) {
    long _result = 0;
    HRESULT _hr = get_Offset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(862)
inline void IRobotNonlinearHingeDef::PutOffset ( long ret ) {
    HRESULT _hr = put_Offset(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(863)
inline VARIANT_BOOL IRobotNonlinearHingeDef::GetRelative ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Relative(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(864)
inline void IRobotNonlinearHingeDef::PutRelative ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Relative(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(865)
inline long IRobotNonlinearHingeDef::GetBar ( ) {
    long _result = 0;
    HRESULT _hr = get_Bar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(866)
inline void IRobotNonlinearHingeDef::PutBar ( long ret ) {
    HRESULT _hr = put_Bar(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearHingeServer wrapper method implementations
//

#pragma implementation_key(867)
inline long IRobotNonlinearHingeServer::Count ( long _bar_number ) {
    long _result = 0;
    HRESULT _hr = raw_Count(_bar_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(868)
inline IRobotNonlinearHingeDefPtr IRobotNonlinearHingeServer::Get ( long _hinge_idx, long _bar_number ) {
    struct IRobotNonlinearHingeDef * _result = 0;
    HRESULT _hr = raw_Get(_hinge_idx, _bar_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearHingeDefPtr(_result, false);
}

#pragma implementation_key(869)
inline long IRobotNonlinearHingeServer::Set ( long _bar_number, _bstr_t _label, double _offset, VARIANT_BOOL _relative ) {
    long _result = 0;
    HRESULT _hr = raw_Set(_bar_number, _label, _offset, _relative, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(870)
inline HRESULT IRobotNonlinearHingeServer::Remove ( long _hinge_idx, long _bar_number ) {
    HRESULT _hr = raw_Remove(_hinge_idx, _bar_number);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotBarServer wrapper method implementations
//

#pragma implementation_key(871)
inline HRESULT IRobotBarServer::Create ( long num, long start_node, long end_node ) {
    HRESULT _hr = raw_Create(num, start_node, end_node);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(872)
inline long IRobotBarServer::GetFreeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_FreeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(873)
inline long IRobotBarServer::FindWithId ( long unique_id ) {
    long _result = 0;
    HRESULT _hr = raw_FindWithId(unique_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(874)
inline HRESULT IRobotBarServer::SetTensionCompression ( struct IRobotSelection * _bar_sel, enum IRobotBarTensionCompression _tc ) {
    HRESULT _hr = raw_SetTensionCompression(_bar_sel, _tc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(875)
inline HRESULT IRobotBarServer::SetShearForces ( struct IRobotSelection * _bar_sel, VARIANT_BOOL _set ) {
    HRESULT _hr = raw_SetShearForces(_bar_sel, _set);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(876)
inline HRESULT IRobotBarServer::CreateSuperBar ( long _number, _bstr_t _simple_bars ) {
    HRESULT _hr = raw_CreateSuperBar(_number, _simple_bars);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(877)
inline IRobotNonlinearHingeModelServerPtr IRobotBarServer::GetNonlinearHingeModels ( ) {
    struct IRobotNonlinearHingeModelServer * _result = 0;
    HRESULT _hr = get_NonlinearHingeModels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearHingeModelServerPtr(_result, false);
}

#pragma implementation_key(878)
inline IRobotNonlinearHingeServerPtr IRobotBarServer::GetNonlinearHinges ( ) {
    struct IRobotNonlinearHingeServer * _result = 0;
    HRESULT _hr = get_NonlinearHinges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearHingeServerPtr(_result, false);
}

#pragma implementation_key(879)
inline HRESULT IRobotBarServer::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(880)
inline HRESULT IRobotBarServer::ChangeOrientation ( _bstr_t _bars ) {
    HRESULT _hr = raw_ChangeOrientation(_bars);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(881)
inline HRESULT IRobotBarServer::SetOrientation ( _bstr_t _bars, enum IRobotGeoCoordinateAxisSense _dir ) {
    HRESULT _hr = raw_SetOrientation(_bars, _dir);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(882)
inline VARIANT_BOOL IRobotBarServer::IsInactive ( long _bar_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsInactive(_bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(883)
inline HRESULT IRobotBarServer::SetInactive ( _bstr_t _bars, VARIANT_BOOL _inactive ) {
    HRESULT _hr = raw_SetInactive(_bars, _inactive);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(884)
inline HRESULT IRobotBarServer::GetLocalMtx ( long _bar_num, double * _m00, double * _m01, double * _m02, double * _m10, double * _m11, double * _m12, double * _m20, double * _m21, double * _m22 ) {
    HRESULT _hr = raw_GetLocalMtx(_bar_num, _m00, _m01, _m02, _m10, _m11, _m12, _m20, _m21, _m22);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(885)
inline double IRobotBarServer::CalcGamma ( long _bar_num, double _local_Z_x, double _local_Z_y, double _local_Z_z ) {
    double _result = 0;
    HRESULT _hr = raw_CalcGamma(_bar_num, _local_Z_x, _local_Z_y, _local_Z_z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(886)
inline HRESULT IRobotBarServer::SetTrussBar ( _bstr_t _bars, VARIANT_BOOL _truss_bar ) {
    HRESULT _hr = raw_SetTrussBar(_bars, _truss_bar);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(887)
inline VARIANT_BOOL IRobotBarServer::IsTrussBar ( long _bar_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsTrussBar(_bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(888)
inline _bstr_t IRobotBarServer::GetName ( long _bar_num ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(889)
inline _bstr_t IRobotBarServer::GetNameTemplate ( long _bar_num ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetNameTemplate(_bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(890)
inline HRESULT IRobotBarServer::SetNameTemplate ( long _bar_num, _bstr_t _name_tmpl ) {
    HRESULT _hr = raw_SetNameTemplate(_bar_num, _name_tmpl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(891)
inline long IRobotBarServer::GetUniqueId ( long _bar_num ) {
    long _result = 0;
    HRESULT _hr = raw_GetUniqueId(_bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(892)
inline HRESULT IRobotBarServer::GetElemsData ( _bstr_t _bar_sel_txt, struct IRobotBarElementDataSet * _ret_data ) {
    HRESULT _hr = raw_GetElemsData(_bar_sel_txt, _ret_data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(893)
inline enum IRobotObjectStructuralType IRobotBarServer::GetStructuralType ( long _bar ) {
    enum IRobotObjectStructuralType _result;
    HRESULT _hr = raw_GetStructuralType(_bar, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(894)
inline HRESULT IRobotBarServer::SetStructuralType ( _bstr_t _bar_sel, enum IRobotObjectStructuralType _str_type ) {
    HRESULT _hr = raw_SetStructuralType(_bar_sel, _str_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(895)
inline HRESULT IRobotBarServer::SetAnalyzeTTMethod ( _bstr_t _bars, VARIANT_BOOL _analyze ) {
    HRESULT _hr = raw_SetAnalyzeTTMethod(_bars, _analyze);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(896)
inline IRobotSelectionPtr IRobotBarServer::GetAnalyzeTTMethodEnabled ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_GetAnalyzeTTMethodEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(897)
inline HRESULT IRobotBarServer::GetLCS ( long _bar_num, struct IRobotGeoPoint3D * _x, struct IRobotGeoPoint3D * _y, struct IRobotGeoPoint3D * _z ) {
    HRESULT _hr = raw_GetLCS(_bar_num, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(898)
inline HRESULT IRobotBarServer::BeginMultiOperation ( ) {
    HRESULT _hr = raw_BeginMultiOperation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(899)
inline HRESULT IRobotBarServer::EndMultiOperation ( ) {
    HRESULT _hr = raw_EndMultiOperation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(900)
inline HRESULT IRobotBarServer::SetLabelExt ( struct IRobotSelection * _bars, enum IRobotLabelType _lab_type, _bstr_t _lab_name, long _ext_param ) {
    HRESULT _hr = raw_SetLabelExt(_bars, _lab_type, _lab_name, _ext_param);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotBarEndReleaseData wrapper method implementations
//

#pragma implementation_key(901)
inline enum IRobotBarEndReleaseValue IRobotBarEndReleaseData::GetUX ( ) {
    enum IRobotBarEndReleaseValue _result;
    HRESULT _hr = get_UX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(902)
inline void IRobotBarEndReleaseData::PutUX ( enum IRobotBarEndReleaseValue ret ) {
    HRESULT _hr = put_UX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(903)
inline enum IRobotBarEndReleaseValue IRobotBarEndReleaseData::GetUY ( ) {
    enum IRobotBarEndReleaseValue _result;
    HRESULT _hr = get_UY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(904)
inline void IRobotBarEndReleaseData::PutUY ( enum IRobotBarEndReleaseValue ret ) {
    HRESULT _hr = put_UY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(905)
inline enum IRobotBarEndReleaseValue IRobotBarEndReleaseData::GetUZ ( ) {
    enum IRobotBarEndReleaseValue _result;
    HRESULT _hr = get_UZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(906)
inline void IRobotBarEndReleaseData::PutUZ ( enum IRobotBarEndReleaseValue ret ) {
    HRESULT _hr = put_UZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(907)
inline enum IRobotBarEndReleaseValue IRobotBarEndReleaseData::GetRX ( ) {
    enum IRobotBarEndReleaseValue _result;
    HRESULT _hr = get_RX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(908)
inline void IRobotBarEndReleaseData::PutRX ( enum IRobotBarEndReleaseValue ret ) {
    HRESULT _hr = put_RX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(909)
inline enum IRobotBarEndReleaseValue IRobotBarEndReleaseData::GetRY ( ) {
    enum IRobotBarEndReleaseValue _result;
    HRESULT _hr = get_RY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(910)
inline void IRobotBarEndReleaseData::PutRY ( enum IRobotBarEndReleaseValue ret ) {
    HRESULT _hr = put_RY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(911)
inline enum IRobotBarEndReleaseValue IRobotBarEndReleaseData::GetRZ ( ) {
    enum IRobotBarEndReleaseValue _result;
    HRESULT _hr = get_RZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(912)
inline void IRobotBarEndReleaseData::PutRZ ( enum IRobotBarEndReleaseValue ret ) {
    HRESULT _hr = put_RZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(913)
inline double IRobotBarEndReleaseData::GetKX ( ) {
    double _result = 0;
    HRESULT _hr = get_KX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(914)
inline void IRobotBarEndReleaseData::PutKX ( double ret ) {
    HRESULT _hr = put_KX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(915)
inline double IRobotBarEndReleaseData::GetKY ( ) {
    double _result = 0;
    HRESULT _hr = get_KY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(916)
inline void IRobotBarEndReleaseData::PutKY ( double ret ) {
    HRESULT _hr = put_KY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(917)
inline double IRobotBarEndReleaseData::GetKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_KZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(918)
inline void IRobotBarEndReleaseData::PutKZ ( double ret ) {
    HRESULT _hr = put_KZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(919)
inline double IRobotBarEndReleaseData::GetHX ( ) {
    double _result = 0;
    HRESULT _hr = get_HX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(920)
inline void IRobotBarEndReleaseData::PutHX ( double ret ) {
    HRESULT _hr = put_HX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(921)
inline double IRobotBarEndReleaseData::GetHY ( ) {
    double _result = 0;
    HRESULT _hr = get_HY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(922)
inline void IRobotBarEndReleaseData::PutHY ( double ret ) {
    HRESULT _hr = put_HY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(923)
inline double IRobotBarEndReleaseData::GetHZ ( ) {
    double _result = 0;
    HRESULT _hr = get_HZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(924)
inline void IRobotBarEndReleaseData::PutHZ ( double ret ) {
    HRESULT _hr = put_HZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(925)
inline double IRobotBarEndReleaseData::GetAX ( ) {
    double _result = 0;
    HRESULT _hr = get_AX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(926)
inline void IRobotBarEndReleaseData::PutAX ( double ret ) {
    HRESULT _hr = put_AX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(927)
inline double IRobotBarEndReleaseData::GetAY ( ) {
    double _result = 0;
    HRESULT _hr = get_AY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(928)
inline void IRobotBarEndReleaseData::PutAY ( double ret ) {
    HRESULT _hr = put_AY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(929)
inline double IRobotBarEndReleaseData::GetAZ ( ) {
    double _result = 0;
    HRESULT _hr = get_AZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(930)
inline void IRobotBarEndReleaseData::PutAZ ( double ret ) {
    HRESULT _hr = put_AZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(931)
inline double IRobotBarEndReleaseData::GetBX ( ) {
    double _result = 0;
    HRESULT _hr = get_BX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(932)
inline void IRobotBarEndReleaseData::PutBX ( double ret ) {
    HRESULT _hr = put_BX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(933)
inline double IRobotBarEndReleaseData::GetBY ( ) {
    double _result = 0;
    HRESULT _hr = get_BY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(934)
inline void IRobotBarEndReleaseData::PutBY ( double ret ) {
    HRESULT _hr = put_BY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(935)
inline double IRobotBarEndReleaseData::GetBZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(936)
inline void IRobotBarEndReleaseData::PutBZ ( double ret ) {
    HRESULT _hr = put_BZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(937)
inline IRobotNonlinearLinkMngrPtr IRobotBarEndReleaseData::GetNonlinearModel ( ) {
    struct IRobotNonlinearLinkMngr * _result = 0;
    HRESULT _hr = get_NonlinearModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearLinkMngrPtr(_result, false);
}

//
// interface IRobotBarReleaseData wrapper method implementations
//

#pragma implementation_key(938)
inline IRobotBarEndReleaseDataPtr IRobotBarReleaseData::GetStartNode ( ) {
    struct IRobotBarEndReleaseData * _result = 0;
    HRESULT _hr = get_StartNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarEndReleaseDataPtr(_result, false);
}

#pragma implementation_key(939)
inline void IRobotBarReleaseData::PutStartNode ( struct IRobotBarEndReleaseData * ret ) {
    HRESULT _hr = put_StartNode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(940)
inline IRobotBarEndReleaseDataPtr IRobotBarReleaseData::GetEndNode ( ) {
    struct IRobotBarEndReleaseData * _result = 0;
    HRESULT _hr = get_EndNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarEndReleaseDataPtr(_result, false);
}

#pragma implementation_key(941)
inline void IRobotBarReleaseData::PutEndNode ( struct IRobotBarEndReleaseData * ret ) {
    HRESULT _hr = put_EndNode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotMaterialData wrapper method implementations
//

#pragma implementation_key(942)
inline _bstr_t IRobotMaterialData::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(943)
inline void IRobotMaterialData::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(944)
inline _bstr_t IRobotMaterialData::GetNuance ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Nuance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(945)
inline void IRobotMaterialData::PutNuance ( _bstr_t ret ) {
    HRESULT _hr = put_Nuance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(946)
inline enum IRobotMaterialType IRobotMaterialData::GetType ( ) {
    enum IRobotMaterialType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(947)
inline void IRobotMaterialData::PutType ( enum IRobotMaterialType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(948)
inline long IRobotMaterialData::GetSteel_Thermal ( ) {
    long _result = 0;
    HRESULT _hr = get_Steel_Thermal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(949)
inline void IRobotMaterialData::PutSteel_Thermal ( long ret ) {
    HRESULT _hr = put_Steel_Thermal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(950)
inline enum IRobotMaterialTimberType IRobotMaterialData::GetTimber_Type ( ) {
    enum IRobotMaterialTimberType _result;
    HRESULT _hr = get_Timber_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(951)
inline void IRobotMaterialData::PutTimber_Type ( enum IRobotMaterialTimberType ret ) {
    HRESULT _hr = put_Timber_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(952)
inline long IRobotMaterialData::GetDefault ( ) {
    long _result = 0;
    HRESULT _hr = get_Default(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(953)
inline void IRobotMaterialData::PutDefault ( long ret ) {
    HRESULT _hr = put_Default(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(954)
inline _bstr_t IRobotMaterialData::GetSecondName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(955)
inline void IRobotMaterialData::PutSecondName ( _bstr_t ret ) {
    HRESULT _hr = put_SecondName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(956)
inline int IRobotMaterialData::GetCB71_Category ( ) {
    int _result = 0;
    HRESULT _hr = get_CB71_Category(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(957)
inline void IRobotMaterialData::PutCB71_Category ( int ret ) {
    HRESULT _hr = put_CB71_Category(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(958)
inline int IRobotMaterialData::GetCB71_Nature ( ) {
    int _result = 0;
    HRESULT _hr = get_CB71_Nature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(959)
inline void IRobotMaterialData::PutCB71_Nature ( int ret ) {
    HRESULT _hr = put_CB71_Nature(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(960)
inline double IRobotMaterialData::GetE ( ) {
    double _result = 0;
    HRESULT _hr = get_E(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(961)
inline void IRobotMaterialData::PutE ( double ret ) {
    HRESULT _hr = put_E(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(962)
inline double IRobotMaterialData::GetNU ( ) {
    double _result = 0;
    HRESULT _hr = get_NU(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(963)
inline void IRobotMaterialData::PutNU ( double ret ) {
    HRESULT _hr = put_NU(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(964)
inline double IRobotMaterialData::GetLX ( ) {
    double _result = 0;
    HRESULT _hr = get_LX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(965)
inline void IRobotMaterialData::PutLX ( double ret ) {
    HRESULT _hr = put_LX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(966)
inline double IRobotMaterialData::GetRO ( ) {
    double _result = 0;
    HRESULT _hr = get_RO(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(967)
inline void IRobotMaterialData::PutRO ( double ret ) {
    HRESULT _hr = put_RO(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(968)
inline double IRobotMaterialData::GetRE ( ) {
    double _result = 0;
    HRESULT _hr = get_RE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(969)
inline void IRobotMaterialData::PutRE ( double ret ) {
    HRESULT _hr = put_RE(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(970)
inline double IRobotMaterialData::GetRE_AxCompr ( ) {
    double _result = 0;
    HRESULT _hr = get_RE_AxCompr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(971)
inline void IRobotMaterialData::PutRE_AxCompr ( double ret ) {
    HRESULT _hr = put_RE_AxCompr(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(972)
inline double IRobotMaterialData::GetCS ( ) {
    double _result = 0;
    HRESULT _hr = get_CS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(973)
inline void IRobotMaterialData::PutCS ( double ret ) {
    HRESULT _hr = put_CS(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(974)
inline double IRobotMaterialData::GetRT ( ) {
    double _result = 0;
    HRESULT _hr = get_RT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(975)
inline void IRobotMaterialData::PutRT ( double ret ) {
    HRESULT _hr = put_RT(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(976)
inline double IRobotMaterialData::GetE_5 ( ) {
    double _result = 0;
    HRESULT _hr = get_E_5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(977)
inline void IRobotMaterialData::PutE_5 ( double ret ) {
    HRESULT _hr = put_E_5(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(978)
inline double IRobotMaterialData::GetE_Trans ( ) {
    double _result = 0;
    HRESULT _hr = get_E_Trans(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(979)
inline void IRobotMaterialData::PutE_Trans ( double ret ) {
    HRESULT _hr = put_E_Trans(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(980)
inline double IRobotMaterialData::GetPN_E_Trans ( ) {
    double _result = 0;
    HRESULT _hr = get_PN_E_Trans(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(981)
inline void IRobotMaterialData::PutPN_E_Trans ( double ret ) {
    HRESULT _hr = put_PN_E_Trans(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(982)
inline double IRobotMaterialData::GetPN_E_Additional ( ) {
    double _result = 0;
    HRESULT _hr = get_PN_E_Additional(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(983)
inline void IRobotMaterialData::PutPN_E_Additional ( double ret ) {
    HRESULT _hr = put_PN_E_Additional(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(984)
inline double IRobotMaterialData::GetRE_Bending ( ) {
    double _result = 0;
    HRESULT _hr = get_RE_Bending(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(985)
inline void IRobotMaterialData::PutRE_Bending ( double ret ) {
    HRESULT _hr = put_RE_Bending(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(986)
inline double IRobotMaterialData::GetRE_AxTens ( ) {
    double _result = 0;
    HRESULT _hr = get_RE_AxTens(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(987)
inline void IRobotMaterialData::PutRE_AxTens ( double ret ) {
    HRESULT _hr = put_RE_AxTens(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(988)
inline double IRobotMaterialData::GetRE_TrTens ( ) {
    double _result = 0;
    HRESULT _hr = get_RE_TrTens(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(989)
inline void IRobotMaterialData::PutRE_TrTens ( double ret ) {
    HRESULT _hr = put_RE_TrTens(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(990)
inline double IRobotMaterialData::GetRE_TrCompr ( ) {
    double _result = 0;
    HRESULT _hr = get_RE_TrCompr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(991)
inline void IRobotMaterialData::PutRE_TrCompr ( double ret ) {
    HRESULT _hr = put_RE_TrCompr(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(992)
inline double IRobotMaterialData::GetRE_Shear ( ) {
    double _result = 0;
    HRESULT _hr = get_RE_Shear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(993)
inline void IRobotMaterialData::PutRE_Shear ( double ret ) {
    HRESULT _hr = put_RE_Shear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(994)
inline double IRobotMaterialData::GetDumpCoef ( ) {
    double _result = 0;
    HRESULT _hr = get_DumpCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(995)
inline void IRobotMaterialData::PutDumpCoef ( double ret ) {
    HRESULT _hr = put_DumpCoef(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(996)
inline double IRobotMaterialData::GetCB71_Retreat ( ) {
    double _result = 0;
    HRESULT _hr = get_CB71_Retreat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(997)
inline void IRobotMaterialData::PutCB71_Retreat ( double ret ) {
    HRESULT _hr = put_CB71_Retreat(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(998)
inline double IRobotMaterialData::GetCB71_Humidity ( ) {
    double _result = 0;
    HRESULT _hr = get_CB71_Humidity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(999)
inline void IRobotMaterialData::PutCB71_Humidity ( double ret ) {
    HRESULT _hr = put_CB71_Humidity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1000)
inline double IRobotMaterialData::GetEC_Deformation ( ) {
    double _result = 0;
    HRESULT _hr = get_EC_Deformation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1001)
inline void IRobotMaterialData::PutEC_Deformation ( double ret ) {
    HRESULT _hr = put_EC_Deformation(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1002)
inline double IRobotMaterialData::GetPN_Deformation ( ) {
    double _result = 0;
    HRESULT _hr = get_PN_Deformation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1003)
inline void IRobotMaterialData::PutPN_Deformation ( double ret ) {
    HRESULT _hr = put_PN_Deformation(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1004)
inline double IRobotMaterialData::GetGMean ( ) {
    double _result = 0;
    HRESULT _hr = get_GMean(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1005)
inline void IRobotMaterialData::PutGMean ( double ret ) {
    HRESULT _hr = put_GMean(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1006)
inline double IRobotMaterialData::GetKirchoff ( ) {
    double _result = 0;
    HRESULT _hr = get_Kirchoff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1007)
inline void IRobotMaterialData::PutKirchoff ( double ret ) {
    HRESULT _hr = put_Kirchoff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1008)
inline long IRobotMaterialData::LoadFromDBase ( _bstr_t mater_name ) {
    long _result = 0;
    HRESULT _hr = raw_LoadFromDBase(mater_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1009)
inline HRESULT IRobotMaterialData::SaveToDBase ( ) {
    HRESULT _hr = raw_SaveToDBase();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotBarSectionNonstdData wrapper method implementations
//

#pragma implementation_key(1010)
inline double IRobotBarSectionNonstdData::GetPosition ( ) {
    double _result = 0;
    HRESULT _hr = get_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1011)
inline HRESULT IRobotBarSectionNonstdData::SetValue ( enum IRobotBarSectionNonstdDataValue _attribute, double _value ) {
    HRESULT _hr = raw_SetValue(_attribute, _value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1012)
inline double IRobotBarSectionNonstdData::GetValue ( enum IRobotBarSectionNonstdDataValue _attribute ) {
    double _result = 0;
    HRESULT _hr = raw_GetValue(_attribute, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarSectionConcreteData wrapper method implementations
//

#pragma implementation_key(1013)
inline VARIANT_BOOL IRobotBarSectionConcreteData::GetIsColumn ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1014)
inline VARIANT_BOOL IRobotBarSectionConcreteData::GetIsBeam ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1015)
inline enum IRobotBarSectionConcreteCutsPosition IRobotBarSectionConcreteData::GetBeamCutsPosition ( ) {
    enum IRobotBarSectionConcreteCutsPosition _result;
    HRESULT _hr = get_BeamCutsPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1016)
inline void IRobotBarSectionConcreteData::PutBeamCutsPosition ( enum IRobotBarSectionConcreteCutsPosition ret ) {
    HRESULT _hr = put_BeamCutsPosition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1017)
inline HRESULT IRobotBarSectionConcreteData::SetValue ( enum IRobotBarSectionConcreteDataValue _param, double _val ) {
    HRESULT _hr = raw_SetValue(_param, _val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1018)
inline double IRobotBarSectionConcreteData::GetValue ( enum IRobotBarSectionConcreteDataValue _param ) {
    double _result = 0;
    HRESULT _hr = raw_GetValue(_param, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1019)
inline HRESULT IRobotBarSectionConcreteData::SetTapered ( double _h2 ) {
    HRESULT _hr = raw_SetTapered(_h2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1020)
inline VARIANT_BOOL IRobotBarSectionConcreteData::GetTapered ( double * _h2 ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetTapered(_h2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1021)
inline HRESULT IRobotBarSectionConcreteData::CalcGeometry ( ) {
    HRESULT _hr = raw_CalcGeometry();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1022)
inline HRESULT IRobotBarSectionConcreteData::SetReduction ( VARIANT_BOOL _set, double _Ix_cf, double _Iy_cf, double _Iz_cf ) {
    HRESULT _hr = raw_SetReduction(_set, _Ix_cf, _Iy_cf, _Iz_cf);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1023)
inline VARIANT_BOOL IRobotBarSectionConcreteData::GetReduction ( double * _Ix_cf, double * _Iy_cf, double * _Iz_cf ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetReduction(_Ix_cf, _Iy_cf, _Iz_cf, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotMaterialElasticModel wrapper method implementations
//

#pragma implementation_key(1024)
inline enum IRobotMaterialElasticType IRobotMaterialElasticModel::GetModel ( ) {
    enum IRobotMaterialElasticType _result;
    HRESULT _hr = get_Model(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1025)
inline void IRobotMaterialElasticModel::PutModel ( enum IRobotMaterialElasticType ret ) {
    HRESULT _hr = put_Model(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1026)
inline double IRobotMaterialElasticModel::GetCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1027)
inline void IRobotMaterialElasticModel::PutCoeff ( double ret ) {
    HRESULT _hr = put_Coeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1028)
inline enum IRobotMaterialElasticUnloadingMethod IRobotMaterialElasticModel::GetUnloadingMethod ( ) {
    enum IRobotMaterialElasticUnloadingMethod _result;
    HRESULT _hr = get_UnloadingMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1029)
inline void IRobotMaterialElasticModel::PutUnloadingMethod ( enum IRobotMaterialElasticUnloadingMethod ret ) {
    HRESULT _hr = put_UnloadingMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1030)
inline double IRobotMaterialElasticModel::GetUnloadingCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_UnloadingCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1031)
inline void IRobotMaterialElasticModel::PutUnloadingCoeff ( double ret ) {
    HRESULT _hr = put_UnloadingCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotBarSectionElasticParams wrapper method implementations
//

#pragma implementation_key(1032)
inline VARIANT_BOOL IRobotBarSectionElasticParams::GetActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1033)
inline void IRobotBarSectionElasticParams::PutActive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Active(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1034)
inline IRobotMaterialElasticModelPtr IRobotBarSectionElasticParams::GetMaterialModel ( ) {
    struct IRobotMaterialElasticModel * _result = 0;
    HRESULT _hr = get_MaterialModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMaterialElasticModelPtr(_result, false);
}

#pragma implementation_key(1035)
inline double IRobotBarSectionElasticParams::GetN ( ) {
    double _result = 0;
    HRESULT _hr = get_N(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1036)
inline void IRobotBarSectionElasticParams::PutN ( double ret ) {
    HRESULT _hr = put_N(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1037)
inline double IRobotBarSectionElasticParams::GetN1 ( ) {
    double _result = 0;
    HRESULT _hr = get_N1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1038)
inline void IRobotBarSectionElasticParams::PutN1 ( double ret ) {
    HRESULT _hr = put_N1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1039)
inline double IRobotBarSectionElasticParams::GetN2 ( ) {
    double _result = 0;
    HRESULT _hr = get_N2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1040)
inline void IRobotBarSectionElasticParams::PutN2 ( double ret ) {
    HRESULT _hr = put_N2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1041)
inline double IRobotBarSectionElasticParams::GetL1 ( ) {
    double _result = 0;
    HRESULT _hr = get_L1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1042)
inline void IRobotBarSectionElasticParams::PutL1 ( double ret ) {
    HRESULT _hr = put_L1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1043)
inline double IRobotBarSectionElasticParams::GetL2 ( ) {
    double _result = 0;
    HRESULT _hr = get_L2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1044)
inline void IRobotBarSectionElasticParams::PutL2 ( double ret ) {
    HRESULT _hr = put_L2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotBarSectionComplexData wrapper method implementations
//

#pragma implementation_key(1045)
inline long IRobotBarSectionComplexData::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1046)
inline double IRobotBarSectionComplexData::GetD ( ) {
    double _result = 0;
    HRESULT _hr = get_D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1047)
inline void IRobotBarSectionComplexData::PutD ( double ret ) {
    HRESULT _hr = put_D(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1048)
inline double IRobotBarSectionComplexData::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1049)
inline void IRobotBarSectionComplexData::PutB ( double ret ) {
    HRESULT _hr = put_B(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1050)
inline enum IRobotBarSectionComponentShape IRobotBarSectionComplexData::GetShape ( long _idx ) {
    enum IRobotBarSectionComponentShape _result;
    HRESULT _hr = raw_GetShape(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1051)
inline VARIANT_BOOL IRobotBarSectionComplexData::Get ( enum IRobotBarSectionComponentShape _shape, BSTR * _database_name, BSTR * _section_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Get(_shape, _database_name, _section_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1052)
inline VARIANT_BOOL IRobotBarSectionComplexData::Set ( enum IRobotBarSectionComponentShape _shape, _bstr_t _database_name, _bstr_t _section_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Set(_shape, _database_name, _section_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1053)
inline double IRobotBarSectionComplexData::GetValue ( enum IRobotBarSectionComponentShape _shape, enum IRobotBarSectionDataValue _val_id ) {
    double _result = 0;
    HRESULT _hr = raw_GetValue(_shape, _val_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarSectionSpecialData wrapper method implementations
//

#pragma implementation_key(1054)
inline _bstr_t IRobotBarSectionSpecialData::GetDbName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DbName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1055)
inline void IRobotBarSectionSpecialData::PutDbName ( _bstr_t ret ) {
    HRESULT _hr = put_DbName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1056)
inline _bstr_t IRobotBarSectionSpecialData::GetSection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1057)
inline void IRobotBarSectionSpecialData::PutSection ( _bstr_t ret ) {
    HRESULT _hr = put_Section(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1058)
inline _bstr_t IRobotBarSectionSpecialData::GetDbFullName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DbFullName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1059)
inline void IRobotBarSectionSpecialData::PutDbFullName ( _bstr_t ret ) {
    HRESULT _hr = put_DbFullName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1060)
inline HRESULT IRobotBarSectionSpecialData::SetValue ( enum IRobotBarSectionSpecialDataValue _param_id, double _param_value ) {
    HRESULT _hr = raw_SetValue(_param_id, _param_value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1061)
inline double IRobotBarSectionSpecialData::GetValue ( enum IRobotBarSectionSpecialDataValue _param_id ) {
    double _result = 0;
    HRESULT _hr = raw_GetValue(_param_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarSectionData wrapper method implementations
//

#pragma implementation_key(1062)
inline enum IRobotBarSectionType IRobotBarSectionData::GetType ( ) {
    enum IRobotBarSectionType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1063)
inline void IRobotBarSectionData::PutType ( enum IRobotBarSectionType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1064)
inline enum IRobotBarSectionShapeType IRobotBarSectionData::GetShapeType ( ) {
    enum IRobotBarSectionShapeType _result;
    HRESULT _hr = get_ShapeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1065)
inline void IRobotBarSectionData::PutShapeType ( enum IRobotBarSectionShapeType ret ) {
    HRESULT _hr = put_ShapeType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1066)
inline _bstr_t IRobotBarSectionData::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1067)
inline void IRobotBarSectionData::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1068)
inline long IRobotBarSectionData::GetNonstdCount ( ) {
    long _result = 0;
    HRESULT _hr = get_NonstdCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1069)
inline long IRobotBarSectionData::LoadFromDBase ( _bstr_t section_name ) {
    long _result = 0;
    HRESULT _hr = raw_LoadFromDBase(section_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1070)
inline double IRobotBarSectionData::GetValue ( enum IRobotBarSectionDataValue _attribute ) {
    double _result = 0;
    HRESULT _hr = raw_GetValue(_attribute, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1071)
inline HRESULT IRobotBarSectionData::SetValue ( enum IRobotBarSectionDataValue _attribute, double _value ) {
    HRESULT _hr = raw_SetValue(_attribute, _value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1072)
inline IRobotBarSectionNonstdDataPtr IRobotBarSectionData::CreateNonstd ( double relative_pos ) {
    struct IRobotBarSectionNonstdData * _result = 0;
    HRESULT _hr = raw_CreateNonstd(relative_pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarSectionNonstdDataPtr(_result, false);
}

#pragma implementation_key(1073)
inline IRobotBarSectionNonstdDataPtr IRobotBarSectionData::GetNonstd ( long index ) {
    struct IRobotBarSectionNonstdData * _result = 0;
    HRESULT _hr = raw_GetNonstd(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarSectionNonstdDataPtr(_result, false);
}

#pragma implementation_key(1074)
inline long IRobotBarSectionData::FindNonstd ( double relative_pos ) {
    long _result = 0;
    HRESULT _hr = raw_FindNonstd(relative_pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1075)
inline HRESULT IRobotBarSectionData::RemoveNonstd ( long index ) {
    HRESULT _hr = raw_RemoveNonstd(index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1076)
inline HRESULT IRobotBarSectionData::CalcNonstdGeometry ( ) {
    HRESULT _hr = raw_CalcNonstdGeometry();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1077)
inline VARIANT_BOOL IRobotBarSectionData::GetIsConcrete ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsConcrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1078)
inline IRobotBarSectionConcreteDataPtr IRobotBarSectionData::GetConcrete ( ) {
    struct IRobotBarSectionConcreteData * _result = 0;
    HRESULT _hr = get_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarSectionConcreteDataPtr(_result, false);
}

#pragma implementation_key(1079)
inline _bstr_t IRobotBarSectionData::GetMaterialName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaterialName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1080)
inline void IRobotBarSectionData::PutMaterialName ( _bstr_t ret ) {
    HRESULT _hr = put_MaterialName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1081)
inline IRobotBarSectionElasticParamsPtr IRobotBarSectionData::GetElasticParams ( ) {
    struct IRobotBarSectionElasticParams * _result = 0;
    HRESULT _hr = get_ElasticParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarSectionElasticParamsPtr(_result, false);
}

#pragma implementation_key(1082)
inline IRobotBarSectionComplexDataPtr IRobotBarSectionData::GetMembers ( ) {
    struct IRobotBarSectionComplexData * _result = 0;
    HRESULT _hr = get_Members(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarSectionComplexDataPtr(_result, false);
}

#pragma implementation_key(1083)
inline long IRobotBarSectionData::GetAliasCount ( ) {
    long _result = 0;
    HRESULT _hr = get_AliasCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1084)
inline _bstr_t IRobotBarSectionData::GetAlias ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetAlias(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1085)
inline HRESULT IRobotBarSectionData::DrawSymbol ( long _window_handle, long _left, long _top, long _right, long _bottom ) {
    HRESULT _hr = raw_DrawSymbol(_window_handle, _left, _top, _right, _bottom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1086)
inline VARIANT_BOOL IRobotBarSectionData::LoadFromDBase2 ( _bstr_t _section_name, _bstr_t _dbase_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromDBase2(_section_name, _dbase_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1087)
inline _bstr_t IRobotBarSectionData::GetAliasEx ( long _idx, BSTR * _alias_id ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetAliasEx(_idx, _alias_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1088)
inline VARIANT_BOOL IRobotBarSectionData::FindAlias ( _bstr_t _alias_id, BSTR * _alias ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_FindAlias(_alias_id, _alias, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1089)
inline IRobotBarSectionSpecialDataPtr IRobotBarSectionData::GetSpecial ( ) {
    struct IRobotBarSectionSpecialData * _result = 0;
    HRESULT _hr = get_Special(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarSectionSpecialDataPtr(_result, false);
}

#pragma implementation_key(1090)
inline VARIANT_BOOL IRobotBarSectionData::GetIsSpecial ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSpecial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1091)
inline VARIANT_BOOL IRobotBarSectionData::GetIsJoist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsJoist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarEndBracketData wrapper method implementations
//

#pragma implementation_key(1092)
inline enum IRobotBarEndBracketType IRobotBarEndBracketData::GetType ( ) {
    enum IRobotBarEndBracketType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1093)
inline void IRobotBarEndBracketData::PutType ( enum IRobotBarEndBracketType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1094)
inline HRESULT IRobotBarEndBracketData::SetValue ( enum IRobotBarEndBracketDataValue _param, double _value, long Relative ) {
    HRESULT _hr = raw_SetValue(_param, _value, Relative);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1095)
inline double IRobotBarEndBracketData::GetValue ( enum IRobotBarEndBracketDataValue _param ) {
    double _result = 0;
    HRESULT _hr = raw_GetValue(_param, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1096)
inline long IRobotBarEndBracketData::IsValueRelative ( enum IRobotBarEndBracketDataValue _param ) {
    long _result = 0;
    HRESULT _hr = raw_IsValueRelative(_param, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarOffsetData wrapper method implementations
//

#pragma implementation_key(1097)
inline enum IRobotGeoCoordinateSystem IRobotBarOffsetData::GetCoordinateSystem ( ) {
    enum IRobotGeoCoordinateSystem _result;
    HRESULT _hr = get_CoordinateSystem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1098)
inline void IRobotBarOffsetData::PutCoordinateSystem ( enum IRobotGeoCoordinateSystem ret ) {
    HRESULT _hr = put_CoordinateSystem(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1099)
inline IRobotBarEndOffsetDataPtr IRobotBarOffsetData::GetStart ( ) {
    struct IRobotBarEndOffsetData * _result = 0;
    HRESULT _hr = get_Start(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarEndOffsetDataPtr(_result, false);
}

#pragma implementation_key(1100)
inline IRobotBarEndOffsetDataPtr IRobotBarOffsetData::GetEnd ( ) {
    struct IRobotBarEndOffsetData * _result = 0;
    HRESULT _hr = get_End(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarEndOffsetDataPtr(_result, false);
}

#pragma implementation_key(1101)
inline enum IRobotBarOffsetAutoPosition IRobotBarOffsetData::GetPosition ( ) {
    enum IRobotBarOffsetAutoPosition _result;
    HRESULT _hr = get_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1102)
inline void IRobotBarOffsetData::PutPosition ( enum IRobotBarOffsetAutoPosition ret ) {
    HRESULT _hr = put_Position(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1103)
inline enum IRobotBarOffsetAutoPosition IRobotBarOffsetData::GetAxisOffset ( ) {
    enum IRobotBarOffsetAutoPosition _result;
    HRESULT _hr = get_AxisOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1104)
inline void IRobotBarOffsetData::PutAxisOffset ( enum IRobotBarOffsetAutoPosition ret ) {
    HRESULT _hr = put_AxisOffset(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1105)
inline long IRobotBarOffsetData::GetObjectNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1106)
inline void IRobotBarOffsetData::PutObjectNumber ( long ret ) {
    HRESULT _hr = put_ObjectNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotThicknessData wrapper method implementations
//

#pragma implementation_key(1107)
inline enum IRobotThicknessType IRobotThicknessData::GetThicknessType ( ) {
    enum IRobotThicknessType _result;
    HRESULT _hr = get_ThicknessType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1108)
inline void IRobotThicknessData::PutThicknessType ( enum IRobotThicknessType ret ) {
    HRESULT _hr = put_ThicknessType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1109)
inline double IRobotThicknessData::GetElasticFoundation ( ) {
    double _result = 0;
    HRESULT _hr = get_ElasticFoundation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1110)
inline void IRobotThicknessData::PutElasticFoundation ( double ret ) {
    HRESULT _hr = put_ElasticFoundation(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1111)
inline enum IRobotThicknessUpliftType IRobotThicknessData::GetUplift ( ) {
    enum IRobotThicknessUpliftType _result;
    HRESULT _hr = get_Uplift(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1112)
inline void IRobotThicknessData::PutUplift ( enum IRobotThicknessUpliftType ret ) {
    HRESULT _hr = put_Uplift(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1113)
inline IDispatchPtr IRobotThicknessData::GetData ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1114)
inline _bstr_t IRobotThicknessData::GetMaterialName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaterialName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1115)
inline void IRobotThicknessData::PutMaterialName ( _bstr_t ret ) {
    HRESULT _hr = put_MaterialName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotThicknessHomoData wrapper method implementations
//

#pragma implementation_key(1116)
inline enum IRobotThicknessHomoType IRobotThicknessHomoData::GetType ( ) {
    enum IRobotThicknessHomoType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1117)
inline void IRobotThicknessHomoData::PutType ( enum IRobotThicknessHomoType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1118)
inline double IRobotThicknessHomoData::GetThick1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1119)
inline void IRobotThicknessHomoData::PutThick1 ( double ret ) {
    HRESULT _hr = put_Thick1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1120)
inline double IRobotThicknessHomoData::GetThick2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1121)
inline void IRobotThicknessHomoData::PutThick2 ( double ret ) {
    HRESULT _hr = put_Thick2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1122)
inline double IRobotThicknessHomoData::GetThick3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1123)
inline void IRobotThicknessHomoData::PutThick3 ( double ret ) {
    HRESULT _hr = put_Thick3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1124)
inline double IRobotThicknessHomoData::GetThickConst ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickConst(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1125)
inline void IRobotThicknessHomoData::PutThickConst ( double ret ) {
    HRESULT _hr = put_ThickConst(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1126)
inline HRESULT IRobotThicknessHomoData::SetP1 ( double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetP1(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1127)
inline HRESULT IRobotThicknessHomoData::GetP1 ( double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_GetP1(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1128)
inline HRESULT IRobotThicknessHomoData::SetP2 ( double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetP2(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1129)
inline HRESULT IRobotThicknessHomoData::GetP2 ( double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_GetP2(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1130)
inline HRESULT IRobotThicknessHomoData::SetP3 ( double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetP3(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1131)
inline HRESULT IRobotThicknessHomoData::GetP3 ( double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_GetP3(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1132)
inline HRESULT IRobotThicknessHomoData::SetReduction ( VARIANT_BOOL _set, double _Ig_cf ) {
    HRESULT _hr = raw_SetReduction(_set, _Ig_cf);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1133)
inline VARIANT_BOOL IRobotThicknessHomoData::GetReduction ( double * _Ig_cf ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetReduction(_Ig_cf, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotThicknessMatrix wrapper method implementations
//

#pragma implementation_key(1134)
inline double IRobotThicknessMatrix::GetValue ( enum IRobotThicknessMatrixValue val_id ) {
    double _result = 0;
    HRESULT _hr = raw_GetValue(val_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1135)
inline HRESULT IRobotThicknessMatrix::SetValue ( enum IRobotThicknessMatrixValue val_id, double val ) {
    HRESULT _hr = raw_SetValue(val_id, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotThicknessOrthoData wrapper method implementations
//

#pragma implementation_key(1136)
inline enum IRobotThicknessOrthoType IRobotThicknessOrthoData::GetType ( ) {
    enum IRobotThicknessOrthoType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1137)
inline void IRobotThicknessOrthoData::PutType ( enum IRobotThicknessOrthoType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1138)
inline enum IRobotThicknessOrthoDirType IRobotThicknessOrthoData::GetDirType ( ) {
    enum IRobotThicknessOrthoDirType _result;
    HRESULT _hr = get_DirType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1139)
inline void IRobotThicknessOrthoData::PutDirType ( enum IRobotThicknessOrthoDirType ret ) {
    HRESULT _hr = put_DirType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1140)
inline double IRobotThicknessOrthoData::GetH ( ) {
    double _result = 0;
    HRESULT _hr = get_H(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1141)
inline void IRobotThicknessOrthoData::PutH ( double ret ) {
    HRESULT _hr = put_H(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1142)
inline double IRobotThicknessOrthoData::GetHA ( ) {
    double _result = 0;
    HRESULT _hr = get_HA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1143)
inline void IRobotThicknessOrthoData::PutHA ( double ret ) {
    HRESULT _hr = put_HA(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1144)
inline double IRobotThicknessOrthoData::GetHB ( ) {
    double _result = 0;
    HRESULT _hr = get_HB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1145)
inline void IRobotThicknessOrthoData::PutHB ( double ret ) {
    HRESULT _hr = put_HB(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1146)
inline double IRobotThicknessOrthoData::GetH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_H1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1147)
inline void IRobotThicknessOrthoData::PutH1 ( double ret ) {
    HRESULT _hr = put_H1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1148)
inline double IRobotThicknessOrthoData::GetH2 ( ) {
    double _result = 0;
    HRESULT _hr = get_H2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1149)
inline void IRobotThicknessOrthoData::PutH2 ( double ret ) {
    HRESULT _hr = put_H2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1150)
inline double IRobotThicknessOrthoData::GetA ( ) {
    double _result = 0;
    HRESULT _hr = get_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1151)
inline void IRobotThicknessOrthoData::PutA ( double ret ) {
    HRESULT _hr = put_A(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1152)
inline double IRobotThicknessOrthoData::GetA1 ( ) {
    double _result = 0;
    HRESULT _hr = get_A1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1153)
inline void IRobotThicknessOrthoData::PutA1 ( double ret ) {
    HRESULT _hr = put_A1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1154)
inline double IRobotThicknessOrthoData::GetA2 ( ) {
    double _result = 0;
    HRESULT _hr = get_A2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1155)
inline void IRobotThicknessOrthoData::PutA2 ( double ret ) {
    HRESULT _hr = put_A2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1156)
inline double IRobotThicknessOrthoData::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1157)
inline void IRobotThicknessOrthoData::PutB ( double ret ) {
    HRESULT _hr = put_B(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1158)
inline double IRobotThicknessOrthoData::GetB1 ( ) {
    double _result = 0;
    HRESULT _hr = get_B1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1159)
inline void IRobotThicknessOrthoData::PutB1 ( double ret ) {
    HRESULT _hr = put_B1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1160)
inline double IRobotThicknessOrthoData::GetThick1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1161)
inline void IRobotThicknessOrthoData::PutThick1 ( double ret ) {
    HRESULT _hr = put_Thick1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1162)
inline double IRobotThicknessOrthoData::GetThick2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1163)
inline void IRobotThicknessOrthoData::PutThick2 ( double ret ) {
    HRESULT _hr = put_Thick2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1164)
inline double IRobotThicknessOrthoData::GetThick3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1165)
inline void IRobotThicknessOrthoData::PutThick3 ( double ret ) {
    HRESULT _hr = put_Thick3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1166)
inline IRobotThicknessMatrixPtr IRobotThicknessOrthoData::GetMatrix ( ) {
    struct IRobotThicknessMatrix * _result = 0;
    HRESULT _hr = get_Matrix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotThicknessMatrixPtr(_result, false);
}

#pragma implementation_key(1167)
inline double IRobotThicknessOrthoData::GetN1 ( ) {
    double _result = 0;
    HRESULT _hr = get_N1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1168)
inline void IRobotThicknessOrthoData::PutN1 ( double ret ) {
    HRESULT _hr = put_N1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1169)
inline double IRobotThicknessOrthoData::GetN2 ( ) {
    double _result = 0;
    HRESULT _hr = get_N2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1170)
inline void IRobotThicknessOrthoData::PutN2 ( double ret ) {
    HRESULT _hr = put_N2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1171)
inline HRESULT IRobotThicknessOrthoData::SetVector ( double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetVector(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1172)
inline HRESULT IRobotThicknessOrthoData::GetVector ( double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_GetVector(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1173)
inline double IRobotThicknessOrthoData::GetHC ( ) {
    double _result = 0;
    HRESULT _hr = get_HC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1174)
inline void IRobotThicknessOrthoData::PutHC ( double ret ) {
    HRESULT _hr = put_HC(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1175)
inline double IRobotThicknessOrthoData::GetH0 ( ) {
    double _result = 0;
    HRESULT _hr = get_H0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1176)
inline void IRobotThicknessOrthoData::PutH0 ( double ret ) {
    HRESULT _hr = put_H0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1177)
inline VARIANT_BOOL IRobotThicknessOrthoData::GetDisregardBendStiffDirY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisregardBendStiffDirY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1178)
inline void IRobotThicknessOrthoData::PutDisregardBendStiffDirY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DisregardBendStiffDirY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1179)
inline double IRobotThicknessOrthoData::GetT ( ) {
    double _result = 0;
    HRESULT _hr = get_T(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1180)
inline void IRobotThicknessOrthoData::PutT ( double ret ) {
    HRESULT _hr = put_T(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1181)
inline double IRobotThicknessOrthoData::GetES ( ) {
    double _result = 0;
    HRESULT _hr = get_ES(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1182)
inline void IRobotThicknessOrthoData::PutES ( double ret ) {
    HRESULT _hr = put_ES(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1183)
inline double IRobotThicknessOrthoData::GetVS ( ) {
    double _result = 0;
    HRESULT _hr = get_VS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1184)
inline void IRobotThicknessOrthoData::PutVS ( double ret ) {
    HRESULT _hr = put_VS(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotReactionData wrapper method implementations
//

#pragma implementation_key(1185)
inline double IRobotReactionData::GetFX ( ) {
    double _result = 0;
    HRESULT _hr = get_FX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1186)
inline double IRobotReactionData::GetFY ( ) {
    double _result = 0;
    HRESULT _hr = get_FY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1187)
inline double IRobotReactionData::GetFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1188)
inline double IRobotReactionData::GetMX ( ) {
    double _result = 0;
    HRESULT _hr = get_MX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1189)
inline double IRobotReactionData::GetMY ( ) {
    double _result = 0;
    HRESULT _hr = get_MY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1190)
inline double IRobotReactionData::GetMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotReactionServer wrapper method implementations
//

#pragma implementation_key(1191)
inline IRobotReactionDataPtr IRobotReactionServer::Value ( long node_num, long case_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_Value(node_num, case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1192)
inline IRobotReactionDataPtr IRobotReactionServer::Local ( long node_num, long case_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_Local(node_num, case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1193)
inline IRobotReactionDataPtr IRobotReactionServer::DDC ( long node_num, long case_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DDC(node_num, case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1194)
inline IRobotReactionDataPtr IRobotReactionServer::DDCLocal ( long node_num, long case_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DDCLocal(node_num, case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1195)
inline IRobotReactionDataPtr IRobotReactionServer::Sum ( long case_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_Sum(case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1196)
inline IRobotReactionDataPtr IRobotReactionServer::DDCSum ( long case_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DDCSum(case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1197)
inline IRobotReactionDataPtr IRobotReactionServer::SumForce ( long case_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_SumForce(case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1198)
inline IRobotReactionDataPtr IRobotReactionServer::ValueEx ( long node_num, long case_num, long case_cmpnt ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_ValueEx(node_num, case_num, case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1199)
inline IRobotReactionDataPtr IRobotReactionServer::LocalEx ( long node_num, long _case, long case_cmpnt ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_LocalEx(node_num, _case, case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1200)
inline IRobotReactionDataPtr IRobotReactionServer::DDCEx ( long node_num, long _case, long case_cmpnt ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DDCEx(node_num, _case, case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1201)
inline IRobotReactionDataPtr IRobotReactionServer::DDCLocalEx ( long node_num, long _case, long case_cmpnt ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DDCLocalEx(node_num, _case, case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1202)
inline IRobotReactionDataPtr IRobotReactionServer::SumEx ( long _case, long case_cmpnt ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_SumEx(_case, case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1203)
inline IRobotReactionDataPtr IRobotReactionServer::DDCSumEx ( long _case, long case_cmpnt ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DDCSumEx(_case, case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1204)
inline IRobotReactionDataPtr IRobotReactionServer::SumForceEx ( long _case, long case_cmpnt ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_SumForceEx(_case, case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1205)
inline IRobotReactionDataPtr IRobotReactionServer::DynValue ( long node_num, long _case, long mode_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynValue(node_num, _case, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1206)
inline IRobotReactionDataPtr IRobotReactionServer::DynLocal ( long node_num, long _case, long mode_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynLocal(node_num, _case, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1207)
inline IRobotReactionDataPtr IRobotReactionServer::DynDDC ( long node_num, long _case, long mode_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynDDC(node_num, _case, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1208)
inline IRobotReactionDataPtr IRobotReactionServer::DynDDCLocal ( long node_num, long _case, long mode_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynDDCLocal(node_num, _case, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1209)
inline IRobotReactionDataPtr IRobotReactionServer::DynSum ( long _case, long mode_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynSum(_case, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1210)
inline IRobotReactionDataPtr IRobotReactionServer::DynDDCSum ( long _case, long mode_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynDDCSum(_case, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1211)
inline IRobotReactionDataPtr IRobotReactionServer::DynSumForce ( long _case, long mode_num ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynSumForce(_case, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1212)
inline IRobotReactionDataPtr IRobotReactionServer::DynCombValue ( long node_num, long _case, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynCombValue(node_num, _case, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1213)
inline IRobotReactionDataPtr IRobotReactionServer::DynCombLocal ( long node_num, long _case, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynCombLocal(node_num, _case, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1214)
inline IRobotReactionDataPtr IRobotReactionServer::DynCombDDC ( long node_num, long _case, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynCombDDC(node_num, _case, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1215)
inline IRobotReactionDataPtr IRobotReactionServer::DynCombDDCLocal ( long node_num, long _case, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynCombDDCLocal(node_num, _case, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1216)
inline IRobotReactionDataPtr IRobotReactionServer::DynCombSum ( long _case, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynCombSum(_case, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1217)
inline IRobotReactionDataPtr IRobotReactionServer::DynCombDDCSum ( long _case, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynCombDDCSum(_case, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

#pragma implementation_key(1218)
inline IRobotReactionDataPtr IRobotReactionServer::DynCombSumForce ( long _case, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotReactionData * _result = 0;
    HRESULT _hr = raw_DynCombSumForce(_case, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionDataPtr(_result, false);
}

//
// interface IRobotDisplacementData wrapper method implementations
//

#pragma implementation_key(1219)
inline double IRobotDisplacementData::GetUX ( ) {
    double _result = 0;
    HRESULT _hr = get_UX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1220)
inline double IRobotDisplacementData::GetUY ( ) {
    double _result = 0;
    HRESULT _hr = get_UY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1221)
inline double IRobotDisplacementData::GetUZ ( ) {
    double _result = 0;
    HRESULT _hr = get_UZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1222)
inline double IRobotDisplacementData::GetRX ( ) {
    double _result = 0;
    HRESULT _hr = get_RX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1223)
inline double IRobotDisplacementData::GetRY ( ) {
    double _result = 0;
    HRESULT _hr = get_RY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1224)
inline double IRobotDisplacementData::GetRZ ( ) {
    double _result = 0;
    HRESULT _hr = get_RZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNodeDisplacementServer wrapper method implementations
//

#pragma implementation_key(1225)
inline IRobotDisplacementDataPtr IRobotNodeDisplacementServer::Value ( long node_num, long case_num ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_Value(node_num, case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1226)
inline IRobotDisplacementDataPtr IRobotNodeDisplacementServer::ValueEx ( long node_num, long _case, long case_cmpnt ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_ValueEx(node_num, _case, case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1227)
inline IRobotDisplacementDataPtr IRobotNodeDisplacementServer::DynValue ( long node_num, long case_num, long _mode ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_DynValue(node_num, case_num, _mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1228)
inline IRobotDisplacementDataPtr IRobotNodeDisplacementServer::DynCombValue ( long node_num, long case_num, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_DynCombValue(node_num, case_num, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

//
// interface IRobotNodeBucklingServer wrapper method implementations
//

#pragma implementation_key(1229)
inline IRobotDisplacementDataPtr IRobotNodeBucklingServer::EigenVector ( long node_num, long case_num, long mode_num ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_EigenVector(node_num, case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1230)
inline IRobotDisplacementDataPtr IRobotNodeBucklingServer::EigenVectorCmb ( long node_num, long _case, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_EigenVectorCmb(node_num, _case, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

//
// interface IRobotForcesData wrapper method implementations
//

#pragma implementation_key(1231)
inline double IRobotForcesData::GetFX ( ) {
    double _result = 0;
    HRESULT _hr = get_FX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1232)
inline double IRobotForcesData::GetFY ( ) {
    double _result = 0;
    HRESULT _hr = get_FY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1233)
inline double IRobotForcesData::GetFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1234)
inline double IRobotForcesData::GetMX ( ) {
    double _result = 0;
    HRESULT _hr = get_MX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1235)
inline double IRobotForcesData::GetMY ( ) {
    double _result = 0;
    HRESULT _hr = get_MY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1236)
inline double IRobotForcesData::GetMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotPseudostaticForceServer wrapper method implementations
//

#pragma implementation_key(1237)
inline IRobotForcesDataPtr IRobotPseudostaticForceServer::Value ( long node_num, long case_num, long mode_num ) {
    struct IRobotForcesData * _result = 0;
    HRESULT _hr = raw_Value(node_num, case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotForcesDataPtr(_result, false);
}

#pragma implementation_key(1238)
inline IRobotForcesDataPtr IRobotPseudostaticForceServer::CombValue ( long node_num, long case_num, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotForcesData * _result = 0;
    HRESULT _hr = raw_CombValue(node_num, case_num, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotForcesDataPtr(_result, false);
}

//
// interface IRobotNodeResultServer wrapper method implementations
//

#pragma implementation_key(1239)
inline IRobotReactionServerPtr IRobotNodeResultServer::GetReactions ( ) {
    struct IRobotReactionServer * _result = 0;
    HRESULT _hr = get_Reactions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReactionServerPtr(_result, false);
}

#pragma implementation_key(1240)
inline IRobotNodeDisplacementServerPtr IRobotNodeResultServer::GetDisplacements ( ) {
    struct IRobotNodeDisplacementServer * _result = 0;
    HRESULT _hr = get_Displacements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeDisplacementServerPtr(_result, false);
}

#pragma implementation_key(1241)
inline IRobotNodeBucklingServerPtr IRobotNodeResultServer::GetBuckling ( ) {
    struct IRobotNodeBucklingServer * _result = 0;
    HRESULT _hr = get_Buckling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeBucklingServerPtr(_result, false);
}

#pragma implementation_key(1242)
inline IRobotPseudostaticForceServerPtr IRobotNodeResultServer::GetPseudostaticForces ( ) {
    struct IRobotPseudostaticForceServer * _result = 0;
    HRESULT _hr = get_PseudostaticForces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPseudostaticForceServerPtr(_result, false);
}

//
// interface IRobotBarForceData wrapper method implementations
//

#pragma implementation_key(1243)
inline double IRobotBarForceData::GetFX ( ) {
    double _result = 0;
    HRESULT _hr = get_FX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1244)
inline double IRobotBarForceData::GetFY ( ) {
    double _result = 0;
    HRESULT _hr = get_FY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1245)
inline double IRobotBarForceData::GetFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1246)
inline double IRobotBarForceData::GetMX ( ) {
    double _result = 0;
    HRESULT _hr = get_MX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1247)
inline double IRobotBarForceData::GetMY ( ) {
    double _result = 0;
    HRESULT _hr = get_MY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1248)
inline double IRobotBarForceData::GetMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1249)
inline VARIANT_BOOL IRobotBarForceData::GetKYAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_KYAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1250)
inline VARIANT_BOOL IRobotBarForceData::GetKZAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_KZAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1251)
inline double IRobotBarForceData::GetKY ( ) {
    double _result = 0;
    HRESULT _hr = get_KY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1252)
inline double IRobotBarForceData::GetKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_KZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarForceServer wrapper method implementations
//

#pragma implementation_key(1253)
inline IRobotBarForceDataPtr IRobotBarForceServer::Value ( long bar_num, long case_num, double Point ) {
    struct IRobotBarForceData * _result = 0;
    HRESULT _hr = raw_Value(bar_num, case_num, Point, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceDataPtr(_result, false);
}

#pragma implementation_key(1254)
inline IRobotBarForceDataPtr IRobotBarForceServer::ValueByNPoints ( long bar_num, long case_num, int no_points, int Point ) {
    struct IRobotBarForceData * _result = 0;
    HRESULT _hr = raw_ValueByNPoints(bar_num, case_num, no_points, Point, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceDataPtr(_result, false);
}

#pragma implementation_key(1255)
inline IRobotBarForceDataPtr IRobotBarForceServer::ValueEx ( long bar_num, long case_num, long case_cmpnt, double Point ) {
    struct IRobotBarForceData * _result = 0;
    HRESULT _hr = raw_ValueEx(bar_num, case_num, case_cmpnt, Point, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceDataPtr(_result, false);
}

#pragma implementation_key(1256)
inline IRobotBarForceDataPtr IRobotBarForceServer::ValueByNPointsEx ( long bar_num, long case_num, long case_cmpnt, int no_points, int Point ) {
    struct IRobotBarForceData * _result = 0;
    HRESULT _hr = raw_ValueByNPointsEx(bar_num, case_num, case_cmpnt, no_points, Point, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceDataPtr(_result, false);
}

#pragma implementation_key(1257)
inline IRobotBarForceDataPtr IRobotBarForceServer::DynValue ( long bar_num, long case_num, long _mode, double _point ) {
    struct IRobotBarForceData * _result = 0;
    HRESULT _hr = raw_DynValue(bar_num, case_num, _mode, _point, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceDataPtr(_result, false);
}

#pragma implementation_key(1258)
inline IRobotBarForceDataPtr IRobotBarForceServer::DynValueByNPoints ( long bar_num, long case_num, long _mode, int no_points, int _point ) {
    struct IRobotBarForceData * _result = 0;
    HRESULT _hr = raw_DynValueByNPoints(bar_num, case_num, _mode, no_points, _point, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceDataPtr(_result, false);
}

#pragma implementation_key(1259)
inline IRobotBarForceDataPtr IRobotBarForceServer::DynCombValue ( long bar_num, long case_num, enum IRobotModeCombinationType mode_cmb, double _point ) {
    struct IRobotBarForceData * _result = 0;
    HRESULT _hr = raw_DynCombValue(bar_num, case_num, mode_cmb, _point, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceDataPtr(_result, false);
}

#pragma implementation_key(1260)
inline IRobotBarForceDataPtr IRobotBarForceServer::DynCombValueByNPoints ( long bar_num, long case_num, enum IRobotModeCombinationType mode_cmb, int no_points, int _point ) {
    struct IRobotBarForceData * _result = 0;
    HRESULT _hr = raw_DynCombValueByNPoints(bar_num, case_num, mode_cmb, no_points, _point, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceDataPtr(_result, false);
}

//
// interface IRobotBarDeflectionData wrapper method implementations
//

#pragma implementation_key(1261)
inline double IRobotBarDeflectionData::GetUX ( ) {
    double _result = 0;
    HRESULT _hr = get_UX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1262)
inline double IRobotBarDeflectionData::GetUY ( ) {
    double _result = 0;
    HRESULT _hr = get_UY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1263)
inline double IRobotBarDeflectionData::GetUZ ( ) {
    double _result = 0;
    HRESULT _hr = get_UZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1264)
inline double IRobotBarDeflectionData::GetPosUX ( ) {
    double _result = 0;
    HRESULT _hr = get_PosUX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1265)
inline double IRobotBarDeflectionData::GetPosUY ( ) {
    double _result = 0;
    HRESULT _hr = get_PosUY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1266)
inline double IRobotBarDeflectionData::GetPosUZ ( ) {
    double _result = 0;
    HRESULT _hr = get_PosUZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarDeflectionServer wrapper method implementations
//

#pragma implementation_key(1267)
inline IRobotBarDeflectionDataPtr IRobotBarDeflectionServer::Value ( long bar_num, long case_num, double pos ) {
    struct IRobotBarDeflectionData * _result = 0;
    HRESULT _hr = raw_Value(bar_num, case_num, pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionDataPtr(_result, false);
}

#pragma implementation_key(1268)
inline IRobotBarDeflectionDataPtr IRobotBarDeflectionServer::MaxValue ( long bar_num, long case_num ) {
    struct IRobotBarDeflectionData * _result = 0;
    HRESULT _hr = raw_MaxValue(bar_num, case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionDataPtr(_result, false);
}

#pragma implementation_key(1269)
inline IRobotBarDeflectionDataPtr IRobotBarDeflectionServer::DynValue ( long bar_num, long case_num, long mode_num, double pos ) {
    struct IRobotBarDeflectionData * _result = 0;
    HRESULT _hr = raw_DynValue(bar_num, case_num, mode_num, pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionDataPtr(_result, false);
}

#pragma implementation_key(1270)
inline IRobotBarDeflectionDataPtr IRobotBarDeflectionServer::DynCombValue ( long bar_num, long case_num, double pos, enum IRobotModeCombinationType cmb ) {
    struct IRobotBarDeflectionData * _result = 0;
    HRESULT _hr = raw_DynCombValue(bar_num, case_num, pos, cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionDataPtr(_result, false);
}

#pragma implementation_key(1271)
inline IRobotBarDeflectionDataPtr IRobotBarDeflectionServer::DynMaxValue ( long bar_num, long case_num, long mode_num ) {
    struct IRobotBarDeflectionData * _result = 0;
    HRESULT _hr = raw_DynMaxValue(bar_num, case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionDataPtr(_result, false);
}

#pragma implementation_key(1272)
inline IRobotBarDeflectionDataPtr IRobotBarDeflectionServer::DynCombMaxValue ( long bar_num, long case_num, enum IRobotModeCombinationType cmb ) {
    struct IRobotBarDeflectionData * _result = 0;
    HRESULT _hr = raw_DynCombMaxValue(bar_num, case_num, cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionDataPtr(_result, false);
}

#pragma implementation_key(1273)
inline IRobotBarDeflectionDataPtr IRobotBarDeflectionServer::ValueEx ( long bar_num, long case_num, long case_cmpnt, double pos ) {
    struct IRobotBarDeflectionData * _result = 0;
    HRESULT _hr = raw_ValueEx(bar_num, case_num, case_cmpnt, pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionDataPtr(_result, false);
}

#pragma implementation_key(1274)
inline IRobotBarDeflectionDataPtr IRobotBarDeflectionServer::MaxValueEx ( long bar_num, long case_num, long case_cmpnt ) {
    struct IRobotBarDeflectionData * _result = 0;
    HRESULT _hr = raw_MaxValueEx(bar_num, case_num, case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionDataPtr(_result, false);
}

//
// interface IRobotBarStressData wrapper method implementations
//

#pragma implementation_key(1275)
inline double IRobotBarStressData::GetSmax ( ) {
    double _result = 0;
    HRESULT _hr = get_Smax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1276)
inline double IRobotBarStressData::GetSmin ( ) {
    double _result = 0;
    HRESULT _hr = get_Smin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1277)
inline double IRobotBarStressData::GetSmaxMY ( ) {
    double _result = 0;
    HRESULT _hr = get_SmaxMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1278)
inline double IRobotBarStressData::GetSminMY ( ) {
    double _result = 0;
    HRESULT _hr = get_SminMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1279)
inline double IRobotBarStressData::GetSmaxMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SmaxMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1280)
inline double IRobotBarStressData::GetSminMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SminMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1281)
inline double IRobotBarStressData::GetFXSX ( ) {
    double _result = 0;
    HRESULT _hr = get_FXSX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1282)
inline double IRobotBarStressData::GetShearY ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1283)
inline double IRobotBarStressData::GetShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1284)
inline double IRobotBarStressData::GetTorsion ( ) {
    double _result = 0;
    HRESULT _hr = get_Torsion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarStressServer wrapper method implementations
//

#pragma implementation_key(1285)
inline IRobotBarStressDataPtr IRobotBarStressServer::Value ( long bar_num, long case_num, double pos ) {
    struct IRobotBarStressData * _result = 0;
    HRESULT _hr = raw_Value(bar_num, case_num, pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarStressDataPtr(_result, false);
}

#pragma implementation_key(1286)
inline IRobotBarStressDataPtr IRobotBarStressServer::ValueEx ( long bar_num, long case_num, long case_cmpnt, double pos ) {
    struct IRobotBarStressData * _result = 0;
    HRESULT _hr = raw_ValueEx(bar_num, case_num, case_cmpnt, pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarStressDataPtr(_result, false);
}

#pragma implementation_key(1287)
inline IRobotBarStressDataPtr IRobotBarStressServer::DynValue ( long bar_num, long case_num, long mode_num, double pos ) {
    struct IRobotBarStressData * _result = 0;
    HRESULT _hr = raw_DynValue(bar_num, case_num, mode_num, pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarStressDataPtr(_result, false);
}

#pragma implementation_key(1288)
inline IRobotBarStressDataPtr IRobotBarStressServer::DynCombValue ( long bar_num, long case_num, enum IRobotModeCombinationType mode_cmb, double pos ) {
    struct IRobotBarStressData * _result = 0;
    HRESULT _hr = raw_DynCombValue(bar_num, case_num, mode_cmb, pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarStressDataPtr(_result, false);
}

//
// interface IRobotBarBucklingData wrapper method implementations
//

#pragma implementation_key(1289)
inline double IRobotBarBucklingData::GetCriticalCoef ( ) {
    double _result = 0;
    HRESULT _hr = get_CriticalCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1290)
inline double IRobotBarBucklingData::GetCriticalForce ( ) {
    double _result = 0;
    HRESULT _hr = get_CriticalForce(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1291)
inline double IRobotBarBucklingData::GetBuckLengthY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1292)
inline double IRobotBarBucklingData::GetBuckLengthZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1293)
inline double IRobotBarBucklingData::GetSlendY ( ) {
    double _result = 0;
    HRESULT _hr = get_SlendY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1294)
inline double IRobotBarBucklingData::GetSlendZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SlendZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarBucklingServer wrapper method implementations
//

#pragma implementation_key(1295)
inline double IRobotBarBucklingServer::CriticalCoef ( long case_num, long mode_num ) {
    double _result = 0;
    HRESULT _hr = raw_CriticalCoef(case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1296)
inline IRobotBarBucklingDataPtr IRobotBarBucklingServer::EigenValue ( long bar_num, long case_num, long mode_num ) {
    struct IRobotBarBucklingData * _result = 0;
    HRESULT _hr = raw_EigenValue(bar_num, case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarBucklingDataPtr(_result, false);
}

//
// interface IRobotBarDisplacementServer wrapper method implementations
//

#pragma implementation_key(1297)
inline IRobotDisplacementDataPtr IRobotBarDisplacementServer::Value ( long _bar_num, double _pos, long _case_num, long _case_cmpnt ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_Value(_bar_num, _pos, _case_num, _case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1298)
inline IRobotDisplacementDataPtr IRobotBarDisplacementServer::DynValue ( long _bar_num, double _pos, long _case_num, long _mode ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_DynValue(_bar_num, _pos, _case_num, _mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1299)
inline IRobotDisplacementDataPtr IRobotBarDisplacementServer::DynCombValue ( long _bar_num, double _pos, long _case_num, enum IRobotModeCombinationType _mode_cmb ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_DynCombValue(_bar_num, _pos, _case_num, _mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

//
// interface IRobotBarResultServer wrapper method implementations
//

#pragma implementation_key(1300)
inline IRobotBarForceServerPtr IRobotBarResultServer::GetForces ( ) {
    struct IRobotBarForceServer * _result = 0;
    HRESULT _hr = get_Forces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceServerPtr(_result, false);
}

#pragma implementation_key(1301)
inline IRobotBarDeflectionServerPtr IRobotBarResultServer::GetDeflections ( ) {
    struct IRobotBarDeflectionServer * _result = 0;
    HRESULT _hr = get_Deflections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionServerPtr(_result, false);
}

#pragma implementation_key(1302)
inline IRobotBarStressServerPtr IRobotBarResultServer::GetStresses ( ) {
    struct IRobotBarStressServer * _result = 0;
    HRESULT _hr = get_Stresses(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarStressServerPtr(_result, false);
}

#pragma implementation_key(1303)
inline IRobotBarBucklingServerPtr IRobotBarResultServer::GetBuckling ( ) {
    struct IRobotBarBucklingServer * _result = 0;
    HRESULT _hr = get_Buckling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarBucklingServerPtr(_result, false);
}

#pragma implementation_key(1304)
inline IRobotBarDisplacementServerPtr IRobotBarResultServer::GetDisplacements ( ) {
    struct IRobotBarDisplacementServer * _result = 0;
    HRESULT _hr = get_Displacements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDisplacementServerPtr(_result, false);
}

#pragma implementation_key(1305)
inline IRobotBarDeflectionDataPtr IRobotBarResultServer::GeoImperfections ( long _bar ) {
    struct IRobotBarDeflectionData * _result = 0;
    HRESULT _hr = raw_GeoImperfections(_bar, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarDeflectionDataPtr(_result, false);
}

//
// interface IRobotEigenvalues wrapper method implementations
//

#pragma implementation_key(1306)
inline double IRobotEigenvalues::GetEigenValue ( ) {
    double _result = 0;
    HRESULT _hr = get_EigenValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1307)
inline double IRobotEigenvalues::GetFrequence ( ) {
    double _result = 0;
    HRESULT _hr = get_Frequence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1308)
inline double IRobotEigenvalues::GetPeriod ( ) {
    double _result = 0;
    HRESULT _hr = get_Period(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1309)
inline double IRobotEigenvalues::GetPulsation ( ) {
    double _result = 0;
    HRESULT _hr = get_Pulsation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1310)
inline double IRobotEigenvalues::GetDamping ( ) {
    double _result = 0;
    HRESULT _hr = get_Damping(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1311)
inline double IRobotEigenvalues::GetPrecision ( ) {
    double _result = 0;
    HRESULT _hr = get_Precision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1312)
inline double IRobotEigenvalues::GetEnergy ( ) {
    double _result = 0;
    HRESULT _hr = get_Energy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1313)
inline double IRobotEigenvalues::GetAvPartCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_AvPartCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotEigenvaluesServer wrapper method implementations
//

#pragma implementation_key(1314)
inline IRobotEigenvaluesPtr IRobotEigenvaluesServer::Value ( long case_num, long mode_num ) {
    struct IRobotEigenvalues * _result = 0;
    HRESULT _hr = raw_Value(case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotEigenvaluesPtr(_result, false);
}

#pragma implementation_key(1315)
inline IRobotEigenvaluesPtr IRobotEigenvaluesServer::CombValue ( long case_num, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotEigenvalues * _result = 0;
    HRESULT _hr = raw_CombValue(case_num, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotEigenvaluesPtr(_result, false);
}

//
// interface IRobotMassSumServer wrapper method implementations
//

#pragma implementation_key(1316)
inline IRobotDisplacementDataPtr IRobotMassSumServer::Current ( long case_num, long mode_num ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_Current(case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1317)
inline IRobotDisplacementDataPtr IRobotMassSumServer::Relative ( long case_num, long mode_num ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_Relative(case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1318)
inline IRobotDisplacementDataPtr IRobotMassSumServer::Total ( long case_num, long mode_num ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_Total(case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1319)
inline IRobotDisplacementDataPtr IRobotMassSumServer::PartCoeff ( long case_num, long mode_num ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_PartCoeff(case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

//
// interface IRobotSpectralCoefficients wrapper method implementations
//

#pragma implementation_key(1320)
inline double IRobotSpectralCoefficients::SpectrCoef ( long case_num, long mode_num ) {
    double _result = 0;
    HRESULT _hr = raw_SpectrCoef(case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1321)
inline IRobotDisplacementDataPtr IRobotSpectralCoefficients::PartCoef ( long case_num, long mode_num ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_PartCoef(case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1322)
inline IRobotDisplacementDataPtr IRobotSpectralCoefficients::ModeCoef ( long case_num, long mode_num ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_ModeCoef(case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

//
// interface IRobotEigenvectorsServer wrapper method implementations
//

#pragma implementation_key(1323)
inline IRobotDisplacementDataPtr IRobotEigenvectorsServer::Value ( long node_num, long case_num, long mode_num ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_Value(node_num, case_num, mode_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

#pragma implementation_key(1324)
inline IRobotDisplacementDataPtr IRobotEigenvectorsServer::CombValue ( long node_num, long case_num, enum IRobotModeCombinationType mode_cmb ) {
    struct IRobotDisplacementData * _result = 0;
    HRESULT _hr = raw_CombValue(node_num, case_num, mode_cmb, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDisplacementDataPtr(_result, false);
}

//
// interface IRobotTimeHistoryResults wrapper method implementations
//

#pragma implementation_key(1325)
inline double IRobotTimeHistoryResults::Getvx ( ) {
    double _result = 0;
    HRESULT _hr = get_vx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1326)
inline double IRobotTimeHistoryResults::Getvy ( ) {
    double _result = 0;
    HRESULT _hr = get_vy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1327)
inline double IRobotTimeHistoryResults::Getvz ( ) {
    double _result = 0;
    HRESULT _hr = get_vz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1328)
inline double IRobotTimeHistoryResults::GetVRX ( ) {
    double _result = 0;
    HRESULT _hr = get_VRX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1329)
inline double IRobotTimeHistoryResults::GetVRY ( ) {
    double _result = 0;
    HRESULT _hr = get_VRY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1330)
inline double IRobotTimeHistoryResults::GetVRZ ( ) {
    double _result = 0;
    HRESULT _hr = get_VRZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1331)
inline double IRobotTimeHistoryResults::GetAX ( ) {
    double _result = 0;
    HRESULT _hr = get_AX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1332)
inline double IRobotTimeHistoryResults::GetAY ( ) {
    double _result = 0;
    HRESULT _hr = get_AY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1333)
inline double IRobotTimeHistoryResults::GetAZ ( ) {
    double _result = 0;
    HRESULT _hr = get_AZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1334)
inline double IRobotTimeHistoryResults::GetARX ( ) {
    double _result = 0;
    HRESULT _hr = get_ARX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1335)
inline double IRobotTimeHistoryResults::GetARY ( ) {
    double _result = 0;
    HRESULT _hr = get_ARY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1336)
inline double IRobotTimeHistoryResults::GetARZ ( ) {
    double _result = 0;
    HRESULT _hr = get_ARZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1337)
inline double IRobotTimeHistoryResults::GetTime ( ) {
    double _result = 0;
    HRESULT _hr = get_Time(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotTimeHistoryResultServer wrapper method implementations
//

#pragma implementation_key(1338)
inline IRobotTimeHistoryResultsPtr IRobotTimeHistoryResultServer::Value ( long _node, long _case, long _step ) {
    struct IRobotTimeHistoryResults * _result = 0;
    HRESULT _hr = raw_Value(_node, _case, _step, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTimeHistoryResultsPtr(_result, false);
}

//
// interface IRobotFRFResults wrapper method implementations
//

#pragma implementation_key(1339)
inline double IRobotFRFResults::Getvx ( ) {
    double _result = 0;
    HRESULT _hr = get_vx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1340)
inline double IRobotFRFResults::Getvy ( ) {
    double _result = 0;
    HRESULT _hr = get_vy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1341)
inline double IRobotFRFResults::Getvz ( ) {
    double _result = 0;
    HRESULT _hr = get_vz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1342)
inline double IRobotFRFResults::GetFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_Frequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFRFResultServer wrapper method implementations
//

#pragma implementation_key(1343)
inline IRobotFRFResultsPtr IRobotFRFResultServer::Value ( long _node, long _case, long _step ) {
    struct IRobotFRFResults * _result = 0;
    HRESULT _hr = raw_Value(_node, _case, _step, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFRFResultsPtr(_result, false);
}

//
// interface IRobotFootfallResults wrapper method implementations
//

#pragma implementation_key(1344)
inline double IRobotFootfallResults::GetA ( ) {
    double _result = 0;
    HRESULT _hr = get_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1345)
inline double IRobotFootfallResults::GetRF_Resonant ( ) {
    double _result = 0;
    HRESULT _hr = get_RF_Resonant(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1346)
inline double IRobotFootfallResults::GetRF_Transient ( ) {
    double _result = 0;
    HRESULT _hr = get_RF_Transient(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1347)
inline double IRobotFootfallResults::GetRF_Overall ( ) {
    double _result = 0;
    HRESULT _hr = get_RF_Overall(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1348)
inline double IRobotFootfallResults::GetVRMS ( ) {
    double _result = 0;
    HRESULT _hr = get_VRMS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1349)
inline double IRobotFootfallResults::GetVRMQ ( ) {
    double _result = 0;
    HRESULT _hr = get_VRMQ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1350)
inline long IRobotFootfallResults::GetExcitationNode ( ) {
    long _result = 0;
    HRESULT _hr = get_ExcitationNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1351)
inline double IRobotFootfallResults::GetFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_Frequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotAdvancedResultServer wrapper method implementations
//

#pragma implementation_key(1352)
inline IRobotEigenvaluesServerPtr IRobotAdvancedResultServer::GetEigenvalues ( ) {
    struct IRobotEigenvaluesServer * _result = 0;
    HRESULT _hr = get_Eigenvalues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotEigenvaluesServerPtr(_result, false);
}

#pragma implementation_key(1353)
inline IRobotMassSumServerPtr IRobotAdvancedResultServer::GetMassSum ( ) {
    struct IRobotMassSumServer * _result = 0;
    HRESULT _hr = get_MassSum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMassSumServerPtr(_result, false);
}

#pragma implementation_key(1354)
inline IRobotSpectralCoefficientsPtr IRobotAdvancedResultServer::GetSpectralCoeffs ( ) {
    struct IRobotSpectralCoefficients * _result = 0;
    HRESULT _hr = get_SpectralCoeffs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSpectralCoefficientsPtr(_result, false);
}

#pragma implementation_key(1355)
inline IRobotEigenvectorsServerPtr IRobotAdvancedResultServer::GetEigenvectors ( ) {
    struct IRobotEigenvectorsServer * _result = 0;
    HRESULT _hr = get_Eigenvectors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotEigenvectorsServerPtr(_result, false);
}

#pragma implementation_key(1356)
inline IRobotTimeHistoryResultServerPtr IRobotAdvancedResultServer::GetTimeHistory ( ) {
    struct IRobotTimeHistoryResultServer * _result = 0;
    HRESULT _hr = get_TimeHistory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTimeHistoryResultServerPtr(_result, false);
}

#pragma implementation_key(1357)
inline IRobotFRFResultServerPtr IRobotAdvancedResultServer::GetFRF ( ) {
    struct IRobotFRFResultServer * _result = 0;
    HRESULT _hr = get_FRF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFRFResultServerPtr(_result, false);
}

#pragma implementation_key(1358)
inline IRobotFootfallResultsPtr IRobotAdvancedResultServer::FootfallValue ( long _node, long _case ) {
    struct IRobotFootfallResults * _result = 0;
    HRESULT _hr = raw_FootfallValue(_node, _case, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFootfallResultsPtr(_result, false);
}

//
// interface IRobotFeResultParams wrapper method implementations
//

#pragma implementation_key(1359)
inline long IRobotFeResultParams::GetPanel ( ) {
    long _result = 0;
    HRESULT _hr = get_Panel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1360)
inline void IRobotFeResultParams::PutPanel ( long ret ) {
    HRESULT _hr = put_Panel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1361)
inline long IRobotFeResultParams::GetNode ( ) {
    long _result = 0;
    HRESULT _hr = get_Node(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1362)
inline void IRobotFeResultParams::PutNode ( long ret ) {
    HRESULT _hr = put_Node(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1363)
inline long IRobotFeResultParams::GetCase ( ) {
    long _result = 0;
    HRESULT _hr = get_Case(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1364)
inline void IRobotFeResultParams::PutCase ( long ret ) {
    HRESULT _hr = put_Case(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1365)
inline enum IRobotFeLayerType IRobotFeResultParams::GetLayer ( ) {
    enum IRobotFeLayerType _result;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1366)
inline void IRobotFeResultParams::PutLayer ( enum IRobotFeLayerType ret ) {
    HRESULT _hr = put_Layer(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1367)
inline long IRobotFeResultParams::GetCaseCmpnt ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseCmpnt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1368)
inline void IRobotFeResultParams::PutCaseCmpnt ( long ret ) {
    HRESULT _hr = put_CaseCmpnt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1369)
inline long IRobotFeResultParams::GetElement ( ) {
    long _result = 0;
    HRESULT _hr = get_Element(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1370)
inline void IRobotFeResultParams::PutElement ( long ret ) {
    HRESULT _hr = put_Element(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1371)
inline double IRobotFeResultParams::GetLayerArbitraryValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerArbitraryValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1372)
inline void IRobotFeResultParams::PutLayerArbitraryValue ( double ret ) {
    HRESULT _hr = put_LayerArbitraryValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1373)
inline enum IRobotModeCombinationType IRobotFeResultParams::GetModeCmb ( ) {
    enum IRobotModeCombinationType _result;
    HRESULT _hr = get_ModeCmb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1374)
inline void IRobotFeResultParams::PutModeCmb ( enum IRobotModeCombinationType ret ) {
    HRESULT _hr = put_ModeCmb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1375)
inline enum IRobotReinforceCalcMethods IRobotFeResultParams::GetCalcMethod ( ) {
    enum IRobotReinforceCalcMethods _result;
    HRESULT _hr = get_CalcMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1376)
inline void IRobotFeResultParams::PutCalcMethod ( enum IRobotReinforceCalcMethods ret ) {
    HRESULT _hr = put_CalcMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1377)
inline HRESULT IRobotFeResultParams::SetDirX ( enum IRobotObjLocalXDirDefinitionType _def_type, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetDirX(_def_type, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1378)
inline enum IRobotObjLocalXDirDefinitionType IRobotFeResultParams::GetDirX ( double * _x, double * _y, double * _z ) {
    enum IRobotObjLocalXDirDefinitionType _result;
    HRESULT _hr = raw_GetDirX(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFeResultDetailed wrapper method implementations
//

#pragma implementation_key(1379)
inline double IRobotFeResultDetailed::GetSXX ( ) {
    double _result = 0;
    HRESULT _hr = get_SXX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1380)
inline double IRobotFeResultDetailed::GetSYY ( ) {
    double _result = 0;
    HRESULT _hr = get_SYY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1381)
inline double IRobotFeResultDetailed::GetSXY ( ) {
    double _result = 0;
    HRESULT _hr = get_SXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1382)
inline double IRobotFeResultDetailed::GetNXX ( ) {
    double _result = 0;
    HRESULT _hr = get_NXX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1383)
inline double IRobotFeResultDetailed::GetNYY ( ) {
    double _result = 0;
    HRESULT _hr = get_NYY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1384)
inline double IRobotFeResultDetailed::GetNXY ( ) {
    double _result = 0;
    HRESULT _hr = get_NXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1385)
inline double IRobotFeResultDetailed::GetMXX ( ) {
    double _result = 0;
    HRESULT _hr = get_MXX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1386)
inline double IRobotFeResultDetailed::GetMYY ( ) {
    double _result = 0;
    HRESULT _hr = get_MYY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1387)
inline double IRobotFeResultDetailed::GetMXY ( ) {
    double _result = 0;
    HRESULT _hr = get_MXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1388)
inline double IRobotFeResultDetailed::GetTXX ( ) {
    double _result = 0;
    HRESULT _hr = get_TXX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1389)
inline double IRobotFeResultDetailed::GetTYY ( ) {
    double _result = 0;
    HRESULT _hr = get_TYY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1390)
inline double IRobotFeResultDetailed::GetQXX ( ) {
    double _result = 0;
    HRESULT _hr = get_QXX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1391)
inline double IRobotFeResultDetailed::GetQYY ( ) {
    double _result = 0;
    HRESULT _hr = get_QYY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1392)
inline double IRobotFeResultDetailed::GetUXX ( ) {
    double _result = 0;
    HRESULT _hr = get_UXX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1393)
inline double IRobotFeResultDetailed::GetUYY ( ) {
    double _result = 0;
    HRESULT _hr = get_UYY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1394)
inline double IRobotFeResultDetailed::GetWNorm ( ) {
    double _result = 0;
    HRESULT _hr = get_WNorm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1395)
inline double IRobotFeResultDetailed::GetRXX ( ) {
    double _result = 0;
    HRESULT _hr = get_RXX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1396)
inline double IRobotFeResultDetailed::GetRYY ( ) {
    double _result = 0;
    HRESULT _hr = get_RYY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1397)
inline double IRobotFeResultDetailed::GetRNorm ( ) {
    double _result = 0;
    HRESULT _hr = get_RNorm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1398)
inline double IRobotFeResultDetailed::GetPNorm ( ) {
    double _result = 0;
    HRESULT _hr = get_PNorm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFeResultPrincipal wrapper method implementations
//

#pragma implementation_key(1399)
inline double IRobotFeResultPrincipal::GetS1 ( ) {
    double _result = 0;
    HRESULT _hr = get_S1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1400)
inline double IRobotFeResultPrincipal::GetS2 ( ) {
    double _result = 0;
    HRESULT _hr = get_S2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1401)
inline double IRobotFeResultPrincipal::GetS1_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_S1_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1402)
inline double IRobotFeResultPrincipal::GetSAL ( ) {
    double _result = 0;
    HRESULT _hr = get_SAL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1403)
inline double IRobotFeResultPrincipal::GetN1 ( ) {
    double _result = 0;
    HRESULT _hr = get_N1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1404)
inline double IRobotFeResultPrincipal::GetN2 ( ) {
    double _result = 0;
    HRESULT _hr = get_N2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1405)
inline double IRobotFeResultPrincipal::GetN1_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_N1_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1406)
inline double IRobotFeResultPrincipal::GetNAL ( ) {
    double _result = 0;
    HRESULT _hr = get_NAL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1407)
inline double IRobotFeResultPrincipal::GetM1 ( ) {
    double _result = 0;
    HRESULT _hr = get_M1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1408)
inline double IRobotFeResultPrincipal::GetM2 ( ) {
    double _result = 0;
    HRESULT _hr = get_M2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1409)
inline double IRobotFeResultPrincipal::GetM1_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_M1_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1410)
inline double IRobotFeResultPrincipal::GetMAL ( ) {
    double _result = 0;
    HRESULT _hr = get_MAL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1411)
inline double IRobotFeResultPrincipal::GetT1_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_T1_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1412)
inline double IRobotFeResultPrincipal::GetQ1_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Q1_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1413)
inline double IRobotFeResultPrincipal::GetUGX ( ) {
    double _result = 0;
    HRESULT _hr = get_UGX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1414)
inline double IRobotFeResultPrincipal::GetUGY ( ) {
    double _result = 0;
    HRESULT _hr = get_UGY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1415)
inline double IRobotFeResultPrincipal::GetUGZ ( ) {
    double _result = 0;
    HRESULT _hr = get_UGZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1416)
inline double IRobotFeResultPrincipal::GetU ( ) {
    double _result = 0;
    HRESULT _hr = get_U(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFeResultComplex wrapper method implementations
//

#pragma implementation_key(1417)
inline double IRobotFeResultComplex::GetMXX_TOP ( ) {
    double _result = 0;
    HRESULT _hr = get_MXX_TOP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1418)
inline double IRobotFeResultComplex::GetMXX_BOTTOM ( ) {
    double _result = 0;
    HRESULT _hr = get_MXX_BOTTOM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1419)
inline double IRobotFeResultComplex::GetMYY_TOP ( ) {
    double _result = 0;
    HRESULT _hr = get_MYY_TOP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1420)
inline double IRobotFeResultComplex::GetMYY_BOTTOM ( ) {
    double _result = 0;
    HRESULT _hr = get_MYY_BOTTOM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1421)
inline double IRobotFeResultComplex::GetS_MISES ( ) {
    double _result = 0;
    HRESULT _hr = get_S_MISES(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1422)
inline double IRobotFeResultComplex::GetN_MISES ( ) {
    double _result = 0;
    HRESULT _hr = get_N_MISES(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1423)
inline double IRobotFeResultComplex::GetM_MISES ( ) {
    double _result = 0;
    HRESULT _hr = get_M_MISES(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFeResultReinforcement wrapper method implementations
//

#pragma implementation_key(1424)
inline double IRobotFeResultReinforcement::GetAY_TOP ( ) {
    double _result = 0;
    HRESULT _hr = get_AY_TOP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1425)
inline double IRobotFeResultReinforcement::GetAY_BOTTOM ( ) {
    double _result = 0;
    HRESULT _hr = get_AY_BOTTOM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1426)
inline double IRobotFeResultReinforcement::GetAX_TOP ( ) {
    double _result = 0;
    HRESULT _hr = get_AX_TOP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1427)
inline double IRobotFeResultReinforcement::GetAX_BOTTOM ( ) {
    double _result = 0;
    HRESULT _hr = get_AX_BOTTOM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1428)
inline double IRobotFeResultReinforcement::GetE_AY_TOP ( ) {
    double _result = 0;
    HRESULT _hr = get_E_AY_TOP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1429)
inline double IRobotFeResultReinforcement::GetE_AY_BOTTOM ( ) {
    double _result = 0;
    HRESULT _hr = get_E_AY_BOTTOM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1430)
inline double IRobotFeResultReinforcement::GetE_AX_TOP ( ) {
    double _result = 0;
    HRESULT _hr = get_E_AX_TOP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1431)
inline double IRobotFeResultReinforcement::GetE_AX_BOTTOM ( ) {
    double _result = 0;
    HRESULT _hr = get_E_AX_BOTTOM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1432)
inline double IRobotFeResultReinforcement::GetA_MIN ( ) {
    double _result = 0;
    HRESULT _hr = get_A_MIN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1433)
inline double IRobotFeResultReinforcement::GetAY ( ) {
    double _result = 0;
    HRESULT _hr = get_AY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1434)
inline double IRobotFeResultReinforcement::GetAX ( ) {
    double _result = 0;
    HRESULT _hr = get_AX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1435)
inline double IRobotFeResultReinforcement::GetF ( ) {
    double _result = 0;
    HRESULT _hr = get_F(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1436)
inline VARIANT_BOOL IRobotFeResultReinforcement::GetCalcError ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CalcError(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFeResultReduced wrapper method implementations
//

#pragma implementation_key(1437)
inline double IRobotFeResultReduced::GetNX ( ) {
    double _result = 0;
    HRESULT _hr = get_NX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1438)
inline double IRobotFeResultReduced::GetMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1439)
inline double IRobotFeResultReduced::GetTY ( ) {
    double _result = 0;
    HRESULT _hr = get_TY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1440)
inline double IRobotFeResultReduced::GetSO ( ) {
    double _result = 0;
    HRESULT _hr = get_SO(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1441)
inline double IRobotFeResultReduced::GetSE ( ) {
    double _result = 0;
    HRESULT _hr = get_SE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1442)
inline double IRobotFeResultReduced::GetT ( ) {
    double _result = 0;
    HRESULT _hr = get_T(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1443)
inline double IRobotFeResultReduced::GetTZ ( ) {
    double _result = 0;
    HRESULT _hr = get_TZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1444)
inline double IRobotFeResultReduced::GetMY ( ) {
    double _result = 0;
    HRESULT _hr = get_MY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1445)
inline double IRobotFeResultReduced::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1446)
inline double IRobotFeResultReduced::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1447)
inline enum IRobotFeResultReducedCutPosition IRobotFeResultReduced::GetCutPos ( ) {
    enum IRobotFeResultReducedCutPosition _result;
    HRESULT _hr = get_CutPos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1448)
inline long IRobotFeResultReduced::GetNodeLeftTop ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeLeftTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1449)
inline long IRobotFeResultReduced::GetNodeRightTop ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeRightTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1450)
inline long IRobotFeResultReduced::GetNodeLeftBottom ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeLeftBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1451)
inline long IRobotFeResultReduced::GetNodeRightBottom ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeRightBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotPanelCut wrapper method implementations
//

#pragma implementation_key(1452)
inline IRobotGeoPoint3DPtr IRobotPanelCut::GetPoint1 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Point1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(1453)
inline IRobotGeoPoint3DPtr IRobotPanelCut::GetPoint2 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Point2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(1454)
inline IRobotGeoPoint3DPtr IRobotPanelCut::GetPoint3 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Point3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(1455)
inline enum IRobotPanelCutDefinitionType IRobotPanelCut::GetDefinitionType ( ) {
    enum IRobotPanelCutDefinitionType _result;
    HRESULT _hr = get_DefinitionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1456)
inline void IRobotPanelCut::PutDefinitionType ( enum IRobotPanelCutDefinitionType ret ) {
    HRESULT _hr = put_DefinitionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1457)
inline long IRobotPanelCut::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1458)
inline void IRobotPanelCut::PutColor ( long ret ) {
    HRESULT _hr = put_Color(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1459)
inline VARIANT_BOOL IRobotPanelCut::GetActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1460)
inline void IRobotPanelCut::PutActive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Active(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotPanelCutMngr wrapper method implementations
//

#pragma implementation_key(1461)
inline long IRobotPanelCutMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1462)
inline IRobotPanelCutPtr IRobotPanelCutMngr::Get ( long _idx ) {
    struct IRobotPanelCut * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPanelCutPtr(_result, false);
}

#pragma implementation_key(1463)
inline IRobotPanelCutPtr IRobotPanelCutMngr::Create ( ) {
    struct IRobotPanelCut * _result = 0;
    HRESULT _hr = raw_Create(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPanelCutPtr(_result, false);
}

#pragma implementation_key(1464)
inline long IRobotPanelCutMngr::Find ( _bstr_t _cut_name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_cut_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1465)
inline HRESULT IRobotPanelCutMngr::Store ( struct IRobotPanelCut * _cut, _bstr_t _name ) {
    HRESULT _hr = raw_Store(_cut, _name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1466)
inline _bstr_t IRobotPanelCutMngr::GetName ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1467)
inline HRESULT IRobotPanelCutMngr::Remove ( long _idx ) {
    HRESULT _hr = raw_Remove(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotFeExtremeParams wrapper method implementations
//

#pragma implementation_key(1468)
inline enum IRobotFeResultType IRobotFeExtremeParams::GetResultId ( ) {
    enum IRobotFeResultType _result;
    HRESULT _hr = get_ResultId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1469)
inline void IRobotFeExtremeParams::PutResultId ( enum IRobotFeResultType ret ) {
    HRESULT _hr = put_ResultId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1470)
inline _bstr_t IRobotFeExtremeParams::GetPanelSel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PanelSel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1471)
inline void IRobotFeExtremeParams::PutPanelSel ( _bstr_t ret ) {
    HRESULT _hr = put_PanelSel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1472)
inline _bstr_t IRobotFeExtremeParams::GetElementSel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ElementSel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1473)
inline void IRobotFeExtremeParams::PutElementSel ( _bstr_t ret ) {
    HRESULT _hr = put_ElementSel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1474)
inline _bstr_t IRobotFeExtremeParams::GetNodeSel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NodeSel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1475)
inline void IRobotFeExtremeParams::PutNodeSel ( _bstr_t ret ) {
    HRESULT _hr = put_NodeSel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1476)
inline _bstr_t IRobotFeExtremeParams::GetCaseSel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaseSel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1477)
inline void IRobotFeExtremeParams::PutCaseSel ( _bstr_t ret ) {
    HRESULT _hr = put_CaseSel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1478)
inline enum IRobotFeLayerType IRobotFeExtremeParams::GetLayer ( ) {
    enum IRobotFeLayerType _result;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1479)
inline void IRobotFeExtremeParams::PutLayer ( enum IRobotFeLayerType ret ) {
    HRESULT _hr = put_Layer(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1480)
inline double IRobotFeExtremeParams::GetLayerArbitraryValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerArbitraryValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1481)
inline void IRobotFeExtremeParams::PutLayerArbitraryValue ( double ret ) {
    HRESULT _hr = put_LayerArbitraryValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1482)
inline enum IRobotFeResultSmoothing IRobotFeExtremeParams::GetSmoothing ( ) {
    enum IRobotFeResultSmoothing _result;
    HRESULT _hr = get_Smoothing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1483)
inline void IRobotFeExtremeParams::PutSmoothing ( enum IRobotFeResultSmoothing ret ) {
    HRESULT _hr = put_Smoothing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1484)
inline enum IRobotFeResultReducedCutPosition IRobotFeExtremeParams::GetReducedCutPos ( ) {
    enum IRobotFeResultReducedCutPosition _result;
    HRESULT _hr = get_ReducedCutPos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1485)
inline void IRobotFeExtremeParams::PutReducedCutPos ( enum IRobotFeResultReducedCutPosition ret ) {
    HRESULT _hr = put_ReducedCutPos(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1486)
inline HRESULT IRobotFeExtremeParams::SetDirX ( enum IRobotObjLocalXDirDefinitionType _def_type, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetDirX(_def_type, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1487)
inline enum IRobotObjLocalXDirDefinitionType IRobotFeExtremeParams::GetDirX ( double * _x, double * _y, double * _z ) {
    enum IRobotObjLocalXDirDefinitionType _result;
    HRESULT _hr = raw_GetDirX(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1488)
inline HRESULT IRobotFeExtremeParams::Reset ( ) {
    HRESULT _hr = raw_Reset();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1489)
inline long IRobotFeExtremeParams::GetCaseCmpnt ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseCmpnt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1490)
inline void IRobotFeExtremeParams::PutCaseCmpnt ( long ret ) {
    HRESULT _hr = put_CaseCmpnt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1491)
inline enum IRobotModeCombinationType IRobotFeExtremeParams::GetModeCmb ( ) {
    enum IRobotModeCombinationType _result;
    HRESULT _hr = get_ModeCmb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1492)
inline void IRobotFeExtremeParams::PutModeCmb ( enum IRobotModeCombinationType ret ) {
    HRESULT _hr = put_ModeCmb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotFeExtremeValue wrapper method implementations
//

#pragma implementation_key(1493)
inline enum IRobotFeResultType IRobotFeExtremeValue::GetResultId ( ) {
    enum IRobotFeResultType _result;
    HRESULT _hr = get_ResultId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1494)
inline double IRobotFeExtremeValue::GetValue ( ) {
    double _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1495)
inline VARIANT_BOOL IRobotFeExtremeValue::GetIsAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1496)
inline enum IRobotFeResultSmoothing IRobotFeExtremeValue::GetSmoothing ( ) {
    enum IRobotFeResultSmoothing _result;
    HRESULT _hr = get_Smoothing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1497)
inline long IRobotFeExtremeValue::GetNode ( ) {
    long _result = 0;
    HRESULT _hr = get_Node(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1498)
inline long IRobotFeExtremeValue::GetPanel ( ) {
    long _result = 0;
    HRESULT _hr = get_Panel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1499)
inline long IRobotFeExtremeValue::GetElement ( ) {
    long _result = 0;
    HRESULT _hr = get_Element(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1500)
inline long IRobotFeExtremeValue::GetCase ( ) {
    long _result = 0;
    HRESULT _hr = get_Case(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1501)
inline long IRobotFeExtremeValue::GetCaseCmpnt ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseCmpnt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1502)
inline enum IRobotModeCombinationType IRobotFeExtremeValue::GetModeCmb ( ) {
    enum IRobotModeCombinationType _result;
    HRESULT _hr = get_ModeCmb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1503)
inline enum IRobotFeLayerType IRobotFeExtremeValue::GetLayer ( ) {
    enum IRobotFeLayerType _result;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1504)
inline double IRobotFeExtremeValue::GetLayerArbitraryValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerArbitraryValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1505)
inline enum IRobotFeResultReducedCutPosition IRobotFeExtremeValue::GetReducedCutPos ( ) {
    enum IRobotFeResultReducedCutPosition _result;
    HRESULT _hr = get_ReducedCutPos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1506)
inline enum IRobotObjLocalXDirDefinitionType IRobotFeExtremeValue::GetDirX ( double * _x, double * _y, double * _z ) {
    enum IRobotObjLocalXDirDefinitionType _result;
    HRESULT _hr = raw_GetDirX(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFeMultiResultType wrapper method implementations
//

#pragma implementation_key(1507)
inline long IRobotFeMultiResultType::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1508)
inline HRESULT IRobotFeMultiResultType::Add ( enum IRobotFeResultType _result_type ) {
    HRESULT _hr = raw_Add(_result_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1509)
inline HRESULT IRobotFeMultiResultType::Remove ( enum IRobotFeResultType _result_type ) {
    HRESULT _hr = raw_Remove(_result_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1510)
inline enum IRobotFeResultType IRobotFeMultiResultType::Get ( long _idx ) {
    enum IRobotFeResultType _result;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFeMultiExtremeValue wrapper method implementations
//

#pragma implementation_key(1511)
inline long IRobotFeMultiExtremeValue::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1512)
inline IRobotFeExtremeValuePtr IRobotFeMultiExtremeValue::GetByResType ( enum IRobotFeResultType _result_type ) {
    struct IRobotFeExtremeValue * _result = 0;
    HRESULT _hr = raw_GetByResType(_result_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeExtremeValuePtr(_result, false);
}

#pragma implementation_key(1513)
inline IRobotFeExtremeValuePtr IRobotFeMultiExtremeValue::Get ( long _idx ) {
    struct IRobotFeExtremeValue * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeExtremeValuePtr(_result, false);
}

//
// interface IRobotFeResultServer wrapper method implementations
//

#pragma implementation_key(1514)
inline IRobotFeResultDetailedPtr IRobotFeResultServer::Detailed ( struct IRobotFeResultParams * _param ) {
    struct IRobotFeResultDetailed * _result = 0;
    HRESULT _hr = raw_Detailed(_param, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeResultDetailedPtr(_result, false);
}

#pragma implementation_key(1515)
inline IRobotFeResultPrincipalPtr IRobotFeResultServer::Principal ( struct IRobotFeResultParams * _param ) {
    struct IRobotFeResultPrincipal * _result = 0;
    HRESULT _hr = raw_Principal(_param, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeResultPrincipalPtr(_result, false);
}

#pragma implementation_key(1516)
inline IRobotFeResultComplexPtr IRobotFeResultServer::Complex ( struct IRobotFeResultParams * _param ) {
    struct IRobotFeResultComplex * _result = 0;
    HRESULT _hr = raw_Complex(_param, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeResultComplexPtr(_result, false);
}

#pragma implementation_key(1517)
inline IRobotFeResultReinforcementPtr IRobotFeResultServer::Reinforcement ( long _elem_or_panel, long _node ) {
    struct IRobotFeResultReinforcement * _result = 0;
    HRESULT _hr = raw_Reinforcement(_elem_or_panel, _node, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeResultReinforcementPtr(_result, false);
}

#pragma implementation_key(1518)
inline IRobotFeResultReducedPtr IRobotFeResultServer::Reduced ( long _panel, enum IRobotFeResultReducedCutPosition _cut, long _case ) {
    struct IRobotFeResultReduced * _result = 0;
    HRESULT _hr = raw_Reduced(_panel, _cut, _case, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeResultReducedPtr(_result, false);
}

#pragma implementation_key(1519)
inline IRobotPanelCutMngrPtr IRobotFeResultServer::GetPanelCuts ( ) {
    struct IRobotPanelCutMngr * _result = 0;
    HRESULT _hr = get_PanelCuts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPanelCutMngrPtr(_result, false);
}

#pragma implementation_key(1520)
inline IRobotFeExtremeValuePtr IRobotFeResultServer::MinValue ( struct IRobotFeExtremeParams * _params ) {
    struct IRobotFeExtremeValue * _result = 0;
    HRESULT _hr = raw_MinValue(_params, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeExtremeValuePtr(_result, false);
}

#pragma implementation_key(1521)
inline IRobotFeExtremeValuePtr IRobotFeResultServer::MaxValue ( struct IRobotFeExtremeParams * _params ) {
    struct IRobotFeExtremeValue * _result = 0;
    HRESULT _hr = raw_MaxValue(_params, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeExtremeValuePtr(_result, false);
}

#pragma implementation_key(1522)
inline IRobotFeMultiExtremeValuePtr IRobotFeResultServer::MultiMinValue ( struct IRobotFeExtremeParams * _params, struct IRobotFeMultiResultType * _result_ids ) {
    struct IRobotFeMultiExtremeValue * _result = 0;
    HRESULT _hr = raw_MultiMinValue(_params, _result_ids, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeMultiExtremeValuePtr(_result, false);
}

#pragma implementation_key(1523)
inline IRobotFeMultiExtremeValuePtr IRobotFeResultServer::MultiMaxValue ( struct IRobotFeExtremeParams * _params, struct IRobotFeMultiResultType * _result_ids ) {
    struct IRobotFeMultiExtremeValue * _result = 0;
    HRESULT _hr = raw_MultiMaxValue(_params, _result_ids, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeMultiExtremeValuePtr(_result, false);
}

#pragma implementation_key(1524)
inline IRobotFeResultReducedPtr IRobotFeResultServer::ReducedEx ( long _panel, long _part_idx, enum IRobotFeResultReducedCutPosition _cut_pos, long _case, long _case_cmpnt ) {
    struct IRobotFeResultReduced * _result = 0;
    HRESULT _hr = raw_ReducedEx(_panel, _part_idx, _cut_pos, _case, _case_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeResultReducedPtr(_result, false);
}

//
// interface IRobotModeSelection wrapper method implementations
//

#pragma implementation_key(1525)
inline enum IRobotModeSelectionType IRobotModeSelection::GetType ( ) {
    enum IRobotModeSelectionType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1526)
inline void IRobotModeSelection::PutType ( enum IRobotModeSelectionType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1527)
inline long IRobotModeSelection::GetMode ( ) {
    long _result = 0;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1528)
inline void IRobotModeSelection::PutMode ( long ret ) {
    HRESULT _hr = put_Mode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1529)
inline enum IRobotModeCombinationType IRobotModeSelection::GetCombination ( ) {
    enum IRobotModeCombinationType _result;
    HRESULT _hr = get_Combination(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1530)
inline void IRobotModeSelection::PutCombination ( enum IRobotModeCombinationType ret ) {
    HRESULT _hr = put_Combination(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotMultiSelection wrapper method implementations
//

#pragma implementation_key(1531)
inline long IRobotMultiSelection::Exist ( enum IRobotObjectType obj_type ) {
    long _result = 0;
    HRESULT _hr = raw_Exist(obj_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1532)
inline HRESULT IRobotMultiSelection::Set ( enum IRobotObjectType obj_type, struct IRobotSelection * sel ) {
    HRESULT _hr = raw_Set(obj_type, sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1533)
inline IRobotSelectionPtr IRobotMultiSelection::Get ( enum IRobotObjectType obj_type ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_Get(obj_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1534)
inline IRobotModeSelectionPtr IRobotMultiSelection::GetModes ( ) {
    struct IRobotModeSelection * _result = 0;
    HRESULT _hr = get_Modes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotModeSelectionPtr(_result, false);
}

#pragma implementation_key(1535)
inline long IRobotMultiSelection::GetCaseCmpnt ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseCmpnt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1536)
inline void IRobotMultiSelection::PutCaseCmpnt ( long ret ) {
    HRESULT _hr = put_CaseCmpnt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotExtremeParams wrapper method implementations
//

#pragma implementation_key(1537)
inline IRobotMultiSelectionPtr IRobotExtremeParams::GetSelection ( ) {
    struct IRobotMultiSelection * _result = 0;
    HRESULT _hr = get_Selection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMultiSelectionPtr(_result, false);
}

#pragma implementation_key(1538)
inline enum IRobotExtremeValueType IRobotExtremeParams::GetValueType ( ) {
    enum IRobotExtremeValueType _result;
    HRESULT _hr = get_ValueType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1539)
inline void IRobotExtremeParams::PutValueType ( enum IRobotExtremeValueType ret ) {
    HRESULT _hr = put_ValueType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1540)
inline long IRobotExtremeParams::GetBarDivision ( ) {
    long _result = 0;
    HRESULT _hr = get_BarDivision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1541)
inline void IRobotExtremeParams::PutBarDivision ( long ret ) {
    HRESULT _hr = put_BarDivision(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotExtremeValue wrapper method implementations
//

#pragma implementation_key(1542)
inline double IRobotExtremeValue::GetValue ( ) {
    double _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1543)
inline long IRobotExtremeValue::GetCase ( ) {
    long _result = 0;
    HRESULT _hr = get_Case(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1544)
inline long IRobotExtremeValue::GetCaseCmpnt ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseCmpnt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1545)
inline long IRobotExtremeValue::GetNode ( ) {
    long _result = 0;
    HRESULT _hr = get_Node(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1546)
inline double IRobotExtremeValue::GetPosition ( ) {
    double _result = 0;
    HRESULT _hr = get_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1547)
inline long IRobotExtremeValue::GetBar ( ) {
    long _result = 0;
    HRESULT _hr = get_Bar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1548)
inline enum IRobotModeCombinationType IRobotExtremeValue::GetModeCmb ( ) {
    enum IRobotModeCombinationType _result;
    HRESULT _hr = get_ModeCmb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1549)
inline VARIANT_BOOL IRobotExtremeValue::GetIsAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotExtremeResultServer wrapper method implementations
//

#pragma implementation_key(1550)
inline IRobotExtremeValuePtr IRobotExtremeResultServer::MinValue ( struct IRobotExtremeParams * _params ) {
    struct IRobotExtremeValue * _result = 0;
    HRESULT _hr = raw_MinValue(_params, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotExtremeValuePtr(_result, false);
}

#pragma implementation_key(1551)
inline IRobotExtremeValuePtr IRobotExtremeResultServer::MaxValue ( struct IRobotExtremeParams * _params ) {
    struct IRobotExtremeValue * _result = 0;
    HRESULT _hr = raw_MaxValue(_params, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotExtremeValuePtr(_result, false);
}

//
// interface IRobotUniversalResultAccess wrapper method implementations
//

#pragma implementation_key(1552)
inline long IRobotUniversalResultAccess::GetResultId ( ) {
    long _result = 0;
    HRESULT _hr = get_ResultId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1553)
inline void IRobotUniversalResultAccess::PutResultId ( long ret ) {
    HRESULT _hr = put_ResultId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1554)
inline long IRobotUniversalResultAccess::GetNode ( ) {
    long _result = 0;
    HRESULT _hr = get_Node(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1555)
inline void IRobotUniversalResultAccess::PutNode ( long ret ) {
    HRESULT _hr = put_Node(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1556)
inline long IRobotUniversalResultAccess::GetBar ( ) {
    long _result = 0;
    HRESULT _hr = get_Bar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1557)
inline void IRobotUniversalResultAccess::PutBar ( long ret ) {
    HRESULT _hr = put_Bar(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1558)
inline long IRobotUniversalResultAccess::GetDivCount ( ) {
    long _result = 0;
    HRESULT _hr = get_DivCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1559)
inline void IRobotUniversalResultAccess::PutDivCount ( long ret ) {
    HRESULT _hr = put_DivCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1560)
inline long IRobotUniversalResultAccess::GetDivPoint ( ) {
    long _result = 0;
    HRESULT _hr = get_DivPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1561)
inline void IRobotUniversalResultAccess::PutDivPoint ( long ret ) {
    HRESULT _hr = put_DivPoint(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1562)
inline double IRobotUniversalResultAccess::GetRelativePoint ( ) {
    double _result = 0;
    HRESULT _hr = get_RelativePoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1563)
inline void IRobotUniversalResultAccess::PutRelativePoint ( double ret ) {
    HRESULT _hr = put_RelativePoint(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1564)
inline long IRobotUniversalResultAccess::GetLoadCase ( ) {
    long _result = 0;
    HRESULT _hr = get_LoadCase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1565)
inline void IRobotUniversalResultAccess::PutLoadCase ( long ret ) {
    HRESULT _hr = put_LoadCase(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1566)
inline long IRobotUniversalResultAccess::GetLoadCaseCmpnt ( ) {
    long _result = 0;
    HRESULT _hr = get_LoadCaseCmpnt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1567)
inline void IRobotUniversalResultAccess::PutLoadCaseCmpnt ( long ret ) {
    HRESULT _hr = put_LoadCaseCmpnt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1568)
inline long IRobotUniversalResultAccess::GetMode ( ) {
    long _result = 0;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1569)
inline void IRobotUniversalResultAccess::PutMode ( long ret ) {
    HRESULT _hr = put_Mode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1570)
inline enum IRobotModeCombinationType IRobotUniversalResultAccess::GetModeCmb ( ) {
    enum IRobotModeCombinationType _result;
    HRESULT _hr = get_ModeCmb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1571)
inline void IRobotUniversalResultAccess::PutModeCmb ( enum IRobotModeCombinationType ret ) {
    HRESULT _hr = put_ModeCmb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1572)
inline VARIANT_BOOL IRobotUniversalResultAccess::GetAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Available(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1573)
inline double IRobotUniversalResultAccess::GetResultValue ( ) {
    double _result = 0;
    HRESULT _hr = get_ResultValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1574)
inline long IRobotUniversalResultAccess::GetPanel ( ) {
    long _result = 0;
    HRESULT _hr = get_Panel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1575)
inline void IRobotUniversalResultAccess::PutPanel ( long ret ) {
    HRESULT _hr = put_Panel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1576)
inline long IRobotUniversalResultAccess::GetElement ( ) {
    long _result = 0;
    HRESULT _hr = get_Element(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1577)
inline void IRobotUniversalResultAccess::PutElement ( long ret ) {
    HRESULT _hr = put_Element(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1578)
inline enum IRobotFeLayerType IRobotUniversalResultAccess::GetLayer ( ) {
    enum IRobotFeLayerType _result;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1579)
inline void IRobotUniversalResultAccess::PutLayer ( enum IRobotFeLayerType ret ) {
    HRESULT _hr = put_Layer(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1580)
inline double IRobotUniversalResultAccess::GetLayerArbitraryValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerArbitraryValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1581)
inline void IRobotUniversalResultAccess::PutLayerArbitraryValue ( double ret ) {
    HRESULT _hr = put_LayerArbitraryValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1582)
inline enum IRobotReinforceCalcMethods IRobotUniversalResultAccess::GetReinforceCalcMethod ( ) {
    enum IRobotReinforceCalcMethods _result;
    HRESULT _hr = get_ReinforceCalcMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1583)
inline void IRobotUniversalResultAccess::PutReinforceCalcMethod ( enum IRobotReinforceCalcMethods ret ) {
    HRESULT _hr = put_ReinforceCalcMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1584)
inline enum IRobotFeResultReducedCutPosition IRobotUniversalResultAccess::GetReducedCutPos ( ) {
    enum IRobotFeResultReducedCutPosition _result;
    HRESULT _hr = get_ReducedCutPos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1585)
inline void IRobotUniversalResultAccess::PutReducedCutPos ( enum IRobotFeResultReducedCutPosition ret ) {
    HRESULT _hr = put_ReducedCutPos(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1586)
inline HRESULT IRobotUniversalResultAccess::Reset ( ) {
    HRESULT _hr = raw_Reset();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1587)
inline HRESULT IRobotUniversalResultAccess::SetDirX ( enum IRobotObjLocalXDirDefinitionType _def_type, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetDirX(_def_type, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1588)
inline enum IRobotObjLocalXDirDefinitionType IRobotUniversalResultAccess::GetDirX ( double * _x, double * _y, double * _z ) {
    enum IRobotObjLocalXDirDefinitionType _result;
    HRESULT _hr = raw_GetDirX(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1589)
inline enum IRobotUniversalResultType IRobotUniversalResultAccess::GetResultType ( ) {
    enum IRobotUniversalResultType _result;
    HRESULT _hr = get_ResultType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1590)
inline _bstr_t IRobotUniversalResultAccess::GetStorey ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Storey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1591)
inline void IRobotUniversalResultAccess::PutStorey ( _bstr_t ret ) {
    HRESULT _hr = put_Storey(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1592)
inline HRESULT IRobotUniversalResultAccess::ResultValue3D ( double * _val1, double * _val2, double * _val3 ) {
    HRESULT _hr = raw_ResultValue3D(_val1, _val2, _val3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1593)
inline long IRobotUniversalResultAccess::GetCalcPoint ( ) {
    long _result = 0;
    HRESULT _hr = get_CalcPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1594)
inline void IRobotUniversalResultAccess::PutCalcPoint ( long ret ) {
    HRESULT _hr = put_CalcPoint(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1595)
inline VARIANT_BOOL IRobotUniversalResultAccess::GetLinearSupports ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LinearSupports(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1596)
inline void IRobotUniversalResultAccess::PutLinearSupports ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_LinearSupports(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotStructureValues wrapper method implementations
//

#pragma implementation_key(1597)
inline double IRobotStructureValues::GetMass ( long _case_num ) {
    double _result = 0;
    HRESULT _hr = raw_GetMass(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1598)
inline IRobotGeoPoint3DPtr IRobotStructureValues::GetG ( long _case_num ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = raw_GetG(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(1599)
inline IRobotGeoPoint3DPtr IRobotStructureValues::GetT ( long _case_num ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = raw_GetT(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(1600)
inline double IRobotStructureValues::GetIx ( long _case_num ) {
    double _result = 0;
    HRESULT _hr = raw_GetIx(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1601)
inline double IRobotStructureValues::GetIy ( long _case_num ) {
    double _result = 0;
    HRESULT _hr = raw_GetIy(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1602)
inline double IRobotStructureValues::GetIz ( long _case_num ) {
    double _result = 0;
    HRESULT _hr = raw_GetIz(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1603)
inline double IRobotStructureValues::GetEx2 ( long _case_num ) {
    double _result = 0;
    HRESULT _hr = raw_GetEx2(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1604)
inline double IRobotStructureValues::GetEy2 ( long _case_num ) {
    double _result = 0;
    HRESULT _hr = raw_GetEy2(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotResultQueryParams wrapper method implementations
//

#pragma implementation_key(1605)
inline IRobotMultiSelectionPtr IRobotResultQueryParams::GetSelection ( ) {
    struct IRobotMultiSelection * _result = 0;
    HRESULT _hr = get_Selection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMultiSelectionPtr(_result, false);
}

#pragma implementation_key(1606)
inline IRobotNumbersArrayPtr IRobotResultQueryParams::GetResultIds ( ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = get_ResultIds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

#pragma implementation_key(1607)
inline HRESULT IRobotResultQueryParams::Reset ( ) {
    HRESULT _hr = raw_Reset();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1608)
inline HRESULT IRobotResultQueryParams::SetParam ( enum IRobotResultParamType _param_id, const _variant_t & _param_value ) {
    HRESULT _hr = raw_SetParam(_param_id, _param_value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1609)
inline VARIANT_BOOL IRobotResultQueryParams::IsParamSet ( enum IRobotResultParamType _param_id ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsParamSet(_param_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1610)
inline _variant_t IRobotResultQueryParams::GetParam ( enum IRobotResultParamType _param_id ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_GetParam(_param_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

//
// interface IRobotResultRow wrapper method implementations
//

#pragma implementation_key(1611)
inline VARIANT_BOOL IRobotResultRow::IsAvailable ( long _result_id ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsAvailable(_result_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1612)
inline enum IRobotUniversalResultType IRobotResultRow::GetValueType ( long _result_id ) {
    enum IRobotUniversalResultType _result;
    HRESULT _hr = raw_GetValueType(_result_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1613)
inline _variant_t IRobotResultRow::GetValue ( long _result_id ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_GetValue(_result_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1614)
inline _variant_t IRobotResultRow::GetParam ( enum IRobotResultParamType _result_param_id ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_GetParam(_result_param_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

//
// interface IRobotResultRowSet wrapper method implementations
//

#pragma implementation_key(1615)
inline IRobotResultRowPtr IRobotResultRowSet::GetCurrentRow ( ) {
    struct IRobotResultRow * _result = 0;
    HRESULT _hr = get_CurrentRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotResultRowPtr(_result, false);
}

#pragma implementation_key(1616)
inline IRobotNumbersCollectionPtr IRobotResultRowSet::GetResultIds ( ) {
    struct IRobotNumbersCollection * _result = 0;
    HRESULT _hr = get_ResultIds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersCollectionPtr(_result, false);
}

#pragma implementation_key(1617)
inline VARIANT_BOOL IRobotResultRowSet::MoveFirst ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_MoveFirst(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1618)
inline VARIANT_BOOL IRobotResultRowSet::MoveNext ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_MoveNext(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1619)
inline HRESULT IRobotResultRowSet::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotStoreyValues wrapper method implementations
//

#pragma implementation_key(1620)
inline double IRobotStoreyValues::GetMass ( ) {
    double _result = 0;
    HRESULT _hr = get_Mass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1621)
inline IRobotGeoPoint3DPtr IRobotStoreyValues::GetG ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_G(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(1622)
inline IRobotGeoPoint3DPtr IRobotStoreyValues::GetR ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_R(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(1623)
inline double IRobotStoreyValues::GetIx ( ) {
    double _result = 0;
    HRESULT _hr = get_Ix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1624)
inline double IRobotStoreyValues::GetIy ( ) {
    double _result = 0;
    HRESULT _hr = get_Iy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1625)
inline double IRobotStoreyValues::GetIz ( ) {
    double _result = 0;
    HRESULT _hr = get_Iz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1626)
inline double IRobotStoreyValues::GetEx0 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ex0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1627)
inline double IRobotStoreyValues::GetEy0 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ey0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1628)
inline double IRobotStoreyValues::GetEx2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ex2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1629)
inline double IRobotStoreyValues::GetEy2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ey2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1630)
inline double IRobotStoreyValues::GetEx1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ex1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1631)
inline double IRobotStoreyValues::GetEy1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ey1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1632)
inline IRobotGeoPoint3DPtr IRobotStoreyValues::GetF ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_F(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

//
// interface IRobotStoreyDisplacements wrapper method implementations
//

#pragma implementation_key(1633)
inline double IRobotStoreyDisplacements::GetMaxUX ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1634)
inline long IRobotStoreyDisplacements::GetNodeMaxUX ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeMaxUX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1635)
inline double IRobotStoreyDisplacements::GetMaxUY ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1636)
inline long IRobotStoreyDisplacements::GetNodeMaxUY ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeMaxUY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1637)
inline double IRobotStoreyDisplacements::GetDrUX ( ) {
    double _result = 0;
    HRESULT _hr = get_DrUX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1638)
inline double IRobotStoreyDisplacements::GetDrUY ( ) {
    double _result = 0;
    HRESULT _hr = get_DrUY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1639)
inline double IRobotStoreyDisplacements::GetMinUX ( ) {
    double _result = 0;
    HRESULT _hr = get_MinUX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1640)
inline long IRobotStoreyDisplacements::GetNodeMinUX ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeMinUX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1641)
inline double IRobotStoreyDisplacements::GetMinUY ( ) {
    double _result = 0;
    HRESULT _hr = get_MinUY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1642)
inline long IRobotStoreyDisplacements::GetNodeMinUY ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeMinUY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotStoreyReducedForces wrapper method implementations
//

#pragma implementation_key(1643)
inline double IRobotStoreyReducedForces::GetFX ( ) {
    double _result = 0;
    HRESULT _hr = get_FX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1644)
inline double IRobotStoreyReducedForces::GetFY ( ) {
    double _result = 0;
    HRESULT _hr = get_FY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1645)
inline double IRobotStoreyReducedForces::GetFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1646)
inline double IRobotStoreyReducedForces::GetMX ( ) {
    double _result = 0;
    HRESULT _hr = get_MX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1647)
inline double IRobotStoreyReducedForces::GetMY ( ) {
    double _result = 0;
    HRESULT _hr = get_MY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1648)
inline double IRobotStoreyReducedForces::GetMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1649)
inline double IRobotStoreyReducedForces::GetFX_ToColumns ( ) {
    double _result = 0;
    HRESULT _hr = get_FX_ToColumns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1650)
inline double IRobotStoreyReducedForces::GetFY_ToColumns ( ) {
    double _result = 0;
    HRESULT _hr = get_FY_ToColumns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1651)
inline double IRobotStoreyReducedForces::GetFZ_ToColumns ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ_ToColumns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1652)
inline double IRobotStoreyReducedForces::GetFX_ToWalls ( ) {
    double _result = 0;
    HRESULT _hr = get_FX_ToWalls(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1653)
inline double IRobotStoreyReducedForces::GetFY_ToWalls ( ) {
    double _result = 0;
    HRESULT _hr = get_FY_ToWalls(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1654)
inline double IRobotStoreyReducedForces::GetFZ_ToWalls ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ_ToWalls(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotStoreyResultServer wrapper method implementations
//

#pragma implementation_key(1655)
inline IRobotStoreyValuesPtr IRobotStoreyResultServer::Values ( long _storey, long _case ) {
    struct IRobotStoreyValues * _result = 0;
    HRESULT _hr = raw_Values(_storey, _case, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStoreyValuesPtr(_result, false);
}

#pragma implementation_key(1656)
inline IRobotStoreyDisplacementsPtr IRobotStoreyResultServer::Displacements ( long _storey, long _case ) {
    struct IRobotStoreyDisplacements * _result = 0;
    HRESULT _hr = raw_Displacements(_storey, _case, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStoreyDisplacementsPtr(_result, false);
}

#pragma implementation_key(1657)
inline IRobotStoreyReducedForcesPtr IRobotStoreyResultServer::ReducedForces ( long _storey, long _case ) {
    struct IRobotStoreyReducedForces * _result = 0;
    HRESULT _hr = raw_ReducedForces(_storey, _case, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStoreyReducedForcesPtr(_result, false);
}

//
// interface IRobotCalculationResume wrapper method implementations
//

#pragma implementation_key(1658)
inline double IRobotCalculationResume::GetDiagonalStiffnessMatrixPrecision ( ) {
    double _result = 0;
    HRESULT _hr = get_DiagonalStiffnessMatrixPrecision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1659)
inline double IRobotCalculationResume::GetDiagonalStiffnessMatrixMin ( ) {
    double _result = 0;
    HRESULT _hr = get_DiagonalStiffnessMatrixMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1660)
inline double IRobotCalculationResume::GetDiagonalStiffnessMatrixMax ( ) {
    double _result = 0;
    HRESULT _hr = get_DiagonalStiffnessMatrixMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1661)
inline double IRobotCalculationResume::GetEnergyPrecision ( long _load_case ) {
    double _result = 0;
    HRESULT _hr = raw_GetEnergyPrecision(_load_case, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1662)
inline double IRobotCalculationResume::GetEnergy ( long _load_case ) {
    double _result = 0;
    HRESULT _hr = raw_GetEnergy(_load_case, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1663)
inline enum IRobotEquationSolvingMethod IRobotCalculationResume::GetEquationSolvingMethodUsed ( ) {
    enum IRobotEquationSolvingMethod _result;
    HRESULT _hr = get_EquationSolvingMethodUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotResultServer wrapper method implementations
//

#pragma implementation_key(1664)
inline long IRobotResultServer::GetAvailable ( ) {
    long _result = 0;
    HRESULT _hr = get_Available(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1665)
inline IRobotNodeResultServerPtr IRobotResultServer::GetNodes ( ) {
    struct IRobotNodeResultServer * _result = 0;
    HRESULT _hr = get_Nodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeResultServerPtr(_result, false);
}

#pragma implementation_key(1666)
inline IRobotBarResultServerPtr IRobotResultServer::GetBars ( ) {
    struct IRobotBarResultServer * _result = 0;
    HRESULT _hr = get_Bars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarResultServerPtr(_result, false);
}

#pragma implementation_key(1667)
inline IRobotAdvancedResultServerPtr IRobotResultServer::GetAdvanced ( ) {
    struct IRobotAdvancedResultServer * _result = 0;
    HRESULT _hr = get_Advanced(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotAdvancedResultServerPtr(_result, false);
}

#pragma implementation_key(1668)
inline IRobotFeResultServerPtr IRobotResultServer::GetFiniteElems ( ) {
    struct IRobotFeResultServer * _result = 0;
    HRESULT _hr = get_FiniteElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFeResultServerPtr(_result, false);
}

#pragma implementation_key(1669)
inline IRobotExtremeResultServerPtr IRobotResultServer::GetExtremes ( ) {
    struct IRobotExtremeResultServer * _result = 0;
    HRESULT _hr = get_Extremes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotExtremeResultServerPtr(_result, false);
}

#pragma implementation_key(1670)
inline IRobotUniversalResultAccessPtr IRobotResultServer::GetAny ( ) {
    struct IRobotUniversalResultAccess * _result = 0;
    HRESULT _hr = get_Any(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotUniversalResultAccessPtr(_result, false);
}

#pragma implementation_key(1671)
inline IRobotStructureValuesPtr IRobotResultServer::GetTotal ( ) {
    struct IRobotStructureValues * _result = 0;
    HRESULT _hr = get_Total(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructureValuesPtr(_result, false);
}

#pragma implementation_key(1672)
inline enum IRobotResultQueryReturnType IRobotResultServer::Query ( struct IRobotResultQueryParams * _params, struct IRobotResultRowSet * _ret_results ) {
    enum IRobotResultQueryReturnType _result;
    HRESULT _hr = raw_Query(_params, _ret_results, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1673)
inline IRobotStoreyResultServerPtr IRobotResultServer::GetStoreys ( ) {
    struct IRobotStoreyResultServer * _result = 0;
    HRESULT _hr = get_Storeys(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStoreyResultServerPtr(_result, false);
}

#pragma implementation_key(1674)
inline enum IRobotResultStatusType IRobotResultServer::GetStatus ( ) {
    enum IRobotResultStatusType _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1675)
inline IRobotCalculationResumePtr IRobotResultServer::GetCalculationResume ( ) {
    struct IRobotCalculationResume * _result = 0;
    HRESULT _hr = get_CalculationResume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCalculationResumePtr(_result, false);
}

//
// interface IRobotVehicleLoad wrapper method implementations
//

#pragma implementation_key(1676)
inline double IRobotVehicleLoad::GetF ( ) {
    double _result = 0;
    HRESULT _hr = get_F(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1677)
inline void IRobotVehicleLoad::PutF ( double ret ) {
    HRESULT _hr = put_F(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1678)
inline double IRobotVehicleLoad::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1679)
inline void IRobotVehicleLoad::PutX ( double ret ) {
    HRESULT _hr = put_X(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1680)
inline double IRobotVehicleLoad::GetS ( ) {
    double _result = 0;
    HRESULT _hr = get_S(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1681)
inline void IRobotVehicleLoad::PutS ( double ret ) {
    HRESULT _hr = put_S(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1682)
inline double IRobotVehicleLoad::GetDX ( ) {
    double _result = 0;
    HRESULT _hr = get_DX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1683)
inline void IRobotVehicleLoad::PutDX ( double ret ) {
    HRESULT _hr = put_DX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1684)
inline double IRobotVehicleLoad::GetDY ( ) {
    double _result = 0;
    HRESULT _hr = get_DY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1685)
inline void IRobotVehicleLoad::PutDY ( double ret ) {
    HRESULT _hr = put_DY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1686)
inline enum IRobotVehicleLoadType IRobotVehicleLoad::GetType ( ) {
    enum IRobotVehicleLoadType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1687)
inline void IRobotVehicleLoad::PutType ( enum IRobotVehicleLoadType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotVehicleLoadMngr wrapper method implementations
//

#pragma implementation_key(1688)
inline long IRobotVehicleLoadMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1689)
inline IRobotVehicleLoadPtr IRobotVehicleLoadMngr::Get ( long _idx ) {
    struct IRobotVehicleLoad * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotVehicleLoadPtr(_result, false);
}

#pragma implementation_key(1690)
inline HRESULT IRobotVehicleLoadMngr::Delete ( long _idx ) {
    HRESULT _hr = raw_Delete(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1691)
inline IRobotVehicleLoadPtr IRobotVehicleLoadMngr::New ( ) {
    struct IRobotVehicleLoad * _result = 0;
    HRESULT _hr = raw_New(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotVehicleLoadPtr(_result, false);
}

//
// interface IRobotVehicleData wrapper method implementations
//

#pragma implementation_key(1692)
inline double IRobotVehicleData::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1693)
inline void IRobotVehicleData::PutB ( double ret ) {
    HRESULT _hr = put_B(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1694)
inline double IRobotVehicleData::Getd1 ( ) {
    double _result = 0;
    HRESULT _hr = get_d1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1695)
inline void IRobotVehicleData::Putd1 ( double ret ) {
    HRESULT _hr = put_d1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1696)
inline double IRobotVehicleData::Getd2 ( ) {
    double _result = 0;
    HRESULT _hr = get_d2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1697)
inline void IRobotVehicleData::Putd2 ( double ret ) {
    HRESULT _hr = put_d2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1698)
inline IRobotVehicleLoadMngrPtr IRobotVehicleData::GetLoads ( ) {
    struct IRobotVehicleLoadMngr * _result = 0;
    HRESULT _hr = get_Loads(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotVehicleLoadMngrPtr(_result, false);
}

#pragma implementation_key(1699)
inline VARIANT_BOOL IRobotVehicleData::LoadFromDBase ( _bstr_t _vehicle_name, _bstr_t _db_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromDBase(_vehicle_name, _db_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1700)
inline VARIANT_BOOL IRobotVehicleData::StoreToDBase ( _bstr_t _vehicle_name, _bstr_t _db_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_StoreToDBase(_vehicle_name, _db_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface _IRobotStructureEvents wrapper method implementations
//

#pragma implementation_key(1701)
inline HRESULT _IRobotStructureEvents::ProgressNotify ( _bstr_t strText, long nType, long lParam, long wParam, long * nReturnValue ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0008\x0003\x0003\x0003\x4003", (BSTR)strText, nType, lParam, wParam, nReturnValue);
    return _result;
}

#pragma implementation_key(1702)
inline HRESULT _IRobotStructureEvents::ResultStatusChanged ( enum IRobotResultStatusType _new_status ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0003", _new_status);
    return _result;
}

//
// interface IRobotObjEdgeSelection wrapper method implementations
//

#pragma implementation_key(1703)
inline long IRobotObjEdgeSelection::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1704)
inline HRESULT IRobotObjEdgeSelection::Get ( long _idx, long * _obj_num, long * _edge_idx ) {
    HRESULT _hr = raw_Get(_idx, _obj_num, _edge_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1705)
inline _bstr_t IRobotObjEdgeSelection::ToText ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ToText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1706)
inline HRESULT IRobotObjEdgeSelection::FromText ( _bstr_t _sel_text ) {
    HRESULT _hr = raw_FromText(_sel_text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSelectionFactory wrapper method implementations
//

#pragma implementation_key(1707)
inline IRobotSelectionPtr IRobotSelectionFactory::Create ( enum IRobotObjectType object_type ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_Create(object_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1708)
inline IRobotMultiSelectionPtr IRobotSelectionFactory::CreateMulti ( ) {
    struct IRobotMultiSelection * _result = 0;
    HRESULT _hr = raw_CreateMulti(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMultiSelectionPtr(_result, false);
}

#pragma implementation_key(1709)
inline IRobotSelectionPtr IRobotSelectionFactory::Get ( enum IRobotObjectType obj_type ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_Get(obj_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1710)
inline IRobotSelectionPtr IRobotSelectionFactory::CreateFull ( enum IRobotObjectType obj_type ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_CreateFull(obj_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1711)
inline IRobotSelectionPtr IRobotSelectionFactory::CreatePredefined ( enum IRobotPredefinedSelection predefined_sel ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_CreatePredefined(predefined_sel, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1712)
inline IRobotSelectionPtr IRobotSelectionFactory::CreateByLabel ( enum IRobotObjectType _obj_type, enum IRobotLabelType _label_type, _bstr_t _label_name ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_CreateByLabel(_obj_type, _label_type, _label_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1713)
inline IRobotSelectionPtr IRobotSelectionFactory::CreateByStorey ( enum IRobotObjectType _obj_type, _bstr_t _storey ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_CreateByStorey(_obj_type, _storey, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1714)
inline IRobotObjEdgeSelectionPtr IRobotSelectionFactory::CreateEdgeSelection ( ) {
    struct IRobotObjEdgeSelection * _result = 0;
    HRESULT _hr = raw_CreateEdgeSelection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjEdgeSelectionPtr(_result, false);
}

//
// interface IRobotObjAttributes wrapper method implementations
//

#pragma implementation_key(1715)
inline long IRobotObjAttributes::GetMeshed ( ) {
    long _result = 0;
    HRESULT _hr = get_Meshed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1716)
inline void IRobotObjAttributes::PutMeshed ( long ret ) {
    HRESULT _hr = put_Meshed(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1717)
inline long IRobotObjAttributes::GetDirZ ( ) {
    long _result = 0;
    HRESULT _hr = get_DirZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1718)
inline void IRobotObjAttributes::PutDirZ ( long ret ) {
    HRESULT _hr = put_DirZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1719)
inline HRESULT IRobotObjAttributes::SetLabel ( enum IRobotLabelType lab_type, _bstr_t lab_name ) {
    HRESULT _hr = raw_SetLabel(lab_type, lab_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1720)
inline long IRobotObjAttributes::HasLabel ( enum IRobotLabelType lab_type ) {
    long _result = 0;
    HRESULT _hr = raw_HasLabel(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1721)
inline _bstr_t IRobotObjAttributes::GetLabelName ( enum IRobotLabelType lab_type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetLabelName(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1722)
inline HRESULT IRobotObjAttributes::RemoveLabel ( enum IRobotLabelType lab_type ) {
    HRESULT _hr = raw_RemoveLabel(lab_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1723)
inline IRobotCollectionPtr IRobotObjAttributes::GetLabels ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetLabels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(1724)
inline HRESULT IRobotObjAttributes::SetDirX ( enum IRobotObjLocalXDirDefinitionType def_type, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetDirX(def_type, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1725)
inline enum IRobotObjLocalXDirDefinitionType IRobotObjAttributes::GetDirX ( double * _x, double * _y, double * _z ) {
    enum IRobotObjLocalXDirDefinitionType _result;
    HRESULT _hr = raw_GetDirX(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1726)
inline HRESULT IRobotObjAttributes::GetLCS ( struct IRobotGeoPoint3D * _x, struct IRobotGeoPoint3D * _y, struct IRobotGeoPoint3D * _z ) {
    HRESULT _hr = raw_GetLCS(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1727)
inline HRESULT IRobotObjAttributes::GetLCSDisplayPosition ( struct IRobotGeoPoint3D * _pt ) {
    HRESULT _hr = raw_GetLCSDisplayPosition(_pt);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotGeoObject wrapper method implementations
//

#pragma implementation_key(1728)
inline enum IRobotGeoObjectType IRobotGeoObject::GetType ( ) {
    enum IRobotGeoObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1729)
inline HRESULT IRobotGeoObject::Initialize ( ) {
    HRESULT _hr = raw_Initialize();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotObjPart wrapper method implementations
//

#pragma implementation_key(1730)
inline IRobotObjAttributesPtr IRobotObjPart::GetAttribs ( ) {
    struct IRobotObjAttributes * _result = 0;
    HRESULT _hr = get_Attribs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjAttributesPtr(_result, false);
}

#pragma implementation_key(1731)
inline enum IRobotObjPartType IRobotObjPart::GetType ( ) {
    enum IRobotObjPartType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1732)
inline IRobotGeoObjectPtr IRobotObjPart::GetGeometry ( ) {
    struct IRobotGeoObject * _result = 0;
    HRESULT _hr = raw_GetGeometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoObjectPtr(_result, false);
}

//
// interface IRobotGeoCurveDiv wrapper method implementations
//

#pragma implementation_key(1733)
inline long IRobotGeoCurveDiv::GetMode ( ) {
    long _result = 0;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1734)
inline void IRobotGeoCurveDiv::PutMode ( long ret ) {
    HRESULT _hr = put_Mode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1735)
inline long IRobotGeoCurveDiv::GetN ( ) {
    long _result = 0;
    HRESULT _hr = get_N(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1736)
inline void IRobotGeoCurveDiv::PutN ( long ret ) {
    HRESULT _hr = put_N(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1737)
inline double IRobotGeoCurveDiv::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1738)
inline void IRobotGeoCurveDiv::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1739)
inline VARIANT_BOOL IRobotGeoCurveDiv::GetIsAnalytical ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAnalytical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1740)
inline void IRobotGeoCurveDiv::PutIsAnalytical ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsAnalytical(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotObjOperation wrapper method implementations
//

#pragma implementation_key(1741)
inline enum IRobotObjOperationType IRobotObjOperation::GetType ( ) {
    enum IRobotObjOperationType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotObjModification wrapper method implementations
//

#pragma implementation_key(1742)
inline enum IRobotObjModificationType IRobotObjModification::GetType ( ) {
    enum IRobotObjModificationType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1743)
inline IRobotCollectionPtr IRobotObjModification::GetOperations ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Operations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(1744)
inline long IRobotObjModification::GetFilled ( ) {
    long _result = 0;
    HRESULT _hr = get_Filled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1745)
inline void IRobotObjModification::PutFilled ( long ret ) {
    HRESULT _hr = put_Filled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1746)
inline long IRobotObjModification::GetNDiv ( ) {
    long _result = 0;
    HRESULT _hr = get_NDiv(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1747)
inline void IRobotObjModification::PutNDiv ( long ret ) {
    HRESULT _hr = put_NDiv(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1748)
inline HRESULT IRobotObjModification::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1749)
inline HRESULT IRobotObjModification::Add ( struct IRobotObjOperation * operation ) {
    HRESULT _hr = raw_Add(operation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotObjPartMain wrapper method implementations
//

#pragma implementation_key(1750)
inline IRobotGeoObjectPtr IRobotObjPartMain::GetGeometry ( ) {
    struct IRobotGeoObject * _result = 0;
    HRESULT _hr = get_Geometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoObjectPtr(_result, false);
}

#pragma implementation_key(1751)
inline void IRobotObjPartMain::PutGeometry ( struct IRobotGeoObject * ret ) {
    HRESULT _hr = put_Geometry(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1752)
inline IRobotCollectionPtr IRobotObjPartMain::GetModifications ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Modifications(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(1753)
inline IRobotGeoCurveDivPtr IRobotObjPartMain::GetCurveDiv ( ) {
    struct IRobotGeoCurveDiv * _result = 0;
    HRESULT _hr = get_CurveDiv(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoCurveDivPtr(_result, false);
}

#pragma implementation_key(1754)
inline void IRobotObjPartMain::PutCurveDiv ( struct IRobotGeoCurveDiv * ret ) {
    HRESULT _hr = put_CurveDiv(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1755)
inline IRobotCollectionPtr IRobotObjPartMain::GetDefPoints ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_DefPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(1756)
inline IRobotCollectionPtr IRobotObjPartMain::GetEdges ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Edges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(1757)
inline HRESULT IRobotObjPartMain::ClearModifications ( ) {
    HRESULT _hr = raw_ClearModifications();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1758)
inline HRESULT IRobotObjPartMain::AddModification ( struct IRobotObjModification * _mod_def ) {
    HRESULT _hr = raw_AddModification(_mod_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1759)
inline _bstr_t IRobotObjPartMain::GetFiniteElems ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FiniteElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1760)
inline IRobotCollectionPtr IRobotObjPartMain::GetModelPoints ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_ModelPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(1761)
inline _bstr_t IRobotObjPartMain::GetNodes ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Nodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1762)
inline double IRobotObjPartMain::CalcArea ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalcArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1763)
inline double IRobotObjPartMain::CalcVol ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalcVol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotObjPartReference wrapper method implementations
//

#pragma implementation_key(1764)
inline _bstr_t IRobotObjPartReference::GetFiniteElems ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FiniteElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1765)
inline _bstr_t IRobotObjPartReference::GetNodes ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Nodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1766)
inline double IRobotObjPartReference::CalcArea ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalcArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1767)
inline double IRobotObjPartReference::CalcVol ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalcVol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotMeshVolumeParams wrapper method implementations
//

#pragma implementation_key(1768)
inline double IRobotMeshVolumeParams::GetMeshDensity ( ) {
    double _result = 0;
    HRESULT _hr = get_MeshDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1769)
inline void IRobotMeshVolumeParams::PutMeshDensity ( double ret ) {
    HRESULT _hr = put_MeshDensity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1770)
inline VARIANT_BOOL IRobotMeshVolumeParams::GetAdditionalSurfaceMeshing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AdditionalSurfaceMeshing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1771)
inline void IRobotMeshVolumeParams::PutAdditionalSurfaceMeshing ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AdditionalSurfaceMeshing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1772)
inline enum IRobotMeshVolumetricFEType IRobotMeshVolumeParams::GetFiniteElemsType ( ) {
    enum IRobotMeshVolumetricFEType _result;
    HRESULT _hr = get_FiniteElemsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1773)
inline void IRobotMeshVolumeParams::PutFiniteElemsType ( enum IRobotMeshVolumetricFEType ret ) {
    HRESULT _hr = put_FiniteElemsType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotMeshMethod wrapper method implementations
//

#pragma implementation_key(1774)
inline enum IRobotMeshMethodType IRobotMeshMethod::GetMethod ( ) {
    enum IRobotMeshMethodType _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1775)
inline void IRobotMeshMethod::PutMethod ( enum IRobotMeshMethodType ret ) {
    HRESULT _hr = put_Method(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1776)
inline enum IRobotMeshForcingRatio IRobotMeshMethod::GetForcingRatio ( ) {
    enum IRobotMeshForcingRatio _result;
    HRESULT _hr = get_ForcingRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1777)
inline void IRobotMeshMethod::PutForcingRatio ( enum IRobotMeshForcingRatio ret ) {
    HRESULT _hr = put_ForcingRatio(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1778)
inline enum IRobotMeshImplementDegree IRobotMeshMethod::GetImplementDegree ( ) {
    enum IRobotMeshImplementDegree _result;
    HRESULT _hr = get_ImplementDegree(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1779)
inline void IRobotMeshMethod::PutImplementDegree ( enum IRobotMeshImplementDegree ret ) {
    HRESULT _hr = put_ImplementDegree(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotMeshGeneration wrapper method implementations
//

#pragma implementation_key(1780)
inline enum IRobotMeshGenerationType IRobotMeshGeneration::GetType ( ) {
    enum IRobotMeshGenerationType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1781)
inline void IRobotMeshGeneration::PutType ( enum IRobotMeshGenerationType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1782)
inline double IRobotMeshGeneration::GetDivision1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Division1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1783)
inline void IRobotMeshGeneration::PutDivision1 ( double ret ) {
    HRESULT _hr = put_Division1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1784)
inline double IRobotMeshGeneration::GetDivision2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Division2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1785)
inline void IRobotMeshGeneration::PutDivision2 ( double ret ) {
    HRESULT _hr = put_Division2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1786)
inline double IRobotMeshGeneration::GetElementSize ( ) {
    double _result = 0;
    HRESULT _hr = get_ElementSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1787)
inline void IRobotMeshGeneration::PutElementSize ( double ret ) {
    HRESULT _hr = put_ElementSize(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotMeshSurfaceFiniteElems wrapper method implementations
//

#pragma implementation_key(1788)
inline enum IRobotMeshSurfaceFEType IRobotMeshSurfaceFiniteElems::GetType ( ) {
    enum IRobotMeshSurfaceFEType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1789)
inline void IRobotMeshSurfaceFiniteElems::PutType ( enum IRobotMeshSurfaceFEType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1790)
inline double IRobotMeshSurfaceFiniteElems::GetConversionCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_ConversionCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1791)
inline void IRobotMeshSurfaceFiniteElems::PutConversionCoeff ( double ret ) {
    HRESULT _hr = put_ConversionCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1792)
inline enum IRobotMeshForcingRatio IRobotMeshSurfaceFiniteElems::GetForcingRatio ( ) {
    enum IRobotMeshForcingRatio _result;
    HRESULT _hr = get_ForcingRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1793)
inline void IRobotMeshSurfaceFiniteElems::PutForcingRatio ( enum IRobotMeshForcingRatio ret ) {
    HRESULT _hr = put_ForcingRatio(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotMeshCoonsParams wrapper method implementations
//

#pragma implementation_key(1794)
inline enum IRobotMeshPanelDivType IRobotMeshCoonsParams::GetPanelDivisionType ( ) {
    enum IRobotMeshPanelDivType _result;
    HRESULT _hr = get_PanelDivisionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1795)
inline void IRobotMeshCoonsParams::PutPanelDivisionType ( enum IRobotMeshPanelDivType ret ) {
    HRESULT _hr = put_PanelDivisionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1796)
inline enum IRobotMeshForcingRatio IRobotMeshCoonsParams::GetForcingRatio ( ) {
    enum IRobotMeshForcingRatio _result;
    HRESULT _hr = get_ForcingRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1797)
inline void IRobotMeshCoonsParams::PutForcingRatio ( enum IRobotMeshForcingRatio ret ) {
    HRESULT _hr = put_ForcingRatio(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotMeshDelaunayParams wrapper method implementations
//

#pragma implementation_key(1798)
inline enum IRobotMeshDelaunayType IRobotMeshDelaunayParams::GetType ( ) {
    enum IRobotMeshDelaunayType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1799)
inline void IRobotMeshDelaunayParams::PutType ( enum IRobotMeshDelaunayType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1800)
inline double IRobotMeshDelaunayParams::GetH_max ( ) {
    double _result = 0;
    HRESULT _hr = get_H_max(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1801)
inline void IRobotMeshDelaunayParams::PutH_max ( double ret ) {
    HRESULT _hr = put_H_max(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1802)
inline double IRobotMeshDelaunayParams::GetQ ( ) {
    double _result = 0;
    HRESULT _hr = get_Q(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1803)
inline void IRobotMeshDelaunayParams::PutQ ( double ret ) {
    HRESULT _hr = put_Q(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1804)
inline VARIANT_BOOL IRobotMeshDelaunayParams::GetEmittersDefault ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EmittersDefault(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1805)
inline void IRobotMeshDelaunayParams::PutEmittersDefault ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_EmittersDefault(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1806)
inline VARIANT_BOOL IRobotMeshDelaunayParams::GetEmittersUser ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EmittersUser(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1807)
inline void IRobotMeshDelaunayParams::PutEmittersUser ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_EmittersUser(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1808)
inline VARIANT_BOOL IRobotMeshDelaunayParams::GetEmittersSmoothing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EmittersSmoothing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1809)
inline void IRobotMeshDelaunayParams::PutEmittersSmoothing ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_EmittersSmoothing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1810)
inline double IRobotMeshDelaunayParams::GetH0 ( ) {
    double _result = 0;
    HRESULT _hr = get_H0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1811)
inline void IRobotMeshDelaunayParams::PutH0 ( double ret ) {
    HRESULT _hr = put_H0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1812)
inline VARIANT_BOOL IRobotMeshDelaunayParams::GetRegularMesh ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RegularMesh(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1813)
inline void IRobotMeshDelaunayParams::PutRegularMesh ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RegularMesh(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1814)
inline long IRobotMeshDelaunayParams::GetNumberOfLevels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfLevels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1815)
inline void IRobotMeshDelaunayParams::PutNumberOfLevels ( long ret ) {
    HRESULT _hr = put_NumberOfLevels(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1816)
inline double IRobotMeshDelaunayParams::GetMeshDensity ( ) {
    double _result = 0;
    HRESULT _hr = get_MeshDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1817)
inline void IRobotMeshDelaunayParams::PutMeshDensity ( double ret ) {
    HRESULT _hr = put_MeshDensity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotMeshSurfaceParams wrapper method implementations
//

#pragma implementation_key(1818)
inline IRobotMeshMethodPtr IRobotMeshSurfaceParams::GetMethod ( ) {
    struct IRobotMeshMethod * _result = 0;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshMethodPtr(_result, false);
}

#pragma implementation_key(1819)
inline IRobotMeshGenerationPtr IRobotMeshSurfaceParams::GetGeneration ( ) {
    struct IRobotMeshGeneration * _result = 0;
    HRESULT _hr = get_Generation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshGenerationPtr(_result, false);
}

#pragma implementation_key(1820)
inline IRobotMeshSurfaceFiniteElemsPtr IRobotMeshSurfaceParams::GetFiniteElems ( ) {
    struct IRobotMeshSurfaceFiniteElems * _result = 0;
    HRESULT _hr = get_FiniteElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshSurfaceFiniteElemsPtr(_result, false);
}

#pragma implementation_key(1821)
inline IRobotMeshCoonsParamsPtr IRobotMeshSurfaceParams::GetCoons ( ) {
    struct IRobotMeshCoonsParams * _result = 0;
    HRESULT _hr = get_Coons(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshCoonsParamsPtr(_result, false);
}

#pragma implementation_key(1822)
inline IRobotMeshDelaunayParamsPtr IRobotMeshSurfaceParams::GetDelaunay ( ) {
    struct IRobotMeshDelaunayParams * _result = 0;
    HRESULT _hr = get_Delaunay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshDelaunayParamsPtr(_result, false);
}

//
// interface IRobotMeshParams wrapper method implementations
//

#pragma implementation_key(1823)
inline IRobotMeshVolumeParamsPtr IRobotMeshParams::GetVolumeParams ( ) {
    struct IRobotMeshVolumeParams * _result = 0;
    HRESULT _hr = get_VolumeParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshVolumeParamsPtr(_result, false);
}

#pragma implementation_key(1824)
inline IRobotMeshSurfaceParamsPtr IRobotMeshParams::GetSurfaceParams ( ) {
    struct IRobotMeshSurfaceParams * _result = 0;
    HRESULT _hr = get_SurfaceParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshSurfaceParamsPtr(_result, false);
}

#pragma implementation_key(1825)
inline enum IRobotMeshAccessType IRobotMeshParams::GetFlag ( ) {
    enum IRobotMeshAccessType _result;
    HRESULT _hr = get_Flag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1826)
inline enum IRobotMeshType IRobotMeshParams::GetMeshType ( ) {
    enum IRobotMeshType _result;
    HRESULT _hr = get_MeshType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1827)
inline void IRobotMeshParams::PutMeshType ( enum IRobotMeshType ret ) {
    HRESULT _hr = put_MeshType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotObjMesh wrapper method implementations
//

#pragma implementation_key(1828)
inline VARIANT_BOOL IRobotObjMesh::GetIsGenerated ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsGenerated(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1829)
inline VARIANT_BOOL IRobotObjMesh::GetFreeze ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Freeze(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1830)
inline void IRobotObjMesh::PutFreeze ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Freeze(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1831)
inline HRESULT IRobotObjMesh::Generate ( ) {
    HRESULT _hr = raw_Generate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1832)
inline HRESULT IRobotObjMesh::Remove ( ) {
    HRESULT _hr = raw_Remove();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1833)
inline IRobotMeshParamsPtr IRobotObjMesh::GetParams ( ) {
    struct IRobotMeshParams * _result = 0;
    HRESULT _hr = get_Params(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshParamsPtr(_result, false);
}

#pragma implementation_key(1834)
inline HRESULT IRobotObjMesh::GetQuality ( double * _out_q1, double * _out_q2, BSTR * _out_fes, double _in_precision, _bstr_t _in_objs ) {
    HRESULT _hr = raw_GetQuality(_out_q1, _out_q2, _out_fes, _in_precision, _in_objs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1835)
inline HRESULT IRobotObjMesh::SetBasePoints ( struct IRobotNumbersArray * _model_points ) {
    HRESULT _hr = raw_SetBasePoints(_model_points);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1836)
inline IRobotNumbersArrayPtr IRobotObjMesh::GetBasePoints ( ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = raw_GetBasePoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

//
// interface IRobotFiniteElementData wrapper method implementations
//

#pragma implementation_key(1837)
inline long IRobotFiniteElementData::GetNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1838)
inline long IRobotFiniteElementData::GetNodeCount ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1839)
inline long IRobotFiniteElementData::GetNode ( long _node_idx, double * _ret_x, double * _ret_y, double * _ret_z ) {
    long _result = 0;
    HRESULT _hr = raw_GetNode(_node_idx, _ret_x, _ret_y, _ret_z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1840)
inline long IRobotFiniteElementData::GetObject ( ) {
    long _result = 0;
    HRESULT _hr = get_Object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFiniteElementDataSet wrapper method implementations
//

#pragma implementation_key(1841)
inline long IRobotFiniteElementDataSet::GetElemCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ElemCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1842)
inline long IRobotFiniteElementDataSet::GetElem ( long _elem_idx, struct IRobotFiniteElementData * _elem_data ) {
    long _result = 0;
    HRESULT _hr = raw_GetElem(_elem_idx, _elem_data, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1843)
inline long IRobotFiniteElementDataSet::GetObjectCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1844)
inline long IRobotFiniteElementDataSet::GetObjectNumber ( long _obj_idx ) {
    long _result = 0;
    HRESULT _hr = raw_GetObjectNumber(_obj_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1845)
inline long IRobotFiniteElementDataSet::GetElemCountForObject ( long _obj_idx ) {
    long _result = 0;
    HRESULT _hr = raw_GetElemCountForObject(_obj_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1846)
inline long IRobotFiniteElementDataSet::GetElemForObject ( long _obj_idx, long _elem_idx, struct IRobotFiniteElementData * _ret_data ) {
    long _result = 0;
    HRESULT _hr = raw_GetElemForObject(_obj_idx, _elem_idx, _ret_data, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotObjObject wrapper method implementations
//

#pragma implementation_key(1847)
inline IRobotObjPartMainPtr IRobotObjObject::GetMain ( ) {
    struct IRobotObjPartMain * _result = 0;
    HRESULT _hr = get_Main(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjPartMainPtr(_result, false);
}

#pragma implementation_key(1848)
inline long IRobotObjObject::GetPartsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_PartsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1849)
inline enum IRobotObjPartType IRobotObjObject::GetPartType ( long part_num ) {
    enum IRobotObjPartType _result;
    HRESULT _hr = raw_GetPartType(part_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1850)
inline IRobotObjPartPtr IRobotObjObject::GetPart ( long _part_num ) {
    struct IRobotObjPart * _result = 0;
    HRESULT _hr = raw_GetPart(_part_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjPartPtr(_result, false);
}

#pragma implementation_key(1851)
inline HRESULT IRobotObjObject::Initialize ( ) {
    HRESULT _hr = raw_Initialize();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1852)
inline HRESULT IRobotObjObject::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1853)
inline long IRobotObjObject::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1854)
inline IRobotObjPartReferencePtr IRobotObjObject::GetReference ( ) {
    struct IRobotObjPartReference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjPartReferencePtr(_result, false);
}

#pragma implementation_key(1855)
inline _bstr_t IRobotObjObject::GetFiniteElems ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FiniteElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1856)
inline long IRobotObjObject::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1857)
inline void IRobotObjObject::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1858)
inline IRobotObjMeshPtr IRobotObjObject::GetMesh ( ) {
    struct IRobotObjMesh * _result = 0;
    HRESULT _hr = get_Mesh(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjMeshPtr(_result, false);
}

#pragma implementation_key(1859)
inline _bstr_t IRobotObjObject::GetNodes ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Nodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1860)
inline VARIANT_BOOL IRobotObjObject::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1861)
inline double IRobotObjObject::CalcArea ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalcArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1862)
inline double IRobotObjObject::CalcVol ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalcVol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1863)
inline _bstr_t IRobotObjObject::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1864)
inline _bstr_t IRobotObjObject::GetNameTemplate ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NameTemplate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1865)
inline void IRobotObjObject::PutNameTemplate ( _bstr_t ret ) {
    HRESULT _hr = put_NameTemplate(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1866)
inline HRESULT IRobotObjObject::GetFiniteElemsData ( struct IRobotFiniteElementDataSet * _ret_data ) {
    HRESULT _hr = raw_GetFiniteElemsData(_ret_data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1867)
inline enum IRobotObjectStructuralType IRobotObjObject::GetStructuralType ( ) {
    enum IRobotObjectStructuralType _result;
    HRESULT _hr = get_StructuralType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1868)
inline void IRobotObjObject::PutStructuralType ( enum IRobotObjectStructuralType ret ) {
    HRESULT _hr = put_StructuralType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1869)
inline long IRobotObjObject::GetHost ( ) {
    long _result = 0;
    HRESULT _hr = get_Host(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1870)
inline void IRobotObjObject::PutHost ( long ret ) {
    HRESULT _hr = put_Host(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1871)
inline IRobotSelectionPtr IRobotObjObject::GetHostedObjects ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_GetHostedObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1872)
inline HRESULT IRobotObjObject::SetHostedObjects ( struct IRobotSelection * _obj_sel ) {
    HRESULT _hr = raw_SetHostedObjects(_obj_sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1873)
inline VARIANT_BOOL IRobotObjObject::GetAnalyzeTTMethod ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AnalyzeTTMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1874)
inline void IRobotObjObject::PutAnalyzeTTMethod ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AnalyzeTTMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLinearReleaseDef wrapper method implementations
//

#pragma implementation_key(1875)
inline long IRobotLinearReleaseDef::GetEdgeObject ( ) {
    long _result = 0;
    HRESULT _hr = get_EdgeObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1876)
inline void IRobotLinearReleaseDef::PutEdgeObject ( long ret ) {
    HRESULT _hr = put_EdgeObject(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1877)
inline long IRobotLinearReleaseDef::GetEdgeIdx ( ) {
    long _result = 0;
    HRESULT _hr = get_EdgeIdx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1878)
inline void IRobotLinearReleaseDef::PutEdgeIdx ( long ret ) {
    HRESULT _hr = put_EdgeIdx(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1879)
inline long IRobotLinearReleaseDef::GetObject ( ) {
    long _result = 0;
    HRESULT _hr = get_Object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1880)
inline void IRobotLinearReleaseDef::PutObject ( long ret ) {
    HRESULT _hr = put_Object(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1881)
inline long IRobotLinearReleaseDef::GetPartIdx ( ) {
    long _result = 0;
    HRESULT _hr = get_PartIdx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1882)
inline void IRobotLinearReleaseDef::PutPartIdx ( long ret ) {
    HRESULT _hr = put_PartIdx(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1883)
inline _bstr_t IRobotLinearReleaseDef::GetLabelName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LabelName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1884)
inline void IRobotLinearReleaseDef::PutLabelName ( _bstr_t ret ) {
    HRESULT _hr = put_LabelName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLinearReleaseDefList wrapper method implementations
//

#pragma implementation_key(1885)
inline long IRobotLinearReleaseDefList::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1886)
inline long IRobotLinearReleaseDefList::Add ( long _edge_obj_num, long _edge_idx, long _obj_num, long _part_idx, _bstr_t _label_name ) {
    long _result = 0;
    HRESULT _hr = raw_Add(_edge_obj_num, _edge_idx, _obj_num, _part_idx, _label_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1887)
inline HRESULT IRobotLinearReleaseDefList::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1888)
inline VARIANT_BOOL IRobotLinearReleaseDefList::Get ( long _idx, long * _edge_obj_num, long * _edge_idx, long * _obj_num, long * _part_idx, BSTR * _label_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Get(_idx, _edge_obj_num, _edge_idx, _obj_num, _part_idx, _label_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1889)
inline HRESULT IRobotLinearReleaseDefList::Remove ( long _idx ) {
    HRESULT _hr = raw_Remove(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotLinearReleaseServer wrapper method implementations
//

#pragma implementation_key(1890)
inline long IRobotLinearReleaseServer::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1891)
inline VARIANT_BOOL IRobotLinearReleaseServer::Set ( long _edge_obj_num, long _edge_idx, long _obj_num, long _part_idx, _bstr_t _label_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Set(_edge_obj_num, _edge_idx, _obj_num, _part_idx, _label_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1892)
inline HRESULT IRobotLinearReleaseServer::Remove ( long _def_idx ) {
    HRESULT _hr = raw_Remove(_def_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1893)
inline long IRobotLinearReleaseServer::Find ( long _edge_obj_num, long _edge_idx, long _obj_num, long _part_idx ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_edge_obj_num, _edge_idx, _obj_num, _part_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1894)
inline IRobotLabelPtr IRobotLinearReleaseServer::GetLabel ( long _def_idx ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_GetLabel(_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(1895)
inline IRobotLinearReleaseDefPtr IRobotLinearReleaseServer::Get ( long _def_idx ) {
    struct IRobotLinearReleaseDef * _result = 0;
    HRESULT _hr = raw_Get(_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLinearReleaseDefPtr(_result, false);
}

#pragma implementation_key(1896)
inline long IRobotLinearReleaseServer::FindObject ( long _obj_num, long _part_idx, long _start_def_idx ) {
    long _result = 0;
    HRESULT _hr = raw_FindObject(_obj_num, _part_idx, _start_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1897)
inline long IRobotLinearReleaseServer::FindEdge ( long _edge_obj, long _edge_idx, long _start_def_idx ) {
    long _result = 0;
    HRESULT _hr = raw_FindEdge(_edge_obj, _edge_idx, _start_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1898)
inline long IRobotLinearReleaseServer::FindLabel ( _bstr_t _label_name, long _start_def_idx ) {
    long _result = 0;
    HRESULT _hr = raw_FindLabel(_label_name, _start_def_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1899)
inline HRESULT IRobotLinearReleaseServer::SetMany ( struct IRobotLinearReleaseDefList * _deflist ) {
    HRESULT _hr = raw_SetMany(_deflist);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotPointsArray wrapper method implementations
//

#pragma implementation_key(1900)
inline long IRobotPointsArray::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1901)
inline HRESULT IRobotPointsArray::SetSize ( long _size ) {
    HRESULT _hr = raw_SetSize(_size);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1902)
inline HRESULT IRobotPointsArray::Set ( long _idx, double _x, double _y, double _z ) {
    HRESULT _hr = raw_Set(_idx, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1903)
inline HRESULT IRobotPointsArray::Get ( long _idx, double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_Get(_idx, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotObjObjectServer wrapper method implementations
//

#pragma implementation_key(1904)
inline IRobotObjObjectPtr IRobotObjObjectServer::Create ( long num ) {
    struct IRobotObjObject * _result = 0;
    HRESULT _hr = raw_Create(num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjObjectPtr(_result, false);
}

#pragma implementation_key(1905)
inline long IRobotObjObjectServer::GetFreeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_FreeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1906)
inline long IRobotObjObjectServer::FindWithId ( long unique_id ) {
    long _result = 0;
    HRESULT _hr = raw_FindWithId(unique_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1907)
inline IRobotLinearReleaseServerPtr IRobotObjObjectServer::GetLinearReleases ( ) {
    struct IRobotLinearReleaseServer * _result = 0;
    HRESULT _hr = get_LinearReleases(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLinearReleaseServerPtr(_result, false);
}

#pragma implementation_key(1908)
inline IRobotObjMeshPtr IRobotObjObjectServer::GetMesh ( ) {
    struct IRobotObjMesh * _result = 0;
    HRESULT _hr = get_Mesh(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjMeshPtr(_result, false);
}

#pragma implementation_key(1909)
inline IRobotObjObjectPtr IRobotObjObjectServer::CreateCube ( long _number, struct IRobotPointsArray * _points, VARIANT_BOOL _has_base, VARIANT_BOOL _has_top, long _divisions, VARIANT_BOOL _is_volume ) {
    struct IRobotObjObject * _result = 0;
    HRESULT _hr = raw_CreateCube(_number, _points, _has_base, _has_top, _divisions, _is_volume, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjObjectPtr(_result, false);
}

#pragma implementation_key(1910)
inline IRobotObjObjectPtr IRobotObjObjectServer::CreateCylinder ( long _number, struct IRobotPointsArray * _points, VARIANT_BOOL _has_base, VARIANT_BOOL _has_top, long _divisions, long _sides, VARIANT_BOOL _is_volume ) {
    struct IRobotObjObject * _result = 0;
    HRESULT _hr = raw_CreateCylinder(_number, _points, _has_base, _has_top, _divisions, _sides, _is_volume, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjObjectPtr(_result, false);
}

#pragma implementation_key(1911)
inline IRobotObjObjectPtr IRobotObjObjectServer::CreateCone ( long _number, struct IRobotPointsArray * _points, VARIANT_BOOL _has_base, long _divisions, long _sides, VARIANT_BOOL _is_volume, VARIANT_BOOL _has_top ) {
    struct IRobotObjObject * _result = 0;
    HRESULT _hr = raw_CreateCone(_number, _points, _has_base, _divisions, _sides, _is_volume, _has_top, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjObjectPtr(_result, false);
}

#pragma implementation_key(1912)
inline IRobotNumbersCollectionPtr IRobotObjObjectServer::CreateOnFiniteElems ( _bstr_t _finite_elems, long _first_number ) {
    struct IRobotNumbersCollection * _result = 0;
    HRESULT _hr = raw_CreateOnFiniteElems(_finite_elems, _first_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersCollectionPtr(_result, false);
}

#pragma implementation_key(1913)
inline HRESULT IRobotObjObjectServer::CreatePolyline ( long _number, struct IRobotPointsArray * _points ) {
    HRESULT _hr = raw_CreatePolyline(_number, _points);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1914)
inline HRESULT IRobotObjObjectServer::CreateContour ( long _number, struct IRobotPointsArray * _points ) {
    HRESULT _hr = raw_CreateContour(_number, _points);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1915)
inline HRESULT IRobotObjObjectServer::CreateArc ( long _number, struct IRobotPointsArray * _points, enum IRobotGeoArcDefinitionMethod _creation_type ) {
    HRESULT _hr = raw_CreateArc(_number, _points, _creation_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1916)
inline HRESULT IRobotObjObjectServer::CreateCircle ( long _number, struct IRobotPointsArray * _points ) {
    HRESULT _hr = raw_CreateCircle(_number, _points);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1917)
inline VARIANT_BOOL IRobotObjObjectServer::GetAutoRecalcHoles ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoRecalcHoles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1918)
inline void IRobotObjObjectServer::PutAutoRecalcHoles ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AutoRecalcHoles(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1919)
inline HRESULT IRobotObjObjectServer::BeginMultiOperation ( ) {
    HRESULT _hr = raw_BeginMultiOperation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1920)
inline HRESULT IRobotObjObjectServer::EndMultiOperation ( ) {
    HRESULT _hr = raw_EndMultiOperation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1921)
inline double IRobotObjObjectServer::CalcArea ( long _obj_num, long _part_idx ) {
    double _result = 0;
    HRESULT _hr = raw_CalcArea(_obj_num, _part_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1922)
inline double IRobotObjObjectServer::CalcVol ( long _obj_num, long _part_idx ) {
    double _result = 0;
    HRESULT _hr = raw_CalcVol(_obj_num, _part_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1923)
inline VARIANT_BOOL IRobotObjObjectServer::IsVolume ( long _obj_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsVolume(_obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1924)
inline _bstr_t IRobotObjObjectServer::GetName ( long _obj_num ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1925)
inline _bstr_t IRobotObjObjectServer::GetNameTemplate ( long _obj_num ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetNameTemplate(_obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1926)
inline HRESULT IRobotObjObjectServer::SetNameTemplate ( long _obj_num, _bstr_t _name_tmpl ) {
    HRESULT _hr = raw_SetNameTemplate(_obj_num, _name_tmpl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1927)
inline long IRobotObjObjectServer::GetUniqueId ( long _obj_num ) {
    long _result = 0;
    HRESULT _hr = raw_GetUniqueId(_obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1928)
inline IRobotObjObjectPtr IRobotObjObjectServer::CreateSolid ( long _number, _bstr_t _objlist ) {
    struct IRobotObjObject * _result = 0;
    HRESULT _hr = raw_CreateSolid(_number, _objlist, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjObjectPtr(_result, false);
}

#pragma implementation_key(1929)
inline HRESULT IRobotObjObjectServer::GetFiniteElemsData ( _bstr_t _obj_sel_txt, struct IRobotFiniteElementDataSet * _ret_data ) {
    HRESULT _hr = raw_GetFiniteElemsData(_obj_sel_txt, _ret_data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1930)
inline enum IRobotObjectStructuralType IRobotObjObjectServer::GetStructuralType ( long _obj_num ) {
    enum IRobotObjectStructuralType _result;
    HRESULT _hr = raw_GetStructuralType(_obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1931)
inline HRESULT IRobotObjObjectServer::SetStructuralType ( _bstr_t _obj_sel, enum IRobotObjectStructuralType _str_type ) {
    HRESULT _hr = raw_SetStructuralType(_obj_sel, _str_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1932)
inline long IRobotObjObjectServer::GetHost ( long _obj_num ) {
    long _result = 0;
    HRESULT _hr = raw_GetHost(_obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1933)
inline HRESULT IRobotObjObjectServer::SetHost ( long _obj_num, long _host_num ) {
    HRESULT _hr = raw_SetHost(_obj_num, _host_num);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1934)
inline IRobotSelectionPtr IRobotObjObjectServer::GetHostedObjects ( long _obj_num ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_GetHostedObjects(_obj_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1935)
inline HRESULT IRobotObjObjectServer::SetHostedObjects ( long _obj_num, struct IRobotSelection * _hosted_objs ) {
    HRESULT _hr = raw_SetHostedObjects(_obj_num, _hosted_objs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1936)
inline HRESULT IRobotObjObjectServer::SetAnalyzeTTMethod ( _bstr_t _objs, VARIANT_BOOL _analyze ) {
    HRESULT _hr = raw_SetAnalyzeTTMethod(_objs, _analyze);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1937)
inline IRobotSelectionPtr IRobotObjObjectServer::GetAnalyzeTTMethodEnabled ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_GetAnalyzeTTMethodEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

//
// interface IRobotFiniteElementServer wrapper method implementations
//

#pragma implementation_key(1938)
inline long IRobotFiniteElementServer::GetFreeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_FreeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1939)
inline HRESULT IRobotFiniteElementServer::MeshConsolidate ( double _coeff, struct IRobotSelection * _sel, VARIANT_BOOL _auto_freeze ) {
    HRESULT _hr = raw_MeshConsolidate(_coeff, _sel, _auto_freeze);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1940)
inline HRESULT IRobotFiniteElementServer::MeshConcentrate ( enum IRobotMeshRefinementType _type, struct IRobotSelection * _sel, VARIANT_BOOL _auto_freeze ) {
    HRESULT _hr = raw_MeshConcentrate(_type, _sel, _auto_freeze);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1941)
inline HRESULT IRobotFiniteElementServer::Create ( long _number, struct IRobotNumbersArray * _nodes, VARIANT_BOOL _update_model ) {
    HRESULT _hr = raw_Create(_number, _nodes, _update_model);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1942)
inline HRESULT IRobotFiniteElementServer::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1943)
inline double IRobotFiniteElementServer::CalcArea ( long _ele_num ) {
    double _result = 0;
    HRESULT _hr = raw_CalcArea(_ele_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotGroup wrapper method implementations
//

#pragma implementation_key(1944)
inline enum IRobotObjectType IRobotGroup::GetObjectType ( ) {
    enum IRobotObjectType _result;
    HRESULT _hr = get_ObjectType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1945)
inline void IRobotGroup::PutObjectType ( enum IRobotObjectType ret ) {
    HRESULT _hr = put_ObjectType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1946)
inline _bstr_t IRobotGroup::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1947)
inline void IRobotGroup::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1948)
inline _bstr_t IRobotGroup::GetSelList ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SelList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1949)
inline void IRobotGroup::PutSelList ( _bstr_t ret ) {
    HRESULT _hr = put_SelList(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1950)
inline long IRobotGroup::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1951)
inline void IRobotGroup::PutColor ( long ret ) {
    HRESULT _hr = put_Color(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1952)
inline IRobotSelectionPtr IRobotGroup::CreateSelection ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_CreateSelection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(1953)
inline IRobotCollectionPtr IRobotGroup::CreateCollection ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_CreateCollection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(1954)
inline HRESULT IRobotGroup::Read ( ) {
    HRESULT _hr = raw_Read();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1955)
inline HRESULT IRobotGroup::Store ( ) {
    HRESULT _hr = raw_Store();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotGroupServer wrapper method implementations
//

#pragma implementation_key(1956)
inline long IRobotGroupServer::GetCount ( enum IRobotObjectType _obj_type ) {
    long _result = 0;
    HRESULT _hr = raw_GetCount(_obj_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1957)
inline IRobotGroupPtr IRobotGroupServer::Get ( enum IRobotObjectType _obj_type, long _idx ) {
    struct IRobotGroup * _result = 0;
    HRESULT _hr = raw_Get(_obj_type, _idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGroupPtr(_result, false);
}

#pragma implementation_key(1958)
inline long IRobotGroupServer::Find ( enum IRobotObjectType _obj_type, _bstr_t _grp_name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_obj_type, _grp_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1959)
inline HRESULT IRobotGroupServer::Delete ( enum IRobotObjectType _obj_type, long _idx ) {
    HRESULT _hr = raw_Delete(_obj_type, _idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1960)
inline long IRobotGroupServer::Create ( enum IRobotObjectType _obj_type, _bstr_t _name, _bstr_t _sel_list, long _color ) {
    long _result = 0;
    HRESULT _hr = raw_Create(_obj_type, _name, _sel_list, _color, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotStructureEditTools wrapper method implementations
//

#pragma implementation_key(1961)
inline IRobotNumbersArrayPtr IRobotStructureEditTools::DivideBar ( long _bar_number, struct IRobotValuesArray * _div_points, VARIANT_BOOL _relative ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = raw_DivideBar(_bar_number, _div_points, _relative, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

#pragma implementation_key(1962)
inline IRobotNumbersArrayPtr IRobotStructureEditTools::TranslateBar ( long _bar_number, double _dx, double _dy, double _dz, enum IRobotTranslateOptions _trans_option, long _repetitions ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = raw_TranslateBar(_bar_number, _dx, _dy, _dz, _trans_option, _repetitions, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

#pragma implementation_key(1963)
inline IRobotNumbersArrayPtr IRobotStructureEditTools::TranslateNode ( long _node_number, double _dx, double _dy, double _dz, enum IRobotTranslateOptions _trans_option, long _repetitions ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = raw_TranslateNode(_node_number, _dx, _dy, _dz, _trans_option, _repetitions, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

#pragma implementation_key(1964)
inline HRESULT IRobotStructureEditTools::SelTranslate ( double _dx, double _dy, double _dz, enum IRobotTranslateOptions _options, long _repetitions ) {
    HRESULT _hr = raw_SelTranslate(_dx, _dy, _dz, _options, _repetitions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1965)
inline HRESULT IRobotStructureEditTools::SelRotate ( double _p0x, double _p0y, double _p0z, double _p1x, double _p1y, double _p1z, double _angle, enum IRobotTranslateOptions _options, long _repetitions ) {
    HRESULT _hr = raw_SelRotate(_p0x, _p0y, _p0z, _p1x, _p1y, _p1z, _angle, _options, _repetitions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1966)
inline HRESULT IRobotStructureEditTools::SelScale ( double _p0x, double _p0y, double _p0z, double _factor, enum IRobotTranslateOptions _options, long _repetitions ) {
    HRESULT _hr = raw_SelScale(_p0x, _p0y, _p0z, _factor, _options, _repetitions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1967)
inline HRESULT IRobotStructureEditTools::SelMirror ( double _p0x, double _p0y, double _p0z, double _p1x, double _p1y, double _p1z, double _p2x, double _p2y, double _p2z, enum IRobotTranslateOptions _options, long _repetitions ) {
    HRESULT _hr = raw_SelMirror(_p0x, _p0y, _p0z, _p1x, _p1y, _p1z, _p2x, _p2y, _p2z, _options, _repetitions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotStructureCache wrapper method implementations
//

#pragma implementation_key(1968)
inline HRESULT IRobotStructureCache::AddNode ( long _number, double _x, double _y, double _z ) {
    HRESULT _hr = raw_AddNode(_number, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1969)
inline HRESULT IRobotStructureCache::AddBar ( long _number, long _start_node, long _end_node, _bstr_t _sect_name, _bstr_t _mater_name, double _gamma ) {
    HRESULT _hr = raw_AddBar(_number, _start_node, _end_node, _sect_name, _mater_name, _gamma);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1970)
inline HRESULT IRobotStructureCache::SetBarLabel ( long _bar, enum IRobotLabelType _lab_type, _bstr_t _lab_name, long _ext_par ) {
    HRESULT _hr = raw_SetBarLabel(_bar, _lab_type, _lab_name, _ext_par);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1971)
inline long IRobotStructureCache::EnsureNodeExist ( double _x, double _y, double _z ) {
    long _result = 0;
    HRESULT _hr = raw_EnsureNodeExist(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1972)
inline HRESULT IRobotStructureCache::SetBarName ( long _bar_num, _bstr_t _name_tmpl ) {
    HRESULT _hr = raw_SetBarName(_bar_num, _name_tmpl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotStructureApplyInfo wrapper method implementations
//

#pragma implementation_key(1973)
inline IRobotNumbersArrayPtr IRobotStructureApplyInfo::GetNodes ( ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = get_Nodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

#pragma implementation_key(1974)
inline IRobotNumbersArrayPtr IRobotStructureApplyInfo::GetBars ( ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = get_Bars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

//
// interface IRobotStorey wrapper method implementations
//

#pragma implementation_key(1975)
inline _bstr_t IRobotStorey::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1976)
inline void IRobotStorey::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1977)
inline double IRobotStorey::GetLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_Level(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1978)
inline void IRobotStorey::PutLevel ( double ret ) {
    HRESULT _hr = put_Level(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1979)
inline double IRobotStorey::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1980)
inline void IRobotStorey::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1981)
inline long IRobotStorey::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1982)
inline void IRobotStorey::PutColor ( long ret ) {
    HRESULT _hr = put_Color(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1983)
inline VARIANT_BOOL IRobotStorey::GetAutomaticSelection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutomaticSelection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1984)
inline void IRobotStorey::PutAutomaticSelection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AutomaticSelection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1985)
inline _bstr_t IRobotStorey::GetObjects ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Objects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1986)
inline void IRobotStorey::PutObjects ( _bstr_t ret ) {
    HRESULT _hr = put_Objects(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1987)
inline double IRobotStorey::GetTopLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_TopLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1988)
inline void IRobotStorey::PutTopLevel ( double ret ) {
    HRESULT _hr = put_TopLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1989)
inline HRESULT IRobotStorey::SetTopLevel ( double _top_level, VARIANT_BOOL _affect_geometry ) {
    HRESULT _hr = raw_SetTopLevel(_top_level, _affect_geometry);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1990)
inline HRESULT IRobotStorey::SetHeight ( double _height, VARIANT_BOOL _affect_geometry ) {
    HRESULT _hr = raw_SetHeight(_height, _affect_geometry);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1991)
inline double IRobotStorey::GetLX ( ) {
    double _result = 0;
    HRESULT _hr = get_LX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1992)
inline double IRobotStorey::GetLy ( ) {
    double _result = 0;
    HRESULT _hr = get_Ly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1993)
inline double IRobotStorey::GetEx1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ex1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1994)
inline double IRobotStorey::GetEy1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ey1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotStoreyMngr wrapper method implementations
//

#pragma implementation_key(1995)
inline _bstr_t IRobotStoreyMngr::GetDisregardedObjects ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DisregardedObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1996)
inline void IRobotStoreyMngr::PutDisregardedObjects ( _bstr_t ret ) {
    HRESULT _hr = put_DisregardedObjects(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1997)
inline long IRobotStoreyMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1998)
inline IRobotStoreyPtr IRobotStoreyMngr::Get ( long _idx ) {
    struct IRobotStorey * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStoreyPtr(_result, false);
}

#pragma implementation_key(1999)
inline long IRobotStoreyMngr::Find ( _bstr_t _story_name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_story_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2000)
inline HRESULT IRobotStoreyMngr::Delete ( long _idx ) {
    HRESULT _hr = raw_Delete(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2001)
inline HRESULT IRobotStoreyMngr::DeleteAll ( ) {
    HRESULT _hr = raw_DeleteAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2002)
inline long IRobotStoreyMngr::CreateEx ( _bstr_t _name, double _bottom_level, double _height, _bstr_t _objects, long _color ) {
    long _result = 0;
    HRESULT _hr = raw_CreateEx(_name, _bottom_level, _height, _objects, _color, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2003)
inline long IRobotStoreyMngr::Create ( _bstr_t _name, double _bottom_level, double _height ) {
    long _result = 0;
    HRESULT _hr = raw_Create(_name, _bottom_level, _height, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2004)
inline _bstr_t IRobotStoreyMngr::GetFilterStorey ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FilterStorey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2005)
inline void IRobotStoreyMngr::PutFilterStorey ( _bstr_t ret ) {
    HRESULT _hr = put_FilterStorey(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2006)
inline double IRobotStoreyMngr::GetBaseLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_BaseLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2007)
inline void IRobotStoreyMngr::PutBaseLevel ( double ret ) {
    HRESULT _hr = put_BaseLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2008)
inline long IRobotStoreyMngr::Create2 ( _bstr_t _name, double _top_level ) {
    long _result = 0;
    HRESULT _hr = raw_Create2(_name, _top_level, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2009)
inline long IRobotStoreyMngr::Create2Ex ( _bstr_t _name, double _top_level, _bstr_t _objects, long _color ) {
    long _result = 0;
    HRESULT _hr = raw_Create2Ex(_name, _top_level, _objects, _color, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotGroupObjectServer wrapper method implementations
//

#pragma implementation_key(2010)
inline long IRobotGroupObjectServer::GroupSelected ( ) {
    long _result = 0;
    HRESULT _hr = raw_GroupSelected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2011)
inline long IRobotGroupObjectServer::GroupGiven ( _bstr_t _object_sel, _bstr_t _fe_sel, _bstr_t _node_sel, VARIANT_BOOL _auto_include ) {
    long _result = 0;
    HRESULT _hr = raw_GroupGiven(_object_sel, _fe_sel, _node_sel, _auto_include, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2012)
inline long IRobotGroupObjectServer::FindFirst ( ) {
    long _result = 0;
    HRESULT _hr = raw_FindFirst(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2013)
inline long IRobotGroupObjectServer::FindNext ( long _prev_group_obj ) {
    long _result = 0;
    HRESULT _hr = raw_FindNext(_prev_group_obj, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2014)
inline HRESULT IRobotGroupObjectServer::Explode ( long _group_obj ) {
    HRESULT _hr = raw_Explode(_group_obj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2015)
inline HRESULT IRobotGroupObjectServer::GetContents ( long _group_obj, BSTR * _object_sel, BSTR * _fe_sel, BSTR * _node_sel ) {
    HRESULT _hr = raw_GetContents(_group_obj, _object_sel, _fe_sel, _node_sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotMaterialQuantitySurvey wrapper method implementations
//

#pragma implementation_key(2016)
inline long IRobotMaterialQuantitySurvey::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2017)
inline _bstr_t IRobotMaterialQuantitySurvey::GetName ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2018)
inline double IRobotMaterialQuantitySurvey::GetWeight ( enum IRobotObjectType _obj_type, const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetWeight(_obj_type, _idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2019)
inline double IRobotMaterialQuantitySurvey::GetVolume ( enum IRobotObjectType _obj_type, const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetVolume(_obj_type, _idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2020)
inline enum IRobotMaterialType IRobotMaterialQuantitySurvey::GetType ( const _variant_t & _idx_or_name ) {
    enum IRobotMaterialType _result;
    HRESULT _hr = raw_GetType(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBarSectionQuantitySurvey wrapper method implementations
//

#pragma implementation_key(2021)
inline long IRobotBarSectionQuantitySurvey::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2022)
inline _bstr_t IRobotBarSectionQuantitySurvey::GetName ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2023)
inline double IRobotBarSectionQuantitySurvey::GetUnitWeight ( const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetUnitWeight(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2024)
inline double IRobotBarSectionQuantitySurvey::GetWeight ( const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetWeight(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2025)
inline double IRobotBarSectionQuantitySurvey::GetVolume ( const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetVolume(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2026)
inline double IRobotBarSectionQuantitySurvey::GetPaintArea ( const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetPaintArea(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2027)
inline double IRobotBarSectionQuantitySurvey::GetLength ( const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetLength(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotThicknessQuantitySurvey wrapper method implementations
//

#pragma implementation_key(2028)
inline long IRobotThicknessQuantitySurvey::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2029)
inline _bstr_t IRobotThicknessQuantitySurvey::GetName ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2030)
inline double IRobotThicknessQuantitySurvey::GetUnitWeight ( const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetUnitWeight(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2031)
inline double IRobotThicknessQuantitySurvey::GetWeight ( const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetWeight(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2032)
inline double IRobotThicknessQuantitySurvey::GetVolume ( const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetVolume(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2033)
inline double IRobotThicknessQuantitySurvey::GetArea ( const _variant_t & _idx_or_name ) {
    double _result = 0;
    HRESULT _hr = raw_GetArea(_idx_or_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotStructureQuantitySurvey wrapper method implementations
//

#pragma implementation_key(2034)
inline IRobotMaterialQuantitySurveyPtr IRobotStructureQuantitySurvey::GetMaterials ( ) {
    struct IRobotMaterialQuantitySurvey * _result = 0;
    HRESULT _hr = get_Materials(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMaterialQuantitySurveyPtr(_result, false);
}

#pragma implementation_key(2035)
inline IRobotBarSectionQuantitySurveyPtr IRobotStructureQuantitySurvey::GetBarSections ( ) {
    struct IRobotBarSectionQuantitySurvey * _result = 0;
    HRESULT _hr = get_BarSections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarSectionQuantitySurveyPtr(_result, false);
}

#pragma implementation_key(2036)
inline IRobotThicknessQuantitySurveyPtr IRobotStructureQuantitySurvey::GetPanelThickness ( ) {
    struct IRobotThicknessQuantitySurvey * _result = 0;
    HRESULT _hr = get_PanelThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotThicknessQuantitySurveyPtr(_result, false);
}

//
// interface IRobotParamDef wrapper method implementations
//

#pragma implementation_key(2037)
inline _bstr_t IRobotParamDef::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2038)
inline void IRobotParamDef::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2039)
inline _bstr_t IRobotParamDef::GetDefaultValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DefaultValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2040)
inline void IRobotParamDef::PutDefaultValue ( _bstr_t ret ) {
    HRESULT _hr = put_DefaultValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2041)
inline IRobotNamesArrayPtr IRobotParamDef::GetValueList ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_ValueList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(2042)
inline enum IRobotParamValueType IRobotParamDef::GetValueType ( ) {
    enum IRobotParamValueType _result;
    HRESULT _hr = get_ValueType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2043)
inline void IRobotParamDef::PutValueType ( enum IRobotParamValueType ret ) {
    HRESULT _hr = put_ValueType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2044)
inline VARIANT_BOOL IRobotParamDef::GetGuiVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GuiVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2045)
inline void IRobotParamDef::PutGuiVisible ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GuiVisible(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2046)
inline VARIANT_BOOL IRobotParamDef::GetGuiReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GuiReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2047)
inline void IRobotParamDef::PutGuiReadOnly ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GuiReadOnly(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2048)
inline _bstr_t IRobotParamDef::GetUniqueId ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2049)
inline HRESULT IRobotParamDef::GuiSetName ( long _lang_id, _bstr_t _name ) {
    HRESULT _hr = raw_GuiSetName(_lang_id, _name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2050)
inline _bstr_t IRobotParamDef::GuiGetName ( long _lang_id ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GuiGetName(_lang_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IRobotParamSchemaDef wrapper method implementations
//

#pragma implementation_key(2051)
inline _bstr_t IRobotParamSchemaDef::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2052)
inline long IRobotParamSchemaDef::GetParamCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ParamCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2053)
inline VARIANT_BOOL IRobotParamSchemaDef::AddSimpleParam ( _bstr_t _name, _bstr_t _default_val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddSimpleParam(_name, _default_val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2054)
inline _bstr_t IRobotParamSchemaDef::ParamNameToUniqueId ( _bstr_t _name ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ParamNameToUniqueId(_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2055)
inline _bstr_t IRobotParamSchemaDef::GetParamName ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetParamName(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2056)
inline HRESULT IRobotParamSchemaDef::RemoveParam ( _bstr_t _param_name ) {
    HRESULT _hr = raw_RemoveParam(_param_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2057)
inline VARIANT_BOOL IRobotParamSchemaDef::AddParam ( struct IRobotParamDef * _param_def ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddParam(_param_def, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2058)
inline IRobotParamDefPtr IRobotParamSchemaDef::GetParam ( long _idx ) {
    struct IRobotParamDef * _result = 0;
    HRESULT _hr = raw_GetParam(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotParamDefPtr(_result, false);
}

//
// interface IRobotParamCollection wrapper method implementations
//

#pragma implementation_key(2059)
inline long IRobotParamCollection::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2060)
inline _bstr_t IRobotParamCollection::GetValue ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetValue(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2061)
inline HRESULT IRobotParamCollection::GetFullName ( long _idx, BSTR * _param_name, BSTR * _schema_name ) {
    HRESULT _hr = raw_GetFullName(_idx, _param_name, _schema_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2062)
inline _bstr_t IRobotParamCollection::GetId ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetId(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2063)
inline _bstr_t IRobotParamCollection::GetName ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2064)
inline long IRobotParamCollection::Find ( _bstr_t _param_name, _bstr_t _schema_name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_param_name, _schema_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotParamSchema wrapper method implementations
//

#pragma implementation_key(2065)
inline IRobotParamSchemaDefPtr IRobotParamSchema::GetDef ( ) {
    struct IRobotParamSchemaDef * _result = 0;
    HRESULT _hr = get_Def(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotParamSchemaDefPtr(_result, false);
}

#pragma implementation_key(2066)
inline HRESULT IRobotParamSchema::SetParam ( long _unique_obj_id, _bstr_t _param_name, _bstr_t _param_val ) {
    HRESULT _hr = raw_SetParam(_unique_obj_id, _param_name, _param_val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2067)
inline HRESULT IRobotParamSchema::ResetParam ( long _unique_obj_id, _bstr_t _param_name ) {
    HRESULT _hr = raw_ResetParam(_unique_obj_id, _param_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2068)
inline VARIANT_BOOL IRobotParamSchema::GetParam ( long _unique_obj_id, _bstr_t _param_name, BSTR * _ret_param_val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetParam(_unique_obj_id, _param_name, _ret_param_val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2069)
inline HRESULT IRobotParamSchema::RemoveParam ( long _unique_obj_id, _bstr_t _param_name ) {
    HRESULT _hr = raw_RemoveParam(_unique_obj_id, _param_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2070)
inline long IRobotParamSchema::GetObjectsWithParam ( _bstr_t _param_name, struct IRobotNumbersArray * _obj_ids ) {
    long _result = 0;
    HRESULT _hr = raw_GetObjectsWithParam(_param_name, _obj_ids, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2071)
inline long IRobotParamSchema::GetObjectsWithParamVal ( _bstr_t _param_name, _bstr_t _param_val, struct IRobotNumbersArray * _obj_ids ) {
    long _result = 0;
    HRESULT _hr = raw_GetObjectsWithParamVal(_param_name, _param_val, _obj_ids, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2072)
inline long IRobotParamSchema::GetAllParams ( long _unique_obj_id, struct IRobotParamCollection * _params_col ) {
    long _result = 0;
    HRESULT _hr = raw_GetAllParams(_unique_obj_id, _params_col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2073)
inline HRESULT IRobotParamSchema::RemoveAllParams ( long _unique_obj_id ) {
    HRESULT _hr = raw_RemoveAllParams(_unique_obj_id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotParamSchemaMngr wrapper method implementations
//

#pragma implementation_key(2074)
inline long IRobotParamSchemaMngr::GetSchemaCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SchemaCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2075)
inline IRobotParamSchemaPtr IRobotParamSchemaMngr::Create ( _bstr_t _schema_name ) {
    struct IRobotParamSchema * _result = 0;
    HRESULT _hr = raw_Create(_schema_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotParamSchemaPtr(_result, false);
}

#pragma implementation_key(2076)
inline IRobotParamSchemaPtr IRobotParamSchemaMngr::Get ( long _idx ) {
    struct IRobotParamSchema * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotParamSchemaPtr(_result, false);
}

#pragma implementation_key(2077)
inline IRobotParamSchemaPtr IRobotParamSchemaMngr::GetByName ( _bstr_t _schema_name ) {
    struct IRobotParamSchema * _result = 0;
    HRESULT _hr = raw_GetByName(_schema_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotParamSchemaPtr(_result, false);
}

#pragma implementation_key(2078)
inline HRESULT IRobotParamSchemaMngr::Remove ( long _idx ) {
    HRESULT _hr = raw_Remove(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2079)
inline HRESULT IRobotParamSchemaMngr::RemoveByName ( _bstr_t _schema_name ) {
    HRESULT _hr = raw_RemoveByName(_schema_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2080)
inline HRESULT IRobotParamSchemaMngr::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2081)
inline VARIANT_BOOL IRobotParamSchemaMngr::Exist ( _bstr_t _schema_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Exist(_schema_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotParamServer wrapper method implementations
//

#pragma implementation_key(2082)
inline IRobotParamSchemaMngrPtr IRobotParamServer::GetSchemas ( ) {
    struct IRobotParamSchemaMngr * _result = 0;
    HRESULT _hr = get_Schemas(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotParamSchemaMngrPtr(_result, false);
}

#pragma implementation_key(2083)
inline HRESULT IRobotParamServer::SetParam ( long _unique_obj_id, _bstr_t _param_id, _bstr_t _param_val ) {
    HRESULT _hr = raw_SetParam(_unique_obj_id, _param_id, _param_val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2084)
inline HRESULT IRobotParamServer::ResetParam ( long _unique_obj_id, _bstr_t _param_id ) {
    HRESULT _hr = raw_ResetParam(_unique_obj_id, _param_id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2085)
inline VARIANT_BOOL IRobotParamServer::GetParam ( long _unique_obj_id, _bstr_t _param_id, BSTR * _ret_param_val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetParam(_unique_obj_id, _param_id, _ret_param_val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2086)
inline HRESULT IRobotParamServer::RemoveParam ( long _unique_obj_id, _bstr_t _param_id ) {
    HRESULT _hr = raw_RemoveParam(_unique_obj_id, _param_id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2087)
inline long IRobotParamServer::GetObjectsWithParam ( _bstr_t _param_id, struct IRobotNumbersArray * _obj_ids ) {
    long _result = 0;
    HRESULT _hr = raw_GetObjectsWithParam(_param_id, _obj_ids, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2088)
inline long IRobotParamServer::GetObjectsWithParamVal ( _bstr_t _param_id, _bstr_t _param_val, struct IRobotNumbersArray * _obj_ids ) {
    long _result = 0;
    HRESULT _hr = raw_GetObjectsWithParamVal(_param_id, _param_val, _obj_ids, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2089)
inline long IRobotParamServer::GetAllParams ( long _unique_obj_id, struct IRobotParamCollection * _params_col ) {
    long _result = 0;
    HRESULT _hr = raw_GetAllParams(_unique_obj_id, _params_col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2090)
inline long IRobotParamServer::GetAllParamsForSchema ( long _unique_obj_id, _bstr_t _schema_name, struct IRobotParamCollection * _params_col ) {
    long _result = 0;
    HRESULT _hr = raw_GetAllParamsForSchema(_unique_obj_id, _schema_name, _params_col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2091)
inline VARIANT_BOOL IRobotParamServer::ParamUniqueIdToName ( _bstr_t _param_id, BSTR * _ret_schema_name, BSTR * _ret_param_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ParamUniqueIdToName(_param_id, _ret_schema_name, _ret_param_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2092)
inline HRESULT IRobotParamServer::RemoveSchemaParams ( long _unique_obj_id, _bstr_t _schema_name ) {
    HRESULT _hr = raw_RemoveSchemaParams(_unique_obj_id, _schema_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotCodeCmbActiveCaseInfo wrapper method implementations
//

#pragma implementation_key(2093)
inline VARIANT_BOOL IRobotCodeCmbActiveCaseInfo::GetIsSelected ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSelected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2094)
inline void IRobotCodeCmbActiveCaseInfo::PutIsSelected ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSelected(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2095)
inline long IRobotCodeCmbActiveCaseInfo::GetCaseNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2096)
inline enum IRobotCaseNature IRobotCodeCmbActiveCaseInfo::GetCaseNature ( ) {
    enum IRobotCaseNature _result;
    HRESULT _hr = get_CaseNature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2097)
inline long IRobotCodeCmbActiveCaseInfo::GetGroupNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2098)
inline double IRobotCodeCmbActiveCaseInfo::GetCoefficient ( ) {
    double _result = 0;
    HRESULT _hr = get_Coefficient(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2099)
inline void IRobotCodeCmbActiveCaseInfo::PutCoefficient ( double ret ) {
    HRESULT _hr = put_Coefficient(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotBarCableData wrapper method implementations
//

#pragma implementation_key(2100)
inline double IRobotBarCableData::GetSectionAX ( ) {
    double _result = 0;
    HRESULT _hr = get_SectionAX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2101)
inline void IRobotBarCableData::PutSectionAX ( double ret ) {
    HRESULT _hr = put_SectionAX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2102)
inline _bstr_t IRobotBarCableData::GetMaterialName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaterialName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2103)
inline void IRobotBarCableData::PutMaterialName ( _bstr_t ret ) {
    HRESULT _hr = put_MaterialName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2104)
inline enum IRobotBarCableAssemblingParamType IRobotBarCableData::GetAssemblingParam ( ) {
    enum IRobotBarCableAssemblingParamType _result;
    HRESULT _hr = get_AssemblingParam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2105)
inline void IRobotBarCableData::PutAssemblingParam ( enum IRobotBarCableAssemblingParamType ret ) {
    HRESULT _hr = put_AssemblingParam(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2106)
inline double IRobotBarCableData::GetAssemblingParamValue ( ) {
    double _result = 0;
    HRESULT _hr = get_AssemblingParamValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2107)
inline void IRobotBarCableData::PutAssemblingParamValue ( double ret ) {
    HRESULT _hr = put_AssemblingParamValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLinearReleaseData wrapper method implementations
//

#pragma implementation_key(2108)
inline enum IRobotLinearReleaseDefinitionType IRobotLinearReleaseData::GetUX ( ) {
    enum IRobotLinearReleaseDefinitionType _result;
    HRESULT _hr = get_UX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2109)
inline void IRobotLinearReleaseData::PutUX ( enum IRobotLinearReleaseDefinitionType ret ) {
    HRESULT _hr = put_UX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2110)
inline enum IRobotLinearReleaseDefinitionType IRobotLinearReleaseData::GetUY ( ) {
    enum IRobotLinearReleaseDefinitionType _result;
    HRESULT _hr = get_UY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2111)
inline void IRobotLinearReleaseData::PutUY ( enum IRobotLinearReleaseDefinitionType ret ) {
    HRESULT _hr = put_UY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2112)
inline enum IRobotLinearReleaseDefinitionType IRobotLinearReleaseData::GetUZ ( ) {
    enum IRobotLinearReleaseDefinitionType _result;
    HRESULT _hr = get_UZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2113)
inline void IRobotLinearReleaseData::PutUZ ( enum IRobotLinearReleaseDefinitionType ret ) {
    HRESULT _hr = put_UZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2114)
inline enum IRobotLinearReleaseDefinitionType IRobotLinearReleaseData::GetRX ( ) {
    enum IRobotLinearReleaseDefinitionType _result;
    HRESULT _hr = get_RX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2115)
inline void IRobotLinearReleaseData::PutRX ( enum IRobotLinearReleaseDefinitionType ret ) {
    HRESULT _hr = put_RX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2116)
inline double IRobotLinearReleaseData::GetKX ( ) {
    double _result = 0;
    HRESULT _hr = get_KX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2117)
inline void IRobotLinearReleaseData::PutKX ( double ret ) {
    HRESULT _hr = put_KX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2118)
inline double IRobotLinearReleaseData::GetKY ( ) {
    double _result = 0;
    HRESULT _hr = get_KY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2119)
inline void IRobotLinearReleaseData::PutKY ( double ret ) {
    HRESULT _hr = put_KY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2120)
inline double IRobotLinearReleaseData::GetKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_KZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2121)
inline void IRobotLinearReleaseData::PutKZ ( double ret ) {
    HRESULT _hr = put_KZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2122)
inline double IRobotLinearReleaseData::GetHX ( ) {
    double _result = 0;
    HRESULT _hr = get_HX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2123)
inline void IRobotLinearReleaseData::PutHX ( double ret ) {
    HRESULT _hr = put_HX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotBarElasticGroundData wrapper method implementations
//

#pragma implementation_key(2124)
inline double IRobotBarElasticGroundData::GetKY ( ) {
    double _result = 0;
    HRESULT _hr = get_KY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2125)
inline void IRobotBarElasticGroundData::PutKY ( double ret ) {
    HRESULT _hr = put_KY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2126)
inline double IRobotBarElasticGroundData::GetKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_KZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2127)
inline void IRobotBarElasticGroundData::PutKZ ( double ret ) {
    HRESULT _hr = put_KZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2128)
inline double IRobotBarElasticGroundData::GetHX ( ) {
    double _result = 0;
    HRESULT _hr = get_HX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2129)
inline void IRobotBarElasticGroundData::PutHX ( double ret ) {
    HRESULT _hr = put_HX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2130)
inline HRESULT IRobotBarElasticGroundData::SetOneDir ( enum IRobotUpliftDirection _uplift_dir, enum IRobotUpliftSense _uplift_type ) {
    HRESULT _hr = raw_SetOneDir(_uplift_dir, _uplift_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2131)
inline enum IRobotUpliftSense IRobotBarElasticGroundData::GetOneDir ( enum IRobotUpliftDirection _uplift_dir ) {
    enum IRobotUpliftSense _result;
    HRESULT _hr = raw_GetOneDir(_uplift_dir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNodeRigidLinkData wrapper method implementations
//

#pragma implementation_key(2132)
inline VARIANT_BOOL IRobotNodeRigidLinkData::GetUX ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2133)
inline void IRobotNodeRigidLinkData::PutUX ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2134)
inline VARIANT_BOOL IRobotNodeRigidLinkData::GetUY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2135)
inline void IRobotNodeRigidLinkData::PutUY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2136)
inline VARIANT_BOOL IRobotNodeRigidLinkData::GetUZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2137)
inline void IRobotNodeRigidLinkData::PutUZ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2138)
inline VARIANT_BOOL IRobotNodeRigidLinkData::GetRX ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2139)
inline void IRobotNodeRigidLinkData::PutRX ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2140)
inline VARIANT_BOOL IRobotNodeRigidLinkData::GetRY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2141)
inline void IRobotNodeRigidLinkData::PutRY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2142)
inline VARIANT_BOOL IRobotNodeRigidLinkData::GetRZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2143)
inline void IRobotNodeRigidLinkData::PutRZ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearAnalysisParams wrapper method implementations
//

#pragma implementation_key(2144)
inline VARIANT_BOOL IRobotNonlinearAnalysisParams::GetPDelta ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2145)
inline void IRobotNonlinearAnalysisParams::PutPDelta ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PDelta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2146)
inline enum IRobotNonlinearAnalysisAlgorithmType IRobotNonlinearAnalysisParams::GetAlgorithm ( ) {
    enum IRobotNonlinearAnalysisAlgorithmType _result;
    HRESULT _hr = get_Algorithm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2147)
inline void IRobotNonlinearAnalysisParams::PutAlgorithm ( enum IRobotNonlinearAnalysisAlgorithmType ret ) {
    HRESULT _hr = put_Algorithm(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2148)
inline long IRobotNonlinearAnalysisParams::GetLoadIncrementNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_LoadIncrementNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2149)
inline void IRobotNonlinearAnalysisParams::PutLoadIncrementNumber ( long ret ) {
    HRESULT _hr = put_LoadIncrementNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2150)
inline long IRobotNonlinearAnalysisParams::GetMaximumIterationNumberForOneIncrement ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumIterationNumberForOneIncrement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2151)
inline void IRobotNonlinearAnalysisParams::PutMaximumIterationNumberForOneIncrement ( long ret ) {
    HRESULT _hr = put_MaximumIterationNumberForOneIncrement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2152)
inline long IRobotNonlinearAnalysisParams::GetIncrementLengthReductionNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_IncrementLengthReductionNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2153)
inline void IRobotNonlinearAnalysisParams::PutIncrementLengthReductionNumber ( long ret ) {
    HRESULT _hr = put_IncrementLengthReductionNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2154)
inline double IRobotNonlinearAnalysisParams::GetIncrementLengthReductionFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_IncrementLengthReductionFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2155)
inline void IRobotNonlinearAnalysisParams::PutIncrementLengthReductionFactor ( double ret ) {
    HRESULT _hr = put_IncrementLengthReductionFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2156)
inline long IRobotNonlinearAnalysisParams::GetMaximumNumberOfLineSearches ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumNumberOfLineSearches(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2157)
inline void IRobotNonlinearAnalysisParams::PutMaximumNumberOfLineSearches ( long ret ) {
    HRESULT _hr = put_MaximumNumberOfLineSearches(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2158)
inline double IRobotNonlinearAnalysisParams::GetLineSearchMethodFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_LineSearchMethodFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2159)
inline void IRobotNonlinearAnalysisParams::PutLineSearchMethodFactor ( double ret ) {
    HRESULT _hr = put_LineSearchMethodFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2160)
inline long IRobotNonlinearAnalysisParams::GetMaximumNumberOfBFGSCorrections ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumNumberOfBFGSCorrections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2161)
inline void IRobotNonlinearAnalysisParams::PutMaximumNumberOfBFGSCorrections ( long ret ) {
    HRESULT _hr = put_MaximumNumberOfBFGSCorrections(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2162)
inline VARIANT_BOOL IRobotNonlinearAnalysisParams::GetMatrixUpdateAfterEachSubdivision ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MatrixUpdateAfterEachSubdivision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2163)
inline void IRobotNonlinearAnalysisParams::PutMatrixUpdateAfterEachSubdivision ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_MatrixUpdateAfterEachSubdivision(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2164)
inline VARIANT_BOOL IRobotNonlinearAnalysisParams::GetMatrixUpdateAfterEachIteration ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MatrixUpdateAfterEachIteration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2165)
inline void IRobotNonlinearAnalysisParams::PutMatrixUpdateAfterEachIteration ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_MatrixUpdateAfterEachIteration(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2166)
inline VARIANT_BOOL IRobotNonlinearAnalysisParams::GetResultListEachIteration ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ResultListEachIteration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2167)
inline void IRobotNonlinearAnalysisParams::PutResultListEachIteration ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ResultListEachIteration(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2168)
inline double IRobotNonlinearAnalysisParams::GetResidualForcesRelativeCodeTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_ResidualForcesRelativeCodeTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2169)
inline void IRobotNonlinearAnalysisParams::PutResidualForcesRelativeCodeTolerance ( double ret ) {
    HRESULT _hr = put_ResidualForcesRelativeCodeTolerance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2170)
inline double IRobotNonlinearAnalysisParams::GetDisplacementsRelativeCodeTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_DisplacementsRelativeCodeTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2171)
inline void IRobotNonlinearAnalysisParams::PutDisplacementsRelativeCodeTolerance ( double ret ) {
    HRESULT _hr = put_DisplacementsRelativeCodeTolerance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2172)
inline double IRobotNonlinearAnalysisParams::GetMaxLoadFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxLoadFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2173)
inline void IRobotNonlinearAnalysisParams::PutMaxLoadFactor ( double ret ) {
    HRESULT _hr = put_MaxLoadFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2174)
inline long IRobotNonlinearAnalysisParams::GetNodeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2175)
inline void IRobotNonlinearAnalysisParams::PutNodeNumber ( long ret ) {
    HRESULT _hr = put_NodeNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2176)
inline enum IRobotDegreeOfFreedom IRobotNonlinearAnalysisParams::GetDegreeOfFreedom ( ) {
    enum IRobotDegreeOfFreedom _result;
    HRESULT _hr = get_DegreeOfFreedom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2177)
inline void IRobotNonlinearAnalysisParams::PutDegreeOfFreedom ( enum IRobotDegreeOfFreedom ret ) {
    HRESULT _hr = put_DegreeOfFreedom(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2178)
inline double IRobotNonlinearAnalysisParams::GetMaxDisplacement ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxDisplacement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2179)
inline void IRobotNonlinearAnalysisParams::PutMaxDisplacement ( double ret ) {
    HRESULT _hr = put_MaxDisplacement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2180)
inline HRESULT IRobotNonlinearAnalysisParams::GetSettingsFromPreferences ( ) {
    HRESULT _hr = raw_GetSettingsFromPreferences();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2181)
inline HRESULT IRobotNonlinearAnalysisParams::SaveSettingsInPreferences ( ) {
    HRESULT _hr = raw_SaveSettingsInPreferences();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2182)
inline VARIANT_BOOL IRobotNonlinearAnalysisParams::GetStiff ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Stiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2183)
inline void IRobotNonlinearAnalysisParams::PutStiff ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Stiff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotCaseAnalysisModesFilter wrapper method implementations
//

#pragma implementation_key(2184)
inline enum IRobotCaseAnalysisModesFilterType IRobotCaseAnalysisModesFilter::GetType ( ) {
    enum IRobotCaseAnalysisModesFilterType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2185)
inline void IRobotCaseAnalysisModesFilter::PutType ( enum IRobotCaseAnalysisModesFilterType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2186)
inline double IRobotCaseAnalysisModesFilter::GetMassPercentage ( ) {
    double _result = 0;
    HRESULT _hr = get_MassPercentage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2187)
inline void IRobotCaseAnalysisModesFilter::PutMassPercentage ( double ret ) {
    HRESULT _hr = put_MassPercentage(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2188)
inline _bstr_t IRobotCaseAnalysisModesFilter::GetModes ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Modes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2189)
inline void IRobotCaseAnalysisModesFilter::PutModes ( _bstr_t ret ) {
    HRESULT _hr = put_Modes(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_PS_92_SiteEnvelope wrapper method implementations
//

#pragma implementation_key(2190)
inline HRESULT IRobotSeismicAnalysis_PS_92_SiteEnvelope::SetActive ( enum IRobotSeismicAnalysis_PS_92_SiteType _site, VARIANT_BOOL _is_active ) {
    HRESULT _hr = raw_SetActive(_site, _is_active);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2191)
inline VARIANT_BOOL IRobotSeismicAnalysis_PS_92_SiteEnvelope::IsActive ( enum IRobotSeismicAnalysis_PS_92_SiteType _site ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsActive(_site, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotSeismicResidualMode wrapper method implementations
//

#pragma implementation_key(2192)
inline VARIANT_BOOL IRobotSeismicResidualMode::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2193)
inline void IRobotSeismicResidualMode::PutIsActive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsActive(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2194)
inline enum IRobotSeismicResidualModeDefinitionType IRobotSeismicResidualMode::GetDefinitionMethod ( ) {
    enum IRobotSeismicResidualModeDefinitionType _result;
    HRESULT _hr = get_DefinitionMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2195)
inline void IRobotSeismicResidualMode::PutDefinitionMethod ( enum IRobotSeismicResidualModeDefinitionType ret ) {
    HRESULT _hr = put_DefinitionMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2196)
inline double IRobotSeismicResidualMode::GetAugmentationFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_AugmentationFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2197)
inline void IRobotSeismicResidualMode::PutAugmentationFactor ( double ret ) {
    HRESULT _hr = put_AugmentationFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2198)
inline double IRobotSeismicResidualMode::GetLimitFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_LimitFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2199)
inline void IRobotSeismicResidualMode::PutLimitFrequency ( double ret ) {
    HRESULT _hr = put_LimitFrequency(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_PS_92_Params wrapper method implementations
//

#pragma implementation_key(2200)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_PS_92_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2201)
inline void IRobotSeismicAnalysis_PS_92_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2202)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_PS_92_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2203)
inline void IRobotSeismicAnalysis_PS_92_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2204)
inline enum IRobotSeismicAnalysis_PS_92_ZoneType IRobotSeismicAnalysis_PS_92_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_PS_92_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2205)
inline void IRobotSeismicAnalysis_PS_92_Params::PutZoneType ( enum IRobotSeismicAnalysis_PS_92_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2206)
inline double IRobotSeismicAnalysis_PS_92_Params::GetTopography ( ) {
    double _result = 0;
    HRESULT _hr = get_Topography(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2207)
inline void IRobotSeismicAnalysis_PS_92_Params::PutTopography ( double ret ) {
    HRESULT _hr = put_Topography(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2208)
inline enum IRobotSeismicAnalysis_PS_92_StructureType IRobotSeismicAnalysis_PS_92_Params::GetStructureType ( ) {
    enum IRobotSeismicAnalysis_PS_92_StructureType _result;
    HRESULT _hr = get_StructureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2209)
inline void IRobotSeismicAnalysis_PS_92_Params::PutStructureType ( enum IRobotSeismicAnalysis_PS_92_StructureType ret ) {
    HRESULT _hr = put_StructureType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2210)
inline enum IRobotSeismicAnalysis_PS_92_SiteType IRobotSeismicAnalysis_PS_92_Params::GetSite ( ) {
    enum IRobotSeismicAnalysis_PS_92_SiteType _result;
    HRESULT _hr = get_Site(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2211)
inline void IRobotSeismicAnalysis_PS_92_Params::PutSite ( enum IRobotSeismicAnalysis_PS_92_SiteType ret ) {
    HRESULT _hr = put_Site(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2212)
inline enum IRobotSeismicAnalysisSpectrumType IRobotSeismicAnalysis_PS_92_Params::GetSpectrumType ( ) {
    enum IRobotSeismicAnalysisSpectrumType _result;
    HRESULT _hr = get_SpectrumType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2213)
inline void IRobotSeismicAnalysis_PS_92_Params::PutSpectrumType ( enum IRobotSeismicAnalysisSpectrumType ret ) {
    HRESULT _hr = put_SpectrumType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2214)
inline enum IRobotSeismicAnalysisDirectionType IRobotSeismicAnalysis_PS_92_Params::GetDirectionType ( ) {
    enum IRobotSeismicAnalysisDirectionType _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2215)
inline void IRobotSeismicAnalysis_PS_92_Params::PutDirectionType ( enum IRobotSeismicAnalysisDirectionType ret ) {
    HRESULT _hr = put_DirectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2216)
inline double IRobotSeismicAnalysis_PS_92_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2217)
inline void IRobotSeismicAnalysis_PS_92_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2218)
inline IRobotSeismicAnalysis_PS_92_SiteEnvelopePtr IRobotSeismicAnalysis_PS_92_Params::GetSiteEnvelope ( ) {
    struct IRobotSeismicAnalysis_PS_92_SiteEnvelope * _result = 0;
    HRESULT _hr = get_SiteEnvelope(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicAnalysis_PS_92_SiteEnvelopePtr(_result, false);
}

#pragma implementation_key(2219)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_PS_92_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(2220)
inline IRobotSeismicResidualModePtr IRobotSeismicAnalysis_PS_92_Params::GetResidualMode ( ) {
    struct IRobotSeismicResidualMode * _result = 0;
    HRESULT _hr = get_ResidualMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicResidualModePtr(_result, false);
}

//
// interface IRobotSeismicAnalysis_PS_69_Params wrapper method implementations
//

#pragma implementation_key(2221)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_PS_69_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2222)
inline void IRobotSeismicAnalysis_PS_69_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2223)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_PS_69_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2224)
inline void IRobotSeismicAnalysis_PS_69_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2225)
inline enum IRobotSeismicAnalysis_PS_69_DampingType IRobotSeismicAnalysis_PS_69_Params::GetDamping ( ) {
    enum IRobotSeismicAnalysis_PS_69_DampingType _result;
    HRESULT _hr = get_Damping(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2226)
inline void IRobotSeismicAnalysis_PS_69_Params::PutDamping ( enum IRobotSeismicAnalysis_PS_69_DampingType ret ) {
    HRESULT _hr = put_Damping(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2227)
inline enum IRobotSeismicAnalysis_PS_69_SoilType IRobotSeismicAnalysis_PS_69_Params::GetSoil ( ) {
    enum IRobotSeismicAnalysis_PS_69_SoilType _result;
    HRESULT _hr = get_Soil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2228)
inline void IRobotSeismicAnalysis_PS_69_Params::PutSoil ( enum IRobotSeismicAnalysis_PS_69_SoilType ret ) {
    HRESULT _hr = put_Soil(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2229)
inline double IRobotSeismicAnalysis_PS_69_Params::GetAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_Alpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2230)
inline void IRobotSeismicAnalysis_PS_69_Params::PutAlpha ( double ret ) {
    HRESULT _hr = put_Alpha(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2231)
inline double IRobotSeismicAnalysis_PS_69_Params::GetDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2232)
inline void IRobotSeismicAnalysis_PS_69_Params::PutDelta ( double ret ) {
    HRESULT _hr = put_Delta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_P_100_92_Params wrapper method implementations
//

#pragma implementation_key(2233)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_P_100_92_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2234)
inline void IRobotSeismicAnalysis_P_100_92_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2235)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_P_100_92_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2236)
inline void IRobotSeismicAnalysis_P_100_92_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2237)
inline enum IRobotSeismicAnalysis_P_100_92_ZoneType IRobotSeismicAnalysis_P_100_92_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_P_100_92_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2238)
inline void IRobotSeismicAnalysis_P_100_92_Params::PutZoneType ( enum IRobotSeismicAnalysis_P_100_92_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2239)
inline enum IRobotSeismicAnalysis_P_100_92_ImportanceClassType IRobotSeismicAnalysis_P_100_92_Params::GetImportanceClass ( ) {
    enum IRobotSeismicAnalysis_P_100_92_ImportanceClassType _result;
    HRESULT _hr = get_ImportanceClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2240)
inline void IRobotSeismicAnalysis_P_100_92_Params::PutImportanceClass ( enum IRobotSeismicAnalysis_P_100_92_ImportanceClassType ret ) {
    HRESULT _hr = put_ImportanceClass(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2241)
inline double IRobotSeismicAnalysis_P_100_92_Params::GetTc ( ) {
    double _result = 0;
    HRESULT _hr = get_Tc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2242)
inline void IRobotSeismicAnalysis_P_100_92_Params::PutTc ( double ret ) {
    HRESULT _hr = put_Tc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2243)
inline double IRobotSeismicAnalysis_P_100_92_Params::GetPsi ( ) {
    double _result = 0;
    HRESULT _hr = get_Psi(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2244)
inline void IRobotSeismicAnalysis_P_100_92_Params::PutPsi ( double ret ) {
    HRESULT _hr = put_Psi(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2245)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_P_100_92_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

//
// interface IRobotSeismicAnalysis_EC_8_Params wrapper method implementations
//

#pragma implementation_key(2246)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_EC_8_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2247)
inline void IRobotSeismicAnalysis_EC_8_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2248)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_EC_8_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2249)
inline void IRobotSeismicAnalysis_EC_8_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2250)
inline enum IRobotSeismicAnalysis_EC_8_ZoneType IRobotSeismicAnalysis_EC_8_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_EC_8_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2251)
inline void IRobotSeismicAnalysis_EC_8_Params::PutZoneType ( enum IRobotSeismicAnalysis_EC_8_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2252)
inline enum IRobotSeismicAnalysis_EC_8_StructureType IRobotSeismicAnalysis_EC_8_Params::GetStructureType ( ) {
    enum IRobotSeismicAnalysis_EC_8_StructureType _result;
    HRESULT _hr = get_StructureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2253)
inline void IRobotSeismicAnalysis_EC_8_Params::PutStructureType ( enum IRobotSeismicAnalysis_EC_8_StructureType ret ) {
    HRESULT _hr = put_StructureType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2254)
inline enum IRobotSeismicAnalysis_EC_8_SoilType IRobotSeismicAnalysis_EC_8_Params::GetSoilClass ( ) {
    enum IRobotSeismicAnalysis_EC_8_SoilType _result;
    HRESULT _hr = get_SoilClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2255)
inline void IRobotSeismicAnalysis_EC_8_Params::PutSoilClass ( enum IRobotSeismicAnalysis_EC_8_SoilType ret ) {
    HRESULT _hr = put_SoilClass(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2256)
inline enum IRobotSeismicAnalysisSpectrumType IRobotSeismicAnalysis_EC_8_Params::GetSpectrumType ( ) {
    enum IRobotSeismicAnalysisSpectrumType _result;
    HRESULT _hr = get_SpectrumType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2257)
inline void IRobotSeismicAnalysis_EC_8_Params::PutSpectrumType ( enum IRobotSeismicAnalysisSpectrumType ret ) {
    HRESULT _hr = put_SpectrumType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2258)
inline enum IRobotSeismicAnalysisDirectionType IRobotSeismicAnalysis_EC_8_Params::GetDirectionType ( ) {
    enum IRobotSeismicAnalysisDirectionType _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2259)
inline void IRobotSeismicAnalysis_EC_8_Params::PutDirectionType ( enum IRobotSeismicAnalysisDirectionType ret ) {
    HRESULT _hr = put_DirectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2260)
inline double IRobotSeismicAnalysis_EC_8_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2261)
inline void IRobotSeismicAnalysis_EC_8_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_EAK_2000_Params wrapper method implementations
//

#pragma implementation_key(2262)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_EAK_2000_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2263)
inline void IRobotSeismicAnalysis_EAK_2000_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2264)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_EAK_2000_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2265)
inline void IRobotSeismicAnalysis_EAK_2000_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2266)
inline enum IRobotSeismicAnalysis_EAK_2000_ZoneType IRobotSeismicAnalysis_EAK_2000_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_EAK_2000_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2267)
inline void IRobotSeismicAnalysis_EAK_2000_Params::PutZoneType ( enum IRobotSeismicAnalysis_EAK_2000_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2268)
inline double IRobotSeismicAnalysis_EAK_2000_Params::GetFoundationFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_FoundationFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2269)
inline void IRobotSeismicAnalysis_EAK_2000_Params::PutFoundationFactor ( double ret ) {
    HRESULT _hr = put_FoundationFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2270)
inline enum IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType IRobotSeismicAnalysis_EAK_2000_Params::GetImportanceFactor ( ) {
    enum IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType _result;
    HRESULT _hr = get_ImportanceFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2271)
inline void IRobotSeismicAnalysis_EAK_2000_Params::PutImportanceFactor ( enum IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType ret ) {
    HRESULT _hr = put_ImportanceFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2272)
inline enum IRobotSeismicAnalysis_EAK_2000_GroundCategoryType IRobotSeismicAnalysis_EAK_2000_Params::GetGroundCategory ( ) {
    enum IRobotSeismicAnalysis_EAK_2000_GroundCategoryType _result;
    HRESULT _hr = get_GroundCategory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2273)
inline void IRobotSeismicAnalysis_EAK_2000_Params::PutGroundCategory ( enum IRobotSeismicAnalysis_EAK_2000_GroundCategoryType ret ) {
    HRESULT _hr = put_GroundCategory(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2274)
inline enum IRobotSeismicAnalysisDirectionType IRobotSeismicAnalysis_EAK_2000_Params::GetDirectionType ( ) {
    enum IRobotSeismicAnalysisDirectionType _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2275)
inline void IRobotSeismicAnalysis_EAK_2000_Params::PutDirectionType ( enum IRobotSeismicAnalysisDirectionType ret ) {
    HRESULT _hr = put_DirectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2276)
inline double IRobotSeismicAnalysis_EAK_2000_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2277)
inline void IRobotSeismicAnalysis_EAK_2000_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2278)
inline double IRobotSeismicAnalysis_EAK_2000_Params::GetVerticalFoundationFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalFoundationFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2279)
inline double IRobotSeismicAnalysis_EAK_2000_Params::GetVerticalBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalBehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotSeismicAnalysis_P_100_2006_Params wrapper method implementations
//

#pragma implementation_key(2280)
inline enum IRobotSeismicAnalysisSpectrumType IRobotSeismicAnalysis_P_100_2006_Params::GetSpectrumType ( ) {
    enum IRobotSeismicAnalysisSpectrumType _result;
    HRESULT _hr = get_SpectrumType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2281)
inline void IRobotSeismicAnalysis_P_100_2006_Params::PutSpectrumType ( enum IRobotSeismicAnalysisSpectrumType ret ) {
    HRESULT _hr = put_SpectrumType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2282)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_P_100_2006_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(2283)
inline double IRobotSeismicAnalysis_P_100_2006_Params::GetAgg ( ) {
    double _result = 0;
    HRESULT _hr = get_Agg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2284)
inline void IRobotSeismicAnalysis_P_100_2006_Params::PutAgg ( double ret ) {
    HRESULT _hr = put_Agg(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2285)
inline double IRobotSeismicAnalysis_P_100_2006_Params::GetB0 ( ) {
    double _result = 0;
    HRESULT _hr = get_B0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2286)
inline void IRobotSeismicAnalysis_P_100_2006_Params::PutB0 ( double ret ) {
    HRESULT _hr = put_B0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2287)
inline double IRobotSeismicAnalysis_P_100_2006_Params::GetTb ( ) {
    double _result = 0;
    HRESULT _hr = get_Tb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2288)
inline void IRobotSeismicAnalysis_P_100_2006_Params::PutTb ( double ret ) {
    HRESULT _hr = put_Tb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2289)
inline double IRobotSeismicAnalysis_P_100_2006_Params::GetTc ( ) {
    double _result = 0;
    HRESULT _hr = get_Tc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2290)
inline void IRobotSeismicAnalysis_P_100_2006_Params::PutTc ( double ret ) {
    HRESULT _hr = put_Tc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2291)
inline double IRobotSeismicAnalysis_P_100_2006_Params::GetTd ( ) {
    double _result = 0;
    HRESULT _hr = get_Td(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2292)
inline void IRobotSeismicAnalysis_P_100_2006_Params::PutTd ( double ret ) {
    HRESULT _hr = put_Td(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2293)
inline double IRobotSeismicAnalysis_P_100_2006_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2294)
inline void IRobotSeismicAnalysis_P_100_2006_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2295)
inline double IRobotSeismicAnalysis_P_100_2006_Params::GetImportanceFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ImportanceFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2296)
inline void IRobotSeismicAnalysis_P_100_2006_Params::PutImportanceFactor ( double ret ) {
    HRESULT _hr = put_ImportanceFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_IBC_2006_Params wrapper method implementations
//

#pragma implementation_key(2297)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_IBC_2006_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2298)
inline void IRobotSeismicAnalysis_IBC_2006_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2299)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_IBC_2006_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2300)
inline void IRobotSeismicAnalysis_IBC_2006_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2301)
inline enum IRobotSeismicAnalysis_IBC_2006_SiteClassType IRobotSeismicAnalysis_IBC_2006_Params::GetSiteClass ( ) {
    enum IRobotSeismicAnalysis_IBC_2006_SiteClassType _result;
    HRESULT _hr = get_SiteClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2302)
inline void IRobotSeismicAnalysis_IBC_2006_Params::PutSiteClass ( enum IRobotSeismicAnalysis_IBC_2006_SiteClassType ret ) {
    HRESULT _hr = put_SiteClass(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2303)
inline double IRobotSeismicAnalysis_IBC_2006_Params::GetS1 ( ) {
    double _result = 0;
    HRESULT _hr = get_S1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2304)
inline void IRobotSeismicAnalysis_IBC_2006_Params::PutS1 ( double ret ) {
    HRESULT _hr = put_S1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2305)
inline double IRobotSeismicAnalysis_IBC_2006_Params::GetSs ( ) {
    double _result = 0;
    HRESULT _hr = get_Ss(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2306)
inline void IRobotSeismicAnalysis_IBC_2006_Params::PutSs ( double ret ) {
    HRESULT _hr = put_Ss(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2307)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_IBC_2006_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(2308)
inline double IRobotSeismicAnalysis_IBC_2006_Params::GetI ( ) {
    double _result = 0;
    HRESULT _hr = get_I(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2309)
inline void IRobotSeismicAnalysis_IBC_2006_Params::PutI ( double ret ) {
    HRESULT _hr = put_I(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2310)
inline double IRobotSeismicAnalysis_IBC_2006_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2311)
inline void IRobotSeismicAnalysis_IBC_2006_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2312)
inline double IRobotSeismicAnalysis_IBC_2006_Params::GetTL ( ) {
    double _result = 0;
    HRESULT _hr = get_TL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2313)
inline void IRobotSeismicAnalysis_IBC_2006_Params::PutTL ( double ret ) {
    HRESULT _hr = put_TL(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_IBC_2000_Params wrapper method implementations
//

#pragma implementation_key(2314)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_IBC_2000_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2315)
inline void IRobotSeismicAnalysis_IBC_2000_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2316)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_IBC_2000_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2317)
inline void IRobotSeismicAnalysis_IBC_2000_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2318)
inline enum IRobotSeismicAnalysis_IBC_2000_SiteClassType IRobotSeismicAnalysis_IBC_2000_Params::GetSiteClass ( ) {
    enum IRobotSeismicAnalysis_IBC_2000_SiteClassType _result;
    HRESULT _hr = get_SiteClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2319)
inline void IRobotSeismicAnalysis_IBC_2000_Params::PutSiteClass ( enum IRobotSeismicAnalysis_IBC_2000_SiteClassType ret ) {
    HRESULT _hr = put_SiteClass(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2320)
inline double IRobotSeismicAnalysis_IBC_2000_Params::GetS1 ( ) {
    double _result = 0;
    HRESULT _hr = get_S1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2321)
inline void IRobotSeismicAnalysis_IBC_2000_Params::PutS1 ( double ret ) {
    HRESULT _hr = put_S1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2322)
inline double IRobotSeismicAnalysis_IBC_2000_Params::GetSs ( ) {
    double _result = 0;
    HRESULT _hr = get_Ss(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2323)
inline void IRobotSeismicAnalysis_IBC_2000_Params::PutSs ( double ret ) {
    HRESULT _hr = put_Ss(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2324)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_IBC_2000_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(2325)
inline double IRobotSeismicAnalysis_IBC_2000_Params::GetIe ( ) {
    double _result = 0;
    HRESULT _hr = get_Ie(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2326)
inline void IRobotSeismicAnalysis_IBC_2000_Params::PutIe ( double ret ) {
    HRESULT _hr = put_Ie(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2327)
inline double IRobotSeismicAnalysis_IBC_2000_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2328)
inline void IRobotSeismicAnalysis_IBC_2000_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_UBC_97_Params wrapper method implementations
//

#pragma implementation_key(2329)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_UBC_97_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2330)
inline void IRobotSeismicAnalysis_UBC_97_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2331)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_UBC_97_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2332)
inline void IRobotSeismicAnalysis_UBC_97_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2333)
inline enum IRobotSeismicAnalysis_UBC_97_ZoneType IRobotSeismicAnalysis_UBC_97_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_UBC_97_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2334)
inline void IRobotSeismicAnalysis_UBC_97_Params::PutZoneType ( enum IRobotSeismicAnalysis_UBC_97_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2335)
inline enum IRobotSeismicAnalysis_UBC_97_SoilType IRobotSeismicAnalysis_UBC_97_Params::GetSoil ( ) {
    enum IRobotSeismicAnalysis_UBC_97_SoilType _result;
    HRESULT _hr = get_Soil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2336)
inline void IRobotSeismicAnalysis_UBC_97_Params::PutSoil ( enum IRobotSeismicAnalysis_UBC_97_SoilType ret ) {
    HRESULT _hr = put_Soil(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2337)
inline double IRobotSeismicAnalysis_UBC_97_Params::GetClosestDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_ClosestDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2338)
inline void IRobotSeismicAnalysis_UBC_97_Params::PutClosestDistance ( double ret ) {
    HRESULT _hr = put_ClosestDistance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2339)
inline enum IRobotSeismicAnalysis_UBC_97_SourceType IRobotSeismicAnalysis_UBC_97_Params::GetSource ( ) {
    enum IRobotSeismicAnalysis_UBC_97_SourceType _result;
    HRESULT _hr = get_Source(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2340)
inline void IRobotSeismicAnalysis_UBC_97_Params::PutSource ( enum IRobotSeismicAnalysis_UBC_97_SourceType ret ) {
    HRESULT _hr = put_Source(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2341)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_UBC_97_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(2342)
inline double IRobotSeismicAnalysis_UBC_97_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2343)
inline void IRobotSeismicAnalysis_UBC_97_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2344)
inline double IRobotSeismicAnalysis_UBC_97_Params::GetI ( ) {
    double _result = 0;
    HRESULT _hr = get_I(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2345)
inline void IRobotSeismicAnalysis_UBC_97_Params::PutI ( double ret ) {
    HRESULT _hr = put_I(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_TURKISH_23098_Params wrapper method implementations
//

#pragma implementation_key(2346)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_TURKISH_23098_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2347)
inline void IRobotSeismicAnalysis_TURKISH_23098_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2348)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_TURKISH_23098_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2349)
inline void IRobotSeismicAnalysis_TURKISH_23098_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2350)
inline enum IRobotSeismicAnalysis_TURKISH_23098_ZoneType IRobotSeismicAnalysis_TURKISH_23098_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_TURKISH_23098_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2351)
inline void IRobotSeismicAnalysis_TURKISH_23098_Params::PutZoneType ( enum IRobotSeismicAnalysis_TURKISH_23098_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2352)
inline enum IRobotSeismicAnalysis_TURKISH_23098_SoilType IRobotSeismicAnalysis_TURKISH_23098_Params::GetSoilType ( ) {
    enum IRobotSeismicAnalysis_TURKISH_23098_SoilType _result;
    HRESULT _hr = get_SoilType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2353)
inline void IRobotSeismicAnalysis_TURKISH_23098_Params::PutSoilType ( enum IRobotSeismicAnalysis_TURKISH_23098_SoilType ret ) {
    HRESULT _hr = put_SoilType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2354)
inline double IRobotSeismicAnalysis_TURKISH_23098_Params::GetStructureImportance ( ) {
    double _result = 0;
    HRESULT _hr = get_StructureImportance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2355)
inline void IRobotSeismicAnalysis_TURKISH_23098_Params::PutStructureImportance ( double ret ) {
    HRESULT _hr = put_StructureImportance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2356)
inline double IRobotSeismicAnalysis_TURKISH_23098_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2357)
inline void IRobotSeismicAnalysis_TURKISH_23098_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_RPA_88_Params wrapper method implementations
//

#pragma implementation_key(2358)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_RPA_88_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2359)
inline void IRobotSeismicAnalysis_RPA_88_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2360)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_RPA_88_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2361)
inline void IRobotSeismicAnalysis_RPA_88_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2362)
inline enum IRobotSeismicAnalysis_RPA_88_ZoneType IRobotSeismicAnalysis_RPA_88_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_RPA_88_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2363)
inline void IRobotSeismicAnalysis_RPA_88_Params::PutZoneType ( enum IRobotSeismicAnalysis_RPA_88_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2364)
inline enum IRobotSeismicAnalysis_RPA_88_UsageType IRobotSeismicAnalysis_RPA_88_Params::GetUsage ( ) {
    enum IRobotSeismicAnalysis_RPA_88_UsageType _result;
    HRESULT _hr = get_Usage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2365)
inline void IRobotSeismicAnalysis_RPA_88_Params::PutUsage ( enum IRobotSeismicAnalysis_RPA_88_UsageType ret ) {
    HRESULT _hr = put_Usage(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2366)
inline enum IRobotSeismicAnalysis_RPA_88_CategoryType IRobotSeismicAnalysis_RPA_88_Params::GetCategory ( ) {
    enum IRobotSeismicAnalysis_RPA_88_CategoryType _result;
    HRESULT _hr = get_Category(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2367)
inline void IRobotSeismicAnalysis_RPA_88_Params::PutCategory ( enum IRobotSeismicAnalysis_RPA_88_CategoryType ret ) {
    HRESULT _hr = put_Category(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2368)
inline enum IRobotSeismicAnalysis_RPA_88_SoilType IRobotSeismicAnalysis_RPA_88_Params::GetSoil ( ) {
    enum IRobotSeismicAnalysis_RPA_88_SoilType _result;
    HRESULT _hr = get_Soil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2369)
inline void IRobotSeismicAnalysis_RPA_88_Params::PutSoil ( enum IRobotSeismicAnalysis_RPA_88_SoilType ret ) {
    HRESULT _hr = put_Soil(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2370)
inline double IRobotSeismicAnalysis_RPA_88_Params::GetQualityFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_QualityFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2371)
inline void IRobotSeismicAnalysis_RPA_88_Params::PutQualityFactor ( double ret ) {
    HRESULT _hr = put_QualityFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_DM_16_1_96_Params wrapper method implementations
//

#pragma implementation_key(2372)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_DM_16_1_96_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2373)
inline void IRobotSeismicAnalysis_DM_16_1_96_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2374)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_DM_16_1_96_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2375)
inline void IRobotSeismicAnalysis_DM_16_1_96_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2376)
inline enum IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType IRobotSeismicAnalysis_DM_16_1_96_Params::GetSeismicProtectionCoeff ( ) {
    enum IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType _result;
    HRESULT _hr = get_SeismicProtectionCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2377)
inline void IRobotSeismicAnalysis_DM_16_1_96_Params::PutSeismicProtectionCoeff ( enum IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType ret ) {
    HRESULT _hr = put_SeismicProtectionCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2378)
inline double IRobotSeismicAnalysis_DM_16_1_96_Params::GetSeismicCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_SeismicCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2379)
inline void IRobotSeismicAnalysis_DM_16_1_96_Params::PutSeismicCoeff ( double ret ) {
    HRESULT _hr = put_SeismicCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_AFPS_90_Params wrapper method implementations
//

#pragma implementation_key(2380)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_AFPS_90_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2381)
inline void IRobotSeismicAnalysis_AFPS_90_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2382)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_AFPS_90_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2383)
inline void IRobotSeismicAnalysis_AFPS_90_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2384)
inline enum IRobotSeismicAnalysis_AFPS_90_ZoneType IRobotSeismicAnalysis_AFPS_90_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_AFPS_90_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2385)
inline void IRobotSeismicAnalysis_AFPS_90_Params::PutZoneType ( enum IRobotSeismicAnalysis_AFPS_90_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2386)
inline double IRobotSeismicAnalysis_AFPS_90_Params::GetTopography ( ) {
    double _result = 0;
    HRESULT _hr = get_Topography(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2387)
inline void IRobotSeismicAnalysis_AFPS_90_Params::PutTopography ( double ret ) {
    HRESULT _hr = put_Topography(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2388)
inline double IRobotSeismicAnalysis_AFPS_90_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2389)
inline void IRobotSeismicAnalysis_AFPS_90_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2390)
inline enum IRobotSeismicAnalysis_AFPS_90_StructureType IRobotSeismicAnalysis_AFPS_90_Params::GetStructureType ( ) {
    enum IRobotSeismicAnalysis_AFPS_90_StructureType _result;
    HRESULT _hr = get_StructureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2391)
inline void IRobotSeismicAnalysis_AFPS_90_Params::PutStructureType ( enum IRobotSeismicAnalysis_AFPS_90_StructureType ret ) {
    HRESULT _hr = put_StructureType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2392)
inline enum IRobotSeismicAnalysis_AFPS_90_SiteType IRobotSeismicAnalysis_AFPS_90_Params::GetSite ( ) {
    enum IRobotSeismicAnalysis_AFPS_90_SiteType _result;
    HRESULT _hr = get_Site(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2393)
inline void IRobotSeismicAnalysis_AFPS_90_Params::PutSite ( enum IRobotSeismicAnalysis_AFPS_90_SiteType ret ) {
    HRESULT _hr = put_Site(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2394)
inline enum IRobotSeismicAnalysisSpectrumType IRobotSeismicAnalysis_AFPS_90_Params::GetSpectrumType ( ) {
    enum IRobotSeismicAnalysisSpectrumType _result;
    HRESULT _hr = get_SpectrumType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2395)
inline void IRobotSeismicAnalysis_AFPS_90_Params::PutSpectrumType ( enum IRobotSeismicAnalysisSpectrumType ret ) {
    HRESULT _hr = put_SpectrumType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2396)
inline enum IRobotSeismicAnalysisDirectionType IRobotSeismicAnalysis_AFPS_90_Params::GetDirectionType ( ) {
    enum IRobotSeismicAnalysisDirectionType _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2397)
inline void IRobotSeismicAnalysis_AFPS_90_Params::PutDirectionType ( enum IRobotSeismicAnalysisDirectionType ret ) {
    HRESULT _hr = put_DirectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2398)
inline IRobotSeismicResidualModePtr IRobotSeismicAnalysis_AFPS_90_Params::GetResidualMode ( ) {
    struct IRobotSeismicResidualMode * _result = 0;
    HRESULT _hr = get_ResidualMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicResidualModePtr(_result, false);
}

//
// interface IRobotSeismicAnalysis_CHINESE_Params wrapper method implementations
//

#pragma implementation_key(2399)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_CHINESE_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2400)
inline void IRobotSeismicAnalysis_CHINESE_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2401)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_CHINESE_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2402)
inline void IRobotSeismicAnalysis_CHINESE_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2403)
inline enum IRobotSeismicAnalysis_CHINESE_StructureType IRobotSeismicAnalysis_CHINESE_Params::GetStructureType ( ) {
    enum IRobotSeismicAnalysis_CHINESE_StructureType _result;
    HRESULT _hr = get_StructureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2404)
inline void IRobotSeismicAnalysis_CHINESE_Params::PutStructureType ( enum IRobotSeismicAnalysis_CHINESE_StructureType ret ) {
    HRESULT _hr = put_StructureType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2405)
inline enum IRobotSeismicAnalysis_CHINESE_SiteType IRobotSeismicAnalysis_CHINESE_Params::GetSite ( ) {
    enum IRobotSeismicAnalysis_CHINESE_SiteType _result;
    HRESULT _hr = get_Site(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2406)
inline void IRobotSeismicAnalysis_CHINESE_Params::PutSite ( enum IRobotSeismicAnalysis_CHINESE_SiteType ret ) {
    HRESULT _hr = put_Site(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2407)
inline enum IRobotSeismicAnalysis_CHINESE_DesignType IRobotSeismicAnalysis_CHINESE_Params::GetDesignStandard ( ) {
    enum IRobotSeismicAnalysis_CHINESE_DesignType _result;
    HRESULT _hr = get_DesignStandard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2408)
inline void IRobotSeismicAnalysis_CHINESE_Params::PutDesignStandard ( enum IRobotSeismicAnalysis_CHINESE_DesignType ret ) {
    HRESULT _hr = put_DesignStandard(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2409)
inline enum IRobotSeismicAnalysis_CHINESE_IntensityType IRobotSeismicAnalysis_CHINESE_Params::GetIntensity ( ) {
    enum IRobotSeismicAnalysis_CHINESE_IntensityType _result;
    HRESULT _hr = get_Intensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2410)
inline void IRobotSeismicAnalysis_CHINESE_Params::PutIntensity ( enum IRobotSeismicAnalysis_CHINESE_IntensityType ret ) {
    HRESULT _hr = put_Intensity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2411)
inline enum IRobotSeismicAnalysis_CHINESE_EarthquakeType IRobotSeismicAnalysis_CHINESE_Params::GetEarthquakeType ( ) {
    enum IRobotSeismicAnalysis_CHINESE_EarthquakeType _result;
    HRESULT _hr = get_EarthquakeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2412)
inline void IRobotSeismicAnalysis_CHINESE_Params::PutEarthquakeType ( enum IRobotSeismicAnalysis_CHINESE_EarthquakeType ret ) {
    HRESULT _hr = put_EarthquakeType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2413)
inline double IRobotSeismicAnalysis_CHINESE_Params::GetFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_Factor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2414)
inline void IRobotSeismicAnalysis_CHINESE_Params::PutFactor ( double ret ) {
    HRESULT _hr = put_Factor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2415)
inline double IRobotSeismicAnalysis_CHINESE_Params::GetSiteTg ( ) {
    double _result = 0;
    HRESULT _hr = get_SiteTg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2416)
inline void IRobotSeismicAnalysis_CHINESE_Params::PutSiteTg ( double ret ) {
    HRESULT _hr = put_SiteTg(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_CIRSOC_103_Params wrapper method implementations
//

#pragma implementation_key(2417)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_CIRSOC_103_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2418)
inline void IRobotSeismicAnalysis_CIRSOC_103_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2419)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_CIRSOC_103_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2420)
inline void IRobotSeismicAnalysis_CIRSOC_103_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2421)
inline enum IRobotSeismicAnalysis_CIRSOC_103_ZoneType IRobotSeismicAnalysis_CIRSOC_103_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_CIRSOC_103_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2422)
inline void IRobotSeismicAnalysis_CIRSOC_103_Params::PutZoneType ( enum IRobotSeismicAnalysis_CIRSOC_103_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2423)
inline enum IRobotSeismicAnalysisDirectionType IRobotSeismicAnalysis_CIRSOC_103_Params::GetDirectionType ( ) {
    enum IRobotSeismicAnalysisDirectionType _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2424)
inline void IRobotSeismicAnalysis_CIRSOC_103_Params::PutDirectionType ( enum IRobotSeismicAnalysisDirectionType ret ) {
    HRESULT _hr = put_DirectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2425)
inline enum IRobotSeismicAnalysis_CIRSOC_103_StructureType IRobotSeismicAnalysis_CIRSOC_103_Params::GetStructureType ( ) {
    enum IRobotSeismicAnalysis_CIRSOC_103_StructureType _result;
    HRESULT _hr = get_StructureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2426)
inline void IRobotSeismicAnalysis_CIRSOC_103_Params::PutStructureType ( enum IRobotSeismicAnalysis_CIRSOC_103_StructureType ret ) {
    HRESULT _hr = put_StructureType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2427)
inline double IRobotSeismicAnalysis_CIRSOC_103_Params::GetPlasticityCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_PlasticityCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2428)
inline void IRobotSeismicAnalysis_CIRSOC_103_Params::PutPlasticityCoeff ( double ret ) {
    HRESULT _hr = put_PlasticityCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2429)
inline enum IRobotSeismicAnalysis_CIRSOC_103_SoilType IRobotSeismicAnalysis_CIRSOC_103_Params::GetSoil ( ) {
    enum IRobotSeismicAnalysis_CIRSOC_103_SoilType _result;
    HRESULT _hr = get_Soil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2430)
inline void IRobotSeismicAnalysis_CIRSOC_103_Params::PutSoil ( enum IRobotSeismicAnalysis_CIRSOC_103_SoilType ret ) {
    HRESULT _hr = put_Soil(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSpectralAnalysisPointsCollection wrapper method implementations
//

#pragma implementation_key(2431)
inline long IRobotSpectralAnalysisPointsCollection::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2432)
inline HRESULT IRobotSpectralAnalysisPointsCollection::Add ( double _x, double _y ) {
    HRESULT _hr = raw_Add(_x, _y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2433)
inline HRESULT IRobotSpectralAnalysisPointsCollection::Set ( long _pos, double _x, double _y ) {
    HRESULT _hr = raw_Set(_pos, _x, _y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2434)
inline HRESULT IRobotSpectralAnalysisPointsCollection::Get ( long _pos, double * _x, double * _y ) {
    HRESULT _hr = raw_Get(_pos, _x, _y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2435)
inline HRESULT IRobotSpectralAnalysisPointsCollection::Remove ( long _pos ) {
    HRESULT _hr = raw_Remove(_pos);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2436)
inline HRESULT IRobotSpectralAnalysisPointsCollection::LoadFromFile ( _bstr_t _file_path ) {
    HRESULT _hr = raw_LoadFromFile(_file_path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2437)
inline HRESULT IRobotSpectralAnalysisPointsCollection::SaveToFile ( _bstr_t _file_path ) {
    HRESULT _hr = raw_SaveToFile(_file_path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2438)
inline HRESULT IRobotSpectralAnalysisPointsCollection::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSpectralAnalysisSpectrum wrapper method implementations
//

#pragma implementation_key(2439)
inline _bstr_t IRobotSpectralAnalysisSpectrum::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2440)
inline void IRobotSpectralAnalysisSpectrum::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2441)
inline double IRobotSpectralAnalysisSpectrum::GetDamping ( ) {
    double _result = 0;
    HRESULT _hr = get_Damping(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2442)
inline void IRobotSpectralAnalysisSpectrum::PutDamping ( double ret ) {
    HRESULT _hr = put_Damping(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2443)
inline VARIANT_BOOL IRobotSpectralAnalysisSpectrum::GetAbscissaXAxisLogarithmicScale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AbscissaXAxisLogarithmicScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2444)
inline void IRobotSpectralAnalysisSpectrum::PutAbscissaXAxisLogarithmicScale ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AbscissaXAxisLogarithmicScale(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2445)
inline enum IRobotSpectralAnalysisAbscissaXAxisType IRobotSpectralAnalysisSpectrum::GetAbscissaXAxis ( ) {
    enum IRobotSpectralAnalysisAbscissaXAxisType _result;
    HRESULT _hr = get_AbscissaXAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2446)
inline void IRobotSpectralAnalysisSpectrum::PutAbscissaXAxis ( enum IRobotSpectralAnalysisAbscissaXAxisType ret ) {
    HRESULT _hr = put_AbscissaXAxis(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2447)
inline VARIANT_BOOL IRobotSpectralAnalysisSpectrum::GetOrdinateYAxisLogarithmicScale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OrdinateYAxisLogarithmicScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2448)
inline void IRobotSpectralAnalysisSpectrum::PutOrdinateYAxisLogarithmicScale ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_OrdinateYAxisLogarithmicScale(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2449)
inline enum IRobotSpectralAnalysisOrdinateYAxisType IRobotSpectralAnalysisSpectrum::GetOrdinateYAxis ( ) {
    enum IRobotSpectralAnalysisOrdinateYAxisType _result;
    HRESULT _hr = get_OrdinateYAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2450)
inline void IRobotSpectralAnalysisSpectrum::PutOrdinateYAxis ( enum IRobotSpectralAnalysisOrdinateYAxisType ret ) {
    HRESULT _hr = put_OrdinateYAxis(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2451)
inline IRobotSpectralAnalysisPointsCollectionPtr IRobotSpectralAnalysisSpectrum::GetPoints ( ) {
    struct IRobotSpectralAnalysisPointsCollection * _result = 0;
    HRESULT _hr = get_Points(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSpectralAnalysisPointsCollectionPtr(_result, false);
}

#pragma implementation_key(2452)
inline void IRobotSpectralAnalysisSpectrum::PutPoints ( struct IRobotSpectralAnalysisPointsCollection * ret ) {
    HRESULT _hr = put_Points(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2453)
inline HRESULT IRobotSpectralAnalysisSpectrum::SaveToFile ( _bstr_t _file_path ) {
    HRESULT _hr = raw_SaveToFile(_file_path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2454)
inline HRESULT IRobotSpectralAnalysisSpectrum::LoadFromFile ( _bstr_t _file_path, _bstr_t _spectrum_name ) {
    HRESULT _hr = raw_LoadFromFile(_file_path, _spectrum_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2455)
inline HRESULT IRobotSpectralAnalysisSpectrum::Average ( struct IRobotSpectralAnalysisSpectrum * _spectrum_1, struct IRobotSpectralAnalysisSpectrum * _spectrum_2, double _damping ) {
    HRESULT _hr = raw_Average(_spectrum_1, _spectrum_2, _damping);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2456)
inline HRESULT IRobotSpectralAnalysisSpectrum::AddFromTimeHistory ( struct IRobotSpectralAnalysisPointsCollection * _time_history, double _t_min, double _t_max, long _points_count, double _damping ) {
    HRESULT _hr = raw_AddFromTimeHistory(_time_history, _t_min, _t_max, _points_count, _damping);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSpectralAnalysisParams wrapper method implementations
//

#pragma implementation_key(2457)
inline IRobotGeoPoint3DPtr IRobotSpectralAnalysisParams::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(2458)
inline void IRobotSpectralAnalysisParams::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2459)
inline IRobotCaseAnalysisModesFilterPtr IRobotSpectralAnalysisParams::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2460)
inline void IRobotSpectralAnalysisParams::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2461)
inline IRobotSpectralAnalysisSpectrumPtr IRobotSpectralAnalysisParams::GetSpectrum ( ) {
    struct IRobotSpectralAnalysisSpectrum * _result = 0;
    HRESULT _hr = get_Spectrum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSpectralAnalysisSpectrumPtr(_result, false);
}

#pragma implementation_key(2462)
inline void IRobotSpectralAnalysisParams::PutSpectrum ( struct IRobotSpectralAnalysisSpectrum * ret ) {
    HRESULT _hr = put_Spectrum(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2463)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSpectralAnalysisParams::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

//
// interface IRobotNodeCompatibilityData wrapper method implementations
//

#pragma implementation_key(2464)
inline VARIANT_BOOL IRobotNodeCompatibilityData::GetUX ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2465)
inline void IRobotNodeCompatibilityData::PutUX ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2466)
inline VARIANT_BOOL IRobotNodeCompatibilityData::GetUY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2467)
inline void IRobotNodeCompatibilityData::PutUY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2468)
inline VARIANT_BOOL IRobotNodeCompatibilityData::GetUZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2469)
inline void IRobotNodeCompatibilityData::PutUZ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2470)
inline VARIANT_BOOL IRobotNodeCompatibilityData::GetRX ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2471)
inline void IRobotNodeCompatibilityData::PutRX ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2472)
inline VARIANT_BOOL IRobotNodeCompatibilityData::GetRY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2473)
inline void IRobotNodeCompatibilityData::PutRY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2474)
inline VARIANT_BOOL IRobotNodeCompatibilityData::GetRZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2475)
inline void IRobotNodeCompatibilityData::PutRZ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2476)
inline double IRobotNodeCompatibilityData::GetAX ( ) {
    double _result = 0;
    HRESULT _hr = get_AX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2477)
inline void IRobotNodeCompatibilityData::PutAX ( double ret ) {
    HRESULT _hr = put_AX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2478)
inline double IRobotNodeCompatibilityData::GetAY ( ) {
    double _result = 0;
    HRESULT _hr = get_AY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2479)
inline void IRobotNodeCompatibilityData::PutAY ( double ret ) {
    HRESULT _hr = put_AY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2480)
inline double IRobotNodeCompatibilityData::GetAZ ( ) {
    double _result = 0;
    HRESULT _hr = get_AZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2481)
inline void IRobotNodeCompatibilityData::PutAZ ( double ret ) {
    HRESULT _hr = put_AZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2482)
inline double IRobotNodeCompatibilityData::GetKX ( ) {
    double _result = 0;
    HRESULT _hr = get_KX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2483)
inline void IRobotNodeCompatibilityData::PutKX ( double ret ) {
    HRESULT _hr = put_KX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2484)
inline double IRobotNodeCompatibilityData::GetKY ( ) {
    double _result = 0;
    HRESULT _hr = get_KY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2485)
inline void IRobotNodeCompatibilityData::PutKY ( double ret ) {
    HRESULT _hr = put_KY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2486)
inline double IRobotNodeCompatibilityData::GetKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_KZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2487)
inline void IRobotNodeCompatibilityData::PutKZ ( double ret ) {
    HRESULT _hr = put_KZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2488)
inline double IRobotNodeCompatibilityData::GetAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_Alpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2489)
inline void IRobotNodeCompatibilityData::PutAlpha ( double ret ) {
    HRESULT _hr = put_Alpha(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2490)
inline double IRobotNodeCompatibilityData::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2491)
inline void IRobotNodeCompatibilityData::PutBeta ( double ret ) {
    HRESULT _hr = put_Beta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2492)
inline double IRobotNodeCompatibilityData::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2493)
inline void IRobotNodeCompatibilityData::PutGamma ( double ret ) {
    HRESULT _hr = put_Gamma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2494)
inline double IRobotNodeCompatibilityData::GetHX ( ) {
    double _result = 0;
    HRESULT _hr = get_HX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2495)
inline void IRobotNodeCompatibilityData::PutHX ( double ret ) {
    HRESULT _hr = put_HX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2496)
inline double IRobotNodeCompatibilityData::GetHY ( ) {
    double _result = 0;
    HRESULT _hr = get_HY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2497)
inline void IRobotNodeCompatibilityData::PutHY ( double ret ) {
    HRESULT _hr = put_HY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2498)
inline double IRobotNodeCompatibilityData::GetHZ ( ) {
    double _result = 0;
    HRESULT _hr = get_HZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2499)
inline void IRobotNodeCompatibilityData::PutHZ ( double ret ) {
    HRESULT _hr = put_HZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2500)
inline double IRobotNodeCompatibilityData::GetBX ( ) {
    double _result = 0;
    HRESULT _hr = get_BX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2501)
inline void IRobotNodeCompatibilityData::PutBX ( double ret ) {
    HRESULT _hr = put_BX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2502)
inline double IRobotNodeCompatibilityData::GetBY ( ) {
    double _result = 0;
    HRESULT _hr = get_BY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2503)
inline void IRobotNodeCompatibilityData::PutBY ( double ret ) {
    HRESULT _hr = put_BY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2504)
inline double IRobotNodeCompatibilityData::GetBZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2505)
inline void IRobotNodeCompatibilityData::PutBZ ( double ret ) {
    HRESULT _hr = put_BZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2506)
inline IRobotNonlinearLinkMngrPtr IRobotNodeCompatibilityData::GetNonlinearModel ( ) {
    struct IRobotNonlinearLinkMngr * _result = 0;
    HRESULT _hr = get_NonlinearModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearLinkMngrPtr(_result, false);
}

//
// interface IRobotModalWithStaticForcesAnalysisParams wrapper method implementations
//

#pragma implementation_key(2507)
inline VARIANT_BOOL IRobotModalWithStaticForcesAnalysisParams::GetNonlinear ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Nonlinear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2508)
inline void IRobotModalWithStaticForcesAnalysisParams::PutNonlinear ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Nonlinear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2509)
inline IRobotNonlinearAnalysisParamsPtr IRobotModalWithStaticForcesAnalysisParams::GetStaticStateParams ( ) {
    struct IRobotNonlinearAnalysisParams * _result = 0;
    HRESULT _hr = raw_GetStaticStateParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearAnalysisParamsPtr(_result, false);
}

#pragma implementation_key(2510)
inline HRESULT IRobotModalWithStaticForcesAnalysisParams::SetStaticStateParams ( struct IRobotNonlinearAnalysisParams * _params ) {
    HRESULT _hr = raw_SetStaticStateParams(_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2511)
inline VARIANT_BOOL IRobotModalWithStaticForcesAnalysisParams::CreateFromStatic ( long _static_case_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateFromStatic(_static_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotKernelPreferences wrapper method implementations
//

#pragma implementation_key(2512)
inline int IRobotKernelPreferences::GetLanguage ( enum IRobotLanguage _lang_id ) {
    int _result = 0;
    HRESULT _hr = raw_GetLanguage(_lang_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2513)
inline _bstr_t IRobotKernelPreferences::GetDirectory ( enum IRobotDirectory _rob_dir ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDirectory(_rob_dir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2514)
inline HRESULT IRobotKernelPreferences::SetLanguage ( enum IRobotLanguage _lang_id, int _lang_num ) {
    HRESULT _hr = raw_SetLanguage(_lang_id, _lang_num);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2515)
inline HRESULT IRobotKernelPreferences::SetDirectoryExt ( enum IRobotDirectoryExtension _dir_ext, _bstr_t _full_path ) {
    HRESULT _hr = raw_SetDirectoryExt(_dir_ext, _full_path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2516)
inline _bstr_t IRobotKernelPreferences::GetDirectoryExt ( enum IRobotDirectoryExtension _dir_ext ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDirectoryExt(_dir_ext, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2517)
inline VARIANT_BOOL IRobotKernelPreferences::GetMultiprocessing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Multiprocessing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2518)
inline void IRobotKernelPreferences::PutMultiprocessing ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Multiprocessing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSectionDatabase wrapper method implementations
//

#pragma implementation_key(2519)
inline _bstr_t IRobotSectionDatabase::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2520)
inline IRobotNamesArrayPtr IRobotSectionDatabase::GetAll ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = raw_GetAll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(2521)
inline long IRobotSectionDatabase::Load ( _bstr_t db_name ) {
    long _result = 0;
    HRESULT _hr = raw_Load(db_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2522)
inline long IRobotSectionDatabase::LoadFromFile ( _bstr_t file_path ) {
    long _result = 0;
    HRESULT _hr = raw_LoadFromFile(file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2523)
inline _bstr_t IRobotSectionDatabase::GetFullName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FullName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2524)
inline _bstr_t IRobotSectionDatabase::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IRobotSectionDatabaseList wrapper method implementations
//

#pragma implementation_key(2525)
inline int IRobotSectionDatabaseList::GetCount ( ) {
    int _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2526)
inline _bstr_t IRobotSectionDatabaseList::Get ( int idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2527)
inline int IRobotSectionDatabaseList::Find ( _bstr_t db_name ) {
    int _result = 0;
    HRESULT _hr = raw_Find(db_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2528)
inline HRESULT IRobotSectionDatabaseList::ChangeIndex ( int cur_idx, int new_idx ) {
    HRESULT _hr = raw_ChangeIndex(cur_idx, new_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2529)
inline long IRobotSectionDatabaseList::Add ( _bstr_t db_name ) {
    long _result = 0;
    HRESULT _hr = raw_Add(db_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2530)
inline long IRobotSectionDatabaseList::AddFromFile ( _bstr_t file_path ) {
    long _result = 0;
    HRESULT _hr = raw_AddFromFile(file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2531)
inline HRESULT IRobotSectionDatabaseList::Remove ( int idx ) {
    HRESULT _hr = raw_Remove(idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2532)
inline IRobotSectionDatabasePtr IRobotSectionDatabaseList::GetDatabase ( int idx ) {
    struct IRobotSectionDatabase * _result = 0;
    HRESULT _hr = raw_GetDatabase(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSectionDatabasePtr(_result, false);
}

//
// interface IRobotMaterialDatabase wrapper method implementations
//

#pragma implementation_key(2533)
inline _bstr_t IRobotMaterialDatabase::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2534)
inline IRobotNamesArrayPtr IRobotMaterialDatabase::GetAll ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = raw_GetAll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(2535)
inline IRobotNamesArrayPtr IRobotMaterialDatabase::Get ( enum IRobotMaterialType mater_type ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = raw_Get(mater_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(2536)
inline long IRobotMaterialDatabase::LoadFromFile ( _bstr_t file_path ) {
    long _result = 0;
    HRESULT _hr = raw_LoadFromFile(file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2537)
inline long IRobotMaterialDatabase::Load ( _bstr_t dbase_name ) {
    long _result = 0;
    HRESULT _hr = raw_Load(dbase_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2538)
inline _bstr_t IRobotMaterialDatabase::GetDefault ( enum IRobotMaterialType _mater_type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDefault(_mater_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2539)
inline HRESULT IRobotMaterialDatabase::SetDefault ( enum IRobotMaterialType _mater_type, _bstr_t _mater_name ) {
    HRESULT _hr = raw_SetDefault(_mater_type, _mater_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotVehicleDatabase wrapper method implementations
//

#pragma implementation_key(2540)
inline _bstr_t IRobotVehicleDatabase::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2541)
inline _bstr_t IRobotVehicleDatabase::GetLongName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LongName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2542)
inline _bstr_t IRobotVehicleDatabase::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2543)
inline VARIANT_BOOL IRobotVehicleDatabase::Load ( _bstr_t _db_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Load(_db_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2544)
inline IRobotNamesArrayPtr IRobotVehicleDatabase::GetAll ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = raw_GetAll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(2545)
inline VARIANT_BOOL IRobotVehicleDatabase::LoadFromFile ( _bstr_t _file_path ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromFile(_file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotVehicleDatabaseList wrapper method implementations
//

#pragma implementation_key(2546)
inline int IRobotVehicleDatabaseList::GetCount ( ) {
    int _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2547)
inline int IRobotVehicleDatabaseList::GetDefault ( ) {
    int _result = 0;
    HRESULT _hr = get_Default(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2548)
inline void IRobotVehicleDatabaseList::PutDefault ( int ret ) {
    HRESULT _hr = put_Default(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2549)
inline VARIANT_BOOL IRobotVehicleDatabaseList::Add ( _bstr_t _db_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Add(_db_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2550)
inline int IRobotVehicleDatabaseList::Find ( _bstr_t _db_name ) {
    int _result = 0;
    HRESULT _hr = raw_Find(_db_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2551)
inline IRobotVehicleDatabasePtr IRobotVehicleDatabaseList::GetDatabase ( int _idx ) {
    struct IRobotVehicleDatabase * _result = 0;
    HRESULT _hr = raw_GetDatabase(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotVehicleDatabasePtr(_result, false);
}

#pragma implementation_key(2552)
inline _bstr_t IRobotVehicleDatabaseList::Get ( int _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2553)
inline HRESULT IRobotVehicleDatabaseList::Remove ( int _idx ) {
    HRESULT _hr = raw_Remove(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2554)
inline VARIANT_BOOL IRobotVehicleDatabaseList::AddFromFile ( _bstr_t _file_path ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddFromFile(_file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2555)
inline HRESULT IRobotVehicleDatabaseList::Create ( _bstr_t _db_name, _bstr_t _long_db_name, _bstr_t _description ) {
    HRESULT _hr = raw_Create(_db_name, _long_db_name, _description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotUnitEditionData wrapper method implementations
//

#pragma implementation_key(2556)
inline _bstr_t IRobotUnitEditionData::GetUnit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Unit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2557)
inline void IRobotUnitEditionData::PutUnit ( _bstr_t ret ) {
    HRESULT _hr = put_Unit(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2558)
inline double IRobotUnitEditionData::GetCoefficient ( ) {
    double _result = 0;
    HRESULT _hr = get_Coefficient(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2559)
inline void IRobotUnitEditionData::PutCoefficient ( double ret ) {
    HRESULT _hr = put_Coefficient(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2560)
inline enum IRobotUnitEditionType IRobotUnitEditionData::GetType ( ) {
    enum IRobotUnitEditionType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotUnitEditionServer wrapper method implementations
//

#pragma implementation_key(2561)
inline IRobotUnitEditionDataPtr IRobotUnitEditionServer::Get ( enum IRobotUnitEditionType _type, long _idx ) {
    struct IRobotUnitEditionData * _result = 0;
    HRESULT _hr = raw_Get(_type, _idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotUnitEditionDataPtr(_result, false);
}

#pragma implementation_key(2562)
inline HRESULT IRobotUnitEditionServer::Set ( struct IRobotUnitEditionData * _data ) {
    HRESULT _hr = raw_Set(_data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2563)
inline long IRobotUnitEditionServer::Find ( enum IRobotUnitEditionType _type, _bstr_t _name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_type, _name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2564)
inline long IRobotUnitEditionServer::New ( enum IRobotUnitEditionType _type, _bstr_t _unit, double _coeff ) {
    long _result = 0;
    HRESULT _hr = raw_New(_type, _unit, _coeff, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2565)
inline HRESULT IRobotUnitEditionServer::Delete ( enum IRobotUnitEditionType _type, long _idx ) {
    HRESULT _hr = raw_Delete(_type, _idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2566)
inline long IRobotUnitEditionServer::Count ( enum IRobotUnitEditionType _type ) {
    long _result = 0;
    HRESULT _hr = raw_Count(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotUnitData wrapper method implementations
//

#pragma implementation_key(2567)
inline long IRobotUnitData::GetPrecision ( ) {
    long _result = 0;
    HRESULT _hr = get_Precision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2568)
inline void IRobotUnitData::PutPrecision ( long ret ) {
    HRESULT _hr = put_Precision(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2569)
inline VARIANT_BOOL IRobotUnitData::GetE ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_E(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2570)
inline void IRobotUnitData::PutE ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_E(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2571)
inline _bstr_t IRobotUnitData::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2572)
inline void IRobotUnitData::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2573)
inline enum IRobotUnitType IRobotUnitData::GetType ( ) {
    enum IRobotUnitType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotUnitMngr wrapper method implementations
//

#pragma implementation_key(2574)
inline IRobotUnitEditionServerPtr IRobotUnitMngr::GetUnitEdition ( ) {
    struct IRobotUnitEditionServer * _result = 0;
    HRESULT _hr = get_UnitEdition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotUnitEditionServerPtr(_result, false);
}

#pragma implementation_key(2575)
inline long IRobotUnitMngr::Count ( enum IRobotUnitType _type ) {
    long _result = 0;
    HRESULT _hr = raw_Count(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2576)
inline HRESULT IRobotUnitMngr::Set ( enum IRobotUnitType _type, struct IRobotUnitData * _data ) {
    HRESULT _hr = raw_Set(_type, _data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2577)
inline IRobotUnitDataPtr IRobotUnitMngr::Get ( enum IRobotUnitType _type ) {
    struct IRobotUnitData * _result = 0;
    HRESULT _hr = raw_Get(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotUnitDataPtr(_result, false);
}

#pragma implementation_key(2578)
inline _bstr_t IRobotUnitMngr::GetName ( enum IRobotUnitType _type, long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_type, _idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2579)
inline double IRobotUnitMngr::GetCoeff ( enum IRobotUnitType _type ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2580)
inline HRESULT IRobotUnitMngr::Refresh ( ) {
    HRESULT _hr = raw_Refresh();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2581)
inline VARIANT_BOOL IRobotUnitMngr::GetUseMetricAsDefault ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseMetricAsDefault(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2582)
inline void IRobotUnitMngr::PutUseMetricAsDefault ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UseMetricAsDefault(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2583)
inline double IRobotUnitMngr::GetCoeff2 ( enum IRobotUnitType _unit_type, long _unit_idx ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff2(_unit_type, _unit_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotEurocodeSteelDesignFactors wrapper method implementations
//

#pragma implementation_key(2584)
inline double IRobotEurocodeSteelDesignFactors::GetGamma0 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2585)
inline void IRobotEurocodeSteelDesignFactors::PutGamma0 ( double ret ) {
    HRESULT _hr = put_Gamma0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2586)
inline double IRobotEurocodeSteelDesignFactors::GetGamma1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2587)
inline void IRobotEurocodeSteelDesignFactors::PutGamma1 ( double ret ) {
    HRESULT _hr = put_Gamma1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2588)
inline double IRobotEurocodeSteelDesignFactors::GetGamma2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2589)
inline void IRobotEurocodeSteelDesignFactors::PutGamma2 ( double ret ) {
    HRESULT _hr = put_Gamma2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2590)
inline double IRobotEurocodeSteelDesignFactors::GetGammaFire ( ) {
    double _result = 0;
    HRESULT _hr = get_GammaFire(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2591)
inline void IRobotEurocodeSteelDesignFactors::PutGammaFire ( double ret ) {
    HRESULT _hr = put_GammaFire(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2592)
inline VARIANT_BOOL IRobotEurocodeSteelDesignFactors::LoadFromCodeNumber ( long _code_number ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromCodeNumber(_code_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2593)
inline VARIANT_BOOL IRobotEurocodeSteelDesignFactors::LoadFromCode ( _bstr_t _code_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromCode(_code_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotEurocodeSteelConnectionFactors wrapper method implementations
//

#pragma implementation_key(2594)
inline double IRobotEurocodeSteelConnectionFactors::GetGamma0 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2595)
inline void IRobotEurocodeSteelConnectionFactors::PutGamma0 ( double ret ) {
    HRESULT _hr = put_Gamma0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2596)
inline double IRobotEurocodeSteelConnectionFactors::GetGamma1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2597)
inline void IRobotEurocodeSteelConnectionFactors::PutGamma1 ( double ret ) {
    HRESULT _hr = put_Gamma1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2598)
inline double IRobotEurocodeSteelConnectionFactors::GetGamma2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2599)
inline void IRobotEurocodeSteelConnectionFactors::PutGamma2 ( double ret ) {
    HRESULT _hr = put_Gamma2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2600)
inline double IRobotEurocodeSteelConnectionFactors::GetGamma3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2601)
inline void IRobotEurocodeSteelConnectionFactors::PutGamma3 ( double ret ) {
    HRESULT _hr = put_Gamma3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2602)
inline double IRobotEurocodeSteelConnectionFactors::GetGamma3Ser ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma3Ser(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2603)
inline void IRobotEurocodeSteelConnectionFactors::PutGamma3Ser ( double ret ) {
    HRESULT _hr = put_Gamma3Ser(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2604)
inline double IRobotEurocodeSteelConnectionFactors::GetGamma4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2605)
inline void IRobotEurocodeSteelConnectionFactors::PutGamma4 ( double ret ) {
    HRESULT _hr = put_Gamma4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2606)
inline double IRobotEurocodeSteelConnectionFactors::GetGamma5 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2607)
inline void IRobotEurocodeSteelConnectionFactors::PutGamma5 ( double ret ) {
    HRESULT _hr = put_Gamma5(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2608)
inline double IRobotEurocodeSteelConnectionFactors::GetGamma6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2609)
inline void IRobotEurocodeSteelConnectionFactors::PutGamma6 ( double ret ) {
    HRESULT _hr = put_Gamma6(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2610)
inline double IRobotEurocodeSteelConnectionFactors::GetGamma7 ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2611)
inline void IRobotEurocodeSteelConnectionFactors::PutGamma7 ( double ret ) {
    HRESULT _hr = put_Gamma7(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2612)
inline double IRobotEurocodeSteelConnectionFactors::GetGammaC ( ) {
    double _result = 0;
    HRESULT _hr = get_GammaC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2613)
inline void IRobotEurocodeSteelConnectionFactors::PutGammaC ( double ret ) {
    HRESULT _hr = put_GammaC(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2614)
inline VARIANT_BOOL IRobotEurocodeSteelConnectionFactors::LoadFromCodeNumber ( long _code_number ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromCodeNumber(_code_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2615)
inline VARIANT_BOOL IRobotEurocodeSteelConnectionFactors::LoadFromCode ( _bstr_t _code_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromCode(_code_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotEurocodeFactors wrapper method implementations
//

#pragma implementation_key(2616)
inline IRobotEurocodeSteelDesignFactorsPtr IRobotEurocodeFactors::GetSteelDesign ( ) {
    struct IRobotEurocodeSteelDesignFactors * _result = 0;
    HRESULT _hr = get_SteelDesign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotEurocodeSteelDesignFactorsPtr(_result, false);
}

#pragma implementation_key(2617)
inline IRobotEurocodeSteelConnectionFactorsPtr IRobotEurocodeFactors::GetSteelConnections ( ) {
    struct IRobotEurocodeSteelConnectionFactors * _result = 0;
    HRESULT _hr = get_SteelConnections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotEurocodeSteelConnectionFactorsPtr(_result, false);
}

//
// interface IRobotProjectPreferences wrapper method implementations
//

#pragma implementation_key(2618)
inline IRobotSectionDatabaseListPtr IRobotProjectPreferences::GetSectionsFound ( ) {
    struct IRobotSectionDatabaseList * _result = 0;
    HRESULT _hr = get_SectionsFound(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSectionDatabaseListPtr(_result, false);
}

#pragma implementation_key(2619)
inline IRobotSectionDatabaseListPtr IRobotProjectPreferences::GetSectionsActive ( ) {
    struct IRobotSectionDatabaseList * _result = 0;
    HRESULT _hr = get_SectionsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSectionDatabaseListPtr(_result, false);
}

#pragma implementation_key(2620)
inline IRobotMaterialDatabasePtr IRobotProjectPreferences::GetMaterials ( ) {
    struct IRobotMaterialDatabase * _result = 0;
    HRESULT _hr = get_Materials(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMaterialDatabasePtr(_result, false);
}

#pragma implementation_key(2621)
inline _bstr_t IRobotProjectPreferences::GetActiveCode ( enum IRobotCodeType code_type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetActiveCode(code_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2622)
inline long IRobotProjectPreferences::SetActiveCode ( enum IRobotCodeType code_type, _bstr_t code_name ) {
    long _result = 0;
    HRESULT _hr = raw_SetActiveCode(code_type, code_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2623)
inline IRobotMeshParamsPtr IRobotProjectPreferences::GetMeshParams ( ) {
    struct IRobotMeshParams * _result = 0;
    HRESULT _hr = get_MeshParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshParamsPtr(_result, false);
}

#pragma implementation_key(2624)
inline IRobotVehicleDatabaseListPtr IRobotProjectPreferences::GetVehiclesFound ( ) {
    struct IRobotVehicleDatabaseList * _result = 0;
    HRESULT _hr = get_VehiclesFound(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotVehicleDatabaseListPtr(_result, false);
}

#pragma implementation_key(2625)
inline IRobotVehicleDatabaseListPtr IRobotProjectPreferences::GetVehiclesActive ( ) {
    struct IRobotVehicleDatabaseList * _result = 0;
    HRESULT _hr = get_VehiclesActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotVehicleDatabaseListPtr(_result, false);
}

#pragma implementation_key(2626)
inline IRobotUnitMngrPtr IRobotProjectPreferences::GetUnits ( ) {
    struct IRobotUnitMngr * _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotUnitMngrPtr(_result, false);
}

#pragma implementation_key(2627)
inline VARIANT_BOOL IRobotProjectPreferences::GetMeshAutoAdjust ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MeshAutoAdjust(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2628)
inline void IRobotProjectPreferences::PutMeshAutoAdjust ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_MeshAutoAdjust(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2629)
inline HRESULT IRobotProjectPreferences::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2630)
inline long IRobotProjectPreferences::GetActiveCodeNumber ( enum IRobotCodeType _code_type ) {
    long _result = 0;
    HRESULT _hr = raw_GetActiveCodeNumber(_code_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2631)
inline VARIANT_BOOL IRobotProjectPreferences::SetActiveCodeNumber ( enum IRobotCodeType _code_type, long _code_number ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetActiveCodeNumber(_code_type, _code_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2632)
inline IRobotEurocodeFactorsPtr IRobotProjectPreferences::GetEurocodeFactors ( ) {
    struct IRobotEurocodeFactors * _result = 0;
    HRESULT _hr = get_EurocodeFactors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotEurocodeFactorsPtr(_result, false);
}

#pragma implementation_key(2633)
inline VARIANT_BOOL IRobotProjectPreferences::SetCurrentDatabase ( enum IRobotDatabaseType _db_type, _bstr_t _db_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetCurrentDatabase(_db_type, _db_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2634)
inline _bstr_t IRobotProjectPreferences::GetCurrentDatabase ( enum IRobotDatabaseType _db_type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCurrentDatabase(_db_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2635)
inline enum IRobotCalculationModelCoherence IRobotProjectPreferences::GetCalcModelCoherence ( ) {
    enum IRobotCalculationModelCoherence _result;
    HRESULT _hr = get_CalcModelCoherence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2636)
inline void IRobotProjectPreferences::PutCalcModelCoherence ( enum IRobotCalculationModelCoherence ret ) {
    HRESULT _hr = put_CalcModelCoherence(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2637)
inline VARIANT_BOOL IRobotProjectPreferences::GetKinematicConstraints ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_KinematicConstraints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2638)
inline void IRobotProjectPreferences::PutKinematicConstraints ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_KinematicConstraints(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2639)
inline IRobotMeshParamsPtr IRobotProjectPreferences::GetMeshParamsWalls ( ) {
    struct IRobotMeshParams * _result = 0;
    HRESULT _hr = get_MeshParamsWalls(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshParamsPtr(_result, false);
}

#pragma implementation_key(2640)
inline IRobotMeshParamsPtr IRobotProjectPreferences::GetMeshParamsFloors ( ) {
    struct IRobotMeshParams * _result = 0;
    HRESULT _hr = get_MeshParamsFloors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMeshParamsPtr(_result, false);
}

#pragma implementation_key(2641)
inline long IRobotProjectPreferences::GetMeshAutoAdjustIterationCount ( ) {
    long _result = 0;
    HRESULT _hr = get_MeshAutoAdjustIterationCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2642)
inline void IRobotProjectPreferences::PutMeshAutoAdjustIterationCount ( long ret ) {
    HRESULT _hr = put_MeshAutoAdjustIterationCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotComponentFactory wrapper method implementations
//

#pragma implementation_key(2643)
inline IDispatchPtr IRobotComponentFactory::Create ( enum IRobotComponentType _cmpnt_type ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Create(_cmpnt_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2644)
inline IDispatchPtr IRobotComponentFactory::CreateExt ( _bstr_t _extmdl_name, long _cmpnt_type ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_CreateExt(_extmdl_name, _cmpnt_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface IRobotSparseMSolverParams wrapper method implementations
//

#pragma implementation_key(2645)
inline enum IRobotSparseMSolverMethod IRobotSparseMSolverParams::GetMethod ( ) {
    enum IRobotSparseMSolverMethod _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2646)
inline void IRobotSparseMSolverParams::PutMethod ( enum IRobotSparseMSolverMethod ret ) {
    HRESULT _hr = put_Method(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotIterativeSolverParams wrapper method implementations
//

#pragma implementation_key(2647)
inline enum IRobotIterativePrediconditionerType IRobotIterativeSolverParams::GetPrediconditionerType ( ) {
    enum IRobotIterativePrediconditionerType _result;
    HRESULT _hr = get_PrediconditionerType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2648)
inline void IRobotIterativeSolverParams::PutPrediconditionerType ( enum IRobotIterativePrediconditionerType ret ) {
    HRESULT _hr = put_PrediconditionerType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2649)
inline VARIANT_BOOL IRobotIterativeSolverParams::GetMultilevel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Multilevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2650)
inline void IRobotIterativeSolverParams::PutMultilevel ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Multilevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2651)
inline long IRobotIterativeSolverParams::GetAggregationLevelsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_AggregationLevelsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2652)
inline void IRobotIterativeSolverParams::PutAggregationLevelsCount ( long ret ) {
    HRESULT _hr = put_AggregationLevelsCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2653)
inline long IRobotIterativeSolverParams::GetInternalIterationsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_InternalIterationsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2654)
inline void IRobotIterativeSolverParams::PutInternalIterationsCount ( long ret ) {
    HRESULT _hr = put_InternalIterationsCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2655)
inline VARIANT_BOOL IRobotIterativeSolverParams::GetAnalyseDiagonale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AnalyseDiagonale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2656)
inline void IRobotIterativeSolverParams::PutAnalyseDiagonale ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AnalyseDiagonale(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2657)
inline VARIANT_BOOL IRobotIterativeSolverParams::GetCalcKMatrix ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CalcKMatrix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2658)
inline void IRobotIterativeSolverParams::PutCalcKMatrix ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CalcKMatrix(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2659)
inline enum IRobotIterativeSolverMethod IRobotIterativeSolverParams::GetMethod ( ) {
    enum IRobotIterativeSolverMethod _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2660)
inline void IRobotIterativeSolverParams::PutMethod ( enum IRobotIterativeSolverMethod ret ) {
    HRESULT _hr = put_Method(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2661)
inline enum IRobotIterativeSolverMemoryUsage IRobotIterativeSolverParams::GetMemoryUsage ( ) {
    enum IRobotIterativeSolverMemoryUsage _result;
    HRESULT _hr = get_MemoryUsage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2662)
inline void IRobotIterativeSolverParams::PutMemoryUsage ( enum IRobotIterativeSolverMemoryUsage ret ) {
    HRESULT _hr = put_MemoryUsage(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2663)
inline double IRobotIterativeSolverParams::GetTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_Tolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2664)
inline void IRobotIterativeSolverParams::PutTolerance ( double ret ) {
    HRESULT _hr = put_Tolerance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotStructureAnalysisParams wrapper method implementations
//

#pragma implementation_key(2665)
inline enum IRobotEquationSolvingMethod IRobotStructureAnalysisParams::GetEquationSolvingMethod ( ) {
    enum IRobotEquationSolvingMethod _result;
    HRESULT _hr = get_EquationSolvingMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2666)
inline void IRobotStructureAnalysisParams::PutEquationSolvingMethod ( enum IRobotEquationSolvingMethod ret ) {
    HRESULT _hr = put_EquationSolvingMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2667)
inline enum IRobotStructureAutoVerificationType IRobotStructureAnalysisParams::GetAutoVerification ( ) {
    enum IRobotStructureAutoVerificationType _result;
    HRESULT _hr = get_AutoVerification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2668)
inline void IRobotStructureAnalysisParams::PutAutoVerification ( enum IRobotStructureAutoVerificationType ret ) {
    HRESULT _hr = put_AutoVerification(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2669)
inline VARIANT_BOOL IRobotStructureAnalysisParams::GetIgnoreWarnings ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreWarnings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2670)
inline void IRobotStructureAnalysisParams::PutIgnoreWarnings ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IgnoreWarnings(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2671)
inline VARIANT_BOOL IRobotStructureAnalysisParams::GetDSCAlgorithm ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DSCAlgorithm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2672)
inline void IRobotStructureAnalysisParams::PutDSCAlgorithm ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DSCAlgorithm(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2673)
inline double IRobotStructureAnalysisParams::GetFictitiousRigidityCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_FictitiousRigidityCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2674)
inline void IRobotStructureAnalysisParams::PutFictitiousRigidityCoeff ( double ret ) {
    HRESULT _hr = put_FictitiousRigidityCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2675)
inline IRobotSparseMSolverParamsPtr IRobotStructureAnalysisParams::GetSparseMParams ( ) {
    struct IRobotSparseMSolverParams * _result = 0;
    HRESULT _hr = get_SparseMParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSparseMSolverParamsPtr(_result, false);
}

#pragma implementation_key(2676)
inline IRobotIterativeSolverParamsPtr IRobotStructureAnalysisParams::GetIterativeParams ( ) {
    struct IRobotIterativeSolverParams * _result = 0;
    HRESULT _hr = get_IterativeParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotIterativeSolverParamsPtr(_result, false);
}

#pragma implementation_key(2677)
inline enum IRobotStructureAnalysisModalParticipationCoeff IRobotStructureAnalysisParams::GetModalParticipationCoeff ( ) {
    enum IRobotStructureAnalysisModalParticipationCoeff _result;
    HRESULT _hr = get_ModalParticipationCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2678)
inline void IRobotStructureAnalysisParams::PutModalParticipationCoeff ( enum IRobotStructureAnalysisModalParticipationCoeff ret ) {
    HRESULT _hr = put_ModalParticipationCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2679)
inline VARIANT_BOOL IRobotStructureAnalysisParams::GetAutoBarMerging ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoBarMerging(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2680)
inline void IRobotStructureAnalysisParams::PutAutoBarMerging ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AutoBarMerging(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2681)
inline VARIANT_BOOL IRobotStructureAnalysisParams::GetRLINKElements ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RLINKElements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2682)
inline void IRobotStructureAnalysisParams::PutRLINKElements ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RLINKElements(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicResultsSaveParams wrapper method implementations
//

#pragma implementation_key(2683)
inline VARIANT_BOOL IRobotSeismicResultsSaveParams::GetSave ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Save(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2684)
inline void IRobotSeismicResultsSaveParams::PutSave ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Save(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2685)
inline VARIANT_BOOL IRobotSeismicResultsSaveParams::GetReactions ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Reactions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2686)
inline void IRobotSeismicResultsSaveParams::PutReactions ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Reactions(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2687)
inline VARIANT_BOOL IRobotSeismicResultsSaveParams::GetDisplacements ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Displacements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2688)
inline void IRobotSeismicResultsSaveParams::PutDisplacements ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Displacements(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2689)
inline VARIANT_BOOL IRobotSeismicResultsSaveParams::GetForces ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Forces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2690)
inline void IRobotSeismicResultsSaveParams::PutForces ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Forces(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2691)
inline VARIANT_BOOL IRobotSeismicResultsSaveParams::GetStresses ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Stresses(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2692)
inline void IRobotSeismicResultsSaveParams::PutStresses ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Stresses(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2693)
inline VARIANT_BOOL IRobotSeismicResultsSaveParams::GetNMQ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NMQ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2694)
inline void IRobotSeismicResultsSaveParams::PutNMQ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_NMQ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2695)
inline VARIANT_BOOL IRobotSeismicResultsSaveParams::GetReduced ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Reduced(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2696)
inline void IRobotSeismicResultsSaveParams::PutReduced ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Reduced(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2697)
inline long IRobotSeismicResultsSaveParams::GetPointNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_PointNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2698)
inline void IRobotSeismicResultsSaveParams::PutPointNumber ( long ret ) {
    HRESULT _hr = put_PointNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2699)
inline enum IRobotSeismicResultsPanelDirection IRobotSeismicResultsSaveParams::GetPanelsDir ( ) {
    enum IRobotSeismicResultsPanelDirection _result;
    HRESULT _hr = get_PanelsDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2700)
inline void IRobotSeismicResultsSaveParams::PutPanelsDir ( enum IRobotSeismicResultsPanelDirection ret ) {
    HRESULT _hr = put_PanelsDir(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2701)
inline VARIANT_BOOL IRobotSeismicResultsSaveParams::GetOnlyQuadraticCombs ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OnlyQuadraticCombs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2702)
inline void IRobotSeismicResultsSaveParams::PutOnlyQuadraticCombs ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_OnlyQuadraticCombs(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2703)
inline VARIANT_BOOL IRobotSeismicResultsSaveParams::GetLocalDisplacements ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LocalDisplacements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2704)
inline void IRobotSeismicResultsSaveParams::PutLocalDisplacements ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_LocalDisplacements(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotModelGenerationParams wrapper method implementations
//

#pragma implementation_key(2705)
inline _bstr_t IRobotModelGenerationParams::GetNeglectedBars ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NeglectedBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2706)
inline void IRobotModelGenerationParams::PutNeglectedBars ( _bstr_t ret ) {
    HRESULT _hr = put_NeglectedBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2707)
inline _bstr_t IRobotModelGenerationParams::GetNeglectedGeoObjects ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NeglectedGeoObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2708)
inline void IRobotModelGenerationParams::PutNeglectedGeoObjects ( _bstr_t ret ) {
    HRESULT _hr = put_NeglectedGeoObjects(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2709)
inline long IRobotModelGenerationParams::GetAssemblingCase ( ) {
    long _result = 0;
    HRESULT _hr = get_AssemblingCase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2710)
inline void IRobotModelGenerationParams::PutAssemblingCase ( long ret ) {
    HRESULT _hr = put_AssemblingCase(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2711)
inline VARIANT_BOOL IRobotModelGenerationParams::GetToleranceAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ToleranceAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2712)
inline void IRobotModelGenerationParams::PutToleranceAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ToleranceAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2713)
inline double IRobotModelGenerationParams::GetToleranceValue ( ) {
    double _result = 0;
    HRESULT _hr = get_ToleranceValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2714)
inline void IRobotModelGenerationParams::PutToleranceValue ( double ret ) {
    HRESULT _hr = put_ToleranceValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2715)
inline VARIANT_BOOL IRobotModelGenerationParams::GetGenerateNodes_DiagonalBars ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GenerateNodes_DiagonalBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2716)
inline void IRobotModelGenerationParams::PutGenerateNodes_DiagonalBars ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GenerateNodes_DiagonalBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2717)
inline VARIANT_BOOL IRobotModelGenerationParams::GetGenerateNodes_VertHorizBars ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GenerateNodes_VertHorizBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2718)
inline void IRobotModelGenerationParams::PutGenerateNodes_VertHorizBars ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GenerateNodes_VertHorizBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2719)
inline VARIANT_BOOL IRobotModelGenerationParams::GetGenerateNodes_BarsAndFiniteElems ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GenerateNodes_BarsAndFiniteElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2720)
inline void IRobotModelGenerationParams::PutGenerateNodes_BarsAndFiniteElems ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GenerateNodes_BarsAndFiniteElems(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2721)
inline double IRobotModelGenerationParams::GetMaxElementLength ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxElementLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2722)
inline void IRobotModelGenerationParams::PutMaxElementLength ( double ret ) {
    HRESULT _hr = put_MaxElementLength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotBucklingDeformationParams wrapper method implementations
//

#pragma implementation_key(2723)
inline long IRobotBucklingDeformationParams::GetCaseNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2724)
inline void IRobotBucklingDeformationParams::PutCaseNumber ( long ret ) {
    HRESULT _hr = put_CaseNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2725)
inline double IRobotBucklingDeformationParams::GetMaxDisplacement ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxDisplacement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2726)
inline void IRobotBucklingDeformationParams::PutMaxDisplacement ( double ret ) {
    HRESULT _hr = put_MaxDisplacement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2727)
inline VARIANT_BOOL IRobotBucklingDeformationParams::GetOmitCaseForDeformations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OmitCaseForDeformations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2728)
inline void IRobotBucklingDeformationParams::PutOmitCaseForDeformations ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_OmitCaseForDeformations(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2729)
inline HRESULT IRobotBucklingDeformationParams::SetModeCoeff ( long _mode, double _coeff ) {
    HRESULT _hr = raw_SetModeCoeff(_mode, _coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2730)
inline double IRobotBucklingDeformationParams::GetModeCoeff ( long _mode ) {
    double _result = 0;
    HRESULT _hr = raw_GetModeCoeff(_mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotDAMNotionalLoads wrapper method implementations
//

#pragma implementation_key(2731)
inline double IRobotDAMNotionalLoads::GetCoefficient ( ) {
    double _result = 0;
    HRESULT _hr = get_Coefficient(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2732)
inline void IRobotDAMNotionalLoads::PutCoefficient ( double ret ) {
    HRESULT _hr = put_Coefficient(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2733)
inline VARIANT_BOOL IRobotDAMNotionalLoads::GetActiveXP ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ActiveXP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2734)
inline void IRobotDAMNotionalLoads::PutActiveXP ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ActiveXP(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2735)
inline VARIANT_BOOL IRobotDAMNotionalLoads::GetActiveXN ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ActiveXN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2736)
inline void IRobotDAMNotionalLoads::PutActiveXN ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ActiveXN(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2737)
inline VARIANT_BOOL IRobotDAMNotionalLoads::GetActiveYP ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ActiveYP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2738)
inline void IRobotDAMNotionalLoads::PutActiveYP ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ActiveYP(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2739)
inline VARIANT_BOOL IRobotDAMNotionalLoads::GetActiveYN ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ActiveYN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2740)
inline void IRobotDAMNotionalLoads::PutActiveYN ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ActiveYN(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2741)
inline VARIANT_BOOL IRobotDAMNotionalLoads::GetGravityLoadCombEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GravityLoadCombEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2742)
inline void IRobotDAMNotionalLoads::PutGravityLoadCombEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GravityLoadCombEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2743)
inline VARIANT_BOOL IRobotDAMNotionalLoads::GetLateralLoadCombEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LateralLoadCombEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2744)
inline void IRobotDAMNotionalLoads::PutLateralLoadCombEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_LateralLoadCombEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2745)
inline enum IRobotDAMLateralLoadCombType IRobotDAMNotionalLoads::GetLateralLoadCombType ( ) {
    enum IRobotDAMLateralLoadCombType _result;
    HRESULT _hr = get_LateralLoadCombType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2746)
inline void IRobotDAMNotionalLoads::PutLateralLoadCombType ( enum IRobotDAMLateralLoadCombType ret ) {
    HRESULT _hr = put_LateralLoadCombType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotDAMReducedStiffness wrapper method implementations
//

#pragma implementation_key(2747)
inline double IRobotDAMReducedStiffness::GetRCColumnsAndWallsValue ( ) {
    double _result = 0;
    HRESULT _hr = get_RCColumnsAndWallsValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2748)
inline void IRobotDAMReducedStiffness::PutRCColumnsAndWallsValue ( double ret ) {
    HRESULT _hr = put_RCColumnsAndWallsValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2749)
inline double IRobotDAMReducedStiffness::GetRCBeamsValue ( ) {
    double _result = 0;
    HRESULT _hr = get_RCBeamsValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2750)
inline void IRobotDAMReducedStiffness::PutRCBeamsValue ( double ret ) {
    HRESULT _hr = put_RCBeamsValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2751)
inline double IRobotDAMReducedStiffness::GetRCSlabsValue ( ) {
    double _result = 0;
    HRESULT _hr = get_RCSlabsValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2752)
inline void IRobotDAMReducedStiffness::PutRCSlabsValue ( double ret ) {
    HRESULT _hr = put_RCSlabsValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2753)
inline double IRobotDAMReducedStiffness::GetSteelMembersValue ( ) {
    double _result = 0;
    HRESULT _hr = get_SteelMembersValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2754)
inline void IRobotDAMReducedStiffness::PutSteelMembersValue ( double ret ) {
    HRESULT _hr = put_SteelMembersValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2755)
inline double IRobotDAMReducedStiffness::GetSteelMembersTauBValue ( ) {
    double _result = 0;
    HRESULT _hr = get_SteelMembersTauBValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2756)
inline void IRobotDAMReducedStiffness::PutSteelMembersTauBValue ( double ret ) {
    HRESULT _hr = put_SteelMembersTauBValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2757)
inline enum IRobotDAMSteelMembersReductionType IRobotDAMReducedStiffness::GetSteelMembersReductionType ( ) {
    enum IRobotDAMSteelMembersReductionType _result;
    HRESULT _hr = get_SteelMembersReductionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2758)
inline void IRobotDAMReducedStiffness::PutSteelMembersReductionType ( enum IRobotDAMSteelMembersReductionType ret ) {
    HRESULT _hr = put_SteelMembersReductionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotDAMParams wrapper method implementations
//

#pragma implementation_key(2759)
inline enum IRobotDAMAnalysisType IRobotDAMParams::GetAnalysis ( ) {
    enum IRobotDAMAnalysisType _result;
    HRESULT _hr = get_Analysis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2760)
inline void IRobotDAMParams::PutAnalysis ( enum IRobotDAMAnalysisType ret ) {
    HRESULT _hr = put_Analysis(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2761)
inline IRobotDAMNotionalLoadsPtr IRobotDAMParams::GetNotionalLoads ( ) {
    struct IRobotDAMNotionalLoads * _result = 0;
    HRESULT _hr = get_NotionalLoads(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDAMNotionalLoadsPtr(_result, false);
}

#pragma implementation_key(2762)
inline IRobotDAMReducedStiffnessPtr IRobotDAMParams::GetReducedStiffness ( ) {
    struct IRobotDAMReducedStiffness * _result = 0;
    HRESULT _hr = get_ReducedStiffness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDAMReducedStiffnessPtr(_result, false);
}

#pragma implementation_key(2763)
inline IRobotNonlinearAnalysisParamsPtr IRobotDAMParams::GetNLPDParams ( ) {
    struct IRobotNonlinearAnalysisParams * _result = 0;
    HRESULT _hr = raw_GetNLPDParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearAnalysisParamsPtr(_result, false);
}

#pragma implementation_key(2764)
inline HRESULT IRobotDAMParams::SetNLPDParams ( struct IRobotNonlinearAnalysisParams * ret ) {
    HRESULT _hr = raw_SetNLPDParams(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2765)
inline HRESULT IRobotDAMParams::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotDAMCalcModule wrapper method implementations
//

#pragma implementation_key(2766)
inline VARIANT_BOOL IRobotDAMCalcModule::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2767)
inline void IRobotDAMCalcModule::PutIsActive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsActive(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2768)
inline IRobotDAMParamsPtr IRobotDAMCalcModule::GetParams ( ) {
    struct IRobotDAMParams * _result = 0;
    HRESULT _hr = get_Params(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDAMParamsPtr(_result, false);
}

#pragma implementation_key(2769)
inline VARIANT_BOOL IRobotDAMCalcModule::Run ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Run(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2770)
inline HRESULT IRobotDAMCalcModule::DeleteModel ( ) {
    HRESULT _hr = raw_DeleteModel();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotCalcEngine wrapper method implementations
//

#pragma implementation_key(2771)
inline long IRobotCalcEngine::Calculate ( ) {
    long _result = 0;
    HRESULT _hr = raw_Calculate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2772)
inline VARIANT_BOOL IRobotCalcEngine::GetAutoGenerateModel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoGenerateModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2773)
inline void IRobotCalcEngine::PutAutoGenerateModel ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AutoGenerateModel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2774)
inline IRobotStructureAnalysisParamsPtr IRobotCalcEngine::GetAnalysisParams ( ) {
    struct IRobotStructureAnalysisParams * _result = 0;
    HRESULT _hr = get_AnalysisParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructureAnalysisParamsPtr(_result, false);
}

#pragma implementation_key(2775)
inline VARIANT_BOOL IRobotCalcEngine::GetAutoFreezeResults ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoFreezeResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2776)
inline void IRobotCalcEngine::PutAutoFreezeResults ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AutoFreezeResults(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2777)
inline VARIANT_BOOL IRobotCalcEngine::GetSaveResultsInExternalFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SaveResultsInExternalFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2778)
inline void IRobotCalcEngine::PutSaveResultsInExternalFile ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SaveResultsInExternalFile(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2779)
inline IRobotSeismicResultsSaveParamsPtr IRobotCalcEngine::GetSeismicResultsSaveParams ( ) {
    struct IRobotSeismicResultsSaveParams * _result = 0;
    HRESULT _hr = get_SeismicResultsSaveParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicResultsSaveParamsPtr(_result, false);
}

#pragma implementation_key(2780)
inline IRobotModelGenerationParamsPtr IRobotCalcEngine::GetGenerationParams ( ) {
    struct IRobotModelGenerationParams * _result = 0;
    HRESULT _hr = get_GenerationParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotModelGenerationParamsPtr(_result, false);
}

#pragma implementation_key(2781)
inline IRobotBucklingDeformationParamsPtr IRobotCalcEngine::GetBucklingDeformation ( ) {
    struct IRobotBucklingDeformationParams * _result = 0;
    HRESULT _hr = get_BucklingDeformation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBucklingDeformationParamsPtr(_result, false);
}

#pragma implementation_key(2782)
inline HRESULT IRobotCalcEngine::GenerateModel ( ) {
    HRESULT _hr = raw_GenerateModel();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2783)
inline VARIANT_BOOL IRobotCalcEngine::GetUseStatusWindow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseStatusWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2784)
inline void IRobotCalcEngine::PutUseStatusWindow ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UseStatusWindow(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2785)
inline long IRobotCalcEngine::GetStatusWindowParent ( ) {
    long _result = 0;
    HRESULT _hr = get_StatusWindowParent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2786)
inline void IRobotCalcEngine::PutStatusWindowParent ( long ret ) {
    HRESULT _hr = put_StatusWindowParent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2787)
inline enum IRobotCalculationStatus IRobotCalcEngine::CalculateEx ( enum IRobotCalculationMode _calc_mode ) {
    enum IRobotCalculationStatus _result;
    HRESULT _hr = raw_CalculateEx(_calc_mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2788)
inline HRESULT IRobotCalcEngine::StopCalculation ( ) {
    HRESULT _hr = raw_StopCalculation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2789)
inline IRobotDAMCalcModulePtr IRobotCalcEngine::GetDAM ( ) {
    struct IRobotDAMCalcModule * _result = 0;
    HRESULT _hr = get_DAM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDAMCalcModulePtr(_result, false);
}

//
// interface IRobotAuthenticateService wrapper method implementations
//

#pragma implementation_key(2790)
inline HRESULT IRobotAuthenticateService::Hello ( _bstr_t client_name, long * _client_id, long * _key_idx, BSTR * _challenge ) {
    HRESULT _hr = raw_Hello(client_name, _client_id, _key_idx, _challenge);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2791)
inline HRESULT IRobotAuthenticateService::OpenSession ( long _client_id, _bstr_t _passwd ) {
    HRESULT _hr = raw_OpenSession(_client_id, _passwd);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2792)
inline HRESULT IRobotAuthenticateService::CloseSession ( long _client_id ) {
    HRESULT _hr = raw_CloseSession(_client_id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRConcrSlabRequiredReinfCalcParams wrapper method implementations
//

#pragma implementation_key(2793)
inline enum IRobotReinforceCalcMethods IRConcrSlabRequiredReinfCalcParams::GetMethod ( ) {
    enum IRobotReinforceCalcMethods _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2794)
inline void IRConcrSlabRequiredReinfCalcParams::PutMethod ( enum IRobotReinforceCalcMethods ret ) {
    HRESULT _hr = put_Method(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2795)
inline VARIANT_BOOL IRConcrSlabRequiredReinfCalcParams::GetGloballyAvgDesginForces ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GloballyAvgDesginForces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2796)
inline void IRConcrSlabRequiredReinfCalcParams::PutGloballyAvgDesginForces ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GloballyAvgDesginForces(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2797)
inline VARIANT_BOOL IRConcrSlabRequiredReinfCalcParams::GetForcesReduction ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ForcesReduction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2798)
inline void IRConcrSlabRequiredReinfCalcParams::PutForcesReduction ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ForcesReduction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2799)
inline VARIANT_BOOL IRConcrSlabRequiredReinfCalcParams::GetDisplayErrors ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayErrors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2800)
inline void IRConcrSlabRequiredReinfCalcParams::PutDisplayErrors ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DisplayErrors(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2801)
inline IRobotSelectionPtr IRConcrSlabRequiredReinfCalcParams::GetPanels ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_Panels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(2802)
inline IRobotSelectionPtr IRConcrSlabRequiredReinfCalcParams::GetCasesULS ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_CasesULS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(2803)
inline IRobotSelectionPtr IRConcrSlabRequiredReinfCalcParams::GetCasesSLS ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_CasesSLS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(2804)
inline IRobotSelectionPtr IRConcrSlabRequiredReinfCalcParams::GetCasesACC ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_CasesACC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

//
// interface IRConcrSlabRequiredReinfEngine wrapper method implementations
//

#pragma implementation_key(2805)
inline IRConcrSlabRequiredReinfCalcParamsPtr IRConcrSlabRequiredReinfEngine::GetParams ( ) {
    struct IRConcrSlabRequiredReinfCalcParams * _result = 0;
    HRESULT _hr = get_Params(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSlabRequiredReinfCalcParamsPtr(_result, false);
}

#pragma implementation_key(2806)
inline VARIANT_BOOL IRConcrSlabRequiredReinfEngine::Calculate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Calculate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2807)
inline IRobotSelectionPtr IRConcrSlabRequiredReinfEngine::GetCalculatedPanels ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_GetCalculatedPanels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

//
// interface IRConcrMemberRequiredReinfCalcParams wrapper method implementations
//

#pragma implementation_key(2808)
inline IRobotSelectionPtr IRConcrMemberRequiredReinfCalcParams::GetMembers ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_Members(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(2809)
inline IRobotSelectionPtr IRConcrMemberRequiredReinfCalcParams::GetCasesULS ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_CasesULS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(2810)
inline IRobotSelectionPtr IRConcrMemberRequiredReinfCalcParams::GetCasesSLS ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_CasesSLS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(2811)
inline IRobotSelectionPtr IRConcrMemberRequiredReinfCalcParams::GetCasesALS ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_CasesALS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(2812)
inline enum IRConcrBeamCalcPointDefinitionType IRConcrMemberRequiredReinfCalcParams::GetBeamPointsType ( ) {
    enum IRConcrBeamCalcPointDefinitionType _result;
    HRESULT _hr = get_BeamPointsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2813)
inline void IRConcrMemberRequiredReinfCalcParams::PutBeamPointsType ( enum IRConcrBeamCalcPointDefinitionType ret ) {
    HRESULT _hr = put_BeamPointsType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2814)
inline double IRConcrMemberRequiredReinfCalcParams::GetBeamPointsValue ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamPointsValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2815)
inline void IRConcrMemberRequiredReinfCalcParams::PutBeamPointsValue ( double ret ) {
    HRESULT _hr = put_BeamPointsValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2816)
inline VARIANT_BOOL IRConcrMemberRequiredReinfCalcParams::GetCombULS ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CombULS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2817)
inline void IRConcrMemberRequiredReinfCalcParams::PutCombULS ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CombULS(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2818)
inline VARIANT_BOOL IRConcrMemberRequiredReinfCalcParams::GetCombSLS ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CombSLS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2819)
inline void IRConcrMemberRequiredReinfCalcParams::PutCombSLS ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CombSLS(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2820)
inline VARIANT_BOOL IRConcrMemberRequiredReinfCalcParams::GetCombALS ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CombALS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2821)
inline void IRConcrMemberRequiredReinfCalcParams::PutCombALS ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CombALS(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrMemberRequiredReinfEngine wrapper method implementations
//

#pragma implementation_key(2822)
inline IRConcrMemberRequiredReinfCalcParamsPtr IRConcrMemberRequiredReinfEngine::GetParams ( ) {
    struct IRConcrMemberRequiredReinfCalcParams * _result = 0;
    HRESULT _hr = get_Params(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrMemberRequiredReinfCalcParamsPtr(_result, false);
}

#pragma implementation_key(2823)
inline VARIANT_BOOL IRConcrMemberRequiredReinfEngine::Calculate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Calculate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2824)
inline IRobotSelectionPtr IRConcrMemberRequiredReinfEngine::GetCalculatedMembers ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = raw_GetCalculatedMembers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

//
// interface IRConcrCalcEngine wrapper method implementations
//

#pragma implementation_key(2825)
inline IRConcrSlabRequiredReinfEnginePtr IRConcrCalcEngine::GetSlabRequiredReinf ( ) {
    struct IRConcrSlabRequiredReinfEngine * _result = 0;
    HRESULT _hr = get_SlabRequiredReinf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSlabRequiredReinfEnginePtr(_result, false);
}

#pragma implementation_key(2826)
inline IRConcrMemberRequiredReinfEnginePtr IRConcrCalcEngine::GetMemberRequiredReinf ( ) {
    struct IRConcrMemberRequiredReinfEngine * _result = 0;
    HRESULT _hr = get_MemberRequiredReinf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrMemberRequiredReinfEnginePtr(_result, false);
}

//
// interface IRDimMemberType wrapper method implementations
//

#pragma implementation_key(2827)
inline enum IRDimMembDefMatType IRDimMemberType::GetMaterialType ( ) {
    enum IRDimMembDefMatType _result;
    HRESULT _hr = get_MaterialType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2828)
inline void IRDimMemberType::PutMaterialType ( enum IRDimMembDefMatType ret ) {
    HRESULT _hr = put_MaterialType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotBucklingAnalysisParams wrapper method implementations
//

#pragma implementation_key(2829)
inline long IRobotBucklingAnalysisParams::GetModesCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ModesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2830)
inline void IRobotBucklingAnalysisParams::PutModesCount ( long ret ) {
    HRESULT _hr = put_ModesCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2831)
inline double IRobotBucklingAnalysisParams::GetTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_Tolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2832)
inline void IRobotBucklingAnalysisParams::PutTolerance ( double ret ) {
    HRESULT _hr = put_Tolerance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2833)
inline long IRobotBucklingAnalysisParams::GetIterationsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_IterationsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2834)
inline void IRobotBucklingAnalysisParams::PutIterationsCount ( long ret ) {
    HRESULT _hr = put_IterationsCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2835)
inline double IRobotBucklingAnalysisParams::GetShift ( ) {
    double _result = 0;
    HRESULT _hr = get_Shift(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2836)
inline void IRobotBucklingAnalysisParams::PutShift ( double ret ) {
    HRESULT _hr = put_Shift(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2837)
inline long IRobotBucklingAnalysisParams::GetIncrement ( ) {
    long _result = 0;
    HRESULT _hr = get_Increment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2838)
inline void IRobotBucklingAnalysisParams::PutIncrement ( long ret ) {
    HRESULT _hr = put_Increment(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2839)
inline enum IRobotBucklingAnalysisMethod IRobotBucklingAnalysisParams::GetMethod ( ) {
    enum IRobotBucklingAnalysisMethod _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2840)
inline void IRobotBucklingAnalysisParams::PutMethod ( enum IRobotBucklingAnalysisMethod ret ) {
    HRESULT _hr = put_Method(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2841)
inline VARIANT_BOOL IRobotBucklingAnalysisParams::GetSturmVerification ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SturmVerification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2842)
inline void IRobotBucklingAnalysisParams::PutSturmVerification ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SturmVerification(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2843)
inline VARIANT_BOOL IRobotBucklingAnalysisParams::GetIsNonlinear ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsNonlinear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2844)
inline IRobotNonlinearAnalysisParamsPtr IRobotBucklingAnalysisParams::GetNonlinearParams ( ) {
    struct IRobotNonlinearAnalysisParams * _result = 0;
    HRESULT _hr = get_NonlinearParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearAnalysisParamsPtr(_result, false);
}

//
// interface IRobotHarmonicAnalysisParams wrapper method implementations
//

#pragma implementation_key(2845)
inline enum IRobotModalAnalysisMassMatrixType IRobotHarmonicAnalysisParams::GetMassMatrix ( ) {
    enum IRobotModalAnalysisMassMatrixType _result;
    HRESULT _hr = get_MassMatrix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2846)
inline void IRobotHarmonicAnalysisParams::PutMassMatrix ( enum IRobotModalAnalysisMassMatrixType ret ) {
    HRESULT _hr = put_MassMatrix(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2847)
inline IRobotModalAnalysisLimitsPtr IRobotHarmonicAnalysisParams::GetExcitation ( ) {
    struct IRobotModalAnalysisLimits * _result = 0;
    HRESULT _hr = get_Excitation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotModalAnalysisLimitsPtr(_result, false);
}

//
// interface IRobotTimeHistoryAnalysisParams wrapper method implementations
//

#pragma implementation_key(2848)
inline enum IRobotTimeHistoryAnalysisMethod IRobotTimeHistoryAnalysisParams::GetMethod ( ) {
    enum IRobotTimeHistoryAnalysisMethod _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2849)
inline void IRobotTimeHistoryAnalysisParams::PutMethod ( enum IRobotTimeHistoryAnalysisMethod ret ) {
    HRESULT _hr = put_Method(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2850)
inline IDispatchPtr IRobotTimeHistoryAnalysisParams::GetMethodParams ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_MethodParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2851)
inline double IRobotTimeHistoryAnalysisParams::GetTimeStep ( ) {
    double _result = 0;
    HRESULT _hr = get_TimeStep(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2852)
inline void IRobotTimeHistoryAnalysisParams::PutTimeStep ( double ret ) {
    HRESULT _hr = put_TimeStep(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2853)
inline long IRobotTimeHistoryAnalysisParams::GetDivision ( ) {
    long _result = 0;
    HRESULT _hr = get_Division(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2854)
inline void IRobotTimeHistoryAnalysisParams::PutDivision ( long ret ) {
    HRESULT _hr = put_Division(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2855)
inline double IRobotTimeHistoryAnalysisParams::GetEnd ( ) {
    double _result = 0;
    HRESULT _hr = get_End(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2856)
inline void IRobotTimeHistoryAnalysisParams::PutEnd ( double ret ) {
    HRESULT _hr = put_End(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2857)
inline long IRobotTimeHistoryAnalysisParams::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2858)
inline HRESULT IRobotTimeHistoryAnalysisParams::Set ( long _case_num, _bstr_t _time_fun, double _coeff, double _shift ) {
    HRESULT _hr = raw_Set(_case_num, _time_fun, _coeff, _shift);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2859)
inline long IRobotTimeHistoryAnalysisParams::Find ( long _case_num ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_case_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2860)
inline HRESULT IRobotTimeHistoryAnalysisParams::Delete ( long _idx ) {
    HRESULT _hr = raw_Delete(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2861)
inline HRESULT IRobotTimeHistoryAnalysisParams::Get ( long _idx, long * _case_num, BSTR * _time_fun, double * _coeff, double * _shift ) {
    HRESULT _hr = raw_Get(_idx, _case_num, _time_fun, _coeff, _shift);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2862)
inline long IRobotTimeHistoryAnalysisParams::GetInitialCase ( ) {
    long _result = 0;
    HRESULT _hr = get_InitialCase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2863)
inline void IRobotTimeHistoryAnalysisParams::PutInitialCase ( long ret ) {
    HRESULT _hr = put_InitialCase(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotTimeHistoryNewmarkParams wrapper method implementations
//

#pragma implementation_key(2864)
inline enum IRobotModalAnalysisMassMatrixType IRobotTimeHistoryNewmarkParams::GetMassMatrixType ( ) {
    enum IRobotModalAnalysisMassMatrixType _result;
    HRESULT _hr = get_MassMatrixType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2865)
inline void IRobotTimeHistoryNewmarkParams::PutMassMatrixType ( enum IRobotModalAnalysisMassMatrixType ret ) {
    HRESULT _hr = put_MassMatrixType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2866)
inline double IRobotTimeHistoryNewmarkParams::GetAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_Alpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2867)
inline void IRobotTimeHistoryNewmarkParams::PutAlpha ( double ret ) {
    HRESULT _hr = put_Alpha(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2868)
inline double IRobotTimeHistoryNewmarkParams::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2869)
inline void IRobotTimeHistoryNewmarkParams::PutBeta ( double ret ) {
    HRESULT _hr = put_Beta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotTimeHistoryModalDecompositionParams wrapper method implementations
//

#pragma implementation_key(2870)
inline long IRobotTimeHistoryModalDecompositionParams::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2871)
inline HRESULT IRobotTimeHistoryModalDecompositionParams::Get ( long _idx, long * _mode, double * _damp ) {
    HRESULT _hr = raw_Get(_idx, _mode, _damp);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2872)
inline HRESULT IRobotTimeHistoryModalDecompositionParams::Delete ( long _idx ) {
    HRESULT _hr = raw_Delete(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2873)
inline HRESULT IRobotTimeHistoryModalDecompositionParams::SetDamping ( long _mode, double _damp ) {
    HRESULT _hr = raw_SetDamping(_mode, _damp);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2874)
inline double IRobotTimeHistoryModalDecompositionParams::GetDamping ( long _mode ) {
    double _result = 0;
    HRESULT _hr = raw_GetDamping(_mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2875)
inline VARIANT_BOOL IRobotTimeHistoryModalDecompositionParams::IsDefined ( long _mode ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsDefined(_mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2876)
inline HRESULT IRobotTimeHistoryModalDecompositionParams::DeleteMode ( long _mode ) {
    HRESULT _hr = raw_DeleteMode(_mode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotTimeHistoryNonlinearParams wrapper method implementations
//

#pragma implementation_key(2877)
inline VARIANT_BOOL IRobotTimeHistoryNonlinearParams::GetPDelta ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2878)
inline void IRobotTimeHistoryNonlinearParams::PutPDelta ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PDelta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2879)
inline long IRobotTimeHistoryNonlinearParams::GetMaximumIterationNumberForOneIncrement ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumIterationNumberForOneIncrement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2880)
inline void IRobotTimeHistoryNonlinearParams::PutMaximumIterationNumberForOneIncrement ( long ret ) {
    HRESULT _hr = put_MaximumIterationNumberForOneIncrement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2881)
inline double IRobotTimeHistoryNonlinearParams::GetResidualForcesRelativeCodeTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_ResidualForcesRelativeCodeTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2882)
inline void IRobotTimeHistoryNonlinearParams::PutResidualForcesRelativeCodeTolerance ( double ret ) {
    HRESULT _hr = put_ResidualForcesRelativeCodeTolerance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2883)
inline VARIANT_BOOL IRobotTimeHistoryNonlinearParams::GetMatrixUpdateAfterEachSubdivision ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MatrixUpdateAfterEachSubdivision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2884)
inline void IRobotTimeHistoryNonlinearParams::PutMatrixUpdateAfterEachSubdivision ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_MatrixUpdateAfterEachSubdivision(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2885)
inline VARIANT_BOOL IRobotTimeHistoryNonlinearParams::GetMatrixUpdateAfterEachIteration ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MatrixUpdateAfterEachIteration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2886)
inline void IRobotTimeHistoryNonlinearParams::PutMatrixUpdateAfterEachIteration ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_MatrixUpdateAfterEachIteration(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotTimeHistoryPredictorCorectorParams wrapper method implementations
//

#pragma implementation_key(2887)
inline double IRobotTimeHistoryPredictorCorectorParams::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2888)
inline void IRobotTimeHistoryPredictorCorectorParams::PutBeta ( double ret ) {
    HRESULT _hr = put_Beta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2889)
inline IRobotTimeHistoryNonlinearParamsPtr IRobotTimeHistoryPredictorCorectorParams::GetNonlinearParams ( ) {
    struct IRobotTimeHistoryNonlinearParams * _result = 0;
    HRESULT _hr = get_NonlinearParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTimeHistoryNonlinearParamsPtr(_result, false);
}

//
// interface IRobotBarElement wrapper method implementations
//

#pragma implementation_key(2890)
inline long IRobotBarElement::GetNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2891)
inline long IRobotBarElement::GetStartNode ( ) {
    long _result = 0;
    HRESULT _hr = get_StartNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2892)
inline long IRobotBarElement::GetEndNode ( ) {
    long _result = 0;
    HRESULT _hr = get_EndNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2893)
inline VARIANT_BOOL IRobotBarElement::GetIsCalc ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCalc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2894)
inline VARIANT_BOOL IRobotBarElement::GetInactive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Inactive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2895)
inline void IRobotBarElement::PutInactive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Inactive(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotPushOverAnalysisParams wrapper method implementations
//

#pragma implementation_key(2896)
inline long IRobotPushOverAnalysisParams::GetNode ( ) {
    long _result = 0;
    HRESULT _hr = get_Node(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2897)
inline void IRobotPushOverAnalysisParams::PutNode ( long ret ) {
    HRESULT _hr = put_Node(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2898)
inline enum IRobotPushOverDirection IRobotPushOverAnalysisParams::GetDirection ( ) {
    enum IRobotPushOverDirection _result;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2899)
inline void IRobotPushOverAnalysisParams::PutDirection ( enum IRobotPushOverDirection ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2900)
inline double IRobotPushOverAnalysisParams::GetMaxDisplacement ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxDisplacement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2901)
inline void IRobotPushOverAnalysisParams::PutMaxDisplacement ( double ret ) {
    HRESULT _hr = put_MaxDisplacement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2902)
inline enum IRobotPushOverLoadDefinitionMethod IRobotPushOverAnalysisParams::GetLoadDefinition ( ) {
    enum IRobotPushOverLoadDefinitionMethod _result;
    HRESULT _hr = get_LoadDefinition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2903)
inline void IRobotPushOverAnalysisParams::PutLoadDefinition ( enum IRobotPushOverLoadDefinitionMethod ret ) {
    HRESULT _hr = put_LoadDefinition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2904)
inline VARIANT_BOOL IRobotPushOverAnalysisParams::GetNonlinear ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Nonlinear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2905)
inline void IRobotPushOverAnalysisParams::PutNonlinear ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Nonlinear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2906)
inline IRobotNonlinearAnalysisParamsPtr IRobotPushOverAnalysisParams::GetNonlinearParams ( ) {
    struct IRobotNonlinearAnalysisParams * _result = 0;
    HRESULT _hr = get_NonlinearParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearAnalysisParamsPtr(_result, false);
}

//
// interface IRobotSolidPropertiesData wrapper method implementations
//

#pragma implementation_key(2907)
inline enum IRobotMaterialModel IRobotSolidPropertiesData::GetMaterialModel ( ) {
    enum IRobotMaterialModel _result;
    HRESULT _hr = get_MaterialModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2908)
inline void IRobotSolidPropertiesData::PutMaterialModel ( enum IRobotMaterialModel ret ) {
    HRESULT _hr = put_MaterialModel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2909)
inline double IRobotSolidPropertiesData::GetE ( ) {
    double _result = 0;
    HRESULT _hr = get_E(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2910)
inline void IRobotSolidPropertiesData::PutE ( double ret ) {
    HRESULT _hr = put_E(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2911)
inline double IRobotSolidPropertiesData::GetNU ( ) {
    double _result = 0;
    HRESULT _hr = get_NU(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2912)
inline void IRobotSolidPropertiesData::PutNU ( double ret ) {
    HRESULT _hr = put_NU(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2913)
inline double IRobotSolidPropertiesData::GetRO ( ) {
    double _result = 0;
    HRESULT _hr = get_RO(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2914)
inline void IRobotSolidPropertiesData::PutRO ( double ret ) {
    HRESULT _hr = put_RO(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2915)
inline double IRobotSolidPropertiesData::GetLX ( ) {
    double _result = 0;
    HRESULT _hr = get_LX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2916)
inline void IRobotSolidPropertiesData::PutLX ( double ret ) {
    HRESULT _hr = put_LX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2917)
inline double IRobotSolidPropertiesData::GetDampCoef ( ) {
    double _result = 0;
    HRESULT _hr = get_DampCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2918)
inline void IRobotSolidPropertiesData::PutDampCoef ( double ret ) {
    HRESULT _hr = put_DampCoef(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2919)
inline VARIANT_BOOL IRobotSolidPropertiesData::LoadFromDBase ( _bstr_t _material_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromDBase(_material_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNonlinearLinkParamsLinear wrapper method implementations
//

#pragma implementation_key(2920)
inline double IRobotNonlinearLinkParamsLinear::GetK ( ) {
    double _result = 0;
    HRESULT _hr = get_K(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2921)
inline void IRobotNonlinearLinkParamsLinear::PutK ( double ret ) {
    HRESULT _hr = put_K(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearLinkParamsBLinear wrapper method implementations
//

#pragma implementation_key(2922)
inline double IRobotNonlinearLinkParamsBLinear::GetK1 ( ) {
    double _result = 0;
    HRESULT _hr = get_K1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2923)
inline void IRobotNonlinearLinkParamsBLinear::PutK1 ( double ret ) {
    HRESULT _hr = put_K1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2924)
inline double IRobotNonlinearLinkParamsBLinear::Getd1 ( ) {
    double _result = 0;
    HRESULT _hr = get_d1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2925)
inline void IRobotNonlinearLinkParamsBLinear::Putd1 ( double ret ) {
    HRESULT _hr = put_d1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2926)
inline double IRobotNonlinearLinkParamsBLinear::GetK2 ( ) {
    double _result = 0;
    HRESULT _hr = get_K2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2927)
inline void IRobotNonlinearLinkParamsBLinear::PutK2 ( double ret ) {
    HRESULT _hr = put_K2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearLinkParamsParabolic wrapper method implementations
//

#pragma implementation_key(2928)
inline double IRobotNonlinearLinkParamsParabolic::GetK ( ) {
    double _result = 0;
    HRESULT _hr = get_K(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2929)
inline void IRobotNonlinearLinkParamsParabolic::PutK ( double ret ) {
    HRESULT _hr = put_K(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2930)
inline double IRobotNonlinearLinkParamsParabolic::GetDlim ( ) {
    double _result = 0;
    HRESULT _hr = get_Dlim(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2931)
inline void IRobotNonlinearLinkParamsParabolic::PutDlim ( double ret ) {
    HRESULT _hr = put_Dlim(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2932)
inline double IRobotNonlinearLinkParamsParabolic::GetDmax ( ) {
    double _result = 0;
    HRESULT _hr = get_Dmax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2933)
inline void IRobotNonlinearLinkParamsParabolic::PutDmax ( double ret ) {
    HRESULT _hr = put_Dmax(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2934)
inline double IRobotNonlinearLinkParamsParabolic::GetFlim ( ) {
    double _result = 0;
    HRESULT _hr = get_Flim(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2935)
inline void IRobotNonlinearLinkParamsParabolic::PutFlim ( double ret ) {
    HRESULT _hr = put_Flim(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearLinkParamsPlastic wrapper method implementations
//

#pragma implementation_key(2936)
inline double IRobotNonlinearLinkParamsPlastic::GetK ( ) {
    double _result = 0;
    HRESULT _hr = get_K(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2937)
inline void IRobotNonlinearLinkParamsPlastic::PutK ( double ret ) {
    HRESULT _hr = put_K(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2938)
inline double IRobotNonlinearLinkParamsPlastic::GetDlim ( ) {
    double _result = 0;
    HRESULT _hr = get_Dlim(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2939)
inline void IRobotNonlinearLinkParamsPlastic::PutDlim ( double ret ) {
    HRESULT _hr = put_Dlim(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2940)
inline double IRobotNonlinearLinkParamsPlastic::GetFlim ( ) {
    double _result = 0;
    HRESULT _hr = get_Flim(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2941)
inline void IRobotNonlinearLinkParamsPlastic::PutFlim ( double ret ) {
    HRESULT _hr = put_Flim(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2942)
inline double IRobotNonlinearLinkParamsPlastic::GetW ( ) {
    double _result = 0;
    HRESULT _hr = get_W(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2943)
inline void IRobotNonlinearLinkParamsPlastic::PutW ( double ret ) {
    HRESULT _hr = put_W(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearLinkParamsPlasticHardening wrapper method implementations
//

#pragma implementation_key(2944)
inline double IRobotNonlinearLinkParamsPlasticHardening::GetK0 ( ) {
    double _result = 0;
    HRESULT _hr = get_K0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2945)
inline void IRobotNonlinearLinkParamsPlasticHardening::PutK0 ( double ret ) {
    HRESULT _hr = put_K0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2946)
inline double IRobotNonlinearLinkParamsPlasticHardening::GetK1 ( ) {
    double _result = 0;
    HRESULT _hr = get_K1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2947)
inline void IRobotNonlinearLinkParamsPlasticHardening::PutK1 ( double ret ) {
    HRESULT _hr = put_K1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2948)
inline double IRobotNonlinearLinkParamsPlasticHardening::GetDlim ( ) {
    double _result = 0;
    HRESULT _hr = get_Dlim(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2949)
inline void IRobotNonlinearLinkParamsPlasticHardening::PutDlim ( double ret ) {
    HRESULT _hr = put_Dlim(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2950)
inline double IRobotNonlinearLinkParamsPlasticHardening::GetFlim ( ) {
    double _result = 0;
    HRESULT _hr = get_Flim(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2951)
inline void IRobotNonlinearLinkParamsPlasticHardening::PutFlim ( double ret ) {
    HRESULT _hr = put_Flim(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2952)
inline double IRobotNonlinearLinkParamsPlasticHardening::GetW ( ) {
    double _result = 0;
    HRESULT _hr = get_W(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2953)
inline void IRobotNonlinearLinkParamsPlasticHardening::PutW ( double ret ) {
    HRESULT _hr = put_W(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearLinkParamsGapHook wrapper method implementations
//

#pragma implementation_key(2954)
inline double IRobotNonlinearLinkParamsGapHook::GetK ( ) {
    double _result = 0;
    HRESULT _hr = get_K(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2955)
inline void IRobotNonlinearLinkParamsGapHook::PutK ( double ret ) {
    HRESULT _hr = put_K(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2956)
inline double IRobotNonlinearLinkParamsGapHook::GetD ( ) {
    double _result = 0;
    HRESULT _hr = get_D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2957)
inline void IRobotNonlinearLinkParamsGapHook::PutD ( double ret ) {
    HRESULT _hr = put_D(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearLinkParamsCustomSegment wrapper method implementations
//

#pragma implementation_key(2958)
inline double IRobotNonlinearLinkParamsCustomSegment::GetOriginPoint ( ) {
    double _result = 0;
    HRESULT _hr = get_OriginPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2959)
inline void IRobotNonlinearLinkParamsCustomSegment::PutOriginPoint ( double ret ) {
    HRESULT _hr = put_OriginPoint(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2960)
inline _bstr_t IRobotNonlinearLinkParamsCustomSegment::GetExpression ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Expression(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2961)
inline void IRobotNonlinearLinkParamsCustomSegment::PutExpression ( _bstr_t ret ) {
    HRESULT _hr = put_Expression(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2962)
inline VARIANT_BOOL IRobotNonlinearLinkParamsCustomSegment::GetConstant ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Constant(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2963)
inline void IRobotNonlinearLinkParamsCustomSegment::PutConstant ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Constant(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotNonlinearLinkParamsCustom wrapper method implementations
//

#pragma implementation_key(2964)
inline long IRobotNonlinearLinkParamsCustom::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2965)
inline IRobotNonlinearLinkParamsCustomSegmentPtr IRobotNonlinearLinkParamsCustom::Get ( long _idx ) {
    struct IRobotNonlinearLinkParamsCustomSegment * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearLinkParamsCustomSegmentPtr(_result, false);
}

#pragma implementation_key(2966)
inline IRobotNonlinearLinkParamsCustomSegmentPtr IRobotNonlinearLinkParamsCustom::New ( ) {
    struct IRobotNonlinearLinkParamsCustomSegment * _result = 0;
    HRESULT _hr = raw_New(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNonlinearLinkParamsCustomSegmentPtr(_result, false);
}

#pragma implementation_key(2967)
inline HRESULT IRobotNonlinearLinkParamsCustom::Set ( long _idx, struct IRobotNonlinearLinkParamsCustomSegment * _seg ) {
    HRESULT _hr = raw_Set(_idx, _seg);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2968)
inline HRESULT IRobotNonlinearLinkParamsCustom::Remove ( long _idx ) {
    HRESULT _hr = raw_Remove(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotBarGeoImperfectionsData wrapper method implementations
//

#pragma implementation_key(2969)
inline HRESULT IRobotBarGeoImperfectionsData::SetAutomatic ( enum IRobotBarGeoImperfectionsAxis _axis, VARIANT_BOOL _automatic, double _coeff ) {
    HRESULT _hr = raw_SetAutomatic(_axis, _automatic, _coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2970)
inline VARIANT_BOOL IRobotBarGeoImperfectionsData::IsAutomatic ( enum IRobotBarGeoImperfectionsAxis _axis ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsAutomatic(_axis, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2971)
inline double IRobotBarGeoImperfectionsData::GetBucklingCoeff ( enum IRobotBarGeoImperfectionsAxis _axis ) {
    double _result = 0;
    HRESULT _hr = raw_GetBucklingCoeff(_axis, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2972)
inline HRESULT IRobotBarGeoImperfectionsData::SetUser ( enum IRobotBarGeoImperfectionsAxis _axis, double _val ) {
    HRESULT _hr = raw_SetUser(_axis, _val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2973)
inline double IRobotBarGeoImperfectionsData::GetUser ( enum IRobotBarGeoImperfectionsAxis _axis ) {
    double _result = 0;
    HRESULT _hr = raw_GetUser(_axis, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2974)
inline HRESULT IRobotBarGeoImperfectionsData::SetMinus ( enum IRobotBarGeoImperfectionsAxis _axis, VARIANT_BOOL _minus ) {
    HRESULT _hr = raw_SetMinus(_axis, _minus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2975)
inline VARIANT_BOOL IRobotBarGeoImperfectionsData::IsMinus ( enum IRobotBarGeoImperfectionsAxis _axis ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsMinus(_axis, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotSeismicAnalysis_RPS_2000_Params wrapper method implementations
//

#pragma implementation_key(2976)
inline enum IRobotSeismicAnalysis_RPS_2000_ZoneType IRobotSeismicAnalysis_RPS_2000_Params::GetZone ( ) {
    enum IRobotSeismicAnalysis_RPS_2000_ZoneType _result;
    HRESULT _hr = get_Zone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2977)
inline void IRobotSeismicAnalysis_RPS_2000_Params::PutZone ( enum IRobotSeismicAnalysis_RPS_2000_ZoneType ret ) {
    HRESULT _hr = put_Zone(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2978)
inline enum IRobotSeismicAnalysis_RPS_2000_SiteType IRobotSeismicAnalysis_RPS_2000_Params::GetSite ( ) {
    enum IRobotSeismicAnalysis_RPS_2000_SiteType _result;
    HRESULT _hr = get_Site(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2979)
inline void IRobotSeismicAnalysis_RPS_2000_Params::PutSite ( enum IRobotSeismicAnalysis_RPS_2000_SiteType ret ) {
    HRESULT _hr = put_Site(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2980)
inline enum IRobotSeismicAnalysis_RPS_2000_StructureClass IRobotSeismicAnalysis_RPS_2000_Params::GetStructureClass ( ) {
    enum IRobotSeismicAnalysis_RPS_2000_StructureClass _result;
    HRESULT _hr = get_StructureClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2981)
inline void IRobotSeismicAnalysis_RPS_2000_Params::PutStructureClass ( enum IRobotSeismicAnalysis_RPS_2000_StructureClass ret ) {
    HRESULT _hr = put_StructureClass(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2982)
inline enum IRobotSeismicAnalysisDirectionType IRobotSeismicAnalysis_RPS_2000_Params::GetDirectionType ( ) {
    enum IRobotSeismicAnalysisDirectionType _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2983)
inline void IRobotSeismicAnalysis_RPS_2000_Params::PutDirectionType ( enum IRobotSeismicAnalysisDirectionType ret ) {
    HRESULT _hr = put_DirectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2984)
inline double IRobotSeismicAnalysis_RPS_2000_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2985)
inline void IRobotSeismicAnalysis_RPS_2000_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2986)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_RPS_2000_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(2987)
inline void IRobotSeismicAnalysis_RPS_2000_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2988)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_RPS_2000_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(2989)
inline IRobotSeismicResidualModePtr IRobotSeismicAnalysis_RPS_2000_Params::GetResidualMode ( ) {
    struct IRobotSeismicResidualMode * _result = 0;
    HRESULT _hr = get_ResidualMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicResidualModePtr(_result, false);
}

//
// interface IRobotSeismicAnalysis_RPA_2003_Params wrapper method implementations
//

#pragma implementation_key(2990)
inline enum IRobotSeismicAnalysis_RPA_2003_ZoneType IRobotSeismicAnalysis_RPA_2003_Params::GetZone ( ) {
    enum IRobotSeismicAnalysis_RPA_2003_ZoneType _result;
    HRESULT _hr = get_Zone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2991)
inline void IRobotSeismicAnalysis_RPA_2003_Params::PutZone ( enum IRobotSeismicAnalysis_RPA_2003_ZoneType ret ) {
    HRESULT _hr = put_Zone(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2992)
inline enum IRobotSeismicAnalysis_RPA_2003_UsageType IRobotSeismicAnalysis_RPA_2003_Params::GetUsage ( ) {
    enum IRobotSeismicAnalysis_RPA_2003_UsageType _result;
    HRESULT _hr = get_Usage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2993)
inline void IRobotSeismicAnalysis_RPA_2003_Params::PutUsage ( enum IRobotSeismicAnalysis_RPA_2003_UsageType ret ) {
    HRESULT _hr = put_Usage(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2994)
inline enum IRobotSeismicAnalysis_RPA_2003_SiteType IRobotSeismicAnalysis_RPA_2003_Params::GetSite ( ) {
    enum IRobotSeismicAnalysis_RPA_2003_SiteType _result;
    HRESULT _hr = get_Site(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2995)
inline void IRobotSeismicAnalysis_RPA_2003_Params::PutSite ( enum IRobotSeismicAnalysis_RPA_2003_SiteType ret ) {
    HRESULT _hr = put_Site(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2996)
inline double IRobotSeismicAnalysis_RPA_2003_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2997)
inline void IRobotSeismicAnalysis_RPA_2003_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2998)
inline double IRobotSeismicAnalysis_RPA_2003_Params::GetQualityCoef ( ) {
    double _result = 0;
    HRESULT _hr = get_QualityCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2999)
inline void IRobotSeismicAnalysis_RPA_2003_Params::PutQualityCoef ( double ret ) {
    HRESULT _hr = put_QualityCoef(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3000)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_RPA_2003_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(3001)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_RPA_2003_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(3002)
inline void IRobotSeismicAnalysis_RPA_2003_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3003)
inline IRobotSeismicResidualModePtr IRobotSeismicAnalysis_RPA_2003_Params::GetResidualMode ( ) {
    struct IRobotSeismicResidualMode * _result = 0;
    HRESULT _hr = get_ResidualMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicResidualModePtr(_result, false);
}

//
// interface IRobotSeismicAnalysis_ITALY_ORDINANZA_Params wrapper method implementations
//

#pragma implementation_key(3004)
inline enum IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::GetSoil ( ) {
    enum IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType _result;
    HRESULT _hr = get_Soil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3005)
inline void IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::PutSoil ( enum IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType ret ) {
    HRESULT _hr = put_Soil(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3006)
inline enum IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::GetZone ( ) {
    enum IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType _result;
    HRESULT _hr = get_Zone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3007)
inline void IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::PutZone ( enum IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType ret ) {
    HRESULT _hr = put_Zone(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3008)
inline enum IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::GetSpectrum ( ) {
    enum IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum _result;
    HRESULT _hr = get_Spectrum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3009)
inline void IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::PutSpectrum ( enum IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum ret ) {
    HRESULT _hr = put_Spectrum(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3010)
inline double IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::GetFactorQ ( ) {
    double _result = 0;
    HRESULT _hr = get_FactorQ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3011)
inline void IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::PutFactorQ ( double ret ) {
    HRESULT _hr = put_FactorQ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3012)
inline enum IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::GetDirection ( ) {
    enum IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction _result;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3013)
inline void IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::PutDirection ( enum IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3014)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(3015)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(3016)
inline void IRobotSeismicAnalysis_ITALY_ORDINANZA_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSupportEquivalentWallElasticity wrapper method implementations
//

#pragma implementation_key(3017)
inline VARIANT_BOOL IRobotSupportEquivalentWallElasticity::GetThroughTwoStories ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ThroughTwoStories(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3018)
inline void IRobotSupportEquivalentWallElasticity::PutThroughTwoStories ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ThroughTwoStories(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3019)
inline double IRobotSupportEquivalentWallElasticity::GetL1 ( ) {
    double _result = 0;
    HRESULT _hr = get_L1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3020)
inline void IRobotSupportEquivalentWallElasticity::PutL1 ( double ret ) {
    HRESULT _hr = put_L1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3021)
inline double IRobotSupportEquivalentWallElasticity::GetL2 ( ) {
    double _result = 0;
    HRESULT _hr = get_L2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3022)
inline void IRobotSupportEquivalentWallElasticity::PutL2 ( double ret ) {
    HRESULT _hr = put_L2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSupportEquivalentColumnElasticity wrapper method implementations
//

#pragma implementation_key(3023)
inline VARIANT_BOOL IRobotSupportEquivalentColumnElasticity::GetThroughTwoStories ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ThroughTwoStories(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3024)
inline void IRobotSupportEquivalentColumnElasticity::PutThroughTwoStories ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ThroughTwoStories(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3025)
inline double IRobotSupportEquivalentColumnElasticity::GetL1 ( ) {
    double _result = 0;
    HRESULT _hr = get_L1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3026)
inline void IRobotSupportEquivalentColumnElasticity::PutL1 ( double ret ) {
    HRESULT _hr = put_L1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3027)
inline enum IRobotSupportColumnFixingType IRobotSupportEquivalentColumnElasticity::GetFixing1 ( ) {
    enum IRobotSupportColumnFixingType _result;
    HRESULT _hr = get_Fixing1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3028)
inline void IRobotSupportEquivalentColumnElasticity::PutFixing1 ( enum IRobotSupportColumnFixingType ret ) {
    HRESULT _hr = put_Fixing1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3029)
inline double IRobotSupportEquivalentColumnElasticity::GetL2 ( ) {
    double _result = 0;
    HRESULT _hr = get_L2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3030)
inline void IRobotSupportEquivalentColumnElasticity::PutL2 ( double ret ) {
    HRESULT _hr = put_L2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3031)
inline enum IRobotSupportColumnFixingType IRobotSupportEquivalentColumnElasticity::GetFixing2 ( ) {
    enum IRobotSupportColumnFixingType _result;
    HRESULT _hr = get_Fixing2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3032)
inline void IRobotSupportEquivalentColumnElasticity::PutFixing2 ( enum IRobotSupportColumnFixingType ret ) {
    HRESULT _hr = put_Fixing2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotLoadRecordBarTrapezoidal wrapper method implementations
//

#pragma implementation_key(3033)
inline long IRobotLoadRecordBarTrapezoidal::GetPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_PointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3034)
inline void IRobotLoadRecordBarTrapezoidal::PutPointCount ( long ret ) {
    HRESULT _hr = put_PointCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3035)
inline HRESULT IRobotLoadRecordBarTrapezoidal::SetPoint ( long _pt_idx, double _px, double _py, double _pz, double _x ) {
    HRESULT _hr = raw_SetPoint(_pt_idx, _px, _py, _pz, _x);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3036)
inline HRESULT IRobotLoadRecordBarTrapezoidal::GetPoint ( long _pt_idx, double * _px, double * _py, double * _pz, double * _x ) {
    HRESULT _hr = raw_GetPoint(_pt_idx, _px, _py, _pz, _x);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope wrapper method implementations
//

#pragma implementation_key(3037)
inline HRESULT IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope::SetActive ( enum IRobotSeismicAnalysis_PS_92_2008_SiteType _site, VARIANT_BOOL _is_active ) {
    HRESULT _hr = raw_SetActive(_site, _is_active);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3038)
inline VARIANT_BOOL IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope::IsActive ( enum IRobotSeismicAnalysis_PS_92_2008_SiteType _site ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsActive(_site, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotSeismicAnalysis_PS_92_2008_Params wrapper method implementations
//

#pragma implementation_key(3039)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_PS_92_2008_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

#pragma implementation_key(3040)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_PS_92_2008_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3041)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3042)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_PS_92_2008_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(3043)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3044)
inline enum IRobotSeismicAnalysis_PS_92_2008_ZoneType IRobotSeismicAnalysis_PS_92_2008_Params::GetZoneType ( ) {
    enum IRobotSeismicAnalysis_PS_92_2008_ZoneType _result;
    HRESULT _hr = get_ZoneType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3045)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutZoneType ( enum IRobotSeismicAnalysis_PS_92_2008_ZoneType ret ) {
    HRESULT _hr = put_ZoneType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3046)
inline double IRobotSeismicAnalysis_PS_92_2008_Params::GetTopography ( ) {
    double _result = 0;
    HRESULT _hr = get_Topography(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3047)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutTopography ( double ret ) {
    HRESULT _hr = put_Topography(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3048)
inline enum IRobotSeismicAnalysis_PS_92_2008_StructureType IRobotSeismicAnalysis_PS_92_2008_Params::GetStructureType ( ) {
    enum IRobotSeismicAnalysis_PS_92_2008_StructureType _result;
    HRESULT _hr = get_StructureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3049)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutStructureType ( enum IRobotSeismicAnalysis_PS_92_2008_StructureType ret ) {
    HRESULT _hr = put_StructureType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3050)
inline enum IRobotSeismicAnalysis_PS_92_2008_SiteType IRobotSeismicAnalysis_PS_92_2008_Params::GetSite ( ) {
    enum IRobotSeismicAnalysis_PS_92_2008_SiteType _result;
    HRESULT _hr = get_Site(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3051)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutSite ( enum IRobotSeismicAnalysis_PS_92_2008_SiteType ret ) {
    HRESULT _hr = put_Site(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3052)
inline enum IRobotSeismicAnalysisSpectrumType IRobotSeismicAnalysis_PS_92_2008_Params::GetSpectrumType ( ) {
    enum IRobotSeismicAnalysisSpectrumType _result;
    HRESULT _hr = get_SpectrumType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3053)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutSpectrumType ( enum IRobotSeismicAnalysisSpectrumType ret ) {
    HRESULT _hr = put_SpectrumType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3054)
inline enum IRobotSeismicAnalysisDirectionType IRobotSeismicAnalysis_PS_92_2008_Params::GetDirectionType ( ) {
    enum IRobotSeismicAnalysisDirectionType _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3055)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutDirectionType ( enum IRobotSeismicAnalysisDirectionType ret ) {
    HRESULT _hr = put_DirectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3056)
inline double IRobotSeismicAnalysis_PS_92_2008_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3057)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3058)
inline IRobotSeismicAnalysis_PS_92_2008_SiteEnvelopePtr IRobotSeismicAnalysis_PS_92_2008_Params::GetSiteEnvelope ( ) {
    struct IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope * _result = 0;
    HRESULT _hr = get_SiteEnvelope(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicAnalysis_PS_92_2008_SiteEnvelopePtr(_result, false);
}

#pragma implementation_key(3059)
inline double IRobotSeismicAnalysis_PS_92_2008_Params::GetAg ( ) {
    double _result = 0;
    HRESULT _hr = get_Ag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3060)
inline void IRobotSeismicAnalysis_PS_92_2008_Params::PutAg ( double ret ) {
    HRESULT _hr = put_Ag(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3061)
inline IRobotSeismicResidualModePtr IRobotSeismicAnalysis_PS_92_2008_Params::GetResidualMode ( ) {
    struct IRobotSeismicResidualMode * _result = 0;
    HRESULT _hr = get_ResidualMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicResidualModePtr(_result, false);
}

//
// interface IRobotLoadRecordDead wrapper method implementations
//

#pragma implementation_key(3062)
inline _bstr_t IRobotLoadRecordDead::GetFiniteElems ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FiniteElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3063)
inline void IRobotLoadRecordDead::PutFiniteElems ( _bstr_t ret ) {
    HRESULT _hr = put_FiniteElems(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotStoreySelection wrapper method implementations
//

#pragma implementation_key(3064)
inline HRESULT IRobotStoreySelection::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3065)
inline HRESULT IRobotStoreySelection::Add ( const _variant_t & _storey ) {
    HRESULT _hr = raw_Add(_storey);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3066)
inline HRESULT IRobotStoreySelection::Remove ( const _variant_t & _storey ) {
    HRESULT _hr = raw_Remove(_storey);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3067)
inline SAFEARRAY * IRobotStoreySelection::GetNumbers ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetNumbers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3068)
inline SAFEARRAY * IRobotStoreySelection::GetNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3069)
inline HRESULT IRobotStoreySelection::AddAll ( ) {
    HRESULT _hr = raw_AddAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotDynamicAnalysisDamping wrapper method implementations
//

#pragma implementation_key(3070)
inline enum IRobotDynamicAnalysisDampingType IRobotDynamicAnalysisDamping::GetType ( ) {
    enum IRobotDynamicAnalysisDampingType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3071)
inline void IRobotDynamicAnalysisDamping::PutType ( enum IRobotDynamicAnalysisDampingType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3072)
inline double IRobotDynamicAnalysisDamping::GetConstValue ( ) {
    double _result = 0;
    HRESULT _hr = get_ConstValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3073)
inline void IRobotDynamicAnalysisDamping::PutConstValue ( double ret ) {
    HRESULT _hr = put_ConstValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3074)
inline HRESULT IRobotDynamicAnalysisDamping::SetModeDamping ( long _mode, double _damp_value ) {
    HRESULT _hr = raw_SetModeDamping(_mode, _damp_value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3075)
inline double IRobotDynamicAnalysisDamping::GetModeDamping ( long _mode ) {
    double _result = 0;
    HRESULT _hr = raw_GetModeDamping(_mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3076)
inline HRESULT IRobotDynamicAnalysisDamping::RemoveModeDamping ( long _mode ) {
    HRESULT _hr = raw_RemoveModeDamping(_mode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3077)
inline SAFEARRAY * IRobotDynamicAnalysisDamping::GetModes ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetModes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFRFAnalysisParams wrapper method implementations
//

#pragma implementation_key(3078)
inline double IRobotFRFAnalysisParams::GetInitialFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_InitialFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3079)
inline void IRobotFRFAnalysisParams::PutInitialFrequency ( double ret ) {
    HRESULT _hr = put_InitialFrequency(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3080)
inline double IRobotFRFAnalysisParams::GetFinalFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_FinalFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3081)
inline void IRobotFRFAnalysisParams::PutFinalFrequency ( double ret ) {
    HRESULT _hr = put_FinalFrequency(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3082)
inline long IRobotFRFAnalysisParams::GetFrequencyDivision ( ) {
    long _result = 0;
    HRESULT _hr = get_FrequencyDivision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3083)
inline void IRobotFRFAnalysisParams::PutFrequencyDivision ( long ret ) {
    HRESULT _hr = put_FrequencyDivision(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3084)
inline VARIANT_BOOL IRobotFRFAnalysisParams::GetIncludeEigenfrequencies ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeEigenfrequencies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3085)
inline void IRobotFRFAnalysisParams::PutIncludeEigenfrequencies ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeEigenfrequencies(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3086)
inline IRobotDynamicAnalysisDampingPtr IRobotFRFAnalysisParams::GetDamping ( ) {
    struct IRobotDynamicAnalysisDamping * _result = 0;
    HRESULT _hr = get_Damping(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisDampingPtr(_result, false);
}

//
// interface IRobotFootfallAnalysisNodeSelection wrapper method implementations
//

#pragma implementation_key(3087)
inline enum IRobotFootfallAnalysisNodeSelectionType IRobotFootfallAnalysisNodeSelection::GetType ( ) {
    enum IRobotFootfallAnalysisNodeSelectionType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3088)
inline void IRobotFootfallAnalysisNodeSelection::PutType ( enum IRobotFootfallAnalysisNodeSelectionType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3089)
inline IRobotSelectionPtr IRobotFootfallAnalysisNodeSelection::GetSelectedNodes ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_SelectedNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(3090)
inline IRobotSelectionPtr IRobotFootfallAnalysisNodeSelection::GetSelectedPanels ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_SelectedPanels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

//
// interface IRobotFootfallAnalysisModalParams wrapper method implementations
//

#pragma implementation_key(3091)
inline double IRobotFootfallAnalysisModalParams::GetFrequencyLimit ( ) {
    double _result = 0;
    HRESULT _hr = get_FrequencyLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3092)
inline void IRobotFootfallAnalysisModalParams::PutFrequencyLimit ( double ret ) {
    HRESULT _hr = put_FrequencyLimit(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3093)
inline VARIANT_BOOL IRobotFootfallAnalysisModalParams::GetIgnoreDensity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3094)
inline void IRobotFootfallAnalysisModalParams::PutIgnoreDensity ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IgnoreDensity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3095)
inline VARIANT_BOOL IRobotFootfallAnalysisModalParams::GetIncludeMassForDirX ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeMassForDirX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3096)
inline void IRobotFootfallAnalysisModalParams::PutIncludeMassForDirX ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeMassForDirX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3097)
inline VARIANT_BOOL IRobotFootfallAnalysisModalParams::GetIncludeMassForDirY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeMassForDirY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3098)
inline void IRobotFootfallAnalysisModalParams::PutIncludeMassForDirY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeMassForDirY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3099)
inline VARIANT_BOOL IRobotFootfallAnalysisModalParams::GetIncludeMassForDirZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeMassForDirZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3100)
inline void IRobotFootfallAnalysisModalParams::PutIncludeMassForDirZ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeMassForDirZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotFootfallAnalysisParams wrapper method implementations
//

#pragma implementation_key(3101)
inline enum IRobotFootfallAnalysisExcitationMethod IRobotFootfallAnalysisParams::GetExcitationMethod ( ) {
    enum IRobotFootfallAnalysisExcitationMethod _result;
    HRESULT _hr = get_ExcitationMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3102)
inline void IRobotFootfallAnalysisParams::PutExcitationMethod ( enum IRobotFootfallAnalysisExcitationMethod ret ) {
    HRESULT _hr = put_ExcitationMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3103)
inline enum IRobotFootfallAnalysisExcitationForces IRobotFootfallAnalysisParams::GetExcitationForces ( ) {
    enum IRobotFootfallAnalysisExcitationForces _result;
    HRESULT _hr = get_ExcitationForces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3104)
inline void IRobotFootfallAnalysisParams::PutExcitationForces ( enum IRobotFootfallAnalysisExcitationForces ret ) {
    HRESULT _hr = put_ExcitationForces(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3105)
inline double IRobotFootfallAnalysisParams::GetMinWalkingFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_MinWalkingFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3106)
inline void IRobotFootfallAnalysisParams::PutMinWalkingFrequency ( double ret ) {
    HRESULT _hr = put_MinWalkingFrequency(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3107)
inline double IRobotFootfallAnalysisParams::GetMaxWalkingFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxWalkingFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3108)
inline void IRobotFootfallAnalysisParams::PutMaxWalkingFrequency ( double ret ) {
    HRESULT _hr = put_MaxWalkingFrequency(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3109)
inline long IRobotFootfallAnalysisParams::GetFootstepsNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_FootstepsNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3110)
inline void IRobotFootfallAnalysisParams::PutFootstepsNumber ( long ret ) {
    HRESULT _hr = put_FootstepsNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3111)
inline double IRobotFootfallAnalysisParams::GetWalkersWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_WalkersWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3112)
inline void IRobotFootfallAnalysisParams::PutWalkersWeight ( double ret ) {
    HRESULT _hr = put_WalkersWeight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3113)
inline IRobotFootfallAnalysisNodeSelectionPtr IRobotFootfallAnalysisParams::GetExcitationNodes ( ) {
    struct IRobotFootfallAnalysisNodeSelection * _result = 0;
    HRESULT _hr = get_ExcitationNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFootfallAnalysisNodeSelectionPtr(_result, false);
}

#pragma implementation_key(3114)
inline IRobotFootfallAnalysisNodeSelectionPtr IRobotFootfallAnalysisParams::GetResponseNodes ( ) {
    struct IRobotFootfallAnalysisNodeSelection * _result = 0;
    HRESULT _hr = get_ResponseNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFootfallAnalysisNodeSelectionPtr(_result, false);
}

#pragma implementation_key(3115)
inline IRobotDynamicAnalysisDampingPtr IRobotFootfallAnalysisParams::GetDamping ( ) {
    struct IRobotDynamicAnalysisDamping * _result = 0;
    HRESULT _hr = get_Damping(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisDampingPtr(_result, false);
}

#pragma implementation_key(3116)
inline IRobotFootfallAnalysisModalParamsPtr IRobotFootfallAnalysisParams::GetModalParams ( ) {
    struct IRobotFootfallAnalysisModalParams * _result = 0;
    HRESULT _hr = get_ModalParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFootfallAnalysisModalParamsPtr(_result, false);
}

//
// interface IRobotTimeHistoryHHTParams wrapper method implementations
//

#pragma implementation_key(3117)
inline double IRobotTimeHistoryHHTParams::GetCoeffAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffAlpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3118)
inline void IRobotTimeHistoryHHTParams::PutCoeffAlpha ( double ret ) {
    HRESULT _hr = put_CoeffAlpha(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3119)
inline VARIANT_BOOL IRobotTimeHistoryHHTParams::GetNonlinearity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Nonlinearity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3120)
inline void IRobotTimeHistoryHHTParams::PutNonlinearity ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Nonlinearity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3121)
inline IRobotTimeHistoryNonlinearParamsPtr IRobotTimeHistoryHHTParams::GetNonlinearParams ( ) {
    struct IRobotTimeHistoryNonlinearParams * _result = 0;
    HRESULT _hr = get_NonlinearParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTimeHistoryNonlinearParamsPtr(_result, false);
}

#pragma implementation_key(3122)
inline double IRobotTimeHistoryHHTParams::GetAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_Alpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3123)
inline void IRobotTimeHistoryHHTParams::PutAlpha ( double ret ) {
    HRESULT _hr = put_Alpha(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3124)
inline double IRobotTimeHistoryHHTParams::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3125)
inline void IRobotTimeHistoryHHTParams::PutBeta ( double ret ) {
    HRESULT _hr = put_Beta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotTimeHistoryNewmarkAccelParams wrapper method implementations
//

#pragma implementation_key(3126)
inline VARIANT_BOOL IRobotTimeHistoryNewmarkAccelParams::GetNonlinearity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Nonlinearity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3127)
inline void IRobotTimeHistoryNewmarkAccelParams::PutNonlinearity ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Nonlinearity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3128)
inline IRobotTimeHistoryNonlinearParamsPtr IRobotTimeHistoryNewmarkAccelParams::GetNonlinearParams ( ) {
    struct IRobotTimeHistoryNonlinearParams * _result = 0;
    HRESULT _hr = get_NonlinearParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTimeHistoryNonlinearParamsPtr(_result, false);
}

#pragma implementation_key(3129)
inline double IRobotTimeHistoryNewmarkAccelParams::GetAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_Alpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3130)
inline void IRobotTimeHistoryNewmarkAccelParams::PutAlpha ( double ret ) {
    HRESULT _hr = put_Alpha(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3131)
inline double IRobotTimeHistoryNewmarkAccelParams::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3132)
inline void IRobotTimeHistoryNewmarkAccelParams::PutBeta ( double ret ) {
    HRESULT _hr = put_Beta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface _IRobotWindLoadsSimulationParamsEx wrapper method implementations
//

#pragma implementation_key(3133)
inline VARIANT_BOOL _IRobotWindLoadsSimulationParamsEx::GetGenerateMaps ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GenerateMaps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3134)
inline void _IRobotWindLoadsSimulationParamsEx::PutGenerateMaps ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GenerateMaps(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSELFSeismic_ASCE_7_10_Params wrapper method implementations
//

#pragma implementation_key(3135)
inline double IRobotSELFSeismic_ASCE_7_10_Params::GetS1 ( ) {
    double _result = 0;
    HRESULT _hr = get_S1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3136)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutS1 ( double ret ) {
    HRESULT _hr = put_S1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3137)
inline double IRobotSELFSeismic_ASCE_7_10_Params::GetSs ( ) {
    double _result = 0;
    HRESULT _hr = get_Ss(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3138)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutSs ( double ret ) {
    HRESULT _hr = put_Ss(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3139)
inline double IRobotSELFSeismic_ASCE_7_10_Params::GetTL ( ) {
    double _result = 0;
    HRESULT _hr = get_TL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3140)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutTL ( double ret ) {
    HRESULT _hr = put_TL(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3141)
inline double IRobotSELFSeismic_ASCE_7_10_Params::GetR ( ) {
    double _result = 0;
    HRESULT _hr = get_R(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3142)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutR ( double ret ) {
    HRESULT _hr = put_R(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3143)
inline double IRobotSELFSeismic_ASCE_7_10_Params::GetI ( ) {
    double _result = 0;
    HRESULT _hr = get_I(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3144)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutI ( double ret ) {
    HRESULT _hr = put_I(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3145)
inline enum IRobotSELFSeismic_ASCE_7_10_SiteClassType IRobotSELFSeismic_ASCE_7_10_Params::GetSiteClass ( ) {
    enum IRobotSELFSeismic_ASCE_7_10_SiteClassType _result;
    HRESULT _hr = get_SiteClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3146)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutSiteClass ( enum IRobotSELFSeismic_ASCE_7_10_SiteClassType ret ) {
    HRESULT _hr = put_SiteClass(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3147)
inline enum IRobotSELFSeismic_ASCE_7_10_StructureType IRobotSELFSeismic_ASCE_7_10_Params::GetStructureTypeX ( ) {
    enum IRobotSELFSeismic_ASCE_7_10_StructureType _result;
    HRESULT _hr = get_StructureTypeX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3148)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutStructureTypeX ( enum IRobotSELFSeismic_ASCE_7_10_StructureType ret ) {
    HRESULT _hr = put_StructureTypeX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3149)
inline enum IRobotSELFSeismic_ASCE_7_10_StructureType IRobotSELFSeismic_ASCE_7_10_Params::GetStructureTypeY ( ) {
    enum IRobotSELFSeismic_ASCE_7_10_StructureType _result;
    HRESULT _hr = get_StructureTypeY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3150)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutStructureTypeY ( enum IRobotSELFSeismic_ASCE_7_10_StructureType ret ) {
    HRESULT _hr = put_StructureTypeY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3151)
inline double IRobotSELFSeismic_ASCE_7_10_Params::GetTBaseValueX ( ) {
    double _result = 0;
    HRESULT _hr = get_TBaseValueX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3152)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutTBaseValueX ( double ret ) {
    HRESULT _hr = put_TBaseValueX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3153)
inline double IRobotSELFSeismic_ASCE_7_10_Params::GetTBaseValueY ( ) {
    double _result = 0;
    HRESULT _hr = get_TBaseValueY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3154)
inline void IRobotSELFSeismic_ASCE_7_10_Params::PutTBaseValueY ( double ret ) {
    HRESULT _hr = put_TBaseValueY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSELFSeismic_EC_8_Params wrapper method implementations
//

#pragma implementation_key(3155)
inline enum IRobotSELFSeismic_EC_8_StructureType IRobotSELFSeismic_EC_8_Params::GetStructureTypeX ( ) {
    enum IRobotSELFSeismic_EC_8_StructureType _result;
    HRESULT _hr = get_StructureTypeX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3156)
inline void IRobotSELFSeismic_EC_8_Params::PutStructureTypeX ( enum IRobotSELFSeismic_EC_8_StructureType ret ) {
    HRESULT _hr = put_StructureTypeX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3157)
inline enum IRobotSELFSeismic_EC_8_StructureType IRobotSELFSeismic_EC_8_Params::GetStructureTypeY ( ) {
    enum IRobotSELFSeismic_EC_8_StructureType _result;
    HRESULT _hr = get_StructureTypeY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3158)
inline void IRobotSELFSeismic_EC_8_Params::PutStructureTypeY ( enum IRobotSELFSeismic_EC_8_StructureType ret ) {
    HRESULT _hr = put_StructureTypeY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3159)
inline double IRobotSELFSeismic_EC_8_Params::GetAg ( ) {
    double _result = 0;
    HRESULT _hr = get_Ag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3160)
inline void IRobotSELFSeismic_EC_8_Params::PutAg ( double ret ) {
    HRESULT _hr = put_Ag(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3161)
inline double IRobotSELFSeismic_EC_8_Params::GetQ ( ) {
    double _result = 0;
    HRESULT _hr = get_Q(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3162)
inline void IRobotSELFSeismic_EC_8_Params::PutQ ( double ret ) {
    HRESULT _hr = put_Q(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3163)
inline double IRobotSELFSeismic_EC_8_Params::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3164)
inline void IRobotSELFSeismic_EC_8_Params::PutBeta ( double ret ) {
    HRESULT _hr = put_Beta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3165)
inline enum IRobotSELFSeismic_EC_8_SiteClass IRobotSELFSeismic_EC_8_Params::GetSiteClass ( ) {
    enum IRobotSELFSeismic_EC_8_SiteClass _result;
    HRESULT _hr = get_SiteClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3166)
inline void IRobotSELFSeismic_EC_8_Params::PutSiteClass ( enum IRobotSELFSeismic_EC_8_SiteClass ret ) {
    HRESULT _hr = put_SiteClass(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3167)
inline enum IRobotSELFSeismic_EC_8_SpectrumType IRobotSELFSeismic_EC_8_Params::GetSpectrumType ( ) {
    enum IRobotSELFSeismic_EC_8_SpectrumType _result;
    HRESULT _hr = get_SpectrumType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3168)
inline void IRobotSELFSeismic_EC_8_Params::PutSpectrumType ( enum IRobotSELFSeismic_EC_8_SpectrumType ret ) {
    HRESULT _hr = put_SpectrumType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3169)
inline HRESULT IRobotSELFSeismic_EC_8_Params::SiteClassEnvelopeCheck ( enum IRobotSELFSeismic_EC_8_SiteClass _siteClass, VARIANT_BOOL _check ) {
    HRESULT _hr = raw_SiteClassEnvelopeCheck(_siteClass, _check);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3170)
inline VARIANT_BOOL IRobotSELFSeismic_EC_8_Params::SiteClassEnvelopeIsChecked ( enum IRobotSELFSeismic_EC_8_SiteClass _siteClass ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SiteClassEnvelopeIsChecked(_siteClass, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotSELFSeismic_AS_1170_4_Params wrapper method implementations
//

#pragma implementation_key(3171)
inline double IRobotSELFSeismic_AS_1170_4_Params::GetSp ( ) {
    double _result = 0;
    HRESULT _hr = get_Sp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3172)
inline void IRobotSELFSeismic_AS_1170_4_Params::PutSp ( double ret ) {
    HRESULT _hr = put_Sp(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3173)
inline double IRobotSELFSeismic_AS_1170_4_Params::GetMi ( ) {
    double _result = 0;
    HRESULT _hr = get_Mi(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3174)
inline void IRobotSELFSeismic_AS_1170_4_Params::PutMi ( double ret ) {
    HRESULT _hr = put_Mi(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3175)
inline double IRobotSELFSeismic_AS_1170_4_Params::GetKp ( ) {
    double _result = 0;
    HRESULT _hr = get_Kp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3176)
inline void IRobotSELFSeismic_AS_1170_4_Params::PutKp ( double ret ) {
    HRESULT _hr = put_Kp(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3177)
inline enum IRobotSELFSeismic_AS_1170_4_SoilCategoryType IRobotSELFSeismic_AS_1170_4_Params::GetSoilCategory ( ) {
    enum IRobotSELFSeismic_AS_1170_4_SoilCategoryType _result;
    HRESULT _hr = get_SoilCategory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3178)
inline void IRobotSELFSeismic_AS_1170_4_Params::PutSoilCategory ( enum IRobotSELFSeismic_AS_1170_4_SoilCategoryType ret ) {
    HRESULT _hr = put_SoilCategory(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3179)
inline double IRobotSELFSeismic_AS_1170_4_Params::GetZ ( ) {
    double _result = 0;
    HRESULT _hr = get_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3180)
inline void IRobotSELFSeismic_AS_1170_4_Params::PutZ ( double ret ) {
    HRESULT _hr = put_Z(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3181)
inline enum IRobotSELFSeismic_AS_1170_4_StructureType IRobotSELFSeismic_AS_1170_4_Params::GetStructureTypeX ( ) {
    enum IRobotSELFSeismic_AS_1170_4_StructureType _result;
    HRESULT _hr = get_StructureTypeX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3182)
inline void IRobotSELFSeismic_AS_1170_4_Params::PutStructureTypeX ( enum IRobotSELFSeismic_AS_1170_4_StructureType ret ) {
    HRESULT _hr = put_StructureTypeX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3183)
inline enum IRobotSELFSeismic_AS_1170_4_StructureType IRobotSELFSeismic_AS_1170_4_Params::GetStructureTypeY ( ) {
    enum IRobotSELFSeismic_AS_1170_4_StructureType _result;
    HRESULT _hr = get_StructureTypeY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3184)
inline void IRobotSELFSeismic_AS_1170_4_Params::PutStructureTypeY ( enum IRobotSELFSeismic_AS_1170_4_StructureType ret ) {
    HRESULT _hr = put_StructureTypeY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3185)
inline enum IRobotSELFSeismic_AS_1170_4_ProbabilityType IRobotSELFSeismic_AS_1170_4_Params::GetProbability ( ) {
    enum IRobotSELFSeismic_AS_1170_4_ProbabilityType _result;
    HRESULT _hr = get_Probability(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3186)
inline void IRobotSELFSeismic_AS_1170_4_Params::PutProbability ( enum IRobotSELFSeismic_AS_1170_4_ProbabilityType ret ) {
    HRESULT _hr = put_Probability(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSeismicAnalysis_EC8_General_Params wrapper method implementations
//

#pragma implementation_key(3187)
inline double IRobotSeismicAnalysis_EC8_General_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3188)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3189)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_EC8_General_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3190)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3191)
inline enum IRobotSeismicAnalysisDirectionType IRobotSeismicAnalysis_EC8_General_Params::GetDirectionType ( ) {
    enum IRobotSeismicAnalysisDirectionType _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3192)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutDirectionType ( enum IRobotSeismicAnalysisDirectionType ret ) {
    HRESULT _hr = put_DirectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3193)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_EC8_General_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(3194)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3195)
inline enum IRobotSeismicAnalysisSpectrumType IRobotSeismicAnalysis_EC8_General_Params::GetSpectrum ( ) {
    enum IRobotSeismicAnalysisSpectrumType _result;
    HRESULT _hr = get_Spectrum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3196)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutSpectrum ( enum IRobotSeismicAnalysisSpectrumType ret ) {
    HRESULT _hr = put_Spectrum(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3197)
inline IRobotSeismicResidualModePtr IRobotSeismicAnalysis_EC8_General_Params::GetResidualMode ( ) {
    struct IRobotSeismicResidualMode * _result = 0;
    HRESULT _hr = get_ResidualMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicResidualModePtr(_result, false);
}

#pragma implementation_key(3198)
inline double IRobotSeismicAnalysis_EC8_General_Params::GetAg ( ) {
    double _result = 0;
    HRESULT _hr = get_Ag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3199)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutAg ( double ret ) {
    HRESULT _hr = put_Ag(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3200)
inline double IRobotSeismicAnalysis_EC8_General_Params::GetS ( ) {
    double _result = 0;
    HRESULT _hr = get_S(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3201)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutS ( double ret ) {
    HRESULT _hr = put_S(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3202)
inline double IRobotSeismicAnalysis_EC8_General_Params::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3203)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutB ( double ret ) {
    HRESULT _hr = put_B(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3204)
inline double IRobotSeismicAnalysis_EC8_General_Params::GetTb ( ) {
    double _result = 0;
    HRESULT _hr = get_Tb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3205)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutTb ( double ret ) {
    HRESULT _hr = put_Tb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3206)
inline double IRobotSeismicAnalysis_EC8_General_Params::GetTc ( ) {
    double _result = 0;
    HRESULT _hr = get_Tc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3207)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutTc ( double ret ) {
    HRESULT _hr = put_Tc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3208)
inline double IRobotSeismicAnalysis_EC8_General_Params::GetTd ( ) {
    double _result = 0;
    HRESULT _hr = get_Td(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3209)
inline void IRobotSeismicAnalysis_EC8_General_Params::PutTd ( double ret ) {
    HRESULT _hr = put_Td(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3210)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_EC8_General_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

//
// interface IRobotSeismicAnalysis_EC8_Params wrapper method implementations
//

#pragma implementation_key(3211)
inline double IRobotSeismicAnalysis_EC8_Params::GetBehaviorFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_BehaviorFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3212)
inline void IRobotSeismicAnalysis_EC8_Params::PutBehaviorFactor ( double ret ) {
    HRESULT _hr = put_BehaviorFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3213)
inline IRobotGeoPoint3DPtr IRobotSeismicAnalysis_EC8_Params::GetDirection ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3214)
inline void IRobotSeismicAnalysis_EC8_Params::PutDirection ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3215)
inline enum IRobotSeismicAnalysisDirectionType IRobotSeismicAnalysis_EC8_Params::GetDirectionType ( ) {
    enum IRobotSeismicAnalysisDirectionType _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3216)
inline void IRobotSeismicAnalysis_EC8_Params::PutDirectionType ( enum IRobotSeismicAnalysisDirectionType ret ) {
    HRESULT _hr = put_DirectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3217)
inline IRobotCaseAnalysisModesFilterPtr IRobotSeismicAnalysis_EC8_Params::GetFilter ( ) {
    struct IRobotCaseAnalysisModesFilter * _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseAnalysisModesFilterPtr(_result, false);
}

#pragma implementation_key(3218)
inline void IRobotSeismicAnalysis_EC8_Params::PutFilter ( struct IRobotCaseAnalysisModesFilter * ret ) {
    HRESULT _hr = put_Filter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3219)
inline enum IRobotSeismicAnalysisSpectrumType IRobotSeismicAnalysis_EC8_Params::GetSpectrum ( ) {
    enum IRobotSeismicAnalysisSpectrumType _result;
    HRESULT _hr = get_Spectrum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3220)
inline void IRobotSeismicAnalysis_EC8_Params::PutSpectrum ( enum IRobotSeismicAnalysisSpectrumType ret ) {
    HRESULT _hr = put_Spectrum(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3221)
inline IRobotSeismicResidualModePtr IRobotSeismicAnalysis_EC8_Params::GetResidualMode ( ) {
    struct IRobotSeismicResidualMode * _result = 0;
    HRESULT _hr = get_ResidualMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSeismicResidualModePtr(_result, false);
}

#pragma implementation_key(3222)
inline double IRobotSeismicAnalysis_EC8_Params::GetAg ( ) {
    double _result = 0;
    HRESULT _hr = get_Ag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3223)
inline void IRobotSeismicAnalysis_EC8_Params::PutAg ( double ret ) {
    HRESULT _hr = put_Ag(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3224)
inline enum IRobotSeismicAnalysis_EC8_GroundType IRobotSeismicAnalysis_EC8_Params::GetGroundType ( ) {
    enum IRobotSeismicAnalysis_EC8_GroundType _result;
    HRESULT _hr = get_GroundType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3225)
inline void IRobotSeismicAnalysis_EC8_Params::PutGroundType ( enum IRobotSeismicAnalysis_EC8_GroundType ret ) {
    HRESULT _hr = put_GroundType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3226)
inline enum IRobotSeismicAnalysis_EC8_SpectrumType IRobotSeismicAnalysis_EC8_Params::GetSpectrumType ( ) {
    enum IRobotSeismicAnalysis_EC8_SpectrumType _result;
    HRESULT _hr = get_SpectrumType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3227)
inline void IRobotSeismicAnalysis_EC8_Params::PutSpectrumType ( enum IRobotSeismicAnalysis_EC8_SpectrumType ret ) {
    HRESULT _hr = put_SpectrumType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3228)
inline IRobotDynamicAnalysisExcitationDirectionPtr IRobotSeismicAnalysis_EC8_Params::GetExcitationDir ( ) {
    struct IRobotDynamicAnalysisExcitationDirection * _result = 0;
    HRESULT _hr = get_ExcitationDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotDynamicAnalysisExcitationDirectionPtr(_result, false);
}

//
// dispinterface _IRobotCalcEngineEvents wrapper method implementations
//

#pragma implementation_key(3229)
inline HRESULT _IRobotCalcEngineEvents::CalcNotify ( _bstr_t strText, long nType, VARIANT_BOOL * bHandled, long * nReturnValue ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0008\x0003\x400b\x4003", (BSTR)strText, nType, bHandled, nReturnValue);
    return _result;
}

#pragma implementation_key(3230)
inline HRESULT _IRobotCalcEngineEvents::CalcNotifyEx ( long nCaller, _bstr_t strText, _bstr_t strFullText, _bstr_t strCaption, long nType, long nDataType, _bstr_t strSelection, VARIANT_BOOL * bHandled, long * nReturnValue ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0003\x0008\x0008\x0008\x0003\x0003\x0008\x400b\x4003", nCaller, (BSTR)strText, (BSTR)strFullText, (BSTR)strCaption, nType, nDataType, (BSTR)strSelection, bHandled, nReturnValue);
    return _result;
}

#pragma implementation_key(3231)
inline HRESULT _IRobotCalcEngineEvents::CalcMessage ( enum IRobotCalcMessageSource _msgSource, enum IRobotCalcMessageSeverityLevel _msgSeverity, long _msgId, _bstr_t _msgText, enum IRobotObjectType _objType, _bstr_t _objSel ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0003\x0003\x0003\x0008\x0003\x0008", _msgSource, _msgSeverity, _msgId, (BSTR)_msgText, _objType, (BSTR)_objSel);
    return _result;
}

//
// dispinterface _IRobotPreferencesEvents wrapper method implementations
//

#pragma implementation_key(3232)
inline HRESULT _IRobotPreferencesEvents::OnDialogOK ( ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

//
// interface IRobotPreferences wrapper method implementations
//

#pragma implementation_key(3233)
inline _bstr_t IRobotPreferences::GetDirectory ( enum IRobotDirectory robot_dir ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDirectory(robot_dir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3234)
inline int IRobotPreferences::GetLanguage ( enum IRobotLanguage lang_id ) {
    int _result = 0;
    HRESULT _hr = raw_GetLanguage(lang_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3235)
inline VARIANT_BOOL IRobotPreferences::GetOpenGL ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OpenGL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3236)
inline void IRobotPreferences::PutOpenGL ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_OpenGL(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3237)
inline VARIANT_BOOL IRobotPreferences::GetMultiprocessing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Multiprocessing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3238)
inline void IRobotPreferences::PutMultiprocessing ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Multiprocessing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3239)
inline VARIANT_BOOL IRobotPreferences::GetCloudCalculationsEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CloudCalculationsEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3240)
inline void IRobotPreferences::PutCloudCalculationsEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CloudCalculationsEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3241)
inline enum IRobotCalculationsType IRobotPreferences::GetCalculationsType ( ) {
    enum IRobotCalculationsType _result;
    HRESULT _hr = get_CalculationsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3242)
inline void IRobotPreferences::PutCalculationsType ( enum IRobotCalculationsType ret ) {
    HRESULT _hr = put_CalculationsType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface _IRobotProjectPreferencesEvents wrapper method implementations
//

#pragma implementation_key(3243)
inline HRESULT _IRobotProjectPreferencesEvents::OnDialogOK ( ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

//
// interface IRobotObjectsArray wrapper method implementations
//

#pragma implementation_key(3244)
inline long IRobotObjectsArray::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3245)
inline HRESULT IRobotObjectsArray::SetSize ( long Count ) {
    HRESULT _hr = raw_SetSize(Count);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3246)
inline HRESULT IRobotObjectsArray::Set ( long idx, IDispatch * Object ) {
    HRESULT _hr = raw_Set(idx, Object);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3247)
inline IDispatchPtr IRobotObjectsArray::Get ( long idx ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface IRobotWindow wrapper method implementations
//

#pragma implementation_key(3248)
inline enum IRobotWindowState IRobotWindow::GetState ( ) {
    enum IRobotWindowState _result;
    HRESULT _hr = get_State(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3249)
inline void IRobotWindow::PutState ( enum IRobotWindowState ret ) {
    HRESULT _hr = put_State(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3250)
inline long IRobotWindow::GetIsActive ( ) {
    long _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3251)
inline HRESULT IRobotWindow::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3252)
inline long IRobotWindow::GetHandle ( ) {
    long _result = 0;
    HRESULT _hr = get_Handle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3253)
inline _bstr_t IRobotWindow::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3254)
inline void IRobotWindow::PutCaption ( _bstr_t ret ) {
    HRESULT _hr = put_Caption(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3255)
inline HRESULT IRobotWindow::SendMessage ( long _msg_id, long _w_param, long _l_param ) {
    HRESULT _hr = raw_SendMessage(_msg_id, _w_param, _l_param);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSerializable wrapper method implementations
//

#pragma implementation_key(3256)
inline VARIANT_BOOL IRobotSerializable::Write ( IUnknown * _dest_stream ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Write(_dest_stream, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3257)
inline VARIANT_BOOL IRobotSerializable::Read ( IUnknown * _source_stream ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Read(_source_stream, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNumbersDictionary wrapper method implementations
//

#pragma implementation_key(3258)
inline long IRobotNumbersDictionary::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3259)
inline HRESULT IRobotNumbersDictionary::Set ( long _key, long _value ) {
    HRESULT _hr = raw_Set(_key, _value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3260)
inline long IRobotNumbersDictionary::Find ( long _key ) {
    long _result = 0;
    HRESULT _hr = raw_Find(_key, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3261)
inline HRESULT IRobotNumbersDictionary::Delete ( long _key ) {
    HRESULT _hr = raw_Delete(_key);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3262)
inline HRESULT IRobotNumbersDictionary::Get ( long _idx, long * _key, long * _value ) {
    HRESULT _hr = raw_Get(_idx, _key, _value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3263)
inline long IRobotNumbersDictionary::FindGet ( long _key, long * _value ) {
    long _result = 0;
    HRESULT _hr = raw_FindGet(_key, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotGeoSegment wrapper method implementations
//

#pragma implementation_key(3264)
inline enum IRobotGeoSegmentType IRobotGeoSegment::GetType ( ) {
    enum IRobotGeoSegmentType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3265)
inline IRobotGeoPoint3DPtr IRobotGeoSegment::GetP1 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3266)
inline void IRobotGeoSegment::PutP1 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_P1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotGeoSegmentLine wrapper method implementations
//

#pragma implementation_key(3267)
inline long IRobotGeoSegmentLine::GetNDiv ( ) {
    long _result = 0;
    HRESULT _hr = get_NDiv(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3268)
inline void IRobotGeoSegmentLine::PutNDiv ( long ret ) {
    HRESULT _hr = put_NDiv(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3269)
inline long IRobotGeoSegmentLine::GetRound ( ) {
    long _result = 0;
    HRESULT _hr = get_Round(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3270)
inline void IRobotGeoSegmentLine::PutRound ( long ret ) {
    HRESULT _hr = put_Round(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3271)
inline double IRobotGeoSegmentLine::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3272)
inline void IRobotGeoSegmentLine::PutRadius ( double ret ) {
    HRESULT _hr = put_Radius(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3273)
inline IRobotGeoCurveDivPtr IRobotGeoSegmentLine::GetDiv ( ) {
    struct IRobotGeoCurveDiv * _result = 0;
    HRESULT _hr = get_Div(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoCurveDivPtr(_result, false);
}

#pragma implementation_key(3274)
inline void IRobotGeoSegmentLine::PutDiv ( struct IRobotGeoCurveDiv * ret ) {
    HRESULT _hr = put_Div(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotGeoSegmentArc wrapper method implementations
//

#pragma implementation_key(3275)
inline IRobotGeoPoint3DPtr IRobotGeoSegmentArc::GetP2 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3276)
inline void IRobotGeoSegmentArc::PutP2 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_P2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3277)
inline IRobotGeoCurveDivPtr IRobotGeoSegmentArc::GetDiv ( ) {
    struct IRobotGeoCurveDiv * _result = 0;
    HRESULT _hr = get_Div(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoCurveDivPtr(_result, false);
}

#pragma implementation_key(3278)
inline void IRobotGeoSegmentArc::PutDiv ( struct IRobotGeoCurveDiv * ret ) {
    HRESULT _hr = put_Div(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3279)
inline HRESULT IRobotGeoSegmentArc::Set ( struct IRobotGeoPoint3D * P1, struct IRobotGeoPoint3D * P2 ) {
    HRESULT _hr = raw_Set(P1, P2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotGeoPolyline wrapper method implementations
//

#pragma implementation_key(3280)
inline IRobotCollectionPtr IRobotGeoPolyline::GetSegments ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Segments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(3281)
inline HRESULT IRobotGeoPolyline::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3282)
inline HRESULT IRobotGeoPolyline::Add ( struct IRobotGeoSegment * segment ) {
    HRESULT _hr = raw_Add(segment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotGeoContour wrapper method implementations
//

#pragma implementation_key(3283)
inline IRobotCollectionPtr IRobotGeoContour::GetSegments ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Segments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(3284)
inline HRESULT IRobotGeoContour::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3285)
inline HRESULT IRobotGeoContour::Add ( struct IRobotGeoSegment * segment ) {
    HRESULT _hr = raw_Add(segment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotGeoArc wrapper method implementations
//

#pragma implementation_key(3286)
inline IRobotGeoPoint3DPtr IRobotGeoArc::GetP1 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3287)
inline void IRobotGeoArc::PutP1 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_P1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3288)
inline IRobotGeoPoint3DPtr IRobotGeoArc::GetP2 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3289)
inline void IRobotGeoArc::PutP2 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_P2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3290)
inline IRobotGeoPoint3DPtr IRobotGeoArc::GetP3 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3291)
inline void IRobotGeoArc::PutP3 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_P3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotGeoCircle wrapper method implementations
//

#pragma implementation_key(3292)
inline IRobotGeoPoint3DPtr IRobotGeoCircle::GetP1 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3293)
inline void IRobotGeoCircle::PutP1 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_P1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3294)
inline IRobotGeoPoint3DPtr IRobotGeoCircle::GetP2 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3295)
inline void IRobotGeoCircle::PutP2 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_P2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3296)
inline IRobotGeoPoint3DPtr IRobotGeoCircle::GetP3 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_P3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3297)
inline void IRobotGeoCircle::PutP3 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_P3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3298)
inline IRobotGeoPoint3DPtr IRobotGeoCircle::GetPC ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_PC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

//
// interface IRobotObjModifExtrusion wrapper method implementations
//

#pragma implementation_key(3299)
inline IRobotGeoPoint3DPtr IRobotObjModifExtrusion::GetVector ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Vector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3300)
inline void IRobotObjModifExtrusion::PutVector ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Vector(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotObjModifLathe wrapper method implementations
//

#pragma implementation_key(3301)
inline IRobotGeoPoint3DPtr IRobotObjModifLathe::GetAxsP1 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_AxsP1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3302)
inline void IRobotObjModifLathe::PutAxsP1 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_AxsP1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3303)
inline IRobotGeoPoint3DPtr IRobotObjModifLathe::GetAxsP2 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_AxsP2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3304)
inline void IRobotObjModifLathe::PutAxsP2 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_AxsP2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3305)
inline double IRobotObjModifLathe::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3306)
inline void IRobotObjModifLathe::PutAngle ( double ret ) {
    HRESULT _hr = put_Angle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotObjModifPyramid wrapper method implementations
//

#pragma implementation_key(3307)
inline IRobotCollectionPtr IRobotObjModifPyramid::GetPoints ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Points(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(3308)
inline IRobotCollectionPtr IRobotObjModifPyramid::GetFactors ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Factors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(3309)
inline HRESULT IRobotObjModifPyramid::AddPoint ( struct IRobotGeoPoint3D * Point, struct IRobotGeoPoint3D * _factor ) {
    HRESULT _hr = raw_AddPoint(Point, _factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3310)
inline HRESULT IRobotObjModifPyramid::ClearPoints ( ) {
    HRESULT _hr = raw_ClearPoints();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotObjOperTranslation wrapper method implementations
//

#pragma implementation_key(3311)
inline IRobotGeoPoint3DPtr IRobotObjOperTranslation::GetVector ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Vector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3312)
inline void IRobotObjOperTranslation::PutVector ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Vector(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotObjOperScaling wrapper method implementations
//

#pragma implementation_key(3313)
inline IRobotGeoPoint3DPtr IRobotObjOperScaling::GetFactor ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Factor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3314)
inline IRobotGeoPoint3DPtr IRobotObjOperScaling::GetCenter ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Center(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3315)
inline void IRobotObjOperScaling::PutCenter ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_Center(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotObjOperRotation wrapper method implementations
//

#pragma implementation_key(3316)
inline IRobotGeoPoint3DPtr IRobotObjOperRotation::GetAxsP1 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_AxsP1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3317)
inline void IRobotObjOperRotation::PutAxsP1 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_AxsP1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3318)
inline IRobotGeoPoint3DPtr IRobotObjOperRotation::GetAxsP2 ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_AxsP2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3319)
inline void IRobotObjOperRotation::PutAxsP2 ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_AxsP2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3320)
inline double IRobotObjOperRotation::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3321)
inline void IRobotObjOperRotation::PutAngle ( double ret ) {
    HRESULT _hr = put_Angle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotObjOperMeshing wrapper method implementations
//

#pragma implementation_key(3322)
inline IRobotCollectionPtr IRobotObjOperMeshing::GetVectors ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Vectors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(3323)
inline IRobotCollectionPtr IRobotObjOperMeshing::GetPoints ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Points(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(3324)
inline HRESULT IRobotObjOperMeshing::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3325)
inline HRESULT IRobotObjOperMeshing::Add ( long Point, struct IRobotGeoPoint3D * vect ) {
    HRESULT _hr = raw_Add(Point, vect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotObjEdge wrapper method implementations
//

#pragma implementation_key(3326)
inline IRobotCollectionPtr IRobotObjEdge::GetPath ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = get_Path(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(3327)
inline long IRobotObjEdge::HasLabel ( enum IRobotLabelType lab_type ) {
    long _result = 0;
    HRESULT _hr = raw_HasLabel(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3328)
inline HRESULT IRobotObjEdge::SetLabel ( enum IRobotLabelType lab_type, _bstr_t lab_name ) {
    HRESULT _hr = raw_SetLabel(lab_type, lab_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3329)
inline IRobotLabelPtr IRobotObjEdge::GetLabel ( enum IRobotLabelType lab_type ) {
    struct IRobotLabel * _result = 0;
    HRESULT _hr = raw_GetLabel(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelPtr(_result, false);
}

#pragma implementation_key(3330)
inline _bstr_t IRobotObjEdge::GetLabelName ( enum IRobotLabelType lab_type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetLabelName(lab_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3331)
inline HRESULT IRobotObjEdge::RemoveLabel ( enum IRobotLabelType lab_type ) {
    HRESULT _hr = raw_RemoveLabel(lab_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3332)
inline IRobotCollectionPtr IRobotObjEdge::GetLabels ( ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_GetLabels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(3333)
inline HRESULT IRobotObjEdge::DivideN ( long _n, VARIANT_BOOL _only_gen_nodes ) {
    HRESULT _hr = raw_DivideN(_n, _only_gen_nodes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3334)
inline HRESULT IRobotObjEdge::Divide ( double _x, VARIANT_BOOL _relative, VARIANT_BOOL _only_gen_node ) {
    HRESULT _hr = raw_Divide(_x, _relative, _only_gen_node);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3335)
inline HRESULT IRobotObjEdge::DivideByPlane ( double _val, enum IRobotGeoCoordinateAxis _axis, VARIANT_BOOL _only_gen_node ) {
    HRESULT _hr = raw_DivideByPlane(_val, _axis, _only_gen_node);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotObjPart2 wrapper method implementations
//

#pragma implementation_key(3336)
inline _bstr_t IRobotObjPart2::GetFiniteElems ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FiniteElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3337)
inline _bstr_t IRobotObjPart2::GetNodes ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Nodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3338)
inline double IRobotObjPart2::CalcArea ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalcArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3339)
inline double IRobotObjPart2::CalcVol ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalcVol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotFiniteElementNodes wrapper method implementations
//

#pragma implementation_key(3340)
inline long IRobotFiniteElementNodes::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3341)
inline long IRobotFiniteElementNodes::Get ( long _node_idx ) {
    long _result = 0;
    HRESULT _hr = raw_Get(_node_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3342)
inline VARIANT_BOOL IRobotFiniteElementNodes::Set ( long _node_idx, long _node_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Set(_node_idx, _node_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3343)
inline HRESULT IRobotFiniteElementNodes::SetAll ( struct IRobotNumbersArray * _nodes_array ) {
    HRESULT _hr = raw_SetAll(_nodes_array);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3344)
inline IRobotNumbersArrayPtr IRobotFiniteElementNodes::GetAll ( ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = raw_GetAll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

//
// interface IRobotFiniteElement wrapper method implementations
//

#pragma implementation_key(3345)
inline long IRobotFiniteElement::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3346)
inline enum IRobotFiniteElementType IRobotFiniteElement::GetFeType ( ) {
    enum IRobotFiniteElementType _result;
    HRESULT _hr = get_FeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3347)
inline void IRobotFiniteElement::PutFeType ( enum IRobotFiniteElementType ret ) {
    HRESULT _hr = put_FeType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3348)
inline IRobotFiniteElementNodesPtr IRobotFiniteElement::GetNodes ( ) {
    struct IRobotFiniteElementNodes * _result = 0;
    HRESULT _hr = get_Nodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFiniteElementNodesPtr(_result, false);
}

#pragma implementation_key(3349)
inline long IRobotFiniteElement::GetObjectNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3350)
inline long IRobotFiniteElement::GetObjectPartIdx ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectPartIdx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3351)
inline long IRobotFiniteElement::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3352)
inline void IRobotFiniteElement::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3353)
inline double IRobotFiniteElement::CalcArea ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalcArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotNonlinearHingeData wrapper method implementations
//

#pragma implementation_key(3354)
inline VARIANT_BOOL IRobotNonlinearHingeData::GetNormalStress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NormalStress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3355)
inline void IRobotNonlinearHingeData::PutNormalStress ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_NormalStress(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3356)
inline VARIANT_BOOL IRobotNonlinearHingeData::IsActive ( enum IRobotNonlinearHingeComponentType _cmpnt ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsActive(_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3357)
inline HRESULT IRobotNonlinearHingeData::SetModel ( enum IRobotNonlinearHingeComponentType _cmpnt, _bstr_t _model ) {
    HRESULT _hr = raw_SetModel(_cmpnt, _model);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3358)
inline _bstr_t IRobotNonlinearHingeData::GetModel ( enum IRobotNonlinearHingeComponentType _cmpnt ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetModel(_cmpnt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3359)
inline HRESULT IRobotNonlinearHingeData::Remove ( enum IRobotNonlinearHingeComponentType _cmpnt ) {
    HRESULT _hr = raw_Remove(_cmpnt);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotCladdingData wrapper method implementations
//

#pragma implementation_key(3360)
inline enum IRobotCladdingType IRobotCladdingData::GetType ( ) {
    enum IRobotCladdingType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3361)
inline void IRobotCladdingData::PutType ( enum IRobotCladdingType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3362)
inline VARIANT_BOOL IRobotCladdingData::GetTrussBars ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TrussBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3363)
inline void IRobotCladdingData::PutTrussBars ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_TrussBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3364)
inline long IRobotCladdingData::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3365)
inline void IRobotCladdingData::PutColor ( long ret ) {
    HRESULT _hr = put_Color(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3366)
inline enum IRobotCladdingMethod IRobotCladdingData::GetMethod ( ) {
    enum IRobotCladdingMethod _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3367)
inline void IRobotCladdingData::PutMethod ( enum IRobotCladdingMethod ret ) {
    HRESULT _hr = put_Method(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotPanelCalcModelData wrapper method implementations
//

#pragma implementation_key(3368)
inline enum IRobotPanelCalcModelFinElemType IRobotPanelCalcModelData::GetFinElemType ( ) {
    enum IRobotPanelCalcModelFinElemType _result;
    HRESULT _hr = get_FinElemType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3369)
inline void IRobotPanelCalcModelData::PutFinElemType ( enum IRobotPanelCalcModelFinElemType ret ) {
    HRESULT _hr = put_FinElemType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3370)
inline enum IRobotPanelCalcModelLoadTransfer IRobotPanelCalcModelData::GetLoadTransfer ( ) {
    enum IRobotPanelCalcModelLoadTransfer _result;
    HRESULT _hr = get_LoadTransfer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3371)
inline void IRobotPanelCalcModelData::PutLoadTransfer ( enum IRobotPanelCalcModelLoadTransfer ret ) {
    HRESULT _hr = put_LoadTransfer(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3372)
inline enum IRobotPanelCalcModelDiaphragm IRobotPanelCalcModelData::GetDiaphragm ( ) {
    enum IRobotPanelCalcModelDiaphragm _result;
    HRESULT _hr = get_Diaphragm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3373)
inline void IRobotPanelCalcModelData::PutDiaphragm ( enum IRobotPanelCalcModelDiaphragm ret ) {
    HRESULT _hr = put_Diaphragm(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface _IRobotUnitMngrEvents wrapper method implementations
//

#pragma implementation_key(3374)
inline HRESULT _IRobotUnitMngrEvents::UnitsChanged ( ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

//
// interface IRobotUnitComplexData wrapper method implementations
//

#pragma implementation_key(3375)
inline _bstr_t IRobotUnitComplexData::GetName2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3376)
inline void IRobotUnitComplexData::PutName2 ( _bstr_t ret ) {
    HRESULT _hr = put_Name2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotStructureGeoAnalyser wrapper method implementations
//

#pragma implementation_key(3377)
inline double IRobotStructureGeoAnalyser::GetPrecision ( ) {
    double _result = 0;
    HRESULT _hr = get_Precision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3378)
inline void IRobotStructureGeoAnalyser::PutPrecision ( double ret ) {
    HRESULT _hr = put_Precision(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3379)
inline VARIANT_BOOL IRobotStructureGeoAnalyser::GetCanExtendBars ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CanExtendBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3380)
inline void IRobotStructureGeoAnalyser::PutCanExtendBars ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CanExtendBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3381)
inline VARIANT_BOOL IRobotStructureGeoAnalyser::GetCanUseRigidLinks ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CanUseRigidLinks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3382)
inline void IRobotStructureGeoAnalyser::PutCanUseRigidLinks ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CanUseRigidLinks(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3383)
inline HRESULT IRobotStructureGeoAnalyser::StartCollectInfo ( ) {
    HRESULT _hr = raw_StartCollectInfo();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3384)
inline HRESULT IRobotStructureGeoAnalyser::StopCollectInfo ( ) {
    HRESULT _hr = raw_StopCollectInfo();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3385)
inline HRESULT IRobotStructureGeoAnalyser::DefineIntersection ( long _bar1, long _bar2, enum IRobotBarIntersectRelationship _intersect_rel ) {
    HRESULT _hr = raw_DefineIntersection(_bar1, _bar2, _intersect_rel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3386)
inline HRESULT IRobotStructureGeoAnalyser::Correct ( _bstr_t _bar_sel ) {
    HRESULT _hr = raw_Correct(_bar_sel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3387)
inline HRESULT IRobotStructureGeoAnalyser::SetNodeSize ( long _node_num, double _radius ) {
    HRESULT _hr = raw_SetNodeSize(_node_num, _radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3388)
inline HRESULT IRobotStructureGeoAnalyser::SetEdgeSize ( long _obj_num, double _radius ) {
    HRESULT _hr = raw_SetEdgeSize(_obj_num, _radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3389)
inline VARIANT_BOOL IRobotStructureGeoAnalyser::GetCanEliminateIsolatedNodes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CanEliminateIsolatedNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3390)
inline void IRobotStructureGeoAnalyser::PutCanEliminateIsolatedNodes ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CanEliminateIsolatedNodes(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotProjectComponent wrapper method implementations
//

#pragma implementation_key(3391)
inline enum IRobotProjectComponentType IRobotProjectComponent::GetType ( ) {
    enum IRobotProjectComponentType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3392)
inline _bstr_t IRobotProjectComponent::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3393)
inline IDispatchPtr IRobotProjectComponent::GetData ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface IRobotProjectComponentMngr wrapper method implementations
//

#pragma implementation_key(3394)
inline long IRobotProjectComponentMngr::GetLevelCount ( ) {
    long _result = 0;
    HRESULT _hr = get_LevelCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3395)
inline _bstr_t IRobotProjectComponentMngr::GetLevelName ( long level_idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetLevelName(level_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3396)
inline IRobotCollectionPtr IRobotProjectComponentMngr::Get ( enum IRobotProjectComponentType cmpnt_type, _bstr_t level_name ) {
    struct IRobotCollection * _result = 0;
    HRESULT _hr = raw_Get(cmpnt_type, level_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCollectionPtr(_result, false);
}

#pragma implementation_key(3397)
inline IRobotProjectComponentPtr IRobotProjectComponentMngr::Create ( enum IRobotProjectComponentType cmpnt_type, _bstr_t cmpnt_name, _bstr_t lavel_name ) {
    struct IRobotProjectComponent * _result = 0;
    HRESULT _hr = raw_Create(cmpnt_type, cmpnt_name, lavel_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotProjectComponentPtr(_result, false);
}

#pragma implementation_key(3398)
inline _bstr_t IRobotProjectComponentMngr::GetStdLevelName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StdLevelName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IRobotFileInsertParams wrapper method implementations
//

#pragma implementation_key(3399)
inline long IRobotFileInsertParams::GetReferenceNode ( ) {
    long _result = 0;
    HRESULT _hr = get_ReferenceNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3400)
inline void IRobotFileInsertParams::PutReferenceNode ( long ret ) {
    HRESULT _hr = put_ReferenceNode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3401)
inline double IRobotFileInsertParams::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3402)
inline void IRobotFileInsertParams::PutScaleFactor ( double ret ) {
    HRESULT _hr = put_ScaleFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3403)
inline long IRobotFileInsertParams::GetAsObject ( ) {
    long _result = 0;
    HRESULT _hr = get_AsObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3404)
inline void IRobotFileInsertParams::PutAsObject ( long ret ) {
    HRESULT _hr = put_AsObject(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3405)
inline HRESULT IRobotFileInsertParams::SetInsertionPoint ( double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetInsertionPoint(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3406)
inline HRESULT IRobotFileInsertParams::GetInsertionPoint ( double * _x, double * _y, double * _z ) {
    HRESULT _hr = raw_GetInsertionPoint(_x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3407)
inline HRESULT IRobotFileInsertParams::SetRotation ( double _alpha, double _beta, double _gamma ) {
    HRESULT _hr = raw_SetRotation(_alpha, _beta, _gamma);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3408)
inline HRESULT IRobotFileInsertParams::GetRotation ( double * _alpha, double * _beta, double * _gamma ) {
    HRESULT _hr = raw_GetRotation(_alpha, _beta, _gamma);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface _IRobotProjectEvents wrapper method implementations
//

#pragma implementation_key(3409)
inline HRESULT _IRobotProjectEvents::OnSave ( _bstr_t _file_path, VARIANT_BOOL _is_modified ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0008\x000b", (BSTR)_file_path, _is_modified);
    return _result;
}

#pragma implementation_key(3410)
inline HRESULT _IRobotProjectEvents::OnClose ( VARIANT_BOOL _is_modified ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x000b", _is_modified);
    return _result;
}

//
// interface IRobotPrintable wrapper method implementations
//

#pragma implementation_key(3411)
inline _bstr_t IRobotPrintable::GetTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Title(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3412)
inline void IRobotPrintable::PutTitle ( _bstr_t __MIDL__IRobotPrintable0000 ) {
    HRESULT _hr = put_Title(__MIDL__IRobotPrintable0000);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3413)
inline long IRobotPrintable::GetStartFromNewPage ( ) {
    long _result = 0;
    HRESULT _hr = get_StartFromNewPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3414)
inline void IRobotPrintable::PutStartFromNewPage ( long __MIDL__IRobotPrintable0002 ) {
    HRESULT _hr = put_StartFromNewPage(__MIDL__IRobotPrintable0002);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3415)
inline VARIANT_BOOL IRobotPrintable::SaveToFile ( _bstr_t file_path, enum IRobotOutputFileFormat file_format ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SaveToFile(file_path, file_format, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3416)
inline _bstr_t IRobotPrintable::GetComment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Comment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3417)
inline void IRobotPrintable::PutComment ( _bstr_t ret ) {
    HRESULT _hr = put_Comment(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3418)
inline VARIANT_BOOL IRobotPrintable::GetIncludeDateTime ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeDateTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3419)
inline void IRobotPrintable::PutIncludeDateTime ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeDateTime(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotTableConfig wrapper method implementations
//

#pragma implementation_key(3420)
inline HRESULT IRobotTableConfig::SetFlag ( enum IRobotTableConfigFlag _flag, long _set ) {
    HRESULT _hr = raw_SetFlag(_flag, _set);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3421)
inline HRESULT IRobotTableConfig::SetValue ( enum IRobotTableConfigValue value_id, double val ) {
    HRESULT _hr = raw_SetValue(value_id, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotTableScreenCaptureParams wrapper method implementations
//

#pragma implementation_key(3422)
inline _bstr_t IRobotTableScreenCaptureParams::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3423)
inline void IRobotTableScreenCaptureParams::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3424)
inline VARIANT_BOOL IRobotTableScreenCaptureParams::GetAddInfoTab ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AddInfoTab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3425)
inline void IRobotTableScreenCaptureParams::PutAddInfoTab ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AddInfoTab(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3426)
inline enum IRobotTableScreenCaptureUpdateType IRobotTableScreenCaptureParams::GetUpdateType ( ) {
    enum IRobotTableScreenCaptureUpdateType _result;
    HRESULT _hr = get_UpdateType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3427)
inline void IRobotTableScreenCaptureParams::PutUpdateType ( enum IRobotTableScreenCaptureUpdateType ret ) {
    HRESULT _hr = put_UpdateType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3428)
inline _bstr_t IRobotTableScreenCaptureParams::GetComment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Comment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3429)
inline void IRobotTableScreenCaptureParams::PutComment ( _bstr_t ret ) {
    HRESULT _hr = put_Comment(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3430)
inline VARIANT_BOOL IRobotTableScreenCaptureParams::GetIncludeDateAndTime ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeDateAndTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3431)
inline void IRobotTableScreenCaptureParams::PutIncludeDateAndTime ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeDateAndTime(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3432)
inline VARIANT_BOOL IRobotTableScreenCaptureParams::GetAdjustColumnWidth ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AdjustColumnWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3433)
inline void IRobotTableScreenCaptureParams::PutAdjustColumnWidth ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AdjustColumnWidth(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotTable wrapper method implementations
//

#pragma implementation_key(3434)
inline long IRobotTable::GetVisible ( ) {
    long _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3435)
inline void IRobotTable::PutVisible ( long __MIDL__IRobotTable0000 ) {
    HRESULT _hr = put_Visible(__MIDL__IRobotTable0000);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3436)
inline _bstr_t IRobotTable::GetTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Title(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3437)
inline void IRobotTable::PutTitle ( _bstr_t __MIDL__IRobotTable0002 ) {
    HRESULT _hr = put_Title(__MIDL__IRobotTable0002);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3438)
inline IRobotPrintablePtr IRobotTable::GetPrintable ( ) {
    struct IRobotPrintable * _result = 0;
    HRESULT _hr = get_Printable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPrintablePtr(_result, false);
}

#pragma implementation_key(3439)
inline IRobotTableConfigPtr IRobotTable::GetConfiguration ( ) {
    struct IRobotTableConfig * _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTableConfigPtr(_result, false);
}

#pragma implementation_key(3440)
inline HRESULT IRobotTable::AddColumn ( int data_type ) {
    HRESULT _hr = raw_AddColumn(data_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3441)
inline HRESULT IRobotTable::Select ( enum IRobotSelectionType sel_type, _bstr_t sel_text ) {
    HRESULT _hr = raw_Select(sel_type, sel_text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3442)
inline HRESULT IRobotTable::StoreSelection ( enum IRobotSelectionType sel_type, _bstr_t sel_text ) {
    HRESULT _hr = raw_StoreSelection(sel_type, sel_text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3443)
inline HRESULT IRobotTable::SelectFromStore ( enum IRobotSelectionType sel_type ) {
    HRESULT _hr = raw_SelectFromStore(sel_type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3444)
inline HRESULT IRobotTable::SelectAllFromStore ( ) {
    HRESULT _hr = raw_SelectAllFromStore();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3445)
inline HRESULT IRobotTable::SelectMode ( enum IRobotModeSelectionType __MIDL__IRobotTable0004, _bstr_t __MIDL__IRobotTable0005, enum IRobotModeCombinationType __MIDL__IRobotTable0006 ) {
    HRESULT _hr = raw_SelectMode(__MIDL__IRobotTable0004, __MIDL__IRobotTable0005, __MIDL__IRobotTable0006);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3446)
inline HRESULT IRobotTable::StoreModeSelection ( enum IRobotModeSelectionType __MIDL__IRobotTable0007, _bstr_t __MIDL__IRobotTable0008, enum IRobotModeCombinationType __MIDL__IRobotTable0009 ) {
    HRESULT _hr = raw_StoreModeSelection(__MIDL__IRobotTable0007, __MIDL__IRobotTable0008, __MIDL__IRobotTable0009);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3447)
inline HRESULT IRobotTable::SelectModeFromStore ( ) {
    HRESULT _hr = raw_SelectModeFromStore();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3448)
inline IRobotWindowPtr IRobotTable::GetWindow ( ) {
    struct IRobotWindow * _result = 0;
    HRESULT _hr = get_Window(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotWindowPtr(_result, false);
}

#pragma implementation_key(3449)
inline VARIANT_BOOL IRobotTable::GetUserControl ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UserControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3450)
inline void IRobotTable::PutUserControl ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UserControl(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3451)
inline long IRobotTable::GetColCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ColCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3452)
inline long IRobotTable::GetRowCount ( ) {
    long _result = 0;
    HRESULT _hr = get_RowCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3453)
inline HRESULT IRobotTable::SetColWidth ( long _col_idx, long _col_width ) {
    HRESULT _hr = raw_SetColWidth(_col_idx, _col_width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3454)
inline long IRobotTable::GetColWidth ( long _col_idx ) {
    long _result = 0;
    HRESULT _hr = raw_GetColWidth(_col_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3455)
inline HRESULT IRobotTable::SetRowHeight ( long _row_idx, long _row_height ) {
    HRESULT _hr = raw_SetRowHeight(_row_idx, _row_height);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3456)
inline long IRobotTable::GetRowHeight ( long _row_idx ) {
    long _result = 0;
    HRESULT _hr = raw_GetRowHeight(_row_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3457)
inline enum IRobotTableDataType IRobotTable::GetDataType ( long _col_idx ) {
    enum IRobotTableDataType _result;
    HRESULT _hr = raw_GetDataType(_col_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3458)
inline HRESULT IRobotTable::MakeScreenCapture ( struct IRobotTableScreenCaptureParams * _sc_params ) {
    HRESULT _hr = raw_MakeScreenCapture(_sc_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotViewDisplayParams wrapper method implementations
//

#pragma implementation_key(3459)
inline enum IRobotViewHiddenLinesDisplayType IRobotViewDisplayParams::GetHiddenLines ( ) {
    enum IRobotViewHiddenLinesDisplayType _result;
    HRESULT _hr = get_HiddenLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3460)
inline void IRobotViewDisplayParams::PutHiddenLines ( enum IRobotViewHiddenLinesDisplayType ret ) {
    HRESULT _hr = put_HiddenLines(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3461)
inline short IRobotViewDisplayParams::GetSymbolSize ( ) {
    short _result = 0;
    HRESULT _hr = get_SymbolSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3462)
inline void IRobotViewDisplayParams::PutSymbolSize ( short ret ) {
    HRESULT _hr = put_SymbolSize(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3463)
inline HRESULT IRobotViewDisplayParams::Set ( enum IRobotViewDisplayAttributes v_attrib, VARIANT_BOOL on_off ) {
    HRESULT _hr = raw_Set(v_attrib, on_off);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3464)
inline VARIANT_BOOL IRobotViewDisplayParams::IsOn ( enum IRobotViewDisplayAttributes v_attrib ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsOn(v_attrib, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotViewDiagramParams wrapper method implementations
//

#pragma implementation_key(3465)
inline VARIANT_BOOL IRobotViewDiagramParams::GetReactionsInLocalSystem ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReactionsInLocalSystem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3466)
inline void IRobotViewDiagramParams::PutReactionsInLocalSystem ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ReactionsInLocalSystem(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3467)
inline enum IRobotViewDiagramDescriptionType IRobotViewDiagramParams::GetDescriptions ( ) {
    enum IRobotViewDiagramDescriptionType _result;
    HRESULT _hr = get_Descriptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3468)
inline void IRobotViewDiagramParams::PutDescriptions ( enum IRobotViewDiagramDescriptionType ret ) {
    HRESULT _hr = put_Descriptions(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3469)
inline enum IRobotViewDiagramSignDifferType IRobotViewDiagramParams::GetPositiveNegative ( ) {
    enum IRobotViewDiagramSignDifferType _result;
    HRESULT _hr = get_PositiveNegative(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3470)
inline void IRobotViewDiagramParams::PutPositiveNegative ( enum IRobotViewDiagramSignDifferType ret ) {
    HRESULT _hr = put_PositiveNegative(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3471)
inline enum IRobotViewDiagramFillingType IRobotViewDiagramParams::GetFilling ( ) {
    enum IRobotViewDiagramFillingType _result;
    HRESULT _hr = get_Filling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3472)
inline void IRobotViewDiagramParams::PutFilling ( enum IRobotViewDiagramFillingType ret ) {
    HRESULT _hr = put_Filling(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3473)
inline HRESULT IRobotViewDiagramParams::Set ( enum IRobotViewDiagramResultType res_type, VARIANT_BOOL on_off ) {
    HRESULT _hr = raw_Set(res_type, on_off);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3474)
inline VARIANT_BOOL IRobotViewDiagramParams::IsOn ( enum IRobotViewDiagramResultType res_type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsOn(res_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3475)
inline HRESULT IRobotViewDiagramParams::SetScale ( enum IRobotViewDiagramResultType res_type, double scale_for_1_cm ) {
    HRESULT _hr = raw_SetScale(res_type, scale_for_1_cm);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3476)
inline double IRobotViewDiagramParams::GetScale ( enum IRobotViewDiagramResultType res_type ) {
    double _result = 0;
    HRESULT _hr = raw_GetScale(res_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3477)
inline HRESULT IRobotViewDiagramParams::SetColor ( enum IRobotViewDiagramResultType res_type, long _color ) {
    HRESULT _hr = raw_SetColor(res_type, _color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3478)
inline long IRobotViewDiagramParams::GetColor ( enum IRobotViewDiagramResultType res_type ) {
    long _result = 0;
    HRESULT _hr = raw_GetColor(res_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3479)
inline enum IRobotViewDiagramValueType IRobotViewDiagramParams::GetValues ( ) {
    enum IRobotViewDiagramValueType _result;
    HRESULT _hr = get_Values(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3480)
inline void IRobotViewDiagramParams::PutValues ( enum IRobotViewDiagramValueType ret ) {
    HRESULT _hr = put_Values(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotViewBarMapParams wrapper method implementations
//

#pragma implementation_key(3481)
inline enum IRobotViewBarMapResultType IRobotViewBarMapParams::GetCurrentResult ( ) {
    enum IRobotViewBarMapResultType _result;
    HRESULT _hr = get_CurrentResult(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3482)
inline void IRobotViewBarMapParams::PutCurrentResult ( enum IRobotViewBarMapResultType ret ) {
    HRESULT _hr = put_CurrentResult(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3483)
inline VARIANT_BOOL IRobotViewBarMapParams::GetStructureDeformation ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_StructureDeformation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3484)
inline void IRobotViewBarMapParams::PutStructureDeformation ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_StructureDeformation(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3485)
inline enum IRobotViewDiagramDescriptionType IRobotViewBarMapParams::GetDescriptions ( ) {
    enum IRobotViewDiagramDescriptionType _result;
    HRESULT _hr = get_Descriptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3486)
inline void IRobotViewBarMapParams::PutDescriptions ( enum IRobotViewDiagramDescriptionType ret ) {
    HRESULT _hr = put_Descriptions(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3487)
inline double IRobotViewBarMapParams::GetMapThicknessCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_MapThicknessCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3488)
inline void IRobotViewBarMapParams::PutMapThicknessCoeff ( double ret ) {
    HRESULT _hr = put_MapThicknessCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotViewFeMapParams wrapper method implementations
//

#pragma implementation_key(3489)
inline enum IRobotViewFeMapResultType IRobotViewFeMapParams::GetCurrentResult ( ) {
    enum IRobotViewFeMapResultType _result;
    HRESULT _hr = get_CurrentResult(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3490)
inline void IRobotViewFeMapParams::PutCurrentResult ( enum IRobotViewFeMapResultType ret ) {
    HRESULT _hr = put_CurrentResult(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3491)
inline enum IRobotViewFeMapLocalSystemType IRobotViewFeMapParams::GetDirection ( ) {
    enum IRobotViewFeMapLocalSystemType _result;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3492)
inline void IRobotViewFeMapParams::PutDirection ( enum IRobotViewFeMapLocalSystemType ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3493)
inline IRobotGeoPoint3DPtr IRobotViewFeMapParams::GetDirectionData ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_DirectionData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3494)
inline enum IRobotViewFeMapCrossPresentationType IRobotViewFeMapParams::GetCrossPresentation ( ) {
    enum IRobotViewFeMapCrossPresentationType _result;
    HRESULT _hr = get_CrossPresentation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3495)
inline void IRobotViewFeMapParams::PutCrossPresentation ( enum IRobotViewFeMapCrossPresentationType ret ) {
    HRESULT _hr = put_CrossPresentation(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3496)
inline VARIANT_BOOL IRobotViewFeMapParams::GetDeformationActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DeformationActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3497)
inline void IRobotViewFeMapParams::PutDeformationActive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DeformationActive(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3498)
inline VARIANT_BOOL IRobotViewFeMapParams::GetDeformationConstScale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DeformationConstScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3499)
inline void IRobotViewFeMapParams::PutDeformationConstScale ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_DeformationConstScale(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3500)
inline double IRobotViewFeMapParams::GetMapScale ( ) {
    double _result = 0;
    HRESULT _hr = get_MapScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3501)
inline void IRobotViewFeMapParams::PutMapScale ( double ret ) {
    HRESULT _hr = put_MapScale(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3502)
inline enum IRobotViewFeMapLayerType IRobotViewFeMapParams::GetLayer ( ) {
    enum IRobotViewFeMapLayerType _result;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3503)
inline void IRobotViewFeMapParams::PutLayer ( enum IRobotViewFeMapLayerType ret ) {
    HRESULT _hr = put_Layer(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3504)
inline double IRobotViewFeMapParams::GetLayerArbitraryVal ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerArbitraryVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3505)
inline void IRobotViewFeMapParams::PutLayerArbitraryVal ( double ret ) {
    HRESULT _hr = put_LayerArbitraryVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3506)
inline enum IRobotViewFeMapSmoothingType IRobotViewFeMapParams::GetSmoothing ( ) {
    enum IRobotViewFeMapSmoothingType _result;
    HRESULT _hr = get_Smoothing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3507)
inline void IRobotViewFeMapParams::PutSmoothing ( enum IRobotViewFeMapSmoothingType ret ) {
    HRESULT _hr = put_Smoothing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3508)
inline VARIANT_BOOL IRobotViewFeMapParams::GetIsolines ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Isolines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3509)
inline void IRobotViewFeMapParams::PutIsolines ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Isolines(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3510)
inline VARIANT_BOOL IRobotViewFeMapParams::GetWithDescription ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WithDescription(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3511)
inline void IRobotViewFeMapParams::PutWithDescription ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WithDescription(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3512)
inline long IRobotViewFeMapParams::GetDirectionNode ( ) {
    long _result = 0;
    HRESULT _hr = get_DirectionNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3513)
inline void IRobotViewFeMapParams::PutDirectionNode ( long ret ) {
    HRESULT _hr = put_DirectionNode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3514)
inline HRESULT IRobotViewFeMapParams::SetDirectionData ( struct IRobotGeoPoint3D * _dir_data ) {
    HRESULT _hr = raw_SetDirectionData(_dir_data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotView wrapper method implementations
//

#pragma implementation_key(3515)
inline enum IRobotViewType IRobotView::GetType ( ) {
    enum IRobotViewType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3516)
inline long IRobotView::GetVisible ( ) {
    long _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3517)
inline void IRobotView::PutVisible ( long ret ) {
    HRESULT _hr = put_Visible(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3518)
inline _bstr_t IRobotView::GetTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Title(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3519)
inline void IRobotView::PutTitle ( _bstr_t ret ) {
    HRESULT _hr = put_Title(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3520)
inline IRobotPrintablePtr IRobotView::GetPrintable ( ) {
    struct IRobotPrintable * _result = 0;
    HRESULT _hr = get_Printable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPrintablePtr(_result, false);
}

#pragma implementation_key(3521)
inline IRobotMultiSelectionPtr IRobotView::GetSelection ( ) {
    struct IRobotMultiSelection * _result = 0;
    HRESULT _hr = get_Selection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMultiSelectionPtr(_result, false);
}

#pragma implementation_key(3522)
inline enum IRobotViewProjection IRobotView::GetProjection ( ) {
    enum IRobotViewProjection _result;
    HRESULT _hr = get_Projection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3523)
inline void IRobotView::PutProjection ( enum IRobotViewProjection ret ) {
    HRESULT _hr = put_Projection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3524)
inline HRESULT IRobotView::Redraw ( long force_init_zoom ) {
    HRESULT _hr = raw_Redraw(force_init_zoom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3525)
inline HRESULT IRobotView::GetSize ( double * width_in_mm, double * height_in_mm ) {
    HRESULT _hr = raw_GetSize(width_in_mm, height_in_mm);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3526)
inline HRESULT IRobotView::SetSize ( double width_in_mm, double height_in_mm ) {
    HRESULT _hr = raw_SetSize(width_in_mm, height_in_mm);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3527)
inline HRESULT IRobotView::GetZoom ( double * left, double * top, double * right, double * bottom ) {
    HRESULT _hr = raw_GetZoom(left, top, right, bottom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3528)
inline HRESULT IRobotView::SetZoom ( double left, double top, double right, double bottom ) {
    HRESULT _hr = raw_SetZoom(left, top, right, bottom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3529)
inline int IRobotView::GetSymbolMagnification ( ) {
    int _result = 0;
    HRESULT _hr = get_SymbolMagnification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3530)
inline void IRobotView::PutSymbolMagnification ( int ret ) {
    HRESULT _hr = put_SymbolMagnification(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3531)
inline int IRobotView::GetDiagramMagnification ( ) {
    int _result = 0;
    HRESULT _hr = get_DiagramMagnification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3532)
inline void IRobotView::PutDiagramMagnification ( int ret ) {
    HRESULT _hr = put_DiagramMagnification(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3533)
inline long IRobotView::GetGridVisible ( ) {
    long _result = 0;
    HRESULT _hr = get_GridVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3534)
inline void IRobotView::PutGridVisible ( long ret ) {
    HRESULT _hr = put_GridVisible(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3535)
inline long IRobotView::GetRulerVisible ( ) {
    long _result = 0;
    HRESULT _hr = get_RulerVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3536)
inline void IRobotView::PutRulerVisible ( long ret ) {
    HRESULT _hr = put_RulerVisible(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3537)
inline long IRobotView::GetStructAxisVisible ( ) {
    long _result = 0;
    HRESULT _hr = get_StructAxisVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3538)
inline void IRobotView::PutStructAxisVisible ( long ret ) {
    HRESULT _hr = put_StructAxisVisible(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3539)
inline enum IRobotViewVisibilityStatusValue IRobotView::GetVisibilityStatus ( enum IRobotViewVisibilityStatusType status_id ) {
    enum IRobotViewVisibilityStatusValue _result;
    HRESULT _hr = raw_GetVisibilityStatus(status_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3540)
inline HRESULT IRobotView::SetVisibilityStatus ( enum IRobotViewVisibilityStatusType status_id, enum IRobotViewVisibilityStatusValue status_value ) {
    HRESULT _hr = raw_SetVisibilityStatus(status_id, status_value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3541)
inline double IRobotView::GetScale ( int scale_id ) {
    double _result = 0;
    HRESULT _hr = raw_GetScale(scale_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3542)
inline HRESULT IRobotView::SetScale ( int scale_id, double val ) {
    HRESULT _hr = raw_SetScale(scale_id, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3543)
inline long IRobotView::IsLocal ( ) {
    long _result = 0;
    HRESULT _hr = raw_IsLocal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3544)
inline HRESULT IRobotView::SetGlobal ( ) {
    HRESULT _hr = raw_SetGlobal();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3545)
inline long IRobotView::SetLocal ( struct IRobotGeoPoint3D * _p1, struct IRobotGeoPoint3D * _p2, struct IRobotGeoPoint3D * _p3 ) {
    long _result = 0;
    HRESULT _hr = raw_SetLocal(_p1, _p2, _p3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3546)
inline IRobotGeoPoint3DPtr IRobotView::GetRotationPoint ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = raw_GetRotationPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3547)
inline HRESULT IRobotView::SetRotationPoint ( struct IRobotGeoPoint3D * rot_point ) {
    HRESULT _hr = raw_SetRotationPoint(rot_point);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3548)
inline IRobotGeoPoint3DPtr IRobotView::GetWorkPoint ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = raw_GetWorkPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(3549)
inline HRESULT IRobotView::SetWorkPoint ( struct IRobotGeoPoint3D * Point ) {
    HRESULT _hr = raw_SetWorkPoint(Point);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3550)
inline HRESULT IRobotView::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3551)
inline HRESULT IRobotView::Rotate ( enum IRobotGeoCoordinateAxis axis, double _angle ) {
    HRESULT _hr = raw_Rotate(axis, _angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3552)
inline IRobotViewDisplayParamsPtr IRobotView::GetParamsDisplay ( ) {
    struct IRobotViewDisplayParams * _result = 0;
    HRESULT _hr = get_ParamsDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewDisplayParamsPtr(_result, false);
}

#pragma implementation_key(3553)
inline IRobotViewDiagramParamsPtr IRobotView::GetParamsDiagram ( ) {
    struct IRobotViewDiagramParams * _result = 0;
    HRESULT _hr = get_ParamsDiagram(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewDiagramParamsPtr(_result, false);
}

#pragma implementation_key(3554)
inline IRobotViewBarMapParamsPtr IRobotView::GetParamsBarMap ( ) {
    struct IRobotViewBarMapParams * _result = 0;
    HRESULT _hr = get_ParamsBarMap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewBarMapParamsPtr(_result, false);
}

#pragma implementation_key(3555)
inline IRobotViewFeMapParamsPtr IRobotView::GetParamsFeMap ( ) {
    struct IRobotViewFeMapParams * _result = 0;
    HRESULT _hr = get_ParamsFeMap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewFeMapParamsPtr(_result, false);
}

//
// interface IRobotRtfView wrapper method implementations
//

#pragma implementation_key(3556)
inline IRobotPrintablePtr IRobotRtfView::GetPrintable ( ) {
    struct IRobotPrintable * _result = 0;
    HRESULT _hr = get_Printable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPrintablePtr(_result, false);
}

#pragma implementation_key(3557)
inline long IRobotRtfView::LoadFromFile ( _bstr_t file_path ) {
    long _result = 0;
    HRESULT _hr = raw_LoadFromFile(file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3558)
inline long IRobotRtfView::SaveToFile ( _bstr_t file_path, long as_template ) {
    long _result = 0;
    HRESULT _hr = raw_SaveToFile(file_path, as_template, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3559)
inline long IRobotRtfView::AppendFromFile ( _bstr_t file_path ) {
    long _result = 0;
    HRESULT _hr = raw_AppendFromFile(file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3560)
inline HRESULT IRobotRtfView::Evaluate ( ) {
    HRESULT _hr = raw_Evaluate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotViewPanelCutParams wrapper method implementations
//

#pragma implementation_key(3561)
inline enum IRobotViewFeMapResultType IRobotViewPanelCutParams::GetCurrentResult ( ) {
    enum IRobotViewFeMapResultType _result;
    HRESULT _hr = get_CurrentResult(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3562)
inline void IRobotViewPanelCutParams::PutCurrentResult ( enum IRobotViewFeMapResultType ret ) {
    HRESULT _hr = put_CurrentResult(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3563)
inline enum IRobotViewReinforcementResultType IRobotViewPanelCutParams::GetCurrentReinforcementResult ( ) {
    enum IRobotViewReinforcementResultType _result;
    HRESULT _hr = get_CurrentReinforcementResult(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3564)
inline void IRobotViewPanelCutParams::PutCurrentReinforcementResult ( enum IRobotViewReinforcementResultType ret ) {
    HRESULT _hr = put_CurrentReinforcementResult(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3565)
inline enum IRobotViewDiagramDescriptionType IRobotViewPanelCutParams::GetDescritpions ( ) {
    enum IRobotViewDiagramDescriptionType _result;
    HRESULT _hr = get_Descritpions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3566)
inline void IRobotViewPanelCutParams::PutDescritpions ( enum IRobotViewDiagramDescriptionType ret ) {
    HRESULT _hr = put_Descritpions(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3567)
inline VARIANT_BOOL IRobotViewPanelCutParams::GetIntegralValue ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IntegralValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3568)
inline void IRobotViewPanelCutParams::PutIntegralValue ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IntegralValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3569)
inline enum IRobotViewDiagramFillingType IRobotViewPanelCutParams::GetFilling ( ) {
    enum IRobotViewDiagramFillingType _result;
    HRESULT _hr = get_Filling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3570)
inline void IRobotViewPanelCutParams::PutFilling ( enum IRobotViewDiagramFillingType ret ) {
    HRESULT _hr = put_Filling(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3571)
inline enum IRobotViewDiagramPositionType IRobotViewPanelCutParams::GetPosition ( ) {
    enum IRobotViewDiagramPositionType _result;
    HRESULT _hr = get_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3572)
inline void IRobotViewPanelCutParams::PutPosition ( enum IRobotViewDiagramPositionType ret ) {
    HRESULT _hr = put_Position(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3573)
inline enum IRobotViewFeMapSmoothingType IRobotViewPanelCutParams::GetSmoothing ( ) {
    enum IRobotViewFeMapSmoothingType _result;
    HRESULT _hr = get_Smoothing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3574)
inline void IRobotViewPanelCutParams::PutSmoothing ( enum IRobotViewFeMapSmoothingType ret ) {
    HRESULT _hr = put_Smoothing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3575)
inline enum IRobotViewFeMapLayerType IRobotViewPanelCutParams::GetLayer ( ) {
    enum IRobotViewFeMapLayerType _result;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3576)
inline void IRobotViewPanelCutParams::PutLayer ( enum IRobotViewFeMapLayerType ret ) {
    HRESULT _hr = put_Layer(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3577)
inline double IRobotViewPanelCutParams::GetLayerArbritraryValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerArbritraryValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3578)
inline void IRobotViewPanelCutParams::PutLayerArbritraryValue ( double ret ) {
    HRESULT _hr = put_LayerArbritraryValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotView2 wrapper method implementations
//

#pragma implementation_key(3579)
inline IRobotWindowPtr IRobotView2::GetWindow ( ) {
    struct IRobotWindow * _result = 0;
    HRESULT _hr = get_Window(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotWindowPtr(_result, false);
}

#pragma implementation_key(3580)
inline IRobotViewPanelCutParamsPtr IRobotView2::GetParamsPanelCut ( ) {
    struct IRobotViewPanelCutParams * _result = 0;
    HRESULT _hr = get_ParamsPanelCut(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewPanelCutParamsPtr(_result, false);
}

#pragma implementation_key(3581)
inline VARIANT_BOOL IRobotView2::GetUserControl ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UserControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3582)
inline void IRobotView2::PutUserControl ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UserControl(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotTableFrame wrapper method implementations
//

#pragma implementation_key(3583)
inline long IRobotTableFrame::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3584)
inline IRobotWindowPtr IRobotTableFrame::GetWindow ( ) {
    struct IRobotWindow * _result = 0;
    HRESULT _hr = get_Window(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotWindowPtr(_result, false);
}

#pragma implementation_key(3585)
inline long IRobotTableFrame::GetCurrent ( ) {
    long _result = 0;
    HRESULT _hr = get_Current(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3586)
inline void IRobotTableFrame::PutCurrent ( long ret ) {
    HRESULT _hr = put_Current(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3587)
inline IRobotTablePtr IRobotTableFrame::Get ( long _idx ) {
    struct IRobotTable * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTablePtr(_result, false);
}

#pragma implementation_key(3588)
inline _bstr_t IRobotTableFrame::GetName ( long _table_idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(_table_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3589)
inline HRESULT IRobotTableFrame::SetName ( long _table_idx, _bstr_t _name ) {
    HRESULT _hr = raw_SetName(_table_idx, _name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotViewMngr wrapper method implementations
//

#pragma implementation_key(3590)
inline IRobotTablePtr IRobotViewMngr::CreateTable ( enum IRobotTableType tt, enum IRobotTableDataType tdt ) {
    struct IRobotTable * _result = 0;
    HRESULT _hr = raw_CreateTable(tt, tdt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTablePtr(_result, false);
}

#pragma implementation_key(3591)
inline IRobotViewPtr IRobotViewMngr::CreateView ( enum IRobotViewType vt ) {
    struct IRobotView * _result = 0;
    HRESULT _hr = raw_CreateView(vt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewPtr(_result, false);
}

#pragma implementation_key(3592)
inline HRESULT IRobotViewMngr::Refresh ( ) {
    HRESULT _hr = raw_Refresh();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3593)
inline IRobotRtfViewPtr IRobotViewMngr::CreateRtfView ( ) {
    struct IRobotRtfView * _result = 0;
    HRESULT _hr = raw_CreateRtfView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotRtfViewPtr(_result, false);
}

#pragma implementation_key(3594)
inline IDispatchPtr IRobotViewMngr::CreateFromSc ( _bstr_t sc_name ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_CreateFromSc(sc_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3595)
inline enum IRobotLayoutId IRobotViewMngr::GetCurrentLayout ( ) {
    enum IRobotLayoutId _result;
    HRESULT _hr = get_CurrentLayout(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3596)
inline void IRobotViewMngr::PutCurrentLayout ( enum IRobotLayoutId ret ) {
    HRESULT _hr = put_CurrentLayout(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3597)
inline long IRobotViewMngr::GetViewCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ViewCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3598)
inline long IRobotViewMngr::GetTableCount ( ) {
    long _result = 0;
    HRESULT _hr = get_TableCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3599)
inline IRobotView2Ptr IRobotViewMngr::GetView ( long _view_idx ) {
    struct IRobotView2 * _result = 0;
    HRESULT _hr = raw_GetView(_view_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotView2Ptr(_result, false);
}

#pragma implementation_key(3600)
inline IRobotTableFramePtr IRobotViewMngr::GetTable ( long _table_idx ) {
    struct IRobotTableFrame * _result = 0;
    HRESULT _hr = raw_GetTable(_table_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotTableFramePtr(_result, false);
}

#pragma implementation_key(3601)
inline VARIANT_BOOL IRobotViewMngr::GetRecycleViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RecycleViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3602)
inline void IRobotViewMngr::PutRecycleViews ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RecycleViews(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3603)
inline VARIANT_BOOL IRobotViewMngr::GetNewViewAsTab ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NewViewAsTab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3604)
inline void IRobotViewMngr::PutNewViewAsTab ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_NewViewAsTab(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3605)
inline _variant_t IRobotViewMngr::ShowDialog ( enum IRobotDialogId _dlg_id, long _parent_wnd, VARIANT_BOOL _modal ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_ShowDialog(_dlg_id, _parent_wnd, _modal, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

//
// interface IRobotVariableMngrExtension wrapper method implementations
//

#pragma implementation_key(3606)
inline VARIANT_BOOL IRobotVariableMngrExtension::GetValue ( _bstr_t _var_name, BSTR * _var_value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetValue(_var_name, _var_value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3607)
inline VARIANT_BOOL IRobotVariableMngrExtension::GetIndexedValue ( _bstr_t _var_name, long _cur_index, long _max_index, BSTR * _var_value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetIndexedValue(_var_name, _cur_index, _max_index, _var_value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotVariableMngr wrapper method implementations
//

#pragma implementation_key(3608)
inline long IRobotVariableMngr::Exist ( _bstr_t var_name ) {
    long _result = 0;
    HRESULT _hr = raw_Exist(var_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3609)
inline _bstr_t IRobotVariableMngr::GetValue ( _bstr_t var_name ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetValue(var_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3610)
inline HRESULT IRobotVariableMngr::SetValue ( _bstr_t var_name, _bstr_t var_value ) {
    HRESULT _hr = raw_SetValue(var_name, var_value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3611)
inline HRESULT IRobotVariableMngr::Delete ( _bstr_t var_name ) {
    HRESULT _hr = raw_Delete(var_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3612)
inline _bstr_t IRobotVariableMngr::GetPredefinedValue ( enum IRobotVariablePredefinedId var_id ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetPredefinedValue(var_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3613)
inline long IRobotVariableMngr::SetPredefinedValue ( enum IRobotVariablePredefinedId var_id, _bstr_t var_value ) {
    long _result = 0;
    HRESULT _hr = raw_SetPredefinedValue(var_id, var_value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3614)
inline HRESULT IRobotVariableMngr::AddExtension ( struct IRobotVariableMngrExtension * _ext_obj ) {
    HRESULT _hr = raw_AddExtension(_ext_obj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3615)
inline HRESULT IRobotVariableMngr::RemoveExtension ( struct IRobotVariableMngrExtension * _ext_obj ) {
    HRESULT _hr = raw_RemoveExtension(_ext_obj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotReportStdElementRtf wrapper method implementations
//

#pragma implementation_key(3616)
inline VARIANT_BOOL IRobotReportStdElementRtf::GetActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3617)
inline void IRobotReportStdElementRtf::PutActive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Active(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3618)
inline VARIANT_BOOL IRobotReportStdElementRtf::LoadFromFile ( _bstr_t _file_path ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromFile(_file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3619)
inline HRESULT IRobotReportStdElementRtf::RestoreDefaults ( ) {
    HRESULT _hr = raw_RestoreDefaults();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3620)
inline enum IRobotPageSetupFrameType IRobotReportStdElementRtf::GetFrame ( ) {
    enum IRobotPageSetupFrameType _result;
    HRESULT _hr = get_Frame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3621)
inline void IRobotReportStdElementRtf::PutFrame ( enum IRobotPageSetupFrameType ret ) {
    HRESULT _hr = put_Frame(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3622)
inline VARIANT_BOOL IRobotReportStdElementRtf::SaveToFile ( _bstr_t _fpath, enum IRobotOutputFileFormat _format ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SaveToFile(_fpath, _format, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotPageSetupTableOfContents wrapper method implementations
//

#pragma implementation_key(3623)
inline VARIANT_BOOL IRobotPageSetupTableOfContents::GetActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3624)
inline void IRobotPageSetupTableOfContents::PutActive ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Active(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3625)
inline enum IRobotPageSetupTocLocation IRobotPageSetupTableOfContents::GetLocation ( ) {
    enum IRobotPageSetupTocLocation _result;
    HRESULT _hr = get_Location(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3626)
inline void IRobotPageSetupTableOfContents::PutLocation ( enum IRobotPageSetupTocLocation ret ) {
    HRESULT _hr = put_Location(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3627)
inline VARIANT_BOOL IRobotPageSetupTableOfContents::GetIncludeTitle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeTitle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3628)
inline void IRobotPageSetupTableOfContents::PutIncludeTitle ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeTitle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotPageSetup wrapper method implementations
//

#pragma implementation_key(3629)
inline IRobotVariableMngrPtr IRobotPageSetup::GetVariables ( ) {
    struct IRobotVariableMngr * _result = 0;
    HRESULT _hr = get_Variables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotVariableMngrPtr(_result, false);
}

#pragma implementation_key(3630)
inline IRobotReportStdElementRtfPtr IRobotPageSetup::GetTitlePage ( ) {
    struct IRobotReportStdElementRtf * _result = 0;
    HRESULT _hr = get_TitlePage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReportStdElementRtfPtr(_result, false);
}

#pragma implementation_key(3631)
inline IRobotReportStdElementRtfPtr IRobotPageSetup::GetHeader ( ) {
    struct IRobotReportStdElementRtf * _result = 0;
    HRESULT _hr = get_Header(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReportStdElementRtfPtr(_result, false);
}

#pragma implementation_key(3632)
inline IRobotReportStdElementRtfPtr IRobotPageSetup::GetFooter ( ) {
    struct IRobotReportStdElementRtf * _result = 0;
    HRESULT _hr = get_Footer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReportStdElementRtfPtr(_result, false);
}

#pragma implementation_key(3633)
inline long IRobotPageSetup::GetPaperSize ( ) {
    long _result = 0;
    HRESULT _hr = get_PaperSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3634)
inline void IRobotPageSetup::PutPaperSize ( long ret ) {
    HRESULT _hr = put_PaperSize(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3635)
inline long IRobotPageSetup::GetPaperWidth ( ) {
    long _result = 0;
    HRESULT _hr = get_PaperWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3636)
inline void IRobotPageSetup::PutPaperWidth ( long ret ) {
    HRESULT _hr = put_PaperWidth(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3637)
inline long IRobotPageSetup::GetPaperHeight ( ) {
    long _result = 0;
    HRESULT _hr = get_PaperHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3638)
inline void IRobotPageSetup::PutPaperHeight ( long ret ) {
    HRESULT _hr = put_PaperHeight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3639)
inline long IRobotPageSetup::GetStartPageNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_StartPageNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3640)
inline void IRobotPageSetup::PutStartPageNumber ( long ret ) {
    HRESULT _hr = put_StartPageNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3641)
inline enum IRobotPageSetupOrientation IRobotPageSetup::GetPageOrientation ( ) {
    enum IRobotPageSetupOrientation _result;
    HRESULT _hr = get_PageOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3642)
inline void IRobotPageSetup::PutPageOrientation ( enum IRobotPageSetupOrientation ret ) {
    HRESULT _hr = put_PageOrientation(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3643)
inline double IRobotPageSetup::GetMarginTop ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3644)
inline void IRobotPageSetup::PutMarginTop ( double ret ) {
    HRESULT _hr = put_MarginTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3645)
inline double IRobotPageSetup::GetMarginLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3646)
inline void IRobotPageSetup::PutMarginLeft ( double ret ) {
    HRESULT _hr = put_MarginLeft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3647)
inline double IRobotPageSetup::GetMarginBottom ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3648)
inline void IRobotPageSetup::PutMarginBottom ( double ret ) {
    HRESULT _hr = put_MarginBottom(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3649)
inline double IRobotPageSetup::GetMarginRight ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3650)
inline void IRobotPageSetup::PutMarginRight ( double ret ) {
    HRESULT _hr = put_MarginRight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3651)
inline double IRobotPageSetup::GetGutter ( ) {
    double _result = 0;
    HRESULT _hr = get_Gutter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3652)
inline void IRobotPageSetup::PutGutter ( double ret ) {
    HRESULT _hr = put_Gutter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3653)
inline double IRobotPageSetup::GetFromEdgeHeader ( ) {
    double _result = 0;
    HRESULT _hr = get_FromEdgeHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3654)
inline void IRobotPageSetup::PutFromEdgeHeader ( double ret ) {
    HRESULT _hr = put_FromEdgeHeader(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3655)
inline double IRobotPageSetup::GetFromEdgeFooter ( ) {
    double _result = 0;
    HRESULT _hr = get_FromEdgeFooter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3656)
inline void IRobotPageSetup::PutFromEdgeFooter ( double ret ) {
    HRESULT _hr = put_FromEdgeFooter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3657)
inline enum IRobotPageSetupFrameType IRobotPageSetup::GetTextFrame ( ) {
    enum IRobotPageSetupFrameType _result;
    HRESULT _hr = get_TextFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3658)
inline void IRobotPageSetup::PutTextFrame ( enum IRobotPageSetupFrameType ret ) {
    HRESULT _hr = put_TextFrame(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3659)
inline IRobotPageSetupTableOfContentsPtr IRobotPageSetup::GetToc ( ) {
    struct IRobotPageSetupTableOfContents * _result = 0;
    HRESULT _hr = get_Toc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPageSetupTableOfContentsPtr(_result, false);
}

#pragma implementation_key(3660)
inline _bstr_t IRobotPageSetup::GetTemplateName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TemplateName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3661)
inline VARIANT_BOOL IRobotPageSetup::GetIsCurrent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCurrent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3662)
inline void IRobotPageSetup::PutIsCurrent ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsCurrent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3663)
inline long IRobotPageSetup::GetTemplateCount ( ) {
    long _result = 0;
    HRESULT _hr = get_TemplateCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3664)
inline VARIANT_BOOL IRobotPageSetup::SaveAs ( _bstr_t _template_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SaveAs(_template_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3665)
inline VARIANT_BOOL IRobotPageSetup::Load ( _bstr_t _template_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Load(_template_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3666)
inline VARIANT_BOOL IRobotPageSetup::Save ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Save(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3667)
inline _bstr_t IRobotPageSetup::GetTemplateName ( long _idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetTemplateName(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3668)
inline VARIANT_BOOL IRobotPageSetup::LoadCurrent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadCurrent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotScreenCaptureMngr wrapper method implementations
//

#pragma implementation_key(3669)
inline long IRobotScreenCaptureMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3670)
inline _bstr_t IRobotScreenCaptureMngr::Get ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3671)
inline HRESULT IRobotScreenCaptureMngr::Remove ( _bstr_t sc_name ) {
    HRESULT _hr = raw_Remove(sc_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3672)
inline long IRobotScreenCaptureMngr::Find ( _bstr_t sc_name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(sc_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotReportTemplateMngr wrapper method implementations
//

#pragma implementation_key(3673)
inline long IRobotReportTemplateMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3674)
inline _bstr_t IRobotReportTemplateMngr::Get ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3675)
inline HRESULT IRobotReportTemplateMngr::Remove ( _bstr_t tmpl_name ) {
    HRESULT _hr = raw_Remove(tmpl_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3676)
inline long IRobotReportTemplateMngr::Find ( _bstr_t tmpl_name ) {
    long _result = 0;
    HRESULT _hr = raw_Find(tmpl_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotReportItem wrapper method implementations
//

#pragma implementation_key(3677)
inline VARIANT_BOOL IRobotReportItem::GetStartFromNewPage ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_StartFromNewPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3678)
inline _bstr_t IRobotReportItem::GetTitleText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3679)
inline IRobotRtfViewPtr IRobotReportItem::GetTitle ( ) {
    struct IRobotRtfView * _result = 0;
    HRESULT _hr = get_Title(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotRtfViewPtr(_result, false);
}

#pragma implementation_key(3680)
inline VARIANT_BOOL IRobotReportItem::GetHasNoteBefore ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasNoteBefore(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3681)
inline IRobotRtfViewPtr IRobotReportItem::GetNoteBefore ( ) {
    struct IRobotRtfView * _result = 0;
    HRESULT _hr = get_NoteBefore(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotRtfViewPtr(_result, false);
}

#pragma implementation_key(3682)
inline VARIANT_BOOL IRobotReportItem::GetHasNoteAfter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasNoteAfter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3683)
inline IRobotRtfViewPtr IRobotReportItem::GetNoteAfter ( ) {
    struct IRobotRtfView * _result = 0;
    HRESULT _hr = get_NoteAfter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotRtfViewPtr(_result, false);
}

#pragma implementation_key(3684)
inline enum IRobotReportItemType IRobotReportItem::GetType ( ) {
    enum IRobotReportItemType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3685)
inline IDispatchPtr IRobotReportItem::CreateView ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_CreateView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3686)
inline _bstr_t IRobotReportItem::GetPageTemplate ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetPageTemplate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3687)
inline VARIANT_BOOL IRobotReportItem::GetIncludeDateTime ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeDateTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3688)
inline void IRobotReportItem::PutStartFromNewPage ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_StartFromNewPage(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3689)
inline VARIANT_BOOL IRobotReportItem::GetExcludeFromReport ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ExcludeFromReport(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3690)
inline void IRobotReportItem::PutExcludeFromReport ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ExcludeFromReport(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotReportItemList wrapper method implementations
//

#pragma implementation_key(3691)
inline long IRobotReportItemList::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3692)
inline IRobotReportItemPtr IRobotReportItemList::Get ( long _idx ) {
    struct IRobotReportItem * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReportItemPtr(_result, false);
}

//
// interface IRobotPrintEngine wrapper method implementations
//

#pragma implementation_key(3693)
inline HRESULT IRobotPrintEngine::ResetReport ( ) {
    HRESULT _hr = raw_ResetReport();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3694)
inline HRESULT IRobotPrintEngine::AddToReport ( struct IRobotPrintable * Printable ) {
    HRESULT _hr = raw_AddToReport(Printable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3695)
inline HRESULT IRobotPrintEngine::RemoveFromReport ( struct IRobotPrintable * Printable ) {
    HRESULT _hr = raw_RemoveFromReport(Printable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3696)
inline HRESULT IRobotPrintEngine::PreviewReport ( ) {
    HRESULT _hr = raw_PreviewReport();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3697)
inline HRESULT IRobotPrintEngine::PrintReport ( ) {
    HRESULT _hr = raw_PrintReport();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3698)
inline IRobotPageSetupPtr IRobotPrintEngine::GetPageSetup ( ) {
    struct IRobotPageSetup * _result = 0;
    HRESULT _hr = get_PageSetup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPageSetupPtr(_result, false);
}

#pragma implementation_key(3699)
inline VARIANT_BOOL IRobotPrintEngine::SaveReportToFile ( _bstr_t file_path, enum IRobotOutputFileFormat file_format ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SaveReportToFile(file_path, file_format, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3700)
inline VARIANT_BOOL IRobotPrintEngine::AddTemplateToReport ( _bstr_t tmpl_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddTemplateToReport(tmpl_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3701)
inline HRESULT IRobotPrintEngine::SaveReportToTemplate ( _bstr_t tmpl_name ) {
    HRESULT _hr = raw_SaveReportToTemplate(tmpl_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3702)
inline VARIANT_BOOL IRobotPrintEngine::AddScToReport ( _bstr_t sc_name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddScToReport(sc_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3703)
inline HRESULT IRobotPrintEngine::RemoveScFromReport ( _bstr_t sc_name ) {
    HRESULT _hr = raw_RemoveScFromReport(sc_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3704)
inline IRobotScreenCaptureMngrPtr IRobotPrintEngine::GetScreenCaptures ( ) {
    struct IRobotScreenCaptureMngr * _result = 0;
    HRESULT _hr = get_ScreenCaptures(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotScreenCaptureMngrPtr(_result, false);
}

#pragma implementation_key(3705)
inline IRobotReportTemplateMngrPtr IRobotPrintEngine::GetReportTemplates ( ) {
    struct IRobotReportTemplateMngr * _result = 0;
    HRESULT _hr = get_ReportTemplates(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReportTemplateMngrPtr(_result, false);
}

#pragma implementation_key(3706)
inline IRobotReportItemListPtr IRobotPrintEngine::GetOrganizerItems ( ) {
    struct IRobotReportItemList * _result = 0;
    HRESULT _hr = get_OrganizerItems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotReportItemListPtr(_result, false);
}

#pragma implementation_key(3707)
inline HRESULT IRobotPrintEngine::CreateReportFromOrganizer ( ) {
    HRESULT _hr = raw_CreateReportFromOrganizer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3708)
inline HRESULT IRobotPrintEngine::SaveReportToOrganizer ( ) {
    HRESULT _hr = raw_SaveReportToOrganizer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3709)
inline HRESULT IRobotPrintEngine::ExternalPreviewReport ( enum IRobotExternalPreviewFormat _format ) {
    HRESULT _hr = raw_ExternalPreviewReport(_format);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3710)
inline VARIANT_BOOL IRobotPrintEngine::GetIsWhilePreview ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsWhilePreview(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3711)
inline HRESULT IRobotPrintEngine::ClosePreview ( ) {
    HRESULT _hr = raw_ClosePreview();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRJointConnectionInfo wrapper method implementations
//

#pragma implementation_key(3712)
inline enum IRJointConnectionDefType IRJointConnectionInfo::GetDefType ( ) {
    enum IRJointConnectionDefType _result;
    HRESULT _hr = get_DefType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3713)
inline void IRJointConnectionInfo::PutDefType ( enum IRJointConnectionDefType ret ) {
    HRESULT _hr = put_DefType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3714)
inline IRobotSelectionPtr IRJointConnectionInfo::GetElements ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_Elements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(3715)
inline long IRJointConnectionInfo::GetNode ( ) {
    long _result = 0;
    HRESULT _hr = get_Node(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3716)
inline void IRJointConnectionInfo::PutNode ( long ret ) {
    HRESULT _hr = put_Node(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3717)
inline long IRJointConnectionInfo::GetNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3718)
inline void IRJointConnectionInfo::PutNumber ( long ret ) {
    HRESULT _hr = put_Number(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3719)
inline enum IRJointConnectionType IRJointConnectionInfo::GetType ( ) {
    enum IRJointConnectionType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3720)
inline void IRJointConnectionInfo::PutType ( enum IRJointConnectionType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3721)
inline long IRJointConnectionInfo::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3722)
inline long IRJointConnectionInfo::GetUserId ( ) {
    long _result = 0;
    HRESULT _hr = get_UserId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3723)
inline void IRJointConnectionInfo::PutUserId ( long ret ) {
    HRESULT _hr = put_UserId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3724)
inline _bstr_t IRJointConnectionInfo::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3725)
inline void IRJointConnectionInfo::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointConnection wrapper method implementations
//

#pragma implementation_key(3726)
inline enum IRJointWebFlangeRelativePos IRJointConnection::GetWFRelPos ( ) {
    enum IRJointWebFlangeRelativePos _result;
    HRESULT _hr = get_WFRelPos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3727)
inline void IRJointConnection::PutWFRelPos ( enum IRJointWebFlangeRelativePos ret ) {
    HRESULT _hr = put_WFRelPos(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3728)
inline enum IRJointConnectionType IRJointConnection::GetType ( ) {
    enum IRJointConnectionType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3729)
inline HRESULT IRJointConnection::SetToRobot ( struct IRJointConnectionInfo * info ) {
    HRESULT _hr = raw_SetToRobot(info);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3730)
inline HRESULT IRJointConnection::GetFromRobot ( struct IRJointConnectionInfo * info ) {
    HRESULT _hr = raw_GetFromRobot(info);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRJointLoad wrapper method implementations
//

#pragma implementation_key(3731)
inline IRobotSelectionPtr IRJointLoad::GetCases ( ) {
    struct IRobotSelection * _result = 0;
    HRESULT _hr = get_Cases(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionPtr(_result, false);
}

#pragma implementation_key(3732)
inline enum IRJointLoadType IRJointLoad::GetType ( ) {
    enum IRJointLoadType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3733)
inline void IRJointLoad::PutType ( enum IRJointLoadType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointConnectionServer wrapper method implementations
//

#pragma implementation_key(3734)
inline long IRJointConnectionServer::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3735)
inline IRJointConnectionInfoPtr IRJointConnectionServer::CreateInfo ( ) {
    struct IRJointConnectionInfo * _result = 0;
    HRESULT _hr = raw_CreateInfo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointConnectionInfoPtr(_result, false);
}

#pragma implementation_key(3736)
inline IRJointConnectionPtr IRJointConnectionServer::Create ( enum IRJointConnectionType joint_type ) {
    struct IRJointConnection * _result = 0;
    HRESULT _hr = raw_Create(joint_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointConnectionPtr(_result, false);
}

#pragma implementation_key(3737)
inline IRJointConnectionInfoPtr IRJointConnectionServer::GetInfo ( long num ) {
    struct IRJointConnectionInfo * _result = 0;
    HRESULT _hr = raw_GetInfo(num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointConnectionInfoPtr(_result, false);
}

#pragma implementation_key(3738)
inline IRJointConnectionPtr IRJointConnectionServer::Get ( long num ) {
    struct IRJointConnection * _result = 0;
    HRESULT _hr = raw_Get(num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointConnectionPtr(_result, false);
}

#pragma implementation_key(3739)
inline HRESULT IRJointConnectionServer::Delete ( long num ) {
    HRESULT _hr = raw_Delete(num);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3740)
inline long IRJointConnectionServer::Find ( _bstr_t sel_text ) {
    long _result = 0;
    HRESULT _hr = raw_Find(sel_text, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3741)
inline IRobotNumbersArrayPtr IRJointConnectionServer::GetAllNumbers ( ) {
    struct IRobotNumbersArray * _result = 0;
    HRESULT _hr = raw_GetAllNumbers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersArrayPtr(_result, false);
}

#pragma implementation_key(3742)
inline double IRJointConnectionServer::Calculate ( long num, struct IRJointLoad * joint_loads ) {
    double _result = 0;
    HRESULT _hr = raw_Calculate(num, joint_loads, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3743)
inline double IRJointConnectionServer::CalculateNote ( long num, struct IRJointLoad * joint_loads, _bstr_t file_path ) {
    double _result = 0;
    HRESULT _hr = raw_CalculateNote(num, joint_loads, file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3744)
inline long IRJointConnectionServer::Exist ( long num ) {
    long _result = 0;
    HRESULT _hr = raw_Exist(num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3745)
inline long IRJointConnectionServer::FindWithId ( long unique_id ) {
    long _result = 0;
    HRESULT _hr = raw_FindWithId(unique_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3746)
inline HRESULT IRJointConnectionServer::SetExt ( enum IRJointExtType ext ) {
    HRESULT _hr = raw_SetExt(ext);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimStream wrapper method implementations
//

#pragma implementation_key(3747)
inline HRESULT IRDimStream::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3748)
inline long IRDimStream::Size ( enum IRDimStreamType _type ) {
    long _result = 0;
    HRESULT _hr = raw_Size(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3749)
inline HRESULT IRDimStream::SeekSet ( enum IRDimStreamType _type, long pos ) {
    HRESULT _hr = raw_SeekSet(_type, pos);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3750)
inline HRESULT IRDimStream::WriteLong ( long val ) {
    HRESULT _hr = raw_WriteLong(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3751)
inline long IRDimStream::ReadLong ( ) {
    long _result = 0;
    HRESULT _hr = raw_ReadLong(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3752)
inline HRESULT IRDimStream::WriteDouble ( double val ) {
    HRESULT _hr = raw_WriteDouble(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3753)
inline double IRDimStream::ReadDouble ( ) {
    double _result = 0;
    HRESULT _hr = raw_ReadDouble(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3754)
inline HRESULT IRDimStream::WriteText ( _bstr_t val ) {
    HRESULT _hr = raw_WriteText(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3755)
inline _bstr_t IRDimStream::ReadText ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ReadText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3756)
inline long IRDimStream::GetEoL ( ) {
    long _result = 0;
    HRESULT _hr = get_EoL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3757)
inline long IRDimStream::GetEoD ( ) {
    long _result = 0;
    HRESULT _hr = get_EoD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3758)
inline long IRDimStream::GetEoT ( ) {
    long _result = 0;
    HRESULT _hr = get_EoT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimMember wrapper method implementations
//

#pragma implementation_key(3759)
inline long IRDimMember::GetUsrNo ( ) {
    long _result = 0;
    HRESULT _hr = get_UsrNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3760)
inline long IRDimMember::GetIsComplex ( ) {
    long _result = 0;
    HRESULT _hr = get_IsComplex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3761)
inline _bstr_t IRDimMember::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3762)
inline void IRDimMember::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3763)
inline _bstr_t IRDimMember::GetDefDataName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DefDataName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3764)
inline void IRDimMember::PutDefDataName ( _bstr_t ret ) {
    HRESULT _hr = put_DefDataName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3765)
inline HRESULT IRDimMember::GetComplexList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_GetComplexList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3766)
inline HRESULT IRDimMember::SetComplexList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_SetComplexList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimMembDefData wrapper method implementations
//

#pragma implementation_key(3767)
inline HRESULT IRDimMembDefData::Store ( struct IRDimStream * str ) {
    HRESULT _hr = raw_Store(str);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3768)
inline HRESULT IRDimMembDefData::Retrieve ( struct IRDimStream * str ) {
    HRESULT _hr = raw_Retrieve(str);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3769)
inline enum IRDimMembDefType IRDimMembDefData::GetType ( ) {
    enum IRDimMembDefType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3770)
inline void IRDimMembDefData::PutType ( enum IRDimMembDefType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3771)
inline _bstr_t IRDimMembDefData::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3772)
inline void IRDimMembDefData::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3773)
inline HRESULT IRDimMembDefData::SetLengthYZUV ( enum IRDimMembDefLengthDataType Type, double val ) {
    HRESULT _hr = raw_SetLengthYZUV(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3774)
inline double IRDimMembDefData::LengthYZUV ( enum IRDimMembDefLengthDataType Type ) {
    double _result = 0;
    HRESULT _hr = raw_LengthYZUV(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3775)
inline HRESULT IRDimMembDefData::SetDisplacementXY ( enum IRDimMembDefDispDataType Type, long val ) {
    HRESULT _hr = raw_SetDisplacementXY(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3776)
inline long IRDimMembDefData::IsDisplacementXY ( enum IRDimMembDefDispDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_IsDisplacementXY(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3777)
inline HRESULT IRDimMembDefData::SetDisplXYRelLimit ( enum IRDimMembDefDispDataType Type, double val ) {
    HRESULT _hr = raw_SetDisplXYRelLimit(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3778)
inline double IRDimMembDefData::DisplXYRelLimit ( enum IRDimMembDefDispDataType Type ) {
    double _result = 0;
    HRESULT _hr = raw_DisplXYRelLimit(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3779)
inline HRESULT IRDimMembDefData::SetDeflectionYZ ( enum IRDimMembDefDeflDataType Type, long val ) {
    HRESULT _hr = raw_SetDeflectionYZ(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3780)
inline long IRDimMembDefData::IsDeflectionYZ ( enum IRDimMembDefDeflDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_IsDeflectionYZ(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3781)
inline HRESULT IRDimMembDefData::SetDeflYZRelLimit ( enum IRDimMembDefDeflDataType Type, double val ) {
    HRESULT _hr = raw_SetDeflYZRelLimit(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3782)
inline double IRDimMembDefData::DeflYZRelLimit ( enum IRDimMembDefDeflDataType Type ) {
    double _result = 0;
    HRESULT _hr = raw_DeflYZRelLimit(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3783)
inline void IRDimMembDefData::PutInitDeflType ( enum IRDimMembDefInitDeflType ret ) {
    HRESULT _hr = put_InitDeflType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3784)
inline enum IRDimMembDefInitDeflType IRDimMembDefData::GetInitDeflType ( ) {
    enum IRDimMembDefInitDeflType _result;
    HRESULT _hr = get_InitDeflType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3785)
inline HRESULT IRDimMembDefData::SetUserInitDefl ( enum IRDimMembDefUserInitDeflType Type, double val ) {
    HRESULT _hr = raw_SetUserInitDefl(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3786)
inline double IRDimMembDefData::GetUserInitDefl ( enum IRDimMembDefUserInitDeflType Type ) {
    double _result = 0;
    HRESULT _hr = raw_GetUserInitDefl(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3787)
inline HRESULT IRDimMembDefData::IntPsClear ( enum IRDimMembDefIntPsDataType Type ) {
    HRESULT _hr = raw_IntPsClear(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3788)
inline long IRDimMembDefData::IntPsCoordNum ( enum IRDimMembDefIntPsDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_IntPsCoordNum(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3789)
inline HRESULT IRDimMembDefData::SetIntPsCoordValueType ( enum IRDimMembDefIntPsDataType Type, long IsRelValue ) {
    HRESULT _hr = raw_SetIntPsCoordValueType(Type, IsRelValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3790)
inline long IRDimMembDefData::IntPsCoordValueType ( enum IRDimMembDefIntPsDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_IntPsCoordValueType(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3791)
inline HRESULT IRDimMembDefData::SetIntPtValues ( enum IRDimMembDefIntPsDataType Type, long no, double coord, double Coeff ) {
    HRESULT _hr = raw_SetIntPtValues(Type, no, coord, Coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3792)
inline HRESULT IRDimMembDefData::IntPtValues ( enum IRDimMembDefIntPsDataType Type, long no, double * coord, double * Coeff ) {
    HRESULT _hr = raw_IntPtValues(Type, no, coord, Coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3793)
inline HRESULT IRDimMembDefData::SetIntPtAddOption ( enum IRDimMembDefIntPsDataType Type, enum IRDimMembDefIntPsOptionType option, long IsSet ) {
    HRESULT _hr = raw_SetIntPtAddOption(Type, option, IsSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3794)
inline HRESULT IRDimMembDefData::IntPtAddOption ( enum IRDimMembDefIntPsDataType Type, enum IRDimMembDefIntPsOptionType option, long * IsSet ) {
    HRESULT _hr = raw_IntPtAddOption(Type, option, IsSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3795)
inline HRESULT IRDimMembDefData::StoreExpIntPs ( IDispatch * in ) {
    HRESULT _hr = raw_StoreExpIntPs(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3796)
inline HRESULT IRDimMembDefData::RetrieveExpIntPs ( IDispatch * in ) {
    HRESULT _hr = raw_RetrieveExpIntPs(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3797)
inline long IRDimMembDefData::GetRangeMoments ( ) {
    long _result = 0;
    HRESULT _hr = get_RangeMoments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3798)
inline HRESULT IRDimMembDefData::RangeCoords ( double * beg, double * End ) {
    HRESULT _hr = raw_RangeCoords(beg, End);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3799)
inline long IRDimMembDefData::GetCantileverMode ( ) {
    long _result = 0;
    HRESULT _hr = get_CantileverMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3800)
inline void IRDimMembDefData::PutCantileverMode ( long ret ) {
    HRESULT _hr = put_CantileverMode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3801)
inline long IRDimMembDefData::GetPipeMode ( ) {
    long _result = 0;
    HRESULT _hr = get_PipeMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3802)
inline void IRDimMembDefData::PutPipeMode ( long ret ) {
    HRESULT _hr = put_PipeMode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3803)
inline HRESULT IRDimMembDefData::SetStructureSwayYZ ( enum IRDimMembDefBucklingDataType Type, long is_sway ) {
    HRESULT _hr = raw_SetStructureSwayYZ(Type, is_sway);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3804)
inline long IRDimMembDefData::IsStructureSwayYZ ( enum IRDimMembDefBucklingDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_IsStructureSwayYZ(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3805)
inline HRESULT IRDimMembDefData::StoreAdjoinParamsYZ ( enum IRDimMembDefBucklingDataType Type, IDispatch * in ) {
    HRESULT _hr = raw_StoreAdjoinParamsYZ(Type, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3806)
inline HRESULT IRDimMembDefData::RetrieveAdjoinParamsYZ ( enum IRDimMembDefBucklingDataType Type, IDispatch * in ) {
    HRESULT _hr = raw_RetrieveAdjoinParamsYZ(Type, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3807)
inline IDispatchPtr IRDimMembDefData::GetCodeParams ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CodeParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3808)
inline void IRDimMembDefData::PutCodeParams ( IDispatch * ret ) {
    HRESULT _hr = put_CodeParams(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimMembDefDataSrv wrapper method implementations
//

#pragma implementation_key(3809)
inline long IRDimMembDefDataSrv::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3810)
inline _bstr_t IRDimMembDefDataSrv::Name ( long index ) {
    BSTR _result = 0;
    HRESULT _hr = raw_Name(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3811)
inline IRDimMembDefDataPtr IRDimMembDefDataSrv::Get ( _bstr_t Name ) {
    struct IRDimMembDefData * _result = 0;
    HRESULT _hr = raw_Get(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembDefDataPtr(_result, false);
}

#pragma implementation_key(3812)
inline HRESULT IRDimMembDefDataSrv::Check ( _bstr_t Name, long * is_defined, long * can_be_saved ) {
    HRESULT _hr = raw_Check(Name, is_defined, can_be_saved);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3813)
inline HRESULT IRDimMembDefDataSrv::Save ( struct IRDimMembDefData * val ) {
    HRESULT _hr = raw_Save(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimMembers wrapper method implementations
//

#pragma implementation_key(3814)
inline long IRDimMembers::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3815)
inline long IRDimMembers::GetUserNo ( long index ) {
    long _result = 0;
    HRESULT _hr = raw_GetUserNo(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3816)
inline IRDimMemberPtr IRDimMembers::Get ( long no ) {
    struct IRDimMember * _result = 0;
    HRESULT _hr = raw_Get(no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMemberPtr(_result, false);
}

#pragma implementation_key(3817)
inline HRESULT IRDimMembers::Save ( struct IRDimMember * val ) {
    HRESULT _hr = raw_Save(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3818)
inline IRDimMemberPtr IRDimMembers::New ( long like_no, long new_no ) {
    struct IRDimMember * _result = 0;
    HRESULT _hr = raw_New(like_no, new_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMemberPtr(_result, false);
}

#pragma implementation_key(3819)
inline long IRDimMembers::Delete ( long no ) {
    long _result = 0;
    HRESULT _hr = raw_Delete(no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3820)
inline HRESULT IRDimMembers::Generate ( IDispatch * in ) {
    HRESULT _hr = raw_Generate(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3821)
inline IRDimMembDefDataSrvPtr IRDimMembers::GetDefDataService ( ) {
    struct IRDimMembDefDataSrv * _result = 0;
    HRESULT _hr = get_DefDataService(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembDefDataSrvPtr(_result, false);
}

//
// interface IRDimGrpProfs wrapper method implementations
//

#pragma implementation_key(3822)
inline long IRDimGrpProfs::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3823)
inline _bstr_t IRDimGrpProfs::GetBase ( long index ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetBase(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3824)
inline HRESULT IRDimGrpProfs::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3825)
inline HRESULT IRDimGrpProfs::ClearProfs ( _bstr_t base_name ) {
    HRESULT _hr = raw_ClearProfs(base_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3826)
inline HRESULT IRDimGrpProfs::GetProfs ( _bstr_t base_name, struct IRDimStream * in ) {
    HRESULT _hr = raw_GetProfs(base_name, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3827)
inline HRESULT IRDimGrpProfs::SetProfs ( _bstr_t base_name, struct IRDimStream * in ) {
    HRESULT _hr = raw_SetProfs(base_name, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3828)
inline HRESULT IRDimGrpProfs::SetFamilies ( _bstr_t base_name, struct IRDimStream * in ) {
    HRESULT _hr = raw_SetFamilies(base_name, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimGroup wrapper method implementations
//

#pragma implementation_key(3829)
inline long IRDimGroup::GetUsrNo ( ) {
    long _result = 0;
    HRESULT _hr = get_UsrNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3830)
inline _bstr_t IRDimGroup::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3831)
inline void IRDimGroup::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3832)
inline _bstr_t IRDimGroup::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3833)
inline void IRDimGroup::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3834)
inline HRESULT IRDimGroup::GetMembList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_GetMembList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3835)
inline HRESULT IRDimGroup::SetMembList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_SetMembList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3836)
inline HRESULT IRDimGroup::GetProfs ( struct IRDimGrpProfs * in ) {
    HRESULT _hr = raw_GetProfs(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3837)
inline HRESULT IRDimGroup::SetProfs ( struct IRDimGrpProfs * in ) {
    HRESULT _hr = raw_SetProfs(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3838)
inline HRESULT IRDimGroup::GetParamProfs ( struct IRDimStream * in ) {
    HRESULT _hr = raw_GetParamProfs(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3839)
inline HRESULT IRDimGroup::SetParamProfs ( struct IRDimStream * in ) {
    HRESULT _hr = raw_SetParamProfs(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimGroups wrapper method implementations
//

#pragma implementation_key(3840)
inline long IRDimGroups::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3841)
inline long IRDimGroups::GetUserNo ( long index ) {
    long _result = 0;
    HRESULT _hr = raw_GetUserNo(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3842)
inline IRDimGroupPtr IRDimGroups::Get ( long no ) {
    struct IRDimGroup * _result = 0;
    HRESULT _hr = raw_Get(no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimGroupPtr(_result, false);
}

#pragma implementation_key(3843)
inline HRESULT IRDimGroups::Save ( struct IRDimGroup * val ) {
    HRESULT _hr = raw_Save(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3844)
inline IRDimGroupPtr IRDimGroups::New ( long like_no, long new_no ) {
    struct IRDimGroup * _result = 0;
    HRESULT _hr = raw_New(like_no, new_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimGroupPtr(_result, false);
}

#pragma implementation_key(3845)
inline HRESULT IRDimGroups::Delete ( long no ) {
    HRESULT _hr = raw_Delete(no);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3846)
inline HRESULT IRDimGroups::Generate ( IDispatch * in ) {
    HRESULT _hr = raw_Generate(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3847)
inline HRESULT IRDimGroups::GetParamProfsPattern ( IDispatch * in ) {
    HRESULT _hr = raw_GetParamProfsPattern(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3848)
inline HRESULT IRDimGroups::SetParamProfsPattern ( IDispatch * in ) {
    HRESULT _hr = raw_SetParamProfsPattern(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimOptimParam wrapper method implementations
//

#pragma implementation_key(3849)
inline void IRDimOptimParam::PutOptimization ( long ret ) {
    HRESULT _hr = put_Optimization(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3850)
inline long IRDimOptimParam::GetOptimization ( ) {
    long _result = 0;
    HRESULT _hr = get_Optimization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3851)
inline HRESULT IRDimOptimParam::SetOption ( enum IRDimOptimParamOptionType option, long val ) {
    HRESULT _hr = raw_SetOption(option, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3852)
inline long IRDimOptimParam::GetOption ( enum IRDimOptimParamOptionType option ) {
    long _result = 0;
    HRESULT _hr = raw_GetOption(option, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3853)
inline HRESULT IRDimOptimParam::SetLimit ( enum IRDimOptimParamLimitType limit, double val ) {
    HRESULT _hr = raw_SetLimit(limit, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3854)
inline double IRDimOptimParam::GetLimit ( enum IRDimOptimParamLimitType limit ) {
    double _result = 0;
    HRESULT _hr = raw_GetLimit(limit, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimCalcParam wrapper method implementations
//

#pragma implementation_key(3855)
inline enum IRDimCalcParamVerifType IRDimCalcParam::GetVerifType ( ) {
    enum IRDimCalcParamVerifType _result;
    HRESULT _hr = get_VerifType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3856)
inline HRESULT IRDimCalcParam::SetObjsList ( enum IRDimCalcParamVerifType Type, struct IRDimStream * in ) {
    HRESULT _hr = raw_SetObjsList(Type, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3857)
inline HRESULT IRDimCalcParam::GetObjsList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_GetObjsList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3858)
inline HRESULT IRDimCalcParam::SetLimitState ( enum IRDimCalcParamLimitStateType Type, long val ) {
    HRESULT _hr = raw_SetLimitState(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3859)
inline long IRDimCalcParam::GetLimitState ( enum IRDimCalcParamLimitStateType Type ) {
    long _result = 0;
    HRESULT _hr = raw_GetLimitState(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3860)
inline HRESULT IRDimCalcParam::SetLoadsList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_SetLoadsList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3861)
inline HRESULT IRDimCalcParam::GetLoadsList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_GetLoadsList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3862)
inline HRESULT IRDimCalcParam::SetOptimParam ( struct IRDimOptimParam * val ) {
    HRESULT _hr = raw_SetOptimParam(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3863)
inline IRDimOptimParamPtr IRDimCalcParam::GetOptimParam ( ) {
    struct IRDimOptimParam * _result = 0;
    HRESULT _hr = raw_GetOptimParam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimOptimParamPtr(_result, false);
}

#pragma implementation_key(3864)
inline HRESULT IRDimCalcParam::SetUlsLoadsList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_SetUlsLoadsList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3865)
inline HRESULT IRDimCalcParam::GetUlsLoadsList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_GetUlsLoadsList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3866)
inline HRESULT IRDimCalcParam::SetSlsLoadsList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_SetSlsLoadsList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3867)
inline HRESULT IRDimCalcParam::GetSlsLoadsList ( struct IRDimStream * in ) {
    HRESULT _hr = raw_GetSlsLoadsList(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimCalcConf wrapper method implementations
//

#pragma implementation_key(3868)
inline HRESULT IRDimCalcConf::SetFlag ( enum IRDimCalcConfFlagType _type, long val ) {
    HRESULT _hr = raw_SetFlag(_type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3869)
inline long IRDimCalcConf::IsFlagSet ( enum IRDimCalcConfFlagType _type ) {
    long _result = 0;
    HRESULT _hr = raw_IsFlagSet(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3870)
inline void IRDimCalcConf::PutNPointsNum ( long ret ) {
    HRESULT _hr = put_NPointsNum(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3871)
inline long IRDimCalcConf::GetNPointsNum ( ) {
    long _result = 0;
    HRESULT _hr = get_NPointsNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3872)
inline HRESULT IRDimCalcConf::SetParamValue ( enum IRDimCalcConfValueType _type, double val ) {
    HRESULT _hr = raw_SetParamValue(_type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3873)
inline double IRDimCalcConf::GetParamValue ( enum IRDimCalcConfValueType _type ) {
    double _result = 0;
    HRESULT _hr = raw_GetParamValue(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3874)
inline HRESULT IRDimCalcConf::ClearUserCharPoints ( ) {
    HRESULT _hr = raw_ClearUserCharPoints();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3875)
inline long IRDimCalcConf::GetUserCharPointsNum ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetUserCharPointsNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3876)
inline HRESULT IRDimCalcConf::WriteUserCharPoint ( double val ) {
    HRESULT _hr = raw_WriteUserCharPoint(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3877)
inline double IRDimCalcConf::ReadUserCharPoint ( long no ) {
    double _result = 0;
    HRESULT _hr = raw_ReadUserCharPoint(no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3878)
inline HRESULT IRDimCalcConf::SetAutoDeflectionsLoadCase ( long case_no, long comp_index ) {
    HRESULT _hr = raw_SetAutoDeflectionsLoadCase(case_no, comp_index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3879)
inline HRESULT IRDimCalcConf::GetAutoDeflectionsLoadCase ( long * case_no, long * comp_index ) {
    HRESULT _hr = raw_GetAutoDeflectionsLoadCase(case_no, comp_index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3880)
inline HRESULT IRDimCalcConf::WriteClientData ( struct IRDimStream * val ) {
    HRESULT _hr = raw_WriteClientData(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3881)
inline HRESULT IRDimCalcConf::ReadClientData ( struct IRDimStream * ret ) {
    HRESULT _hr = raw_ReadClientData(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3882)
inline HRESULT IRDimCalcConf::ModalEditBasicParams ( ) {
    HRESULT _hr = raw_ModalEditBasicParams();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3883)
inline long IRDimCalcConf::GetCasesNum ( ) {
    long _result = 0;
    HRESULT _hr = get_CasesNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3884)
inline long IRDimCalcConf::GetCaseNo ( long index ) {
    long _result = 0;
    HRESULT _hr = raw_GetCaseNo(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3885)
inline long IRDimCalcConf::GetCaseCompNum ( long case_no ) {
    long _result = 0;
    HRESULT _hr = raw_GetCaseCompNum(case_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3886)
inline _bstr_t IRDimCalcConf::GetCaseName ( long case_no, long comp_index ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCaseName(case_no, comp_index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IRDimAllRes wrapper method implementations
//

#pragma implementation_key(3887)
inline _bstr_t IRDimAllRes::GetCodeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3888)
inline enum IRDimAllResObjectType IRDimAllRes::GetObjectsType ( ) {
    enum IRDimAllResObjectType _result;
    HRESULT _hr = get_ObjectsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3889)
inline long IRDimAllRes::GetObjectsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3890)
inline long IRDimAllRes::ObjectUsrNo ( long index ) {
    long _result = 0;
    HRESULT _hr = raw_ObjectUsrNo(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3891)
inline IDispatchPtr IRDimAllRes::Get ( long obj_user_no ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Get(obj_user_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3892)
inline HRESULT IRDimAllRes::MakeNote ( struct IRDimStream * obj_list, _bstr_t rtf_file, _bstr_t out_file ) {
    HRESULT _hr = raw_MakeNote(obj_list, rtf_file, out_file);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3893)
inline HRESULT IRDimAllRes::ReplaceOneProfile ( long index ) {
    HRESULT _hr = raw_ReplaceOneProfile(index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3894)
inline HRESULT IRDimAllRes::ReplaceAllProfiles ( ) {
    HRESULT _hr = raw_ReplaceAllProfiles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimCalcEngine wrapper method implementations
//

#pragma implementation_key(3895)
inline IRDimCalcParamPtr IRDimCalcEngine::GetCalcParam ( ) {
    struct IRDimCalcParam * _result = 0;
    HRESULT _hr = raw_GetCalcParam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimCalcParamPtr(_result, false);
}

#pragma implementation_key(3896)
inline HRESULT IRDimCalcEngine::SetCalcParam ( struct IRDimCalcParam * val ) {
    HRESULT _hr = raw_SetCalcParam(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3897)
inline IRDimCalcConfPtr IRDimCalcEngine::GetCalcConf ( ) {
    struct IRDimCalcConf * _result = 0;
    HRESULT _hr = raw_GetCalcConf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimCalcConfPtr(_result, false);
}

#pragma implementation_key(3898)
inline HRESULT IRDimCalcEngine::SetCalcConf ( struct IRDimCalcConf * val ) {
    HRESULT _hr = raw_SetCalcConf(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3899)
inline HRESULT IRDimCalcEngine::Solve ( IDispatch * observer ) {
    HRESULT _hr = raw_Solve(observer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3900)
inline HRESULT IRDimCalcEngine::Terminate ( ) {
    HRESULT _hr = raw_Terminate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3901)
inline IRDimAllResPtr IRDimCalcEngine::Results ( ) {
    struct IRDimAllRes * _result = 0;
    HRESULT _hr = raw_Results(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimAllResPtr(_result, false);
}

//
// interface IRDimMembDef wrapper method implementations
//

#pragma implementation_key(3902)
inline enum IRDimMembDefGuidType IRDimMembDef::GetGuidType ( ) {
    enum IRDimMembDefGuidType _result;
    HRESULT _hr = get_GuidType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3903)
inline _bstr_t IRDimMembDef::GetClientID ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClientID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3904)
inline enum IRDimMembDefMatType IRDimMembDef::GetMatType ( ) {
    enum IRDimMembDefMatType _result;
    HRESULT _hr = get_MatType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3905)
inline double IRDimMembDef::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3906)
inline void IRDimMembDef::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3907)
inline long IRDimMembDef::IsBuckCoefConst ( enum IRDimMembDefBucklingDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_IsBuckCoefConst(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3908)
inline long IRDimMembDef::IsClientBuckCoefServiceYZ ( enum IRDimMembDefBucklingDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_IsClientBuckCoefServiceYZ(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3909)
inline long IRDimMembDef::AreAdjoinParamsYZ ( enum IRDimMembDefBucklingDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_AreAdjoinParamsYZ(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3910)
inline HRESULT IRDimMembDef::HowCalcul ( enum IRDimMembDefAdjoinHowCalcul * HowCalcul, enum IRDimMembDefAdjoinWayOfCalcul * WayOfCalculY, enum IRDimMembDefAdjoinWayOfCalcul * WayOfCalculZ ) {
    HRESULT _hr = raw_HowCalcul(HowCalcul, WayOfCalculY, WayOfCalculZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3911)
inline HRESULT IRDimMembDef::SetOption ( enum IRDimMembDefOptionType Type, long IsSet, IDispatch * in ) {
    HRESULT _hr = raw_SetOption(Type, IsSet, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3912)
inline HRESULT IRDimMembDef::CheckOption ( enum IRDimMembDefOptionType Type, long * IsSet, IDispatch * in ) {
    HRESULT _hr = raw_CheckOption(Type, IsSet, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3913)
inline HRESULT IRDimMembDef::ConversionGlossary ( struct IRDimStream * pVal ) {
    HRESULT _hr = raw_ConversionGlossary(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3914)
inline HRESULT IRDimMembDef::ConversionValuesForKey ( _bstr_t key, long Set, struct IRDimStream * pVal ) {
    HRESULT _hr = raw_ConversionValuesForKey(key, Set, pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimMembSrv wrapper method implementations
//

#pragma implementation_key(3915)
inline HRESULT IRDimMembSrv::CheckLabelName ( _bstr_t _name, long * is_defined, long * can_be_saved ) {
    HRESULT _hr = raw_CheckLabelName(_name, is_defined, can_be_saved);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3916)
inline HRESULT IRDimMembSrv::Save ( struct IRDimMembDef * val ) {
    HRESULT _hr = raw_Save(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3917)
inline HRESULT IRDimMembSrv::EditAdjoinParams ( IDispatch * in ) {
    HRESULT _hr = raw_EditAdjoinParams(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimUnits wrapper method implementations
//

#pragma implementation_key(3918)
inline HRESULT IRDimUnits::Refresh ( long AreRobotUnits ) {
    HRESULT _hr = raw_Refresh(AreRobotUnits);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3919)
inline long IRDimUnits::GetAreRobotUnits ( ) {
    long _result = 0;
    HRESULT _hr = get_AreRobotUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3920)
inline double IRDimUnits::ReadToUserCoef ( enum IRDimUnitType Type ) {
    double _result = 0;
    HRESULT _hr = raw_ReadToUserCoef(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3921)
inline _bstr_t IRDimUnits::ReadUserName ( enum IRDimUnitType Type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ReadUserName(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3922)
inline _bstr_t IRDimUnits::format ( enum IRDimUnitType Type, double val ) {
    BSTR _result = 0;
    HRESULT _hr = raw_format(Type, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IRDimIntPsEditService wrapper method implementations
//

#pragma implementation_key(3923)
inline HRESULT IRDimIntPsEditService::SetSchemaNo ( enum IRDimMembDefIntPsDataType Type, long no ) {
    HRESULT _hr = raw_SetSchemaNo(Type, no);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3924)
inline long IRDimIntPsEditService::GetSchemaNo ( enum IRDimMembDefIntPsDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_GetSchemaNo(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3925)
inline long IRDimIntPsEditService::SchemasNum ( enum IRDimMembDefIntPsDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_SchemasNum(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3926)
inline HRESULT IRDimIntPsEditService::SchemaBmpHandle ( enum IRDimMembDefIntPsDataType Type, long no, long * bOff, long * bOn, long * cx, long * cy ) {
    HRESULT _hr = raw_SchemaBmpHandle(Type, no, bOff, bOn, cx, cy);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3927)
inline HRESULT IRDimIntPsEditService::SchemaCoefficients ( enum IRDimMembDefIntPsDataType Type, long no, double * coeffBeg, double * coeffEnd ) {
    HRESULT _hr = raw_SchemaCoefficients(Type, no, coeffBeg, coeffEnd);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3928)
inline void IRDimIntPsEditService::PutTestMemberUsrNo ( long userNo ) {
    HRESULT _hr = put_TestMemberUsrNo(userNo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3929)
inline long IRDimIntPsEditService::GetTestMemberUsrNo ( ) {
    long _result = 0;
    HRESULT _hr = get_TestMemberUsrNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3930)
inline long IRDimIntPsEditService::GetIsWood ( ) {
    long _result = 0;
    HRESULT _hr = get_IsWood(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3931)
inline HRESULT IRDimIntPsEditService::SetStructureSwayYZ ( enum IRDimMembDefIntPsDataType Type, long is_sway ) {
    HRESULT _hr = raw_SetStructureSwayYZ(Type, is_sway);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3932)
inline long IRDimIntPsEditService::IsStructureSwayYZ ( enum IRDimMembDefIntPsDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_IsStructureSwayYZ(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimInternalPoints wrapper method implementations
//

#pragma implementation_key(3933)
inline HRESULT IRDimInternalPoints::Clear ( enum IRDimMembDefIntPsDataType Type ) {
    HRESULT _hr = raw_Clear(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3934)
inline long IRDimInternalPoints::CoordNum ( enum IRDimMembDefIntPsDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_CoordNum(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3935)
inline HRESULT IRDimInternalPoints::SetCoordValueType ( enum IRDimMembDefIntPsDataType Type, long IsRelValue ) {
    HRESULT _hr = raw_SetCoordValueType(Type, IsRelValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3936)
inline long IRDimInternalPoints::CoordValueType ( enum IRDimMembDefIntPsDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_CoordValueType(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3937)
inline HRESULT IRDimInternalPoints::SetValues ( enum IRDimMembDefIntPsDataType Type, long no, double coord, double Coeff ) {
    HRESULT _hr = raw_SetValues(Type, no, coord, Coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3938)
inline HRESULT IRDimInternalPoints::Values ( enum IRDimMembDefIntPsDataType Type, long no, double * coord, double * Coeff ) {
    HRESULT _hr = raw_Values(Type, no, coord, Coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3939)
inline HRESULT IRDimInternalPoints::SetAddOption ( enum IRDimMembDefIntPsDataType Type, enum IRDimMembDefIntPsOptionType option, long IsSet ) {
    HRESULT _hr = raw_SetAddOption(Type, option, IsSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3940)
inline HRESULT IRDimInternalPoints::AddOption ( enum IRDimMembDefIntPsDataType Type, enum IRDimMembDefIntPsOptionType option, long * IsSet ) {
    HRESULT _hr = raw_AddOption(Type, option, IsSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3941)
inline HRESULT IRDimInternalPoints::Edit ( enum IRDimMembDefIntPsDataType activeType, long IsLatBuck, struct IRDimIntPsEditService * in ) {
    HRESULT _hr = raw_Edit(activeType, IsLatBuck, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3942)
inline HRESULT IRDimInternalPoints::SetSchema ( enum IRDimMembDefIntPsDataType Type, long bipNo, double cfBeg, double cfEnd ) {
    HRESULT _hr = raw_SetSchema(Type, bipNo, cfBeg, cfEnd);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3943)
inline HRESULT IRDimInternalPoints::Schema ( enum IRDimMembDefIntPsDataType Type, long * bipNo, double * cfBeg, double * cfEnd ) {
    HRESULT _hr = raw_Schema(Type, bipNo, cfBeg, cfEnd);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimAdjoinParams wrapper method implementations
//

#pragma implementation_key(3944)
inline HRESULT IRDimAdjoinParams::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3945)
inline long IRDimAdjoinParams::GetMemberUserNo ( enum IRDimAdjoinMembNo no ) {
    long _result = 0;
    HRESULT _hr = raw_GetMemberUserNo(no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3946)
inline HRESULT IRDimAdjoinParams::SetMemberUserNo ( enum IRDimAdjoinMembNo no, long usr_no ) {
    HRESULT _hr = raw_SetMemberUserNo(no, usr_no);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3947)
inline HRESULT IRDimAdjoinParams::SetMomLenByMembList ( enum IRDimAdjoinMembNo no, struct IRDimStream * in ) {
    HRESULT _hr = raw_SetMomLenByMembList(no, in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3948)
inline double IRDimAdjoinParams::GetMomentOfInertia ( enum IRDimAdjoinMembNo no ) {
    double _result = 0;
    HRESULT _hr = raw_GetMomentOfInertia(no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3949)
inline HRESULT IRDimAdjoinParams::SetMomentOfInertia ( enum IRDimAdjoinMembNo no, double val ) {
    HRESULT _hr = raw_SetMomentOfInertia(no, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3950)
inline double IRDimAdjoinParams::GetLength ( enum IRDimAdjoinMembNo no ) {
    double _result = 0;
    HRESULT _hr = raw_GetLength(no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3951)
inline HRESULT IRDimAdjoinParams::SetLength ( enum IRDimAdjoinMembNo no, double val ) {
    HRESULT _hr = raw_SetLength(no, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3952)
inline enum IRDimAdjoinMembPos IRDimAdjoinParams::GetMemberPosition ( enum IRDimAdjoinMembNo no ) {
    enum IRDimAdjoinMembPos _result;
    HRESULT _hr = raw_GetMemberPosition(no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3953)
inline HRESULT IRDimAdjoinParams::SetMemberPosition ( enum IRDimAdjoinMembNo no, enum IRDimAdjoinMembPos pos ) {
    HRESULT _hr = raw_SetMemberPosition(no, pos);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3954)
inline enum IRDimAdjoinMembSuppCond IRDimAdjoinParams::GetMemberSuppCond ( enum IRDimAdjoinMembNo no ) {
    enum IRDimAdjoinMembSuppCond _result;
    HRESULT _hr = raw_GetMemberSuppCond(no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3955)
inline HRESULT IRDimAdjoinParams::SetMemberSuppCond ( enum IRDimAdjoinMembNo no, enum IRDimAdjoinMembSuppCond suppcond ) {
    HRESULT _hr = raw_SetMemberSuppCond(no, suppcond);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3956)
inline enum IRDimAdjoinParamsEqMInertia IRDimAdjoinParams::GetMainMembEqMInertia ( ) {
    enum IRDimAdjoinParamsEqMInertia _result;
    HRESULT _hr = get_MainMembEqMInertia(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3957)
inline void IRDimAdjoinParams::PutMainMembEqMInertia ( enum IRDimAdjoinParamsEqMInertia ret ) {
    HRESULT _hr = put_MainMembEqMInertia(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3958)
inline double IRDimAdjoinParams::GetMainMembEqMInertiaPercentVal ( ) {
    double _result = 0;
    HRESULT _hr = get_MainMembEqMInertiaPercentVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3959)
inline void IRDimAdjoinParams::PutMainMembEqMInertiaPercentVal ( double ret ) {
    HRESULT _hr = put_MainMembEqMInertiaPercentVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3960)
inline HRESULT IRDimAdjoinParams::GetMainMembEqMInertiaCoord ( double * ret, long * isRel ) {
    HRESULT _hr = raw_GetMainMembEqMInertiaCoord(ret, isRel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3961)
inline HRESULT IRDimAdjoinParams::SetMainMembEqMInertiaCoord ( double val, long isRel ) {
    HRESULT _hr = raw_SetMainMembEqMInertiaCoord(val, isRel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3962)
inline enum IRDimAdjoinParamsEqMInertia IRDimAdjoinParams::GetAdjoinMembEqMInertia ( ) {
    enum IRDimAdjoinParamsEqMInertia _result;
    HRESULT _hr = get_AdjoinMembEqMInertia(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3963)
inline void IRDimAdjoinParams::PutAdjoinMembEqMInertia ( enum IRDimAdjoinParamsEqMInertia ret ) {
    HRESULT _hr = put_AdjoinMembEqMInertia(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3964)
inline double IRDimAdjoinParams::GetAdjoinMembEqMInertiaPercentVal ( ) {
    double _result = 0;
    HRESULT _hr = get_AdjoinMembEqMInertiaPercentVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3965)
inline void IRDimAdjoinParams::PutAdjoinMembEqMInertiaPercentVal ( double ret ) {
    HRESULT _hr = put_AdjoinMembEqMInertiaPercentVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3966)
inline HRESULT IRDimAdjoinParams::GetAdjoinMembEqMInertiaCoord ( double * ret, long * isRel ) {
    HRESULT _hr = raw_GetAdjoinMembEqMInertiaCoord(ret, isRel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3967)
inline HRESULT IRDimAdjoinParams::SetAdjoinMembEqMInertiaCoord ( double val, long isRel ) {
    HRESULT _hr = raw_SetAdjoinMembEqMInertiaCoord(val, isRel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3968)
inline enum IRDimAdjoinParamsStoreyFrame IRDimAdjoinParams::GetStoreyFrame ( ) {
    enum IRDimAdjoinParamsStoreyFrame _result;
    HRESULT _hr = get_StoreyFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3969)
inline void IRDimAdjoinParams::PutStoreyFrame ( enum IRDimAdjoinParamsStoreyFrame ret ) {
    HRESULT _hr = put_StoreyFrame(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3970)
inline long IRDimAdjoinParams::GetSpanQuantity ( ) {
    long _result = 0;
    HRESULT _hr = get_SpanQuantity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3971)
inline void IRDimAdjoinParams::PutSpanQuantity ( long ret ) {
    HRESULT _hr = put_SpanQuantity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3972)
inline enum IRDimAdjoinParamsColumnLevel IRDimAdjoinParams::GetColumnLevel ( ) {
    enum IRDimAdjoinParamsColumnLevel _result;
    HRESULT _hr = get_ColumnLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3973)
inline void IRDimAdjoinParams::PutColumnLevel ( enum IRDimAdjoinParamsColumnLevel ret ) {
    HRESULT _hr = put_ColumnLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3974)
inline HRESULT IRDimAdjoinParams::Edit ( IDispatch * in ) {
    HRESULT _hr = raw_Edit(in);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimAdjoinBranch wrapper method implementations
//

#pragma implementation_key(3975)
inline long IRDimAdjoinBranch::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3976)
inline void IRDimAdjoinBranch::PutElemNo ( long _arg1 ) {
    HRESULT _hr = put_ElemNo(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3977)
inline long IRDimAdjoinBranch::GetLast ( ) {
    long _result = 0;
    HRESULT _hr = get_Last(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3978)
inline long IRDimAdjoinBranch::GetEnd ( ) {
    long _result = 0;
    HRESULT _hr = get_End(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3979)
inline double IRDimAdjoinBranch::GetE ( ) {
    double _result = 0;
    HRESULT _hr = get_E(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3980)
inline double IRDimAdjoinBranch::GetEnd_x ( ) {
    double _result = 0;
    HRESULT _hr = get_End_x(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3981)
inline double IRDimAdjoinBranch::GetEnd_y ( ) {
    double _result = 0;
    HRESULT _hr = get_End_y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3982)
inline double IRDimAdjoinBranch::GetStiff ( ) {
    double _result = 0;
    HRESULT _hr = get_Stiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3983)
inline long IRDimAdjoinBranch::GetReleased_beg ( ) {
    long _result = 0;
    HRESULT _hr = get_Released_beg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3984)
inline long IRDimAdjoinBranch::GetReleased_end ( ) {
    long _result = 0;
    HRESULT _hr = get_Released_end(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3985)
inline long IRDimAdjoinBranch::GetFixed_end ( ) {
    long _result = 0;
    HRESULT _hr = get_Fixed_end(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3986)
inline long IRDimAdjoinBranch::GetSupEndDirFixed ( long degree ) {
    long _result = 0;
    HRESULT _hr = get_SupEndDirFixed(degree, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimAdjoinAutomat wrapper method implementations
//

#pragma implementation_key(3987)
inline HRESULT IRDimAdjoinAutomat::Select ( enum IRDimMembDefBucklingDataType Type, long membNo ) {
    HRESULT _hr = raw_Select(Type, membNo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3988)
inline long IRDimAdjoinAutomat::GetIs3D ( ) {
    long _result = 0;
    HRESULT _hr = get_Is3D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3989)
inline double IRDimAdjoinAutomat::GetA_x ( ) {
    double _result = 0;
    HRESULT _hr = get_A_x(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3990)
inline double IRDimAdjoinAutomat::GetA_y ( ) {
    double _result = 0;
    HRESULT _hr = get_A_y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3991)
inline double IRDimAdjoinAutomat::GetB_x ( ) {
    double _result = 0;
    HRESULT _hr = get_B_x(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3992)
inline double IRDimAdjoinAutomat::GetB_y ( ) {
    double _result = 0;
    HRESULT _hr = get_B_y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3993)
inline double IRDimAdjoinAutomat::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3994)
inline long IRDimAdjoinAutomat::GetRelease_A ( ) {
    long _result = 0;
    HRESULT _hr = get_Release_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3995)
inline long IRDimAdjoinAutomat::GetRelease_B ( ) {
    long _result = 0;
    HRESULT _hr = get_Release_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3996)
inline long IRDimAdjoinAutomat::GetCodeSupp_A ( ) {
    long _result = 0;
    HRESULT _hr = get_CodeSupp_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3997)
inline long IRDimAdjoinAutomat::GetCodeSupp_B ( ) {
    long _result = 0;
    HRESULT _hr = get_CodeSupp_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3998)
inline long IRDimAdjoinAutomat::GetCount_A ( ) {
    long _result = 0;
    HRESULT _hr = get_Count_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3999)
inline long IRDimAdjoinAutomat::GetCount_B ( ) {
    long _result = 0;
    HRESULT _hr = get_Count_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4000)
inline long IRDimAdjoinAutomat::GetSpanQuantity ( ) {
    long _result = 0;
    HRESULT _hr = get_SpanQuantity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4001)
inline IRDimAdjoinBranchPtr IRDimAdjoinAutomat::GetTree_A ( long BranchNo ) {
    struct IRDimAdjoinBranch * _result = 0;
    HRESULT _hr = raw_GetTree_A(BranchNo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimAdjoinBranchPtr(_result, false);
}

#pragma implementation_key(4002)
inline IRDimAdjoinBranchPtr IRDimAdjoinAutomat::GetTree_B ( long BranchNo ) {
    struct IRDimAdjoinBranch * _result = 0;
    HRESULT _hr = raw_GetTree_B(BranchNo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimAdjoinBranchPtr(_result, false);
}

//
// interface IRDimDeflDisp wrapper method implementations
//

#pragma implementation_key(4003)
inline HRESULT IRDimDeflDisp::Init ( enum IRDimDeflDispInitType Type, long val ) {
    HRESULT _hr = raw_Init(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4004)
inline long IRDimDeflDisp::GetMemberNo ( ) {
    long _result = 0;
    HRESULT _hr = get_MemberNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4005)
inline long IRDimDeflDisp::GetCaseNo ( ) {
    long _result = 0;
    HRESULT _hr = get_CaseNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4006)
inline long IRDimDeflDisp::CaseUserNo ( long case_no ) {
    long _result = 0;
    HRESULT _hr = raw_CaseUserNo(case_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4007)
inline enum IRDimDeflDispCaseType IRDimDeflDisp::CaseType ( long case_no ) {
    enum IRDimDeflDispCaseType _result;
    HRESULT _hr = raw_CaseType(case_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4008)
inline _bstr_t IRDimDeflDisp::CaseName ( long case_no, long comp_index, long with_def ) {
    BSTR _result = 0;
    HRESULT _hr = raw_CaseName(case_no, comp_index, with_def, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4009)
inline enum IRDimDeflDispSimpleCaseNature IRDimDeflDisp::CaseNature ( long case_no ) {
    enum IRDimDeflDispSimpleCaseNature _result;
    HRESULT _hr = raw_CaseNature(case_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4010)
inline long IRDimDeflDisp::CaseClass ( long case_no ) {
    long _result = 0;
    HRESULT _hr = raw_CaseClass(case_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4011)
inline long IRDimDeflDisp::CodeCombCompNum ( long case_no ) {
    long _result = 0;
    HRESULT _hr = raw_CodeCombCompNum(case_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4012)
inline long IRDimDeflDisp::CombCompNum ( long case_no, long comp_index ) {
    long _result = 0;
    HRESULT _hr = raw_CombCompNum(case_no, comp_index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4013)
inline void IRDimDeflDisp::PutPointsNum ( long _arg1 ) {
    HRESULT _hr = put_PointsNum(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4014)
inline void IRDimDeflDisp::PutCurPointNo ( long _arg1 ) {
    HRESULT _hr = put_CurPointNo(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4015)
inline void IRDimDeflDisp::PutCurCaseNo ( long _arg1 ) {
    HRESULT _hr = put_CurCaseNo(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4016)
inline void IRDimDeflDisp::PutCurCompIndex ( long _arg1 ) {
    HRESULT _hr = put_CurCompIndex(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4017)
inline void IRDimDeflDisp::PutCantileverMode ( long _arg1 ) {
    HRESULT _hr = put_CantileverMode(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4018)
inline double IRDimDeflDisp::Value ( enum IRDimDeflDispType Type ) {
    double _result = 0;
    HRESULT _hr = raw_Value(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4019)
inline HRESULT IRDimDeflDisp::CombCompParam ( long index, long * case_no, double * cv ) {
    HRESULT _hr = raw_CombCompParam(index, case_no, cv);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4020)
inline HRESULT IRDimDeflDisp::CodeCombType ( long case_no, long comp_index, enum IRDimDeflDispCodeCombType * ret ) {
    HRESULT _hr = raw_CodeCombType(case_no, comp_index, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4021)
inline HRESULT IRDimDeflDisp::Regulations ( enum IRDimDeflDispSimpleCaseNature Nature, enum IRDimDeflDispRegulationsCoeff reg_coeff, double * ret ) {
    HRESULT _hr = raw_Regulations(Nature, reg_coeff, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimConnection wrapper method implementations
//

#pragma implementation_key(4022)
inline long IRDimConnection::GetLanguage ( ) {
    long _result = 0;
    HRESULT _hr = get_Language(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4023)
inline _bstr_t IRDimConnection::GetResPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ResPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4024)
inline IRDimMembSrvPtr IRDimConnection::GetMembSrv ( ) {
    struct IRDimMembSrv * _result = 0;
    HRESULT _hr = raw_GetMembSrv(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembSrvPtr(_result, false);
}

#pragma implementation_key(4025)
inline IRDimUnitsPtr IRDimConnection::GetUnits ( ) {
    struct IRDimUnits * _result = 0;
    HRESULT _hr = raw_GetUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimUnitsPtr(_result, false);
}

#pragma implementation_key(4026)
inline IRDimStreamPtr IRDimConnection::GetStream ( ) {
    struct IRDimStream * _result = 0;
    HRESULT _hr = raw_GetStream(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimStreamPtr(_result, false);
}

#pragma implementation_key(4027)
inline IRDimInternalPointsPtr IRDimConnection::GetInternalPoints ( ) {
    struct IRDimInternalPoints * _result = 0;
    HRESULT _hr = raw_GetInternalPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimInternalPointsPtr(_result, false);
}

#pragma implementation_key(4028)
inline IRDimAdjoinParamsPtr IRDimConnection::GetAdjoinParams ( ) {
    struct IRDimAdjoinParams * _result = 0;
    HRESULT _hr = raw_GetAdjoinParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimAdjoinParamsPtr(_result, false);
}

#pragma implementation_key(4029)
inline IRDimAdjoinAutomatPtr IRDimConnection::GetAdjoinAutomat ( ) {
    struct IRDimAdjoinAutomat * _result = 0;
    HRESULT _hr = raw_GetAdjoinAutomat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimAdjoinAutomatPtr(_result, false);
}

#pragma implementation_key(4030)
inline IDispatchPtr IRDimConnection::GetKernel ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetKernel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4031)
inline HRESULT IRDimConnection::SendMessage ( enum IRDimConnectionMsg msg, IDispatch * dat ) {
    HRESULT _hr = raw_SendMessage(msg, dat);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4032)
inline IRDimGrpProfsPtr IRDimConnection::GetGrpProfs ( ) {
    struct IRDimGrpProfs * _result = 0;
    HRESULT _hr = raw_GetGrpProfs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimGrpProfsPtr(_result, false);
}

#pragma implementation_key(4033)
inline _bstr_t IRDimConnection::GetBinPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BinPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4034)
inline _bstr_t IRDimConnection::GetHelpPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HelpPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4035)
inline _bstr_t IRDimConnection::GetCfgPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CfgPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4036)
inline IRDimDeflDispPtr IRDimConnection::GetDeflDispService ( ) {
    struct IRDimDeflDisp * _result = 0;
    HRESULT _hr = raw_GetDeflDispService(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimDeflDispPtr(_result, false);
}

//
// interface IRDimServer wrapper method implementations
//

#pragma implementation_key(4037)
inline void IRDimServer::PutMode ( enum IRDimServerMode _arg1 ) {
    HRESULT _hr = put_Mode(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4038)
inline IRDimMembersPtr IRDimServer::GetMembersService ( ) {
    struct IRDimMembers * _result = 0;
    HRESULT _hr = get_MembersService(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembersPtr(_result, false);
}

#pragma implementation_key(4039)
inline IRDimGroupsPtr IRDimServer::GetGroupsService ( ) {
    struct IRDimGroups * _result = 0;
    HRESULT _hr = get_GroupsService(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimGroupsPtr(_result, false);
}

#pragma implementation_key(4040)
inline IRDimCalcEnginePtr IRDimServer::GetCalculEngine ( ) {
    struct IRDimCalcEngine * _result = 0;
    HRESULT _hr = get_CalculEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimCalcEnginePtr(_result, false);
}

#pragma implementation_key(4041)
inline IRDimConnectionPtr IRDimServer::GetConnection ( ) {
    struct IRDimConnection * _result = 0;
    HRESULT _hr = get_Connection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimConnectionPtr(_result, false);
}

//
// interface IRobotStructuralAxisGrid wrapper method implementations
//

#pragma implementation_key(4042)
inline _bstr_t IRobotStructuralAxisGrid::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4043)
inline void IRobotStructuralAxisGrid::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4044)
inline enum IRobotStructuralAxisGridType IRobotStructuralAxisGrid::GetType ( ) {
    enum IRobotStructuralAxisGridType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4045)
inline HRESULT IRobotStructuralAxisGrid::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotStructuralAxisGridMngr wrapper method implementations
//

#pragma implementation_key(4046)
inline long IRobotStructuralAxisGridMngr::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4047)
inline IRobotStructuralAxisGridPtr IRobotStructuralAxisGridMngr::Create ( enum IRobotStructuralAxisGridType _type, _bstr_t _name ) {
    struct IRobotStructuralAxisGrid * _result = 0;
    HRESULT _hr = raw_Create(_type, _name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructuralAxisGridPtr(_result, false);
}

#pragma implementation_key(4048)
inline long IRobotStructuralAxisGridMngr::FindByName ( _bstr_t _name ) {
    long _result = 0;
    HRESULT _hr = raw_FindByName(_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4049)
inline HRESULT IRobotStructuralAxisGridMngr::Activate ( long _idx, VARIANT_BOOL _activate ) {
    HRESULT _hr = raw_Activate(_idx, _activate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4050)
inline HRESULT IRobotStructuralAxisGridMngr::Delete ( long _idx ) {
    HRESULT _hr = raw_Delete(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4051)
inline HRESULT IRobotStructuralAxisGridMngr::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4052)
inline IRobotStructuralAxisGridPtr IRobotStructuralAxisGridMngr::Get ( long _idx ) {
    struct IRobotStructuralAxisGrid * _result = 0;
    HRESULT _hr = raw_Get(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructuralAxisGridPtr(_result, false);
}

#pragma implementation_key(4053)
inline IRobotStructuralAxisGridPtr IRobotStructuralAxisGridMngr::GetByName ( _bstr_t _name ) {
    struct IRobotStructuralAxisGrid * _result = 0;
    HRESULT _hr = raw_GetByName(_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructuralAxisGridPtr(_result, false);
}

#pragma implementation_key(4054)
inline VARIANT_BOOL IRobotStructuralAxisGridMngr::IsActive ( long _idx ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsActive(_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBackgroundLayers wrapper method implementations
//

#pragma implementation_key(4055)
inline long IRobotBackgroundLayers::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4056)
inline HRESULT IRobotBackgroundLayers::Get ( long _layer_idx, BSTR * _layer_name, VARIANT_BOOL * _is_imported ) {
    HRESULT _hr = raw_Get(_layer_idx, _layer_name, _is_imported);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4057)
inline VARIANT_BOOL IRobotBackgroundLayers::IsImported ( long _layer_idx ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsImported(_layer_idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4058)
inline HRESULT IRobotBackgroundLayers::SetImported ( long _layer_idx, VARIANT_BOOL _is_imported ) {
    HRESULT _hr = raw_SetImported(_layer_idx, _is_imported);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4059)
inline long IRobotBackgroundLayers::FindName ( _bstr_t _layer_name ) {
    long _result = 0;
    HRESULT _hr = raw_FindName(_layer_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBackgroundInsertParams wrapper method implementations
//

#pragma implementation_key(4060)
inline enum IRobotGeoPlane IRobotBackgroundInsertParams::GetPlane ( ) {
    enum IRobotGeoPlane _result;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4061)
inline void IRobotBackgroundInsertParams::PutPlane ( enum IRobotGeoPlane ret ) {
    HRESULT _hr = put_Plane(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4062)
inline IRobotGeoPoint2DPtr IRobotBackgroundInsertParams::GetReferencePoint ( ) {
    struct IRobotGeoPoint2D * _result = 0;
    HRESULT _hr = get_ReferencePoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint2DPtr(_result, false);
}

#pragma implementation_key(4063)
inline IRobotGeoPoint2DPtr IRobotBackgroundInsertParams::GetInsertionPoint ( ) {
    struct IRobotGeoPoint2D * _result = 0;
    HRESULT _hr = get_InsertionPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint2DPtr(_result, false);
}

#pragma implementation_key(4064)
inline double IRobotBackgroundInsertParams::GetScalingFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScalingFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4065)
inline void IRobotBackgroundInsertParams::PutScalingFactor ( double ret ) {
    HRESULT _hr = put_ScalingFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4066)
inline double IRobotBackgroundInsertParams::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4067)
inline void IRobotBackgroundInsertParams::PutRotationAngle ( double ret ) {
    HRESULT _hr = put_RotationAngle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4068)
inline VARIANT_BOOL IRobotBackgroundInsertParams::GetMirror ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Mirror(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4069)
inline void IRobotBackgroundInsertParams::PutMirror ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Mirror(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4070)
inline _bstr_t IRobotBackgroundInsertParams::GetUnits ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4071)
inline void IRobotBackgroundInsertParams::PutUnits ( _bstr_t ret ) {
    HRESULT _hr = put_Units(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4072)
inline double IRobotBackgroundInsertParams::GetPositionOnNormalAxis ( ) {
    double _result = 0;
    HRESULT _hr = get_PositionOnNormalAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4073)
inline void IRobotBackgroundInsertParams::PutPositionOnNormalAxis ( double ret ) {
    HRESULT _hr = put_PositionOnNormalAxis(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4074)
inline IRobotBackgroundLayersPtr IRobotBackgroundInsertParams::GetLayers ( ) {
    struct IRobotBackgroundLayers * _result = 0;
    HRESULT _hr = get_Layers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBackgroundLayersPtr(_result, false);
}

//
// interface IRobotBackgroundVisibilityRange wrapper method implementations
//

#pragma implementation_key(4075)
inline enum IRobotBackgroundVisibilityRangeType IRobotBackgroundVisibilityRange::GetType ( ) {
    enum IRobotBackgroundVisibilityRangeType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4076)
inline void IRobotBackgroundVisibilityRange::PutType ( enum IRobotBackgroundVisibilityRangeType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4077)
inline double IRobotBackgroundVisibilityRange::GetFromPos ( ) {
    double _result = 0;
    HRESULT _hr = get_FromPos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4078)
inline void IRobotBackgroundVisibilityRange::PutFromPos ( double ret ) {
    HRESULT _hr = put_FromPos(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4079)
inline double IRobotBackgroundVisibilityRange::GetToPos ( ) {
    double _result = 0;
    HRESULT _hr = get_ToPos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4080)
inline void IRobotBackgroundVisibilityRange::PutToPos ( double ret ) {
    HRESULT _hr = put_ToPos(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotBackground wrapper method implementations
//

#pragma implementation_key(4081)
inline _bstr_t IRobotBackground::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4082)
inline void IRobotBackground::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4083)
inline _bstr_t IRobotBackground::GetFilePath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FilePath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4084)
inline void IRobotBackground::PutFilePath ( _bstr_t ret ) {
    HRESULT _hr = put_FilePath(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4085)
inline VARIANT_BOOL IRobotBackground::GetIsOn ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsOn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4086)
inline void IRobotBackground::PutIsOn ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsOn(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4087)
inline IRobotBackgroundInsertParamsPtr IRobotBackground::GetInsertParams ( ) {
    struct IRobotBackgroundInsertParams * _result = 0;
    HRESULT _hr = get_InsertParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBackgroundInsertParamsPtr(_result, false);
}

#pragma implementation_key(4088)
inline IRobotBackgroundVisibilityRangePtr IRobotBackground::GetVisibilityRange ( ) {
    struct IRobotBackgroundVisibilityRange * _result = 0;
    HRESULT _hr = get_VisibilityRange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBackgroundVisibilityRangePtr(_result, false);
}

#pragma implementation_key(4089)
inline long IRobotBackground::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4090)
inline void IRobotBackground::PutColor ( long ret ) {
    HRESULT _hr = put_Color(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4091)
inline long IRobotBackground::GetNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4092)
inline VARIANT_BOOL IRobotBackground::Save ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Save(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotBackgroundServer wrapper method implementations
//

#pragma implementation_key(4093)
inline IRobotBackgroundPtr IRobotBackgroundServer::Create ( _bstr_t _file_path, VARIANT_BOOL _as_link ) {
    struct IRobotBackground * _result = 0;
    HRESULT _hr = raw_Create(_file_path, _as_link, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBackgroundPtr(_result, false);
}

#pragma implementation_key(4094)
inline HRESULT IRobotBackgroundServer::Remove ( long _number ) {
    HRESULT _hr = raw_Remove(_number);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4095)
inline HRESULT IRobotBackgroundServer::RemoveAll ( ) {
    HRESULT _hr = raw_RemoveAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4096)
inline IRobotBackgroundPtr IRobotBackgroundServer::Get ( long _number ) {
    struct IRobotBackground * _result = 0;
    HRESULT _hr = raw_Get(_number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBackgroundPtr(_result, false);
}

#pragma implementation_key(4097)
inline SAFEARRAY * IRobotBackgroundServer::GetAllNumbers ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAllNumbers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IRobotSMX wrapper method implementations
//

#pragma implementation_key(4098)
inline HRESULT _IRobotSMX::ImportFromString ( _bstr_t smx, _bstr_t options, IDispatch * observer ) {
    HRESULT _hr = raw_ImportFromString(smx, options, observer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4099)
inline HRESULT _IRobotSMX::ExportToString ( BSTR * smx, _bstr_t options, IDispatch * observer ) {
    HRESULT _hr = raw_ExportToString(smx, options, observer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSTRParameter wrapper method implementations
//

#pragma implementation_key(4100)
inline enum IRobotSTRParamType IRobotSTRParameter::GetType ( ) {
    enum IRobotSTRParamType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4101)
inline _bstr_t IRobotSTRParameter::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4102)
inline _bstr_t IRobotSTRParameter::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4103)
inline long IRobotSTRParameter::GetIsActive ( ) {
    long _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4104)
inline long IRobotSTRParameter::GetIntegerVal ( ) {
    long _result = 0;
    HRESULT _hr = get_IntegerVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4105)
inline void IRobotSTRParameter::PutIntegerVal ( long ret ) {
    HRESULT _hr = put_IntegerVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4106)
inline double IRobotSTRParameter::GetDoubleVal_1 ( ) {
    double _result = 0;
    HRESULT _hr = get_DoubleVal_1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4107)
inline void IRobotSTRParameter::PutDoubleVal_1 ( double ret ) {
    HRESULT _hr = put_DoubleVal_1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4108)
inline double IRobotSTRParameter::GetDoubleVal_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_DoubleVal_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4109)
inline void IRobotSTRParameter::PutDoubleVal_2 ( double ret ) {
    HRESULT _hr = put_DoubleVal_2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4110)
inline double IRobotSTRParameter::GetDoubleVal_3 ( ) {
    double _result = 0;
    HRESULT _hr = get_DoubleVal_3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4111)
inline void IRobotSTRParameter::PutDoubleVal_3 ( double ret ) {
    HRESULT _hr = put_DoubleVal_3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4112)
inline _bstr_t IRobotSTRParameter::GetTextVal ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4113)
inline void IRobotSTRParameter::PutTextVal ( _bstr_t ret ) {
    HRESULT _hr = put_TextVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4114)
inline _bstr_t IRobotSTRParameter::GetTextList ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4115)
inline void IRobotSTRParameter::PutTextList ( _bstr_t ret ) {
    HRESULT _hr = put_TextList(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4116)
inline _bstr_t IRobotSTRParameter::GetSelectionVal ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SelectionVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4117)
inline void IRobotSTRParameter::PutSelectionVal ( _bstr_t ret ) {
    HRESULT _hr = put_SelectionVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4118)
inline _bstr_t IRobotSTRParameter::GetFilePathVal ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FilePathVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4119)
inline void IRobotSTRParameter::PutFilePathVal ( _bstr_t ret ) {
    HRESULT _hr = put_FilePathVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotSTRParams wrapper method implementations
//

#pragma implementation_key(4120)
inline long IRobotSTRParams::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4121)
inline IRobotSTRParameterPtr IRobotSTRParams::GetParameter ( long idx ) {
    struct IRobotSTRParameter * _result = 0;
    HRESULT _hr = raw_GetParameter(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSTRParameterPtr(_result, false);
}

#pragma implementation_key(4122)
inline long IRobotSTRParams::FindParameter ( _bstr_t param_name ) {
    long _result = 0;
    HRESULT _hr = raw_FindParameter(param_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotStructuralAxisSequenceList wrapper method implementations
//

#pragma implementation_key(4123)
inline long IRobotStructuralAxisSequenceList::GetSequenceCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SequenceCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4124)
inline long IRobotStructuralAxisSequenceList::GetAxisCount ( ) {
    long _result = 0;
    HRESULT _hr = get_AxisCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4125)
inline double IRobotStructuralAxisSequenceList::GetStartPosition ( ) {
    double _result = 0;
    HRESULT _hr = get_StartPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4126)
inline void IRobotStructuralAxisSequenceList::PutStartPosition ( double ret ) {
    HRESULT _hr = put_StartPosition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4127)
inline HRESULT IRobotStructuralAxisSequenceList::AddSequence ( double _distance, long _repeat_number ) {
    HRESULT _hr = raw_AddSequence(_distance, _repeat_number);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4128)
inline HRESULT IRobotStructuralAxisSequenceList::GetSequence ( long _idx, double * _distance, long * _repeat_number ) {
    HRESULT _hr = raw_GetSequence(_idx, _distance, _repeat_number);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4129)
inline VARIANT_BOOL IRobotStructuralAxisSequenceList::GetAxis ( long _idx, BSTR * _label, double * _position, VARIANT_BOOL * _singleout ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetAxis(_idx, _label, _position, _singleout, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4130)
inline HRESULT IRobotStructuralAxisSequenceList::SingleOutAxis ( long _idx, VARIANT_BOOL _singleout ) {
    HRESULT _hr = raw_SingleOutAxis(_idx, _singleout);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4131)
inline HRESULT IRobotStructuralAxisSequenceList::SetAxisLabel ( long _idx, _bstr_t _label ) {
    HRESULT _hr = raw_SetAxisLabel(_idx, _label);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4132)
inline long IRobotStructuralAxisSequenceList::FindAxisByPos ( double _pos ) {
    long _result = 0;
    HRESULT _hr = raw_FindAxisByPos(_pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4133)
inline HRESULT IRobotStructuralAxisSequenceList::DeleteSequence ( long _idx ) {
    HRESULT _hr = raw_DeleteSequence(_idx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4134)
inline HRESULT IRobotStructuralAxisSequenceList::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4135)
inline HRESULT IRobotStructuralAxisSequenceList::SetLabelFormat ( enum IRobotStructuralAxisLabelType _label_type, _bstr_t _label_def, VARIANT_BOOL _reversed ) {
    HRESULT _hr = raw_SetLabelFormat(_label_type, _label_def, _reversed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotStructuralAxisGridCartesian wrapper method implementations
//

#pragma implementation_key(4136)
inline IRobotStructuralAxisSequenceListPtr IRobotStructuralAxisGridCartesian::GetX ( ) {
    struct IRobotStructuralAxisSequenceList * _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructuralAxisSequenceListPtr(_result, false);
}

#pragma implementation_key(4137)
inline IRobotStructuralAxisSequenceListPtr IRobotStructuralAxisGridCartesian::GetY ( ) {
    struct IRobotStructuralAxisSequenceList * _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructuralAxisSequenceListPtr(_result, false);
}

#pragma implementation_key(4138)
inline IRobotStructuralAxisSequenceListPtr IRobotStructuralAxisGridCartesian::GetZ ( ) {
    struct IRobotStructuralAxisSequenceList * _result = 0;
    HRESULT _hr = get_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructuralAxisSequenceListPtr(_result, false);
}

#pragma implementation_key(4139)
inline enum IRobotGeoCoordinateAxis IRobotStructuralAxisGridCartesian::GetRotationAxis ( ) {
    enum IRobotGeoCoordinateAxis _result;
    HRESULT _hr = get_RotationAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4140)
inline void IRobotStructuralAxisGridCartesian::PutRotationAxis ( enum IRobotGeoCoordinateAxis ret ) {
    HRESULT _hr = put_RotationAxis(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4141)
inline double IRobotStructuralAxisGridCartesian::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4142)
inline void IRobotStructuralAxisGridCartesian::PutRotationAngle ( double ret ) {
    HRESULT _hr = put_RotationAngle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4143)
inline HRESULT IRobotStructuralAxisGridCartesian::SetRelativeToPoint ( VARIANT_BOOL _set, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetRelativeToPoint(_set, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4144)
inline VARIANT_BOOL IRobotStructuralAxisGridCartesian::GetRelativeToPoint ( double * _x, double * _y, double * _z ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetRelativeToPoint(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4145)
inline VARIANT_BOOL IRobotStructuralAxisGridCartesian::GetIncludeStoreysInZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeStoreysInZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4146)
inline void IRobotStructuralAxisGridCartesian::PutIncludeStoreysInZ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeStoreysInZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4147)
inline IRobotStoreySelectionPtr IRobotStructuralAxisGridCartesian::GetStoreysInZ ( ) {
    struct IRobotStoreySelection * _result = 0;
    HRESULT _hr = get_StoreysInZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStoreySelectionPtr(_result, false);
}

//
// interface IRobotSWCodePLParams wrapper method implementations
//

#pragma implementation_key(4148)
inline double IRobotSWCodePLParams::GetStructureHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StructureHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4149)
inline void IRobotSWCodePLParams::PutStructureHeight ( double ret ) {
    HRESULT _hr = put_StructureHeight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4150)
inline double IRobotSWCodePLParams::GetReferenceLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_ReferenceLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4151)
inline void IRobotSWCodePLParams::PutReferenceLevel ( double ret ) {
    HRESULT _hr = put_ReferenceLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4152)
inline double IRobotSWCodePLParams::GetAltitude ( ) {
    double _result = 0;
    HRESULT _hr = get_Altitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4153)
inline void IRobotSWCodePLParams::PutAltitude ( double ret ) {
    HRESULT _hr = put_Altitude(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4154)
inline VARIANT_BOOL IRobotSWCodePLParams::GetNodalLoadsForAllBars ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NodalLoadsForAllBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4155)
inline void IRobotSWCodePLParams::PutNodalLoadsForAllBars ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_NodalLoadsForAllBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4156)
inline _bstr_t IRobotSWCodePLParams::GetNodalLoadsForBarsList ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NodalLoadsForBarsList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4157)
inline void IRobotSWCodePLParams::PutNodalLoadsForBarsList ( _bstr_t ret ) {
    HRESULT _hr = put_NodalLoadsForBarsList(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4158)
inline enum IRobotSWCodePLWindZone IRobotSWCodePLParams::GetWindZone ( ) {
    enum IRobotSWCodePLWindZone _result;
    HRESULT _hr = get_WindZone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4159)
inline void IRobotSWCodePLParams::PutWindZone ( enum IRobotSWCodePLWindZone ret ) {
    HRESULT _hr = put_WindZone(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4160)
inline enum IRobotSWCodePLWindSite IRobotSWCodePLParams::GetWindSite ( ) {
    enum IRobotSWCodePLWindSite _result;
    HRESULT _hr = get_WindSite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4161)
inline void IRobotSWCodePLParams::PutWindSite ( enum IRobotSWCodePLWindSite ret ) {
    HRESULT _hr = put_WindSite(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4162)
inline VARIANT_BOOL IRobotSWCodePLParams::GetWindPressureAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindPressureAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4163)
inline void IRobotSWCodePLParams::PutWindPressureAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindPressureAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4164)
inline double IRobotSWCodePLParams::GetWindPressure ( ) {
    double _result = 0;
    HRESULT _hr = get_WindPressure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4165)
inline void IRobotSWCodePLParams::PutWindPressure ( double ret ) {
    HRESULT _hr = put_WindPressure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4166)
inline enum IRobotSWCodePLWindPressDistribType IRobotSWCodePLParams::GetWindPressureDistribOnHeight ( ) {
    enum IRobotSWCodePLWindPressDistribType _result;
    HRESULT _hr = get_WindPressureDistribOnHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4167)
inline void IRobotSWCodePLParams::PutWindPressureDistribOnHeight ( enum IRobotSWCodePLWindPressDistribType ret ) {
    HRESULT _hr = put_WindPressureDistribOnHeight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4168)
inline VARIANT_BOOL IRobotSWCodePLParams::GetWindMultipleRoofs ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindMultipleRoofs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4169)
inline void IRobotSWCodePLParams::PutWindMultipleRoofs ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindMultipleRoofs(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4170)
inline VARIANT_BOOL IRobotSWCodePLParams::GetWindDynamicAction ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindDynamicAction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4171)
inline void IRobotSWCodePLParams::PutWindDynamicAction ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindDynamicAction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4172)
inline double IRobotSWCodePLParams::GetWindDynamicDecrement ( ) {
    double _result = 0;
    HRESULT _hr = get_WindDynamicDecrement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4173)
inline void IRobotSWCodePLParams::PutWindDynamicDecrement ( double ret ) {
    HRESULT _hr = put_WindDynamicDecrement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4174)
inline double IRobotSWCodePLParams::GetWindDynamicPeriod ( ) {
    double _result = 0;
    HRESULT _hr = get_WindDynamicPeriod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4175)
inline void IRobotSWCodePLParams::PutWindDynamicPeriod ( double ret ) {
    HRESULT _hr = put_WindDynamicPeriod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4176)
inline enum IRobotSWCodePLSnowZone IRobotSWCodePLParams::GetSnowZone ( ) {
    enum IRobotSWCodePLSnowZone _result;
    HRESULT _hr = get_SnowZone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4177)
inline void IRobotSWCodePLParams::PutSnowZone ( enum IRobotSWCodePLSnowZone ret ) {
    HRESULT _hr = put_SnowZone(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4178)
inline VARIANT_BOOL IRobotSWCodePLParams::GetSnowPressureAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SnowPressureAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4179)
inline void IRobotSWCodePLParams::PutSnowPressureAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SnowPressureAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4180)
inline double IRobotSWCodePLParams::GetSnowPressure ( ) {
    double _result = 0;
    HRESULT _hr = get_SnowPressure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4181)
inline void IRobotSWCodePLParams::PutSnowPressure ( double ret ) {
    HRESULT _hr = put_SnowPressure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4182)
inline VARIANT_BOOL IRobotSWCodePLParams::GetSnowRedistribution ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SnowRedistribution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4183)
inline void IRobotSWCodePLParams::PutSnowRedistribution ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SnowRedistribution(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4184)
inline double IRobotSWCodePLParams::GetPermLeftSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermLeftSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4185)
inline void IRobotSWCodePLParams::PutPermLeftSide ( double ret ) {
    HRESULT _hr = put_PermLeftSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4186)
inline double IRobotSWCodePLParams::GetPermRightSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermRightSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4187)
inline void IRobotSWCodePLParams::PutPermRightSide ( double ret ) {
    HRESULT _hr = put_PermRightSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4188)
inline double IRobotSWCodePLParams::GetPermFront ( ) {
    double _result = 0;
    HRESULT _hr = get_PermFront(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4189)
inline void IRobotSWCodePLParams::PutPermFront ( double ret ) {
    HRESULT _hr = put_PermFront(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4190)
inline double IRobotSWCodePLParams::GetPermRear ( ) {
    double _result = 0;
    HRESULT _hr = get_PermRear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4191)
inline void IRobotSWCodePLParams::PutPermRear ( double ret ) {
    HRESULT _hr = put_PermRear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4192)
inline IRobotNumbersCollectionPtr IRobotSWCodePLParams::GetIsolatedRoofs ( ) {
    struct IRobotNumbersCollection * _result = 0;
    HRESULT _hr = get_IsolatedRoofs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersCollectionPtr(_result, false);
}

#pragma implementation_key(4193)
inline double IRobotSWCodePLParams::WindBarCoeffGet ( long bar_num ) {
    double _result = 0;
    HRESULT _hr = raw_WindBarCoeffGet(bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4194)
inline HRESULT IRobotSWCodePLParams::WindBarCoeffSet ( long bar_num, double bar_coeff ) {
    HRESULT _hr = raw_WindBarCoeffSet(bar_num, bar_coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4195)
inline double IRobotSWCodePLParams::SnowBarCoeffGet ( long bar_num ) {
    double _result = 0;
    HRESULT _hr = raw_SnowBarCoeffGet(bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4196)
inline HRESULT IRobotSWCodePLParams::SnowBarCoeffSet ( long bar_num, double bar_coef ) {
    HRESULT _hr = raw_SnowBarCoeffSet(bar_num, bar_coef);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4197)
inline HRESULT IRobotSWCodePLParams::IsolatedRoofSetLocation ( long bar_num, double loc, VARIANT_BOOL _relative ) {
    HRESULT _hr = raw_IsolatedRoofSetLocation(bar_num, loc, _relative);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4198)
inline double IRobotSWCodePLParams::IsolatedRoofGetLocation ( long bar_num, VARIANT_BOOL Relative ) {
    double _result = 0;
    HRESULT _hr = raw_IsolatedRoofGetLocation(bar_num, Relative, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotSWCodeFRParams wrapper method implementations
//

#pragma implementation_key(4199)
inline double IRobotSWCodeFRParams::GetStructureHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StructureHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4200)
inline void IRobotSWCodeFRParams::PutStructureHeight ( double ret ) {
    HRESULT _hr = put_StructureHeight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4201)
inline double IRobotSWCodeFRParams::GetReferenceLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_ReferenceLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4202)
inline void IRobotSWCodeFRParams::PutReferenceLevel ( double ret ) {
    HRESULT _hr = put_ReferenceLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4203)
inline double IRobotSWCodeFRParams::GetAltitude ( ) {
    double _result = 0;
    HRESULT _hr = get_Altitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4204)
inline void IRobotSWCodeFRParams::PutAltitude ( double ret ) {
    HRESULT _hr = put_Altitude(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4205)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetNodalLoadsForAllBars ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NodalLoadsForAllBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4206)
inline void IRobotSWCodeFRParams::PutNodalLoadsForAllBars ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_NodalLoadsForAllBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4207)
inline _bstr_t IRobotSWCodeFRParams::GetNodalLoadsForBarsList ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NodalLoadsForBarsList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4208)
inline void IRobotSWCodeFRParams::PutNodalLoadsForBarsList ( _bstr_t ret ) {
    HRESULT _hr = put_NodalLoadsForBarsList(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4209)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetRiseOfRoofAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RiseOfRoofAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4210)
inline void IRobotSWCodeFRParams::PutRiseOfRoofAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RiseOfRoofAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4211)
inline double IRobotSWCodeFRParams::GetRiseOfRoof ( ) {
    double _result = 0;
    HRESULT _hr = get_RiseOfRoof(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4212)
inline void IRobotSWCodeFRParams::PutRiseOfRoof ( double ret ) {
    HRESULT _hr = put_RiseOfRoof(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4213)
inline _bstr_t IRobotSWCodeFRParams::GetWindRegion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_WindRegion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4214)
inline void IRobotSWCodeFRParams::PutWindRegion ( _bstr_t ret ) {
    HRESULT _hr = put_WindRegion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4215)
inline enum IRobotSWCodeFRWindSite IRobotSWCodeFRParams::GetWindSite ( ) {
    enum IRobotSWCodeFRWindSite _result;
    HRESULT _hr = get_WindSite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4216)
inline void IRobotSWCodeFRParams::PutWindSite ( enum IRobotSWCodeFRWindSite ret ) {
    HRESULT _hr = put_WindSite(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4217)
inline enum IRobotSWCodeFRWindType IRobotSWCodeFRParams::GetWindType ( ) {
    enum IRobotSWCodeFRWindType _result;
    HRESULT _hr = get_WindType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4218)
inline void IRobotSWCodeFRParams::PutWindType ( enum IRobotSWCodeFRWindType ret ) {
    HRESULT _hr = put_WindType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4219)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindCoastalArea ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindCoastalArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4220)
inline void IRobotSWCodeFRParams::PutWindCoastalArea ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindCoastalArea(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4221)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindPressureVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindPressureVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4222)
inline void IRobotSWCodeFRParams::PutWindPressureVariable ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindPressureVariable(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4223)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindPressureAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindPressureAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4224)
inline void IRobotSWCodeFRParams::PutWindPressureAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindPressureAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4225)
inline double IRobotSWCodeFRParams::GetWindPressure ( ) {
    double _result = 0;
    HRESULT _hr = get_WindPressure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4226)
inline void IRobotSWCodeFRParams::PutWindPressure ( double ret ) {
    HRESULT _hr = put_WindPressure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4227)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindDeltaCoeffAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindDeltaCoeffAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4228)
inline void IRobotSWCodeFRParams::PutWindDeltaCoeffAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindDeltaCoeffAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4229)
inline double IRobotSWCodeFRParams::GetWindDeltaCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_WindDeltaCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4230)
inline void IRobotSWCodeFRParams::PutWindDeltaCoeff ( double ret ) {
    HRESULT _hr = put_WindDeltaCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4231)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindMultipleRoof ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindMultipleRoof(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4232)
inline void IRobotSWCodeFRParams::PutWindMultipleRoof ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindMultipleRoof(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4233)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindFacadeOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindFacadeOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4234)
inline void IRobotSWCodeFRParams::PutWindFacadeOffset ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindFacadeOffset(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4235)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindDynamicAction ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindDynamicAction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4236)
inline void IRobotSWCodeFRParams::PutWindDynamicAction ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindDynamicAction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4237)
inline _bstr_t IRobotSWCodeFRParams::GetSnowRegion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SnowRegion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4238)
inline void IRobotSWCodeFRParams::PutSnowRegion ( _bstr_t ret ) {
    HRESULT _hr = put_SnowRegion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4239)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetSnowPressureNormalAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SnowPressureNormalAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4240)
inline void IRobotSWCodeFRParams::PutSnowPressureNormalAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SnowPressureNormalAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4241)
inline double IRobotSWCodeFRParams::GetSnowPressureNormal ( ) {
    double _result = 0;
    HRESULT _hr = get_SnowPressureNormal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4242)
inline void IRobotSWCodeFRParams::PutSnowPressureNormal ( double ret ) {
    HRESULT _hr = put_SnowPressureNormal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4243)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetSnowPressureExtremeAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SnowPressureExtremeAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4244)
inline void IRobotSWCodeFRParams::PutSnowPressureExtremeAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SnowPressureExtremeAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4245)
inline double IRobotSWCodeFRParams::GetSnowPressureExtreme ( ) {
    double _result = 0;
    HRESULT _hr = get_SnowPressureExtreme(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4246)
inline void IRobotSWCodeFRParams::PutSnowPressureExtreme ( double ret ) {
    HRESULT _hr = put_SnowPressureExtreme(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4247)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetSnowRedistribution ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SnowRedistribution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4248)
inline void IRobotSWCodeFRParams::PutSnowRedistribution ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SnowRedistribution(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4249)
inline _bstr_t IRobotSWCodeFRParams::GetSnowGutterBars ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SnowGutterBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4250)
inline void IRobotSWCodeFRParams::PutSnowGutterBars ( _bstr_t ret ) {
    HRESULT _hr = put_SnowGutterBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4251)
inline double IRobotSWCodeFRParams::GetPermLeftSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermLeftSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4252)
inline void IRobotSWCodeFRParams::PutPermLeftSide ( double ret ) {
    HRESULT _hr = put_PermLeftSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4253)
inline double IRobotSWCodeFRParams::GetPermRightSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermRightSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4254)
inline void IRobotSWCodeFRParams::PutPermRightSide ( double ret ) {
    HRESULT _hr = put_PermRightSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4255)
inline double IRobotSWCodeFRParams::GetPermFront ( ) {
    double _result = 0;
    HRESULT _hr = get_PermFront(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4256)
inline void IRobotSWCodeFRParams::PutPermFront ( double ret ) {
    HRESULT _hr = put_PermFront(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4257)
inline double IRobotSWCodeFRParams::GetPermRear ( ) {
    double _result = 0;
    HRESULT _hr = get_PermRear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4258)
inline void IRobotSWCodeFRParams::PutPermRear ( double ret ) {
    HRESULT _hr = put_PermRear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4259)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetPermDoorLeftSidePresent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PermDoorLeftSidePresent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4260)
inline void IRobotSWCodeFRParams::PutPermDoorLeftSidePresent ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PermDoorLeftSidePresent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4261)
inline double IRobotSWCodeFRParams::GetPermDoorLeftSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermDoorLeftSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4262)
inline void IRobotSWCodeFRParams::PutPermDoorLeftSide ( double ret ) {
    HRESULT _hr = put_PermDoorLeftSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4263)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetPermDoorRightSidePresent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PermDoorRightSidePresent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4264)
inline void IRobotSWCodeFRParams::PutPermDoorRightSidePresent ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PermDoorRightSidePresent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4265)
inline double IRobotSWCodeFRParams::GetPermDoorRightSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermDoorRightSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4266)
inline void IRobotSWCodeFRParams::PutPermDoorRightSide ( double ret ) {
    HRESULT _hr = put_PermDoorRightSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4267)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetPermDoorFrontPresent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PermDoorFrontPresent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4268)
inline void IRobotSWCodeFRParams::PutPermDoorFrontPresent ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PermDoorFrontPresent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4269)
inline double IRobotSWCodeFRParams::GetPermDoorFront ( ) {
    double _result = 0;
    HRESULT _hr = get_PermDoorFront(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4270)
inline void IRobotSWCodeFRParams::PutPermDoorFront ( double ret ) {
    HRESULT _hr = put_PermDoorFront(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4271)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetPermDoorRearPresent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PermDoorRearPresent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4272)
inline void IRobotSWCodeFRParams::PutPermDoorRearPresent ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PermDoorRearPresent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4273)
inline double IRobotSWCodeFRParams::GetPermDoorRear ( ) {
    double _result = 0;
    HRESULT _hr = get_PermDoorRear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4274)
inline void IRobotSWCodeFRParams::PutPermDoorRear ( double ret ) {
    HRESULT _hr = put_PermDoorRear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4275)
inline enum IRobotSWCodeFRSurfaceType IRobotSWCodeFRParams::GetSurfaceLower ( ) {
    enum IRobotSWCodeFRSurfaceType _result;
    HRESULT _hr = get_SurfaceLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4276)
inline void IRobotSWCodeFRParams::PutSurfaceLower ( enum IRobotSWCodeFRSurfaceType ret ) {
    HRESULT _hr = put_SurfaceLower(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4277)
inline enum IRobotSWCodeFRSurfaceType IRobotSWCodeFRParams::GetSurfaceUpper ( ) {
    enum IRobotSWCodeFRSurfaceType _result;
    HRESULT _hr = get_SurfaceUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4278)
inline void IRobotSWCodeFRParams::PutSurfaceUpper ( enum IRobotSWCodeFRSurfaceType ret ) {
    HRESULT _hr = put_SurfaceUpper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4279)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetOpenStructure ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OpenStructure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4280)
inline void IRobotSWCodeFRParams::PutOpenStructure ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_OpenStructure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4281)
inline IRobotNumbersCollectionPtr IRobotSWCodeFRParams::GetIsolatedRoofs ( ) {
    struct IRobotNumbersCollection * _result = 0;
    HRESULT _hr = get_IsolatedRoofs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNumbersCollectionPtr(_result, false);
}

#pragma implementation_key(4282)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetSnowIsWaterOutflow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SnowIsWaterOutflow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4283)
inline void IRobotSWCodeFRParams::PutSnowIsWaterOutflow ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SnowIsWaterOutflow(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4284)
inline double IRobotSWCodeFRParams::GetSnowWaterOutflow ( ) {
    double _result = 0;
    HRESULT _hr = get_SnowWaterOutflow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4285)
inline void IRobotSWCodeFRParams::PutSnowWaterOutflow ( double ret ) {
    HRESULT _hr = put_SnowWaterOutflow(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4286)
inline _bstr_t IRobotSWCodeFRParams::GetSnowObstacles ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SnowObstacles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4287)
inline void IRobotSWCodeFRParams::PutSnowObstacles ( _bstr_t ret ) {
    HRESULT _hr = put_SnowObstacles(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4288)
inline double IRobotSWCodeFRParams::GetWindDynamicActionPeriod ( ) {
    double _result = 0;
    HRESULT _hr = get_WindDynamicActionPeriod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4289)
inline void IRobotSWCodeFRParams::PutWindDynamicActionPeriod ( double ret ) {
    HRESULT _hr = put_WindDynamicActionPeriod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4290)
inline double IRobotSWCodeFRParams::GetWindDynamicActionCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_WindDynamicActionCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4291)
inline void IRobotSWCodeFRParams::PutWindDynamicActionCoeff ( double ret ) {
    HRESULT _hr = put_WindDynamicActionCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4292)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindDynamicActionCoeffAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindDynamicActionCoeffAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4293)
inline void IRobotSWCodeFRParams::PutWindDynamicActionCoeffAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindDynamicActionCoeffAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4294)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindDynamicActionSteelStructure ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindDynamicActionSteelStructure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4295)
inline void IRobotSWCodeFRParams::PutWindDynamicActionSteelStructure ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindDynamicActionSteelStructure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4296)
inline enum IRobotSWCodeFRSnowType IRobotSWCodeFRParams::GetSnowType ( ) {
    enum IRobotSWCodeFRSnowType _result;
    HRESULT _hr = get_SnowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4297)
inline void IRobotSWCodeFRParams::PutSnowType ( enum IRobotSWCodeFRSnowType ret ) {
    HRESULT _hr = put_SnowType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4298)
inline VARIANT_BOOL IRobotSWCodeFRParams::GetWindPressureCeCiMinimum ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindPressureCeCiMinimum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4299)
inline void IRobotSWCodeFRParams::PutWindPressureCeCiMinimum ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindPressureCeCiMinimum(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4300)
inline double IRobotSWCodeFRParams::WindBarCoeffGet ( long bar_num ) {
    double _result = 0;
    HRESULT _hr = raw_WindBarCoeffGet(bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4301)
inline HRESULT IRobotSWCodeFRParams::WindBarCoeffSet ( long bar_num, double _coeff ) {
    HRESULT _hr = raw_WindBarCoeffSet(bar_num, _coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4302)
inline double IRobotSWCodeFRParams::SnowBarCoeffGet ( long bar_num ) {
    double _result = 0;
    HRESULT _hr = raw_SnowBarCoeffGet(bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4303)
inline HRESULT IRobotSWCodeFRParams::SnowBarCoeffSet ( long bar_num, double _coeff ) {
    HRESULT _hr = raw_SnowBarCoeffSet(bar_num, _coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4304)
inline double IRobotSWCodeFRParams::IsolatedRoofGetLocation ( long bar_num, VARIANT_BOOL _relative ) {
    double _result = 0;
    HRESULT _hr = raw_IsolatedRoofGetLocation(bar_num, _relative, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4305)
inline HRESULT IRobotSWCodeFRParams::IsolatedRoofSetLocation ( long bar_num, double _location, VARIANT_BOOL _relative ) {
    HRESULT _hr = raw_IsolatedRoofSetLocation(bar_num, _location, _relative);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotSWCodeECParams wrapper method implementations
//

#pragma implementation_key(4306)
inline double IRobotSWCodeECParams::GetStructureHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StructureHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4307)
inline void IRobotSWCodeECParams::PutStructureHeight ( double ret ) {
    HRESULT _hr = put_StructureHeight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4308)
inline double IRobotSWCodeECParams::GetReferenceLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_ReferenceLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4309)
inline void IRobotSWCodeECParams::PutReferenceLevel ( double ret ) {
    HRESULT _hr = put_ReferenceLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4310)
inline double IRobotSWCodeECParams::GetAltitude ( ) {
    double _result = 0;
    HRESULT _hr = get_Altitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4311)
inline void IRobotSWCodeECParams::PutAltitude ( double ret ) {
    HRESULT _hr = put_Altitude(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4312)
inline VARIANT_BOOL IRobotSWCodeECParams::GetNodalLoadsForAllBars ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NodalLoadsForAllBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4313)
inline void IRobotSWCodeECParams::PutNodalLoadsForAllBars ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_NodalLoadsForAllBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4314)
inline _bstr_t IRobotSWCodeECParams::GetNodalLoadsForBarsList ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NodalLoadsForBarsList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4315)
inline void IRobotSWCodeECParams::PutNodalLoadsForBarsList ( _bstr_t ret ) {
    HRESULT _hr = put_NodalLoadsForBarsList(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4316)
inline double IRobotSWCodeECParams::GetLeftWind2NordAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_LeftWind2NordAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4317)
inline void IRobotSWCodeECParams::PutLeftWind2NordAngle ( double ret ) {
    HRESULT _hr = put_LeftWind2NordAngle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4318)
inline VARIANT_BOOL IRobotSWCodeECParams::GetGlobalCDIR ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GlobalCDIR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4319)
inline void IRobotSWCodeECParams::PutGlobalCDIR ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GlobalCDIR(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4320)
inline _bstr_t IRobotSWCodeECParams::GetStructureAgeCode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StructureAgeCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4321)
inline void IRobotSWCodeECParams::PutStructureAgeCode ( _bstr_t ret ) {
    HRESULT _hr = put_StructureAgeCode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4322)
inline double IRobotSWCodeECParams::GetStructureAge ( ) {
    double _result = 0;
    HRESULT _hr = get_StructureAge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4323)
inline void IRobotSWCodeECParams::PutStructureAge ( double ret ) {
    HRESULT _hr = put_StructureAge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4324)
inline double IRobotSWCodeECParams::GetStructureP ( ) {
    double _result = 0;
    HRESULT _hr = get_StructureP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4325)
inline void IRobotSWCodeECParams::PutStructureP ( double ret ) {
    HRESULT _hr = put_StructureP(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4326)
inline double IRobotSWCodeECParams::GetWindCDIR ( ) {
    double _result = 0;
    HRESULT _hr = get_WindCDIR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4327)
inline void IRobotSWCodeECParams::PutWindCDIR ( double ret ) {
    HRESULT _hr = put_WindCDIR(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4328)
inline double IRobotSWCodeECParams::GetWindCALT ( ) {
    double _result = 0;
    HRESULT _hr = get_WindCALT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4329)
inline void IRobotSWCodeECParams::PutWindCALT ( double ret ) {
    HRESULT _hr = put_WindCALT(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4330)
inline double IRobotSWCodeECParams::GetWindCTEM ( ) {
    double _result = 0;
    HRESULT _hr = get_WindCTEM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4331)
inline void IRobotSWCodeECParams::PutWindCTEM ( double ret ) {
    HRESULT _hr = put_WindCTEM(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4332)
inline VARIANT_BOOL IRobotSWCodeECParams::GetWindPressureAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindPressureAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4333)
inline void IRobotSWCodeECParams::PutWindPressureAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindPressureAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4334)
inline double IRobotSWCodeECParams::GetWindQref ( ) {
    double _result = 0;
    HRESULT _hr = get_WindQref(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4335)
inline void IRobotSWCodeECParams::PutWindQref ( double ret ) {
    HRESULT _hr = put_WindQref(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4336)
inline double IRobotSWCodeECParams::GetWindVref0 ( ) {
    double _result = 0;
    HRESULT _hr = get_WindVref0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4337)
inline void IRobotSWCodeECParams::PutWindVref0 ( double ret ) {
    HRESULT _hr = put_WindVref0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4338)
inline double IRobotSWCodeECParams::GetWindQref0 ( ) {
    double _result = 0;
    HRESULT _hr = get_WindQref0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4339)
inline void IRobotSWCodeECParams::PutWindQref0 ( double ret ) {
    HRESULT _hr = put_WindQref0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4340)
inline double IRobotSWCodeECParams::GetWindQref0p ( ) {
    double _result = 0;
    HRESULT _hr = get_WindQref0p(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4341)
inline void IRobotSWCodeECParams::PutWindQref0p ( double ret ) {
    HRESULT _hr = put_WindQref0p(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4342)
inline VARIANT_BOOL IRobotSWCodeECParams::GetWindCtAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindCtAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4343)
inline void IRobotSWCodeECParams::PutWindCtAuto ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindCtAuto(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4344)
inline enum IRobotSWCodeECSiteType IRobotSWCodeECParams::GetWindSiteType ( ) {
    enum IRobotSWCodeECSiteType _result;
    HRESULT _hr = get_WindSiteType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4345)
inline void IRobotSWCodeECParams::PutWindSiteType ( enum IRobotSWCodeECSiteType ret ) {
    HRESULT _hr = put_WindSiteType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4346)
inline double IRobotSWCodeECParams::GetWindCt ( ) {
    double _result = 0;
    HRESULT _hr = get_WindCt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4347)
inline void IRobotSWCodeECParams::PutWindCt ( double ret ) {
    HRESULT _hr = put_WindCt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4348)
inline enum IRobotSWCodeECGroundType IRobotSWCodeECParams::GetGroundType ( ) {
    enum IRobotSWCodeECGroundType _result;
    HRESULT _hr = get_GroundType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4349)
inline void IRobotSWCodeECParams::PutGroundType ( enum IRobotSWCodeECGroundType ret ) {
    HRESULT _hr = put_GroundType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4350)
inline double IRobotSWCodeECParams::GetWindKT ( ) {
    double _result = 0;
    HRESULT _hr = get_WindKT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4351)
inline void IRobotSWCodeECParams::PutWindKT ( double ret ) {
    HRESULT _hr = put_WindKT(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4352)
inline double IRobotSWCodeECParams::GetWindZ0 ( ) {
    double _result = 0;
    HRESULT _hr = get_WindZ0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4353)
inline void IRobotSWCodeECParams::PutWindZ0 ( double ret ) {
    HRESULT _hr = put_WindZ0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4354)
inline double IRobotSWCodeECParams::GetWindZMin ( ) {
    double _result = 0;
    HRESULT _hr = get_WindZMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4355)
inline void IRobotSWCodeECParams::PutWindZMin ( double ret ) {
    HRESULT _hr = put_WindZMin(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4356)
inline double IRobotSWCodeECParams::GetWindE ( ) {
    double _result = 0;
    HRESULT _hr = get_WindE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4357)
inline void IRobotSWCodeECParams::PutWindE ( double ret ) {
    HRESULT _hr = put_WindE(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4358)
inline VARIANT_BOOL IRobotSWCodeECParams::GetWindAutoCd ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WindAutoCd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4359)
inline void IRobotSWCodeECParams::PutWindAutoCd ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_WindAutoCd(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4360)
inline enum IRobotSWCodeECCdType IRobotSWCodeECParams::GetWindCdType ( ) {
    enum IRobotSWCodeECCdType _result;
    HRESULT _hr = get_WindCdType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4361)
inline void IRobotSWCodeECParams::PutWindCdType ( enum IRobotSWCodeECCdType ret ) {
    HRESULT _hr = put_WindCdType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4362)
inline double IRobotSWCodeECParams::GetWindCd ( ) {
    double _result = 0;
    HRESULT _hr = get_WindCd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4363)
inline void IRobotSWCodeECParams::PutWindCd ( double ret ) {
    HRESULT _hr = put_WindCd(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4364)
inline double IRobotSWCodeECParams::GetSnowPressureNormal ( ) {
    double _result = 0;
    HRESULT _hr = get_SnowPressureNormal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4365)
inline void IRobotSWCodeECParams::PutSnowPressureNormal ( double ret ) {
    HRESULT _hr = put_SnowPressureNormal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4366)
inline double IRobotSWCodeECParams::GetSnowPressureExtreme ( ) {
    double _result = 0;
    HRESULT _hr = get_SnowPressureExtreme(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4367)
inline void IRobotSWCodeECParams::PutSnowPressureExtreme ( double ret ) {
    HRESULT _hr = put_SnowPressureExtreme(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4368)
inline VARIANT_BOOL IRobotSWCodeECParams::GetSnowRedistribution ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SnowRedistribution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4369)
inline void IRobotSWCodeECParams::PutSnowRedistribution ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SnowRedistribution(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4370)
inline _bstr_t IRobotSWCodeECParams::GetSnowGutterBars ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SnowGutterBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4371)
inline void IRobotSWCodeECParams::PutSnowGutterBars ( _bstr_t ret ) {
    HRESULT _hr = put_SnowGutterBars(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4372)
inline double IRobotSWCodeECParams::GetPermLeftSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermLeftSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4373)
inline void IRobotSWCodeECParams::PutPermLeftSide ( double ret ) {
    HRESULT _hr = put_PermLeftSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4374)
inline double IRobotSWCodeECParams::GetPermRightSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermRightSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4375)
inline void IRobotSWCodeECParams::PutPermRightSide ( double ret ) {
    HRESULT _hr = put_PermRightSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4376)
inline double IRobotSWCodeECParams::GetPermFront ( ) {
    double _result = 0;
    HRESULT _hr = get_PermFront(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4377)
inline void IRobotSWCodeECParams::PutPermFront ( double ret ) {
    HRESULT _hr = put_PermFront(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4378)
inline double IRobotSWCodeECParams::GetPermRear ( ) {
    double _result = 0;
    HRESULT _hr = get_PermRear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4379)
inline void IRobotSWCodeECParams::PutPermRear ( double ret ) {
    HRESULT _hr = put_PermRear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4380)
inline VARIANT_BOOL IRobotSWCodeECParams::GetPermDoorLeftSidePresent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PermDoorLeftSidePresent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4381)
inline void IRobotSWCodeECParams::PutPermDoorLeftSidePresent ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PermDoorLeftSidePresent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4382)
inline double IRobotSWCodeECParams::GetPermDoorLeftSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermDoorLeftSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4383)
inline void IRobotSWCodeECParams::PutPermDoorLeftSide ( double ret ) {
    HRESULT _hr = put_PermDoorLeftSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4384)
inline VARIANT_BOOL IRobotSWCodeECParams::GetPermDoorRightSidePresent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PermDoorRightSidePresent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4385)
inline void IRobotSWCodeECParams::PutPermDoorRightSidePresent ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PermDoorRightSidePresent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4386)
inline double IRobotSWCodeECParams::GetPermDoorRightSide ( ) {
    double _result = 0;
    HRESULT _hr = get_PermDoorRightSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4387)
inline void IRobotSWCodeECParams::PutPermDoorRightSide ( double ret ) {
    HRESULT _hr = put_PermDoorRightSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4388)
inline VARIANT_BOOL IRobotSWCodeECParams::GetPermDoorFrontPresent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PermDoorFrontPresent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4389)
inline void IRobotSWCodeECParams::PutPermDoorFrontPresent ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PermDoorFrontPresent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4390)
inline double IRobotSWCodeECParams::GetPermDoorFront ( ) {
    double _result = 0;
    HRESULT _hr = get_PermDoorFront(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4391)
inline void IRobotSWCodeECParams::PutPermDoorFront ( double ret ) {
    HRESULT _hr = put_PermDoorFront(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4392)
inline VARIANT_BOOL IRobotSWCodeECParams::GetPermDoorRearPresent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PermDoorRearPresent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4393)
inline void IRobotSWCodeECParams::PutPermDoorRearPresent ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_PermDoorRearPresent(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4394)
inline double IRobotSWCodeECParams::GetPermDoorRear ( ) {
    double _result = 0;
    HRESULT _hr = get_PermDoorRear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4395)
inline void IRobotSWCodeECParams::PutPermDoorRear ( double ret ) {
    HRESULT _hr = put_PermDoorRear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4396)
inline double IRobotSWCodeECParams::WindBarCoeffGet ( long _bar_num ) {
    double _result = 0;
    HRESULT _hr = raw_WindBarCoeffGet(_bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4397)
inline HRESULT IRobotSWCodeECParams::WindBarCoeffSet ( long _bar_num, double _coeff ) {
    HRESULT _hr = raw_WindBarCoeffSet(_bar_num, _coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4398)
inline double IRobotSWCodeECParams::SnowBarCoeffGet ( long _bar_num ) {
    double _result = 0;
    HRESULT _hr = raw_SnowBarCoeffGet(_bar_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4399)
inline HRESULT IRobotSWCodeECParams::SnowBarCoeffSet ( long _bar_num, double _coeff ) {
    HRESULT _hr = raw_SnowBarCoeffSet(_bar_num, _coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotViewDetailedAnalysisParams wrapper method implementations
//

#pragma implementation_key(4400)
inline enum IRobotViewDiagramDescriptionType IRobotViewDetailedAnalysisParams::GetDescriptions ( ) {
    enum IRobotViewDiagramDescriptionType _result;
    HRESULT _hr = get_Descriptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4401)
inline void IRobotViewDetailedAnalysisParams::PutDescriptions ( enum IRobotViewDiagramDescriptionType ret ) {
    HRESULT _hr = put_Descriptions(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4402)
inline enum IRobotViewDiagramSignDifferType IRobotViewDetailedAnalysisParams::GetPositiveNegative ( ) {
    enum IRobotViewDiagramSignDifferType _result;
    HRESULT _hr = get_PositiveNegative(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4403)
inline void IRobotViewDetailedAnalysisParams::PutPositiveNegative ( enum IRobotViewDiagramSignDifferType ret ) {
    HRESULT _hr = put_PositiveNegative(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4404)
inline enum IRobotViewDiagramFillingType IRobotViewDetailedAnalysisParams::GetFilling ( ) {
    enum IRobotViewDiagramFillingType _result;
    HRESULT _hr = get_Filling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4405)
inline void IRobotViewDetailedAnalysisParams::PutFilling ( enum IRobotViewDiagramFillingType ret ) {
    HRESULT _hr = put_Filling(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4406)
inline VARIANT_BOOL IRobotViewDetailedAnalysisParams::GetReinforceShowTheoreticAndRealVals ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReinforceShowTheoreticAndRealVals(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4407)
inline void IRobotViewDetailedAnalysisParams::PutReinforceShowTheoreticAndRealVals ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ReinforceShowTheoreticAndRealVals(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4408)
inline HRESULT IRobotViewDetailedAnalysisParams::Set ( enum IRobotViewDetailedAnalysisResultType res_type, VARIANT_BOOL on_off ) {
    HRESULT _hr = raw_Set(res_type, on_off);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4409)
inline VARIANT_BOOL IRobotViewDetailedAnalysisParams::IsOn ( enum IRobotViewDetailedAnalysisResultType res_type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsOn(res_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4410)
inline HRESULT IRobotViewDetailedAnalysisParams::SetColor ( enum IRobotViewDetailedAnalysisResultType res_type, long _color ) {
    HRESULT _hr = raw_SetColor(res_type, _color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4411)
inline long IRobotViewDetailedAnalysisParams::GetColor ( enum IRobotViewDetailedAnalysisResultType res_type ) {
    long _result = 0;
    HRESULT _hr = raw_GetColor(res_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotViewScreenCaptureParams wrapper method implementations
//

#pragma implementation_key(4412)
inline _bstr_t IRobotViewScreenCaptureParams::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4413)
inline void IRobotViewScreenCaptureParams::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4414)
inline enum IRobotViewScreenCaptureUpdateType IRobotViewScreenCaptureParams::GetUpdateType ( ) {
    enum IRobotViewScreenCaptureUpdateType _result;
    HRESULT _hr = get_UpdateType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4415)
inline void IRobotViewScreenCaptureParams::PutUpdateType ( enum IRobotViewScreenCaptureUpdateType ret ) {
    HRESULT _hr = put_UpdateType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4416)
inline enum IRobotPageSetupOrientation IRobotViewScreenCaptureParams::GetOrientation ( ) {
    enum IRobotPageSetupOrientation _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4417)
inline void IRobotViewScreenCaptureParams::PutOrientation ( enum IRobotPageSetupOrientation ret ) {
    HRESULT _hr = put_Orientation(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4418)
inline VARIANT_BOOL IRobotViewScreenCaptureParams::GetScaleAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScaleAutomatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4419)
inline void IRobotViewScreenCaptureParams::PutScaleAutomatic ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ScaleAutomatic(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4420)
inline double IRobotViewScreenCaptureParams::GetScaleValue ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4421)
inline void IRobotViewScreenCaptureParams::PutScaleValue ( double ret ) {
    HRESULT _hr = put_ScaleValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4422)
inline _bstr_t IRobotViewScreenCaptureParams::GetComment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Comment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4423)
inline void IRobotViewScreenCaptureParams::PutComment ( _bstr_t ret ) {
    HRESULT _hr = put_Comment(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4424)
inline VARIANT_BOOL IRobotViewScreenCaptureParams::GetIncludeDateAndTime ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeDateAndTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4425)
inline void IRobotViewScreenCaptureParams::PutIncludeDateAndTime ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IncludeDateAndTime(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4426)
inline enum IRobotViewScreenCaptureResolution IRobotViewScreenCaptureParams::GetResolution ( ) {
    enum IRobotViewScreenCaptureResolution _result;
    HRESULT _hr = get_Resolution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4427)
inline void IRobotViewScreenCaptureParams::PutResolution ( enum IRobotViewScreenCaptureResolution ret ) {
    HRESULT _hr = put_Resolution(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotViewDetailedAnalysis wrapper method implementations
//

#pragma implementation_key(4428)
inline enum IRobotViewDetailedAnalysisTableTab IRobotViewDetailedAnalysis::GetCurrentTableTab ( ) {
    enum IRobotViewDetailedAnalysisTableTab _result;
    HRESULT _hr = get_CurrentTableTab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4429)
inline void IRobotViewDetailedAnalysis::PutCurrentTableTab ( enum IRobotViewDetailedAnalysisTableTab ret ) {
    HRESULT _hr = put_CurrentTableTab(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4430)
inline IRobotViewDetailedAnalysisParamsPtr IRobotViewDetailedAnalysis::GetParamsDetailed ( ) {
    struct IRobotViewDetailedAnalysisParams * _result = 0;
    HRESULT _hr = get_ParamsDetailed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewDetailedAnalysisParamsPtr(_result, false);
}

#pragma implementation_key(4431)
inline IRobotWindowPtr IRobotViewDetailedAnalysis::GetWindow ( ) {
    struct IRobotWindow * _result = 0;
    HRESULT _hr = get_Window(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotWindowPtr(_result, false);
}

#pragma implementation_key(4432)
inline VARIANT_BOOL IRobotViewDetailedAnalysis::GetUserControl ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UserControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4433)
inline void IRobotViewDetailedAnalysis::PutUserControl ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UserControl(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4434)
inline HRESULT IRobotViewDetailedAnalysis::MakeScreenCapture ( struct IRobotViewScreenCaptureParams * _sc_params ) {
    HRESULT _hr = raw_MakeScreenCapture(_sc_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotView3 wrapper method implementations
//

#pragma implementation_key(4435)
inline HRESULT IRobotView3::MakeScreenCapture ( struct IRobotViewScreenCaptureParams * _sc_params ) {
    HRESULT _hr = raw_MakeScreenCapture(_sc_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotViewGlobalAnalysisResultsParams wrapper method implementations
//

#pragma implementation_key(4436)
inline enum IRobotViewGlobalAnalysisResultsType IRobotViewGlobalAnalysisResultsParams::GetType ( ) {
    enum IRobotViewGlobalAnalysisResultsType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4437)
inline void IRobotViewGlobalAnalysisResultsParams::PutType ( enum IRobotViewGlobalAnalysisResultsType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4438)
inline long IRobotViewGlobalAnalysisResultsParams::GetNPointsValue ( ) {
    long _result = 0;
    HRESULT _hr = get_NPointsValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4439)
inline void IRobotViewGlobalAnalysisResultsParams::PutNPointsValue ( long ret ) {
    HRESULT _hr = put_NPointsValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4440)
inline double IRobotViewGlobalAnalysisResultsParams::GetRelativeValue ( ) {
    double _result = 0;
    HRESULT _hr = get_RelativeValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4441)
inline void IRobotViewGlobalAnalysisResultsParams::PutRelativeValue ( double ret ) {
    HRESULT _hr = put_RelativeValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotViewGlobalAnalysisParams wrapper method implementations
//

#pragma implementation_key(4442)
inline IRobotViewGlobalAnalysisResultsParamsPtr IRobotViewGlobalAnalysisParams::GetResults ( ) {
    struct IRobotViewGlobalAnalysisResultsParams * _result = 0;
    HRESULT _hr = get_Results(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewGlobalAnalysisResultsParamsPtr(_result, false);
}

#pragma implementation_key(4443)
inline VARIANT_BOOL IRobotViewGlobalAnalysisParams::IsOn ( enum IRobotViewGlobalAnalysisParamsType _type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsOn(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4444)
inline HRESULT IRobotViewGlobalAnalysisParams::Set ( enum IRobotViewGlobalAnalysisParamsType _type, VARIANT_BOOL _status ) {
    HRESULT _hr = raw_Set(_type, _status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotViewGlobalAnalysis wrapper method implementations
//

#pragma implementation_key(4445)
inline IRobotViewGlobalAnalysisParamsPtr IRobotViewGlobalAnalysis::GetParamsGlobalAnalysis ( ) {
    struct IRobotViewGlobalAnalysisParams * _result = 0;
    HRESULT _hr = get_ParamsGlobalAnalysis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewGlobalAnalysisParamsPtr(_result, false);
}

#pragma implementation_key(4446)
inline HRESULT IRobotViewGlobalAnalysis::MakeScreenCapture ( struct IRobotViewScreenCaptureParams * _sc_params ) {
    HRESULT _hr = raw_MakeScreenCapture(_sc_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotViewInfluenceLinesParams wrapper method implementations
//

#pragma implementation_key(4447)
inline long IRobotViewInfluenceLinesParams::GetRangeFrom ( ) {
    long _result = 0;
    HRESULT _hr = get_RangeFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4448)
inline void IRobotViewInfluenceLinesParams::PutRangeFrom ( long ret ) {
    HRESULT _hr = put_RangeFrom(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4449)
inline long IRobotViewInfluenceLinesParams::GetRangeTo ( ) {
    long _result = 0;
    HRESULT _hr = get_RangeTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4450)
inline void IRobotViewInfluenceLinesParams::PutRangeTo ( long ret ) {
    HRESULT _hr = put_RangeTo(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4451)
inline long IRobotViewInfluenceLinesParams::GetElement ( ) {
    long _result = 0;
    HRESULT _hr = get_Element(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4452)
inline void IRobotViewInfluenceLinesParams::PutElement ( long ret ) {
    HRESULT _hr = put_Element(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4453)
inline double IRobotViewInfluenceLinesParams::GetPosition ( ) {
    double _result = 0;
    HRESULT _hr = get_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4454)
inline void IRobotViewInfluenceLinesParams::PutPosition ( double ret ) {
    HRESULT _hr = put_Position(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4455)
inline HRESULT IRobotViewInfluenceLinesParams::Set ( enum IRobotViewInfluenceLinesResultType _type, VARIANT_BOOL _val ) {
    HRESULT _hr = raw_Set(_type, _val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4456)
inline VARIANT_BOOL IRobotViewInfluenceLinesParams::IsOn ( enum IRobotViewInfluenceLinesResultType _type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsOn(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4457)
inline IRobotGeoPoint3DPtr IRobotViewInfluenceLinesParams::GetDirectionData ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_DirectionData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(4458)
inline void IRobotViewInfluenceLinesParams::PutDirectionData ( struct IRobotGeoPoint3D * ret ) {
    HRESULT _hr = put_DirectionData(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4459)
inline long IRobotViewInfluenceLinesParams::GetDirectionNode ( ) {
    long _result = 0;
    HRESULT _hr = get_DirectionNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4460)
inline void IRobotViewInfluenceLinesParams::PutDirectionNode ( long ret ) {
    HRESULT _hr = put_DirectionNode(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4461)
inline double IRobotViewInfluenceLinesParams::GetLayerArbitraryVal ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerArbitraryVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4462)
inline void IRobotViewInfluenceLinesParams::PutLayerArbitraryVal ( double ret ) {
    HRESULT _hr = put_LayerArbitraryVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4463)
inline enum IRobotViewInfluenceLinesLayerType IRobotViewInfluenceLinesParams::GetLayer ( ) {
    enum IRobotViewInfluenceLinesLayerType _result;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4464)
inline void IRobotViewInfluenceLinesParams::PutLayer ( enum IRobotViewInfluenceLinesLayerType ret ) {
    HRESULT _hr = put_Layer(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4465)
inline enum IRobotViewInfluenceLinesLocalSystemType IRobotViewInfluenceLinesParams::GetDirection ( ) {
    enum IRobotViewInfluenceLinesLocalSystemType _result;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4466)
inline void IRobotViewInfluenceLinesParams::PutDirection ( enum IRobotViewInfluenceLinesLocalSystemType ret ) {
    HRESULT _hr = put_Direction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotViewInfluenceLines wrapper method implementations
//

#pragma implementation_key(4467)
inline IRobotViewInfluenceLinesParamsPtr IRobotViewInfluenceLines::GetParamsInfluenceLines ( ) {
    struct IRobotViewInfluenceLinesParams * _result = 0;
    HRESULT _hr = get_ParamsInfluenceLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewInfluenceLinesParamsPtr(_result, false);
}

#pragma implementation_key(4468)
inline HRESULT IRobotViewInfluenceLines::MakeScreenCapture ( struct IRobotViewScreenCaptureParams * _sc_params ) {
    HRESULT _hr = raw_MakeScreenCapture(_sc_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotHtmlView wrapper method implementations
//

#pragma implementation_key(4469)
inline IRobotPrintablePtr IRobotHtmlView::GetPrintable ( ) {
    struct IRobotPrintable * _result = 0;
    HRESULT _hr = get_Printable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPrintablePtr(_result, false);
}

#pragma implementation_key(4470)
inline VARIANT_BOOL IRobotHtmlView::LoadFromFile ( _bstr_t _file_path ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFromFile(_file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4471)
inline VARIANT_BOOL IRobotHtmlView::SaveToFile ( _bstr_t _file_path ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SaveToFile(_file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimMatDef wrapper method implementations
//

#pragma implementation_key(4472)
inline enum IRDimMatDefType IRDimMatDef::GetType ( ) {
    enum IRDimMatDefType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4473)
inline void IRDimMatDef::PutType ( enum IRDimMatDefType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4474)
inline _bstr_t IRDimMatDef::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4475)
inline _bstr_t IRDimMatDef::GetSecondName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4476)
inline HRESULT IRDimMatDef::SetNames ( _bstr_t _name, _bstr_t second_name ) {
    HRESULT _hr = raw_SetNames(_name, second_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4477)
inline HRESULT IRDimMatDef::WriteValue ( enum IRDimMatDefValType _type, double val ) {
    HRESULT _hr = raw_WriteValue(_type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4478)
inline double IRDimMatDef::ReadValue ( enum IRDimMatDefValType _type ) {
    double _result = 0;
    HRESULT _hr = raw_ReadValue(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4479)
inline HRESULT IRDimMatDef::WriteLongExtraValue ( enum IRDimMatDefLongExValType _type, long val ) {
    HRESULT _hr = raw_WriteLongExtraValue(_type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4480)
inline long IRDimMatDef::ReadLongExtraValue ( enum IRDimMatDefLongExValType _type ) {
    long _result = 0;
    HRESULT _hr = raw_ReadLongExtraValue(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4481)
inline HRESULT IRDimMatDef::WriteDoubleExtraValue ( enum IRDimMatDefDblExValType _type, double val ) {
    HRESULT _hr = raw_WriteDoubleExtraValue(_type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4482)
inline double IRDimMatDef::ReadDoubleExtraValue ( enum IRDimMatDefDblExValType _type ) {
    double _result = 0;
    HRESULT _hr = raw_ReadDoubleExtraValue(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimProfDef wrapper method implementations
//

#pragma implementation_key(4483)
inline enum IRDimProfDefType IRDimProfDef::GetType ( ) {
    enum IRDimProfDefType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4484)
inline void IRDimProfDef::PutType ( enum IRDimProfDefType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4485)
inline _bstr_t IRDimProfDef::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4486)
inline void IRDimProfDef::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4487)
inline long IRDimProfDef::GetIsVar ( ) {
    long _result = 0;
    HRESULT _hr = get_IsVar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4488)
inline HRESULT IRDimProfDef::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4489)
inline HRESULT IRDimProfDef::WriteValue ( enum IRDimProfDefItemType item, enum IRDimProfDefValType _type, double val ) {
    HRESULT _hr = raw_WriteValue(item, _type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4490)
inline double IRDimProfDef::ReadValue ( enum IRDimProfDefItemType item, enum IRDimProfDefValType _type ) {
    double _result = 0;
    HRESULT _hr = raw_ReadValue(item, _type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4491)
inline HRESULT IRDimProfDef::SetCmpndName ( enum IRDimProfDefItemType item, _bstr_t Name ) {
    HRESULT _hr = raw_SetCmpndName(item, Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4492)
inline _bstr_t IRDimProfDef::GetCmpndName ( enum IRDimProfDefItemType item ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCmpndName(item, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4493)
inline HRESULT IRDimProfDef::SetCmpndBase ( enum IRDimProfDefItemType item, _bstr_t Base ) {
    HRESULT _hr = raw_SetCmpndBase(item, Base);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4494)
inline _bstr_t IRDimProfDef::GetCmpndBase ( enum IRDimProfDefItemType item ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCmpndBase(item, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4495)
inline HRESULT IRDimProfDef::SetCmpndType ( enum IRDimProfDefItemType item, enum IRDimProfDefType Type ) {
    HRESULT _hr = raw_SetCmpndType(item, Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4496)
inline enum IRDimProfDefType IRDimProfDef::GetCmpndType ( enum IRDimProfDefItemType item ) {
    enum IRDimProfDefType _result;
    HRESULT _hr = raw_GetCmpndType(item, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimEffDef wrapper method implementations
//

#pragma implementation_key(4497)
inline double IRDimEffDef::GetN ( ) {
    double _result = 0;
    HRESULT _hr = get_N(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4498)
inline double IRDimEffDef::GetQY ( ) {
    double _result = 0;
    HRESULT _hr = get_QY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4499)
inline double IRDimEffDef::GetQZ ( ) {
    double _result = 0;
    HRESULT _hr = get_QZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4500)
inline double IRDimEffDef::GetMX ( ) {
    double _result = 0;
    HRESULT _hr = get_MX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4501)
inline double IRDimEffDef::GetMY ( ) {
    double _result = 0;
    HRESULT _hr = get_MY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4502)
inline double IRDimEffDef::GetMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4503)
inline HRESULT IRDimEffDef::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4504)
inline HRESULT IRDimEffDef::Set_x_0_1 ( double val ) {
    HRESULT _hr = raw_Set_x_0_1(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4505)
inline double IRDimEffDef::Get_x_0_1 ( ) {
    double _result = 0;
    HRESULT _hr = raw_Get_x_0_1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4506)
inline HRESULT IRDimEffDef::WriteParam ( enum IRDimEffDefParamType _type, long val ) {
    HRESULT _hr = raw_WriteParam(_type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4507)
inline long IRDimEffDef::ReadParam ( enum IRDimEffDefParamType _type ) {
    long _result = 0;
    HRESULT _hr = raw_ReadParam(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4508)
inline HRESULT IRDimEffDef::WriteForces ( double N, double QY, double QZ, double MX, double MY, double MZ ) {
    HRESULT _hr = raw_WriteForces(N, QY, QZ, MX, MY, MZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4509)
inline HRESULT IRDimEffDef::WriteValuesSet1 ( enum IRDimEffDefDirType _type, double M1, double M2, double M12 ) {
    HRESULT _hr = raw_WriteValuesSet1(_type, M1, M2, M12);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4510)
inline double IRDimEffDef::Read_M1 ( enum IRDimEffDefDirType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_M1(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4511)
inline double IRDimEffDef::Read_M2 ( enum IRDimEffDefDirType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_M2(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4512)
inline double IRDimEffDef::Read_M12 ( enum IRDimEffDefDirType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_M12(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4513)
inline HRESULT IRDimEffDef::WriteValuesSet2 ( enum IRDimEffDefDirType _type, double MP_MAX, double MN_MAX, double M_MID, double M_1P4L, double M_3P4L ) {
    HRESULT _hr = raw_WriteValuesSet2(_type, MP_MAX, MN_MAX, M_MID, M_1P4L, M_3P4L);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4514)
inline double IRDimEffDef::Read_MP_MAX ( enum IRDimEffDefDirType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_MP_MAX(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4515)
inline double IRDimEffDef::Read_MN_MAX ( enum IRDimEffDefDirType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_MN_MAX(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4516)
inline double IRDimEffDef::Read_M_MID ( enum IRDimEffDefDirType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_M_MID(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4517)
inline double IRDimEffDef::Read_M_1P4L ( enum IRDimEffDefDirType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_M_1P4L(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4518)
inline double IRDimEffDef::Read_M_3P4L ( enum IRDimEffDefDirType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_M_3P4L(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4519)
inline HRESULT IRDimEffDef::WriteIntPsRangeCoeff ( enum IRDimEffDefIntPsType _type, double x_beg, double x_end, double Coeff ) {
    HRESULT _hr = raw_WriteIntPsRangeCoeff(_type, x_beg, x_end, Coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4520)
inline HRESULT IRDimEffDef::ReadIntPsRangeCoeff ( enum IRDimEffDefIntPsType _type, double * x_beg, double * x_end, double * Coeff ) {
    HRESULT _hr = raw_ReadIntPsRangeCoeff(_type, x_beg, x_end, Coeff);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4521)
inline HRESULT IRDimEffDef::WriteIntPsEffSet1 ( enum IRDimEffDefIntPsType _type, double M1, double M2, double M12 ) {
    HRESULT _hr = raw_WriteIntPsEffSet1(_type, M1, M2, M12);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4522)
inline double IRDimEffDef::Read_IntPsEff_M1 ( enum IRDimEffDefIntPsType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_IntPsEff_M1(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4523)
inline double IRDimEffDef::Read_IntPsEff_M2 ( enum IRDimEffDefIntPsType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_IntPsEff_M2(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4524)
inline double IRDimEffDef::Read_IntPsEff_M12 ( enum IRDimEffDefIntPsType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_IntPsEff_M12(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4525)
inline HRESULT IRDimEffDef::WriteIntPsEffSet2 ( enum IRDimEffDefIntPsType _type, double MP_MAX, double MN_MAX, double M_MID, double M_1P4L, double M_3P4L ) {
    HRESULT _hr = raw_WriteIntPsEffSet2(_type, MP_MAX, MN_MAX, M_MID, M_1P4L, M_3P4L);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4526)
inline double IRDimEffDef::Read_IntPsEff_MP_MAX ( enum IRDimEffDefIntPsType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_IntPsEff_MP_MAX(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4527)
inline double IRDimEffDef::Read_IntPsEff_MN_MAX ( enum IRDimEffDefIntPsType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_IntPsEff_MN_MAX(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4528)
inline double IRDimEffDef::Read_IntPsEff_M_MID ( enum IRDimEffDefIntPsType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_IntPsEff_M_MID(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4529)
inline double IRDimEffDef::Read_IntPsEff_M_1P4L ( enum IRDimEffDefIntPsType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_IntPsEff_M_1P4L(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4530)
inline double IRDimEffDef::Read_IntPsEff_M_3P4L ( enum IRDimEffDefIntPsType _type ) {
    double _result = 0;
    HRESULT _hr = raw_Read_IntPsEff_M_3P4L(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4531)
inline HRESULT IRDimEffDef::WriteExtraValue ( enum IRDimEffDefDirType _dirType, enum IRDimEffDefExtValType _valType, double val ) {
    HRESULT _hr = raw_WriteExtraValue(_dirType, _valType, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4532)
inline HRESULT IRDimEffDef::ReadExtraValue ( enum IRDimEffDefDirType _dirType, enum IRDimEffDefExtValType _valType, double * ret ) {
    HRESULT _hr = raw_ReadExtraValue(_dirType, _valType, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4533)
inline HRESULT IRDimEffDef::WriteIntPsExtExtraValue ( enum IRDimEffDefIntPsType _type, enum IRDimEffDefExtValType _valType, double val ) {
    HRESULT _hr = raw_WriteIntPsExtExtraValue(_type, _valType, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4534)
inline HRESULT IRDimEffDef::ReadIntPsExtExtraValue ( enum IRDimEffDefIntPsType _type, enum IRDimEffDefExtValType _valType, double * ret ) {
    HRESULT _hr = raw_ReadIntPsExtExtraValue(_type, _valType, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4535)
inline double IRDimEffDef::Get_Member_x_0_1 ( ) {
    double _result = 0;
    HRESULT _hr = raw_Get_Member_x_0_1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimDetailedRes wrapper method implementations
//

#pragma implementation_key(4536)
inline long IRDimDetailedRes::GetMemberUsrNo ( ) {
    long _result = 0;
    HRESULT _hr = get_MemberUsrNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4537)
inline _bstr_t IRDimDetailedRes::GetProfileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProfileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4538)
inline _bstr_t IRDimDetailedRes::GetMaterialName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaterialName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4539)
inline enum IRDimMembCalcRetValue IRDimDetailedRes::GetResOfCalc ( ) {
    enum IRDimMembCalcRetValue _result;
    HRESULT _hr = get_ResOfCalc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4540)
inline long IRDimDetailedRes::GetIsLimitStateUltimate ( ) {
    long _result = 0;
    HRESULT _hr = get_IsLimitStateUltimate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4541)
inline long IRDimDetailedRes::GetIsLimitStateService_uy ( ) {
    long _result = 0;
    HRESULT _hr = get_IsLimitStateService_uy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4542)
inline long IRDimDetailedRes::GetIsLimitStateService_uz ( ) {
    long _result = 0;
    HRESULT _hr = get_IsLimitStateService_uz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4543)
inline long IRDimDetailedRes::GetIsLimitStateService_vx ( ) {
    long _result = 0;
    HRESULT _hr = get_IsLimitStateService_vx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4544)
inline long IRDimDetailedRes::GetIsLimitStateService_vy ( ) {
    long _result = 0;
    HRESULT _hr = get_IsLimitStateService_vy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4545)
inline double IRDimDetailedRes::GetLay ( ) {
    double _result = 0;
    HRESULT _hr = get_Lay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4546)
inline double IRDimDetailedRes::GetLaz ( ) {
    double _result = 0;
    HRESULT _hr = get_Laz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4547)
inline double IRDimDetailedRes::GetRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_Ratio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4548)
inline _bstr_t IRDimDetailedRes::GetGovernCaseName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GovernCaseName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4549)
inline double IRDimDetailedRes::GetUY ( ) {
    double _result = 0;
    HRESULT _hr = get_UY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4550)
inline double IRDimDetailedRes::GetUZ ( ) {
    double _result = 0;
    HRESULT _hr = get_UZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4551)
inline double IRDimDetailedRes::Getvx ( ) {
    double _result = 0;
    HRESULT _hr = get_vx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4552)
inline double IRDimDetailedRes::Getvy ( ) {
    double _result = 0;
    HRESULT _hr = get_vy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4553)
inline double IRDimDetailedRes::GetRelLimit_uy ( ) {
    double _result = 0;
    HRESULT _hr = get_RelLimit_uy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4554)
inline double IRDimDetailedRes::GetRelLimit_uz ( ) {
    double _result = 0;
    HRESULT _hr = get_RelLimit_uz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4555)
inline double IRDimDetailedRes::GetRelLimit_vx ( ) {
    double _result = 0;
    HRESULT _hr = get_RelLimit_vx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4556)
inline double IRDimDetailedRes::GetRelLimit_vy ( ) {
    double _result = 0;
    HRESULT _hr = get_RelLimit_vy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4557)
inline _bstr_t IRDimDetailedRes::GetGovernCaseName_uy ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GovernCaseName_uy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4558)
inline _bstr_t IRDimDetailedRes::GetGovernCaseName_uz ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GovernCaseName_uz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4559)
inline _bstr_t IRDimDetailedRes::GetGovernCaseName_vx ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GovernCaseName_vx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4560)
inline _bstr_t IRDimDetailedRes::GetGovernCaseName_vy ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GovernCaseName_vy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4561)
inline HRESULT IRDimDetailedRes::GetGovernCase_uy ( long * case_usr_no, long * comp_index ) {
    HRESULT _hr = raw_GetGovernCase_uy(case_usr_no, comp_index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4562)
inline HRESULT IRDimDetailedRes::GetGovernCase_uz ( long * case_usr_no, long * comp_index ) {
    HRESULT _hr = raw_GetGovernCase_uz(case_usr_no, comp_index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4563)
inline HRESULT IRDimDetailedRes::GetGovernCase_vx ( long * case_usr_no, long * comp_index ) {
    HRESULT _hr = raw_GetGovernCase_vx(case_usr_no, comp_index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4564)
inline HRESULT IRDimDetailedRes::GetGovernCase_vy ( long * case_usr_no, long * comp_index ) {
    HRESULT _hr = raw_GetGovernCase_vy(case_usr_no, comp_index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4565)
inline IRDimMembDefPtr IRDimDetailedRes::GetMembDef ( ) {
    struct IRDimMembDef * _result = 0;
    HRESULT _hr = get_MembDef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembDefPtr(_result, false);
}

#pragma implementation_key(4566)
inline IRDimMatDefPtr IRDimDetailedRes::GetMatDef ( ) {
    struct IRDimMatDef * _result = 0;
    HRESULT _hr = get_MatDef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMatDefPtr(_result, false);
}

#pragma implementation_key(4567)
inline IRDimProfDefPtr IRDimDetailedRes::GetProfDef ( ) {
    struct IRDimProfDef * _result = 0;
    HRESULT _hr = get_ProfDef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimProfDefPtr(_result, false);
}

#pragma implementation_key(4568)
inline IRDimEffDefPtr IRDimDetailedRes::GetEffDef ( ) {
    struct IRDimEffDef * _result = 0;
    HRESULT _hr = get_EffDef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimEffDefPtr(_result, false);
}

#pragma implementation_key(4569)
inline IDispatchPtr IRDimDetailedRes::GetCodeResults ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CodeResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface IRDimGrpRes wrapper method implementations
//

#pragma implementation_key(4570)
inline long IRDimGrpRes::GetUsrNo ( ) {
    long _result = 0;
    HRESULT _hr = get_UsrNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4571)
inline long IRDimGrpRes::GetFamiliesCount ( ) {
    long _result = 0;
    HRESULT _hr = get_FamiliesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4572)
inline _bstr_t IRDimGrpRes::FamilyName ( long family_index ) {
    BSTR _result = 0;
    HRESULT _hr = raw_FamilyName(family_index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4573)
inline long IRDimGrpRes::GetIsOptimization ( ) {
    long _result = 0;
    HRESULT _hr = get_IsOptimization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4574)
inline long IRDimGrpRes::GetOptFamilyIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_OptFamilyIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4575)
inline long IRDimGrpRes::Check ( long family_index, enum IRDimGrpResCurrProf val ) {
    long _result = 0;
    HRESULT _hr = raw_Check(family_index, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4576)
inline IRDimDetailedResPtr IRDimGrpRes::Get ( long family_index, enum IRDimGrpResCurrProf val ) {
    struct IRDimDetailedRes * _result = 0;
    HRESULT _hr = raw_Get(family_index, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimDetailedResPtr(_result, false);
}

//
// interface IRDimMembRes wrapper method implementations
//

#pragma implementation_key(4577)
inline void IRDimMembRes::PutLanguage ( long _arg1 ) {
    HRESULT _hr = put_Language(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4578)
inline void IRDimMembRes::PutUnits ( struct IRDimUnits * _arg1 ) {
    HRESULT _hr = put_Units(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4579)
inline HRESULT IRDimMembRes::RefreshUnits ( long AreRobotUnits ) {
    HRESULT _hr = raw_RefreshUnits(AreRobotUnits);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4580)
inline IDispatchPtr IRDimMembRes::GetCodeResults ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CodeResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4581)
inline enum IRDimMembCalcRetValue IRDimMembRes::ResOfCalc ( enum IRDimMembResCalcType Type ) {
    enum IRDimMembCalcRetValue _result;
    HRESULT _hr = raw_ResOfCalc(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4582)
inline double IRDimMembRes::GetUltimateValue ( enum IRDimMembResUltimateValueType Type ) {
    double _result = 0;
    HRESULT _hr = raw_GetUltimateValue(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4583)
inline long IRDimMembRes::GetIsClientLimitStateService ( ) {
    long _result = 0;
    HRESULT _hr = get_IsClientLimitStateService(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4584)
inline long IRDimMembRes::IsServiceActive ( enum IRDimMembResServiceType Type ) {
    long _result = 0;
    HRESULT _hr = raw_IsServiceActive(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4585)
inline double IRDimMembRes::GetServiceRatio ( enum IRDimMembResServiceType Type ) {
    double _result = 0;
    HRESULT _hr = raw_GetServiceRatio(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4586)
inline _bstr_t IRDimMembRes::GetServiceCaseName ( enum IRDimMembResServiceType Type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetServiceCaseName(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4587)
inline _bstr_t IRDimMembRes::GetRtfFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RtfFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4588)
inline HRESULT IRDimMembRes::Store ( struct IRDimStream * str ) {
    HRESULT _hr = raw_Store(str);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4589)
inline HRESULT IRDimMembRes::Retrieve ( struct IRDimStream * str ) {
    HRESULT _hr = raw_Retrieve(str);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4590)
inline HRESULT IRDimMembRes::SetMembDef ( struct IRDimMembDef * memb_def ) {
    HRESULT _hr = raw_SetMembDef(memb_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4591)
inline HRESULT IRDimMembRes::SetMatDef ( struct IRDimMatDef * mat_def ) {
    HRESULT _hr = raw_SetMatDef(mat_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4592)
inline HRESULT IRDimMembRes::SetProfDef ( struct IRDimProfDef * prof_def ) {
    HRESULT _hr = raw_SetProfDef(prof_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4593)
inline HRESULT IRDimMembRes::SetEffDef ( struct IRDimEffDef * eff_def ) {
    HRESULT _hr = raw_SetEffDef(eff_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4594)
inline IRDimMembDefPtr IRDimMembRes::GetMembDefAccess ( ) {
    struct IRDimMembDef * _result = 0;
    HRESULT _hr = raw_GetMembDefAccess(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembDefPtr(_result, false);
}

#pragma implementation_key(4595)
inline IRDimMatDefPtr IRDimMembRes::GetMatDefAccess ( ) {
    struct IRDimMatDef * _result = 0;
    HRESULT _hr = raw_GetMatDefAccess(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMatDefPtr(_result, false);
}

#pragma implementation_key(4596)
inline IRDimProfDefPtr IRDimMembRes::GetProfDefAccess ( ) {
    struct IRDimProfDef * _result = 0;
    HRESULT _hr = raw_GetProfDefAccess(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimProfDefPtr(_result, false);
}

#pragma implementation_key(4597)
inline IRDimEffDefPtr IRDimMembRes::GetEffDefAccess ( ) {
    struct IRDimEffDef * _result = 0;
    HRESULT _hr = raw_GetEffDefAccess(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimEffDefPtr(_result, false);
}

#pragma implementation_key(4598)
inline long IRDimMembRes::CreateResWnd ( enum IRDimMembResWndType Type, long parent_hwnd ) {
    long _result = 0;
    HRESULT _hr = raw_CreateResWnd(Type, parent_hwnd, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4599)
inline HRESULT IRDimMembRes::GetDefMaxLineNo ( enum IRDimMembResTableDefType Type, long * ret, long * was_proc ) {
    HRESULT _hr = raw_GetDefMaxLineNo(Type, ret, was_proc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4600)
inline HRESULT IRDimMembRes::IsDefLineActive ( enum IRDimMembResTableDefType Type, long line_no, long * ret, long * was_proc ) {
    HRESULT _hr = raw_IsDefLineActive(Type, line_no, ret, was_proc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4601)
inline HRESULT IRDimMembRes::GetDefLineComponent ( enum IRDimMembResTableDefType Type, long line_no, enum IRDimMembResTableComp cmpnt_no, long * defline_no, BSTR * ret, long * defline_no_proc ) {
    HRESULT _hr = raw_GetDefLineComponent(Type, line_no, cmpnt_no, defline_no, ret, defline_no_proc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4602)
inline long IRDimMembRes::GetMaxLineNo ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetMaxLineNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4603)
inline long IRDimMembRes::IsLineActive ( long line_no ) {
    long _result = 0;
    HRESULT _hr = raw_IsLineActive(line_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4604)
inline enum IRDimMembResTableLineType IRDimMembRes::GetLineType ( long line_no ) {
    enum IRDimMembResTableLineType _result;
    HRESULT _hr = raw_GetLineType(line_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4605)
inline _bstr_t IRDimMembRes::GetLineComponent ( long line_no, enum IRDimMembResTableComp cmpnt_no ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetLineComponent(line_no, cmpnt_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4606)
inline HRESULT IRDimMembRes::BlockCount ( _bstr_t _name, long * ret, long * was_proc ) {
    HRESULT _hr = raw_BlockCount(_name, ret, was_proc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4607)
inline HRESULT IRDimMembRes::IsStatement ( _bstr_t _name, long * ret, long * was_proc ) {
    HRESULT _hr = raw_IsStatement(_name, ret, was_proc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4608)
inline HRESULT IRDimMembRes::ReplaceMark ( _bstr_t mark, BSTR * mark_out, long * was_proc ) {
    HRESULT _hr = raw_ReplaceMark(mark, mark_out, was_proc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4609)
inline HRESULT IRDimMembRes::RecognizedPQ ( _bstr_t _name, BSTR * vstr, BSTR * ustr, long * was_proc ) {
    HRESULT _hr = raw_RecognizedPQ(_name, vstr, ustr, was_proc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4610)
inline void IRDimMembRes::PutCurrentBlock ( long _arg1 ) {
    HRESULT _hr = put_CurrentBlock(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimCalcState wrapper method implementations
//

#pragma implementation_key(4611)
inline HRESULT IRDimCalcState::SetFlag ( enum IRDimCalcStateFlagType _type, long val ) {
    HRESULT _hr = raw_SetFlag(_type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4612)
inline long IRDimCalcState::IsFlagSet ( enum IRDimCalcStateFlagType _type ) {
    long _result = 0;
    HRESULT _hr = raw_IsFlagSet(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4613)
inline void IRDimCalcState::PutCalcType ( enum IRDimCalcStateCalcType ret ) {
    HRESULT _hr = put_CalcType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4614)
inline enum IRDimCalcStateCalcType IRDimCalcState::GetCalcType ( ) {
    enum IRDimCalcStateCalcType _result;
    HRESULT _hr = get_CalcType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4615)
inline HRESULT IRDimCalcState::SetParamValue ( enum IRDimCalcStateValueType _type, double val ) {
    HRESULT _hr = raw_SetParamValue(_type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4616)
inline double IRDimCalcState::GetParamValue ( enum IRDimCalcStateValueType _type ) {
    double _result = 0;
    HRESULT _hr = raw_GetParamValue(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4617)
inline HRESULT IRDimCalcState::WriteClientData ( struct IRDimStream * val ) {
    HRESULT _hr = raw_WriteClientData(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4618)
inline HRESULT IRDimCalcState::ReadClientData ( struct IRDimStream * ret ) {
    HRESULT _hr = raw_ReadClientData(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimMembCalc wrapper method implementations
//

#pragma implementation_key(4619)
inline long IRDimMembCalc::GetIsExtraMomentsSet1 ( ) {
    long _result = 0;
    HRESULT _hr = get_IsExtraMomentsSet1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4620)
inline long IRDimMembCalc::GetIsExtraMomentsSet2 ( ) {
    long _result = 0;
    HRESULT _hr = get_IsExtraMomentsSet2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4621)
inline long IRDimMembCalc::GetIsIntPointsMomentsSet1 ( ) {
    long _result = 0;
    HRESULT _hr = get_IsIntPointsMomentsSet1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4622)
inline long IRDimMembCalc::GetIsIntPointsMomentsSet2 ( ) {
    long _result = 0;
    HRESULT _hr = get_IsIntPointsMomentsSet2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4623)
inline HRESULT IRDimMembCalc::SetMembDef ( struct IRDimMembDef * memb_def ) {
    HRESULT _hr = raw_SetMembDef(memb_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4624)
inline enum IRDimMembCalcMatStrengthCode IRDimMembCalc::GetMatStrengthCode ( ) {
    enum IRDimMembCalcMatStrengthCode _result;
    HRESULT _hr = get_MatStrengthCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4625)
inline HRESULT IRDimMembCalc::SetMatDef ( struct IRDimMatDef * mat_def ) {
    HRESULT _hr = raw_SetMatDef(mat_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4626)
inline HRESULT IRDimMembCalc::SetProfDef ( struct IRDimProfDef * prof_def ) {
    HRESULT _hr = raw_SetProfDef(prof_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4627)
inline HRESULT IRDimMembCalc::SetEffDef ( struct IRDimEffDef * eff_data ) {
    HRESULT _hr = raw_SetEffDef(eff_data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4628)
inline HRESULT IRDimMembCalc::SetCalcState ( struct IRDimCalcState * st ) {
    HRESULT _hr = raw_SetCalcState(st);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4629)
inline HRESULT IRDimMembCalc::CalculBuckling ( ) {
    HRESULT _hr = raw_CalculBuckling();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4630)
inline enum IRDimMembCalcRetValue IRDimMembCalc::CalculMember ( ) {
    enum IRDimMembCalcRetValue _result;
    HRESULT _hr = raw_CalculMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4631)
inline double IRDimMembCalc::GetRatio ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4632)
inline long IRDimMembCalc::GetIsClientLimitStateService ( ) {
    long _result = 0;
    HRESULT _hr = get_IsClientLimitStateService(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4633)
inline HRESULT IRDimMembCalc::SetAutoInitDeflections ( double defl_y, double defl_z ) {
    HRESULT _hr = raw_SetAutoInitDeflections(defl_y, defl_z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4634)
inline long IRDimMembCalc::CalculDeflDisp ( struct IRDimDeflDisp * dd ) {
    long _result = 0;
    HRESULT _hr = raw_CalculDeflDisp(dd, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4635)
inline long IRDimMembCalc::ReCalculDeflForProf ( double CoefY, double CoefZ ) {
    long _result = 0;
    HRESULT _hr = raw_ReCalculDeflForProf(CoefY, CoefZ, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4636)
inline double IRDimMembCalc::GetDeflDispMaxRatio ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetDeflDispMaxRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4637)
inline IRDimMembResPtr IRDimMembCalc::GetResultsInterface ( ) {
    struct IRDimMembRes * _result = 0;
    HRESULT _hr = raw_GetResultsInterface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembResPtr(_result, false);
}

#pragma implementation_key(4638)
inline HRESULT IRDimMembCalc::Finish ( enum IRDimMembCalcFinishType fin ) {
    HRESULT _hr = raw_Finish(fin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4639)
inline long IRDimMembCalc::GetMessagesNum ( ) {
    long _result = 0;
    HRESULT _hr = get_MessagesNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4640)
inline _bstr_t IRDimMembCalc::GetMessage ( long message_no, long Language ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetMessage(message_no, Language, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4641)
inline enum IRDimMembCalcMessageType IRDimMembCalc::GetMessageType ( long message_no ) {
    enum IRDimMembCalcMessageType _result;
    HRESULT _hr = raw_GetMessageType(message_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimSimEffDef wrapper method implementations
//

#pragma implementation_key(4642)
inline HRESULT IRDimSimEffDef::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4643)
inline HRESULT IRDimSimEffDef::WriteForces ( double N, double QY, double QZ, double MX, double MY, double MZ ) {
    HRESULT _hr = raw_WriteForces(N, QY, QZ, MX, MY, MZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4644)
inline HRESULT IRDimSimEffDef::ReadForces ( double * N, double * QY, double * QZ, double * MX, double * MY, double * MZ ) {
    HRESULT _hr = raw_ReadForces(N, QY, QZ, MX, MY, MZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4645)
inline HRESULT IRDimSimEffDef::WriteValuesSet1 ( enum IRDimEffDefDirType _type, double M1, double M2, double M12 ) {
    HRESULT _hr = raw_WriteValuesSet1(_type, M1, M2, M12);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4646)
inline HRESULT IRDimSimEffDef::ReadValuesSet1 ( enum IRDimEffDefDirType _type, double * M1, double * M2, double * M12 ) {
    HRESULT _hr = raw_ReadValuesSet1(_type, M1, M2, M12);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4647)
inline HRESULT IRDimSimEffDef::WriteValuesSet2 ( enum IRDimEffDefDirType _type, double MP_MAX, double MN_MAX, double M_MID, double M_1P4L, double M_3P4L ) {
    HRESULT _hr = raw_WriteValuesSet2(_type, MP_MAX, MN_MAX, M_MID, M_1P4L, M_3P4L);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4648)
inline HRESULT IRDimSimEffDef::ReadValuesSet2 ( enum IRDimEffDefDirType _type, double * MP_MAX, double * MN_MAX, double * M_MID, double * M_1P4L, double * M_3P4L ) {
    HRESULT _hr = raw_ReadValuesSet2(_type, MP_MAX, MN_MAX, M_MID, M_1P4L, M_3P4L);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4649)
inline HRESULT IRDimSimEffDef::WriteExtraValue ( enum IRDimEffDefDirType _dirType, enum IRDimEffDefExtValType _valType, double val ) {
    HRESULT _hr = raw_WriteExtraValue(_dirType, _valType, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4650)
inline HRESULT IRDimSimEffDef::ReadExtraValue ( enum IRDimEffDefDirType _dirType, enum IRDimEffDefExtValType _valType, double * ret ) {
    HRESULT _hr = raw_ReadExtraValue(_dirType, _valType, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRDimManCalcPar wrapper method implementations
//

#pragma implementation_key(4651)
inline void IRDimManCalcPar::PutManMembNo ( long memb_no ) {
    HRESULT _hr = put_ManMembNo(memb_no);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4652)
inline long IRDimManCalcPar::GetManMembNo ( ) {
    long _result = 0;
    HRESULT _hr = get_ManMembNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4653)
inline HRESULT IRDimManCalcPar::SetManMembDef ( struct IRDimMembDef * memb_def ) {
    HRESULT _hr = raw_SetManMembDef(memb_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4654)
inline IRDimMembDefPtr IRDimManCalcPar::GetManMembDefAccess ( ) {
    struct IRDimMembDef * _result = 0;
    HRESULT _hr = raw_GetManMembDefAccess(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembDefPtr(_result, false);
}

#pragma implementation_key(4655)
inline HRESULT IRDimManCalcPar::SetManEffDef ( struct IRDimSimEffDef * eff_data ) {
    HRESULT _hr = raw_SetManEffDef(eff_data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4656)
inline IRDimSimEffDefPtr IRDimManCalcPar::GetManEffDefAccess ( ) {
    struct IRDimSimEffDef * _result = 0;
    HRESULT _hr = raw_GetManEffDefAccess(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimSimEffDefPtr(_result, false);
}

#pragma implementation_key(4657)
inline HRESULT IRDimManCalcPar::SetCalcConf ( struct IRDimCalcConf * conf_data ) {
    HRESULT _hr = raw_SetCalcConf(conf_data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4658)
inline IRDimCalcConfPtr IRDimManCalcPar::GetCalcConfAccess ( ) {
    struct IRDimCalcConf * _result = 0;
    HRESULT _hr = raw_GetCalcConfAccess(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimCalcConfPtr(_result, false);
}

#pragma implementation_key(4659)
inline long IRDimManCalcPar::GetMembNum ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetMembNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4660)
inline long IRDimManCalcPar::GetMembNo ( long index ) {
    long _result = 0;
    HRESULT _hr = raw_GetMembNo(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4661)
inline long IRDimManCalcPar::GetMembUserNo ( long memb_no ) {
    long _result = 0;
    HRESULT _hr = raw_GetMembUserNo(memb_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4662)
inline _bstr_t IRDimManCalcPar::GetMembName ( long memb_no ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetMembName(memb_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4663)
inline IRDimMembDefPtr IRDimManCalcPar::GetMembDef ( long memb_no ) {
    struct IRDimMembDef * _result = 0;
    HRESULT _hr = raw_GetMembDef(memb_no, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembDefPtr(_result, false);
}

//
// interface IRDimCodeService wrapper method implementations
//

#pragma implementation_key(4664)
inline IRDimMembDefPtr IRDimCodeService::GetDefaultMembDef ( enum IRDimMembDefType _type ) {
    struct IRDimMembDef * _result = 0;
    HRESULT _hr = raw_GetDefaultMembDef(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembDefPtr(_result, false);
}

#pragma implementation_key(4665)
inline HRESULT IRDimCodeService::EditMembDef ( long inModalWindow, long testMembNo, long parentHWND, struct IRDimMembDef * val ) {
    HRESULT _hr = raw_EditMembDef(inModalWindow, testMembNo, parentHWND, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4666)
inline IRDimMembCalcPtr IRDimCodeService::GetMembCalc ( ) {
    struct IRDimMembCalc * _result = 0;
    HRESULT _hr = raw_GetMembCalc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimMembCalcPtr(_result, false);
}

#pragma implementation_key(4667)
inline enum IRDimManParRetValue IRDimCodeService::ModalEditManualParams ( long parentHWND, struct IRDimManCalcPar * val ) {
    enum IRDimManParRetValue _result;
    HRESULT _hr = raw_ModalEditManualParams(parentHWND, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4668)
inline long IRDimCodeService::ModalEditCalcConfigParams ( long parentHWND, struct IRDimCalcConf * val ) {
    long _result = 0;
    HRESULT _hr = raw_ModalEditCalcConfigParams(parentHWND, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimClient wrapper method implementations
//

#pragma implementation_key(4669)
inline HRESULT IRDimClient::Connect ( struct IRDimConnection * val ) {
    HRESULT _hr = raw_Connect(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4670)
inline IRDimCodeServicePtr IRDimClient::GetRDimCodeService ( ) {
    struct IRDimCodeService * _result = 0;
    HRESULT _hr = raw_GetRDimCodeService(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimCodeServicePtr(_result, false);
}

#pragma implementation_key(4671)
inline _bstr_t IRDimClient::GetCodeUnitName ( enum IRDimUnitType Type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCodeUnitName(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4672)
inline double IRDimClient::GetCodeUnitCoef ( enum IRDimUnitType Type ) {
    double _result = 0;
    HRESULT _hr = raw_GetCodeUnitCoef(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4673)
inline enum IRDimClientCalcConfDefaultWndType IRDimClient::GetCalcConfDefaultWndType ( ) {
    enum IRDimClientCalcConfDefaultWndType _result;
    HRESULT _hr = raw_GetCalcConfDefaultWndType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4674)
inline long IRDimClient::GetCmpndProfService ( ) {
    long _result = 0;
    HRESULT _hr = get_CmpndProfService(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimAdjoinService wrapper method implementations
//

#pragma implementation_key(4675)
inline enum IRDimMembDefBucklingDataType IRDimAdjoinService::GetDataType ( ) {
    enum IRDimMembDefBucklingDataType _result;
    HRESULT _hr = get_DataType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4676)
inline enum IRDimAdjoinServiceEditWndType IRDimAdjoinService::GetEditWindowType ( ) {
    enum IRDimAdjoinServiceEditWndType _result;
    HRESULT _hr = get_EditWindowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4677)
inline IRDimAdjoinParamsPtr IRDimAdjoinService::GetAdjoinParams ( ) {
    struct IRDimAdjoinParams * _result = 0;
    HRESULT _hr = raw_GetAdjoinParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimAdjoinParamsPtr(_result, false);
}

#pragma implementation_key(4678)
inline HRESULT IRDimAdjoinService::FinishEditAdjoinParams ( long wasAccepted ) {
    HRESULT _hr = raw_FinishEditAdjoinParams(wasAccepted);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4679)
inline void IRDimAdjoinService::PutLength ( double _arg1 ) {
    HRESULT _hr = put_Length(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4680)
inline void IRDimAdjoinService::PutIy ( double _arg1 ) {
    HRESULT _hr = put_Iy(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4681)
inline void IRDimAdjoinService::PutIz ( double _arg1 ) {
    HRESULT _hr = put_Iz(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4682)
inline HRESULT IRDimAdjoinService::HowCalcul ( enum IRDimMembDefAdjoinHowCalcul * retH, enum IRDimMembDefAdjoinWayOfCalcul * retW, long * IsStrSway ) {
    HRESULT _hr = raw_HowCalcul(retH, retW, IsStrSway);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4683)
inline double IRDimAdjoinService::GetCalculBuckling ( ) {
    double _result = 0;
    HRESULT _hr = get_CalculBuckling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimMembParamsANS wrapper method implementations
//

#pragma implementation_key(4684)
inline enum IRDimBuckDiagramANS IRDimMembParamsANS::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramANS _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4685)
inline void IRDimMembParamsANS::PutBucklingDiagramY ( enum IRDimBuckDiagramANS pVal ) {
    HRESULT _hr = put_BucklingDiagramY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4686)
inline enum IRDimBuckDiagramANS IRDimMembParamsANS::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramANS _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4687)
inline void IRDimMembParamsANS::PutBucklingDiagramZ ( enum IRDimBuckDiagramANS pVal ) {
    HRESULT _hr = put_BucklingDiagramZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4688)
inline double IRDimMembParamsANS::GetBuckLenghtCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLenghtCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4689)
inline void IRDimMembParamsANS::PutBuckLenghtCoeffY ( double pVal ) {
    HRESULT _hr = put_BuckLenghtCoeffY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4690)
inline double IRDimMembParamsANS::GetBuckLenghtCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLenghtCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4691)
inline void IRDimMembParamsANS::PutBuckLenghtCoeffZ ( double pVal ) {
    HRESULT _hr = put_BuckLenghtCoeffZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4692)
inline long IRDimMembParamsANS::GetLatBuck ( ) {
    long _result = 0;
    HRESULT _hr = get_LatBuck(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4693)
inline void IRDimMembParamsANS::PutLatBuck ( long pVal ) {
    HRESULT _hr = put_LatBuck(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4694)
inline enum IRDimLatBuckCoefDiagramANS IRDimMembParamsANS::GetLatBuckCoef_UppFlan ( ) {
    enum IRDimLatBuckCoefDiagramANS _result;
    HRESULT _hr = get_LatBuckCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4695)
inline void IRDimMembParamsANS::PutLatBuckCoef_UppFlan ( enum IRDimLatBuckCoefDiagramANS pVal ) {
    HRESULT _hr = put_LatBuckCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4696)
inline enum IRDimLatBuckCoefDiagramANS IRDimMembParamsANS::GetLatBuckCoef_LowFlan ( ) {
    enum IRDimLatBuckCoefDiagramANS _result;
    HRESULT _hr = get_LatBuckCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4697)
inline void IRDimMembParamsANS::PutLatBuckCoef_LowFlan ( enum IRDimLatBuckCoefDiagramANS pVal ) {
    HRESULT _hr = put_LatBuckCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4698)
inline double IRDimMembParamsANS::GetUserDefLatBuckCoef_UppFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4699)
inline void IRDimMembParamsANS::PutUserDefLatBuckCoef_UppFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4700)
inline double IRDimMembParamsANS::GetUserDefLatBuckCoef_LowFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4701)
inline void IRDimMembParamsANS::PutUserDefLatBuckCoef_LowFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4702)
inline enum IRDimLatBuckCbCoeffDiagramANS IRDimMembParamsANS::GetLatBuckCbCoeffDiagram ( ) {
    enum IRDimLatBuckCbCoeffDiagramANS _result;
    HRESULT _hr = get_LatBuckCbCoeffDiagram(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4703)
inline void IRDimMembParamsANS::PutLatBuckCbCoeffDiagram ( enum IRDimLatBuckCbCoeffDiagramANS pVal ) {
    HRESULT _hr = put_LatBuckCbCoeffDiagram(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4704)
inline double IRDimMembParamsANS::GetLatBuckCbCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckCbCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4705)
inline void IRDimMembParamsANS::PutLatBuckCbCoeff ( double pVal ) {
    HRESULT _hr = put_LatBuckCbCoeff(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4706)
inline enum IRDimBuckDiagramANS IRDimMembParamsANS::GetBucklingDiagramY_OfSegments ( ) {
    enum IRDimBuckDiagramANS _result;
    HRESULT _hr = get_BucklingDiagramY_OfSegments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4707)
inline void IRDimMembParamsANS::PutBucklingDiagramY_OfSegments ( enum IRDimBuckDiagramANS pVal ) {
    HRESULT _hr = put_BucklingDiagramY_OfSegments(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4708)
inline enum IRDimBuckDiagramANS IRDimMembParamsANS::GetSegmentBucklingDiagramZ_OfSegments ( ) {
    enum IRDimBuckDiagramANS _result;
    HRESULT _hr = get_SegmentBucklingDiagramZ_OfSegments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4709)
inline void IRDimMembParamsANS::PutSegmentBucklingDiagramZ ( enum IRDimBuckDiagramANS _arg1 ) {
    HRESULT _hr = put_SegmentBucklingDiagramZ(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4710)
inline enum IRDimLatBuckCoefDiagramANS IRDimMembParamsANS::GetLatBuckCoef_UppFlan_OfSegments ( ) {
    enum IRDimLatBuckCoefDiagramANS _result;
    HRESULT _hr = get_LatBuckCoef_UppFlan_OfSegments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4711)
inline void IRDimMembParamsANS::PutLatBuckCoef_UppFlan_OfSegments ( enum IRDimLatBuckCoefDiagramANS pVal ) {
    HRESULT _hr = put_LatBuckCoef_UppFlan_OfSegments(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4712)
inline enum IRDimLatBuckCoefDiagramANS IRDimMembParamsANS::GetLatBuckCoef_LowFlan_OfSegments ( ) {
    enum IRDimLatBuckCoefDiagramANS _result;
    HRESULT _hr = get_LatBuckCoef_LowFlan_OfSegments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4713)
inline void IRDimMembParamsANS::PutLatBuckCoef_LowFlan_OfSegments ( enum IRDimLatBuckCoefDiagramANS pVal ) {
    HRESULT _hr = put_LatBuckCoef_LowFlan_OfSegments(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4714)
inline HRESULT IRDimMembParamsANS::TransStiffClear ( ) {
    HRESULT _hr = raw_TransStiffClear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4715)
inline long IRDimMembParamsANS::GetTransStiffCoordNum ( ) {
    long _result = 0;
    HRESULT _hr = get_TransStiffCoordNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4716)
inline long IRDimMembParamsANS::GetTransStiffCoordsRelative ( ) {
    long _result = 0;
    HRESULT _hr = get_TransStiffCoordsRelative(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4717)
inline void IRDimMembParamsANS::PutTransStiffCoordsRelative ( long IsRelValue ) {
    HRESULT _hr = put_TransStiffCoordsRelative(IsRelValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4718)
inline HRESULT IRDimMembParamsANS::SetTransStiffCoordValue ( long no, double coord ) {
    HRESULT _hr = raw_SetTransStiffCoordValue(no, coord);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4719)
inline HRESULT IRDimMembParamsANS::GetTransStiffCoordValue ( long no, double * coord ) {
    HRESULT _hr = raw_GetTransStiffCoordValue(no, coord);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4720)
inline long IRDimMembParamsANS::GetSeismicAnalysis ( ) {
    long _result = 0;
    HRESULT _hr = get_SeismicAnalysis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4721)
inline void IRDimMembParamsANS::PutSeismicAnalysis ( long isSeismic ) {
    HRESULT _hr = put_SeismicAnalysis(isSeismic);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4722)
inline enum IRDimSeismicSystemANS IRDimMembParamsANS::GetSeismicSystem ( ) {
    enum IRDimSeismicSystemANS _result;
    HRESULT _hr = get_SeismicSystem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4723)
inline void IRDimMembParamsANS::PutSeismicSystem ( enum IRDimSeismicSystemANS system ) {
    HRESULT _hr = put_SeismicSystem(system);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4724)
inline enum IRDimSeismicElementTypeANS IRDimMembParamsANS::GetSeismicElementType ( ) {
    enum IRDimSeismicElementTypeANS _result;
    HRESULT _hr = get_SeismicElementType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4725)
inline void IRDimMembParamsANS::PutSeismicElementType ( enum IRDimSeismicElementTypeANS elemType ) {
    HRESULT _hr = put_SeismicElementType(elemType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4726)
inline double IRDimMembParamsANS::GetFactAnetto ( ) {
    double _result = 0;
    HRESULT _hr = get_FactAnetto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4727)
inline void IRDimMembParamsANS::PutFactAnetto ( double pVal ) {
    HRESULT _hr = put_FactAnetto(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4728)
inline double IRDimMembParamsANS::GetShearLagFactorU ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearLagFactorU(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4729)
inline void IRDimMembParamsANS::PutShearLagFactorU ( double pVal ) {
    HRESULT _hr = put_ShearLagFactorU(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4730)
inline long IRDimMembParamsANS::GetTubeControl ( ) {
    long _result = 0;
    HRESULT _hr = get_TubeControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4731)
inline void IRDimMembParamsANS::PutTubeControl ( long pVal ) {
    HRESULT _hr = put_TubeControl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimCodeResANS_1 wrapper method implementations
//

#pragma implementation_key(4732)
inline long IRDimCodeResANS_1::GetSecFlangeClass ( ) {
    long _result = 0;
    HRESULT _hr = get_SecFlangeClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4733)
inline long IRDimCodeResANS_1::GetSecWebClass ( ) {
    long _result = 0;
    HRESULT _hr = get_SecWebClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4734)
inline double IRDimCodeResANS_1::GetTorsSlendX ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsSlendX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4735)
inline double IRDimCodeResANS_1::GetBuckSlendY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4736)
inline double IRDimCodeResANS_1::GetBuckSlendZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4737)
inline double IRDimCodeResANS_1::GetSecUppUppFlangeLocSlendX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecUppUppFlangeLocSlendX1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4738)
inline double IRDimCodeResANS_1::GetSecUppUppFlangeLocSlendX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecUppUppFlangeLocSlendX2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4739)
inline double IRDimCodeResANS_1::GetSecUppFlangeWidthB ( ) {
    double _result = 0;
    HRESULT _hr = get_SecUppFlangeWidthB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4740)
inline double IRDimCodeResANS_1::GetSecFlangeDepthInMidSpanB1 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecFlangeDepthInMidSpanB1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4741)
inline double IRDimCodeResANS_1::GetSecFlangeDepthInMidSpanB2 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecFlangeDepthInMidSpanB2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4742)
inline double IRDimCodeResANS_1::GetSecHightD ( ) {
    double _result = 0;
    HRESULT _hr = get_SecHightD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4743)
inline double IRDimCodeResANS_1::GetSecUppFlangeThickT ( ) {
    double _result = 0;
    HRESULT _hr = get_SecUppFlangeThickT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4744)
inline double IRDimCodeResANS_1::GetSecUppFlangeThickT2 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecUppFlangeThickT2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4745)
inline double IRDimCodeResANS_1::GetSecWebHightH ( ) {
    double _result = 0;
    HRESULT _hr = get_SecWebHightH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4746)
inline double IRDimCodeResANS_1::GetSecHightAtMembBegH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecHightAtMembBegH1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4747)
inline double IRDimCodeResANS_1::GetSecHightAtMembBegH2 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecHightAtMembBegH2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4748)
inline double IRDimCodeResANS_1::GetSecWebThickTW ( ) {
    double _result = 0;
    HRESULT _hr = get_SecWebThickTW(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4749)
inline double IRDimCodeResANS_1::GetSecFlangeLocSlendX ( ) {
    double _result = 0;
    HRESULT _hr = get_SecFlangeLocSlendX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4750)
inline double IRDimCodeResANS_1::GetSecWebLocSlendX ( ) {
    double _result = 0;
    HRESULT _hr = get_SecWebLocSlendX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4751)
inline double IRDimCodeResANS_1::GetLimWidthThickParamKC ( ) {
    double _result = 0;
    HRESULT _hr = get_LimWidthThickParamKC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4752)
inline double IRDimCodeResANS_1::GetRedFactForSlendCompElemQ ( ) {
    double _result = 0;
    HRESULT _hr = get_RedFactForSlendCompElemQ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4753)
inline double IRDimCodeResANS_1::GetBuckColSlendParamLamcY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckColSlendParamLamcY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4754)
inline double IRDimCodeResANS_1::GetBuckColSlendParamLamcZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckColSlendParamLamcZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4755)
inline double IRDimCodeResANS_1::GetLatBuckUnbracedLengthLB ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckUnbracedLengthLB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4756)
inline double IRDimCodeResANS_1::GetLatBuckBendCoefCB ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckBendCoefCB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4757)
inline double IRDimCodeResANS_1::GetStrengthAxTensPn ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthAxTensPn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4758)
inline double IRDimCodeResANS_1::GetStrengthAxCompPn ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthAxCompPn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4759)
inline double IRDimCodeResANS_1::GetStrengthAxTensCompPn ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthAxTensCompPn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4760)
inline double IRDimCodeResANS_1::GetLatBuckLimPlastUnbracedLengthLpY ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimPlastUnbracedLengthLpY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4761)
inline double IRDimCodeResANS_1::GetLatBuckLimPlastUnbracedLengthLpZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimPlastUnbracedLengthLpZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4762)
inline double IRDimCodeResANS_1::GetLatBuckLimUnbracedLengthLrY ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimUnbracedLengthLrY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4763)
inline double IRDimCodeResANS_1::GetLatBuckLimUnbracedLengthLrZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimUnbracedLengthLrZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4764)
inline double IRDimCodeResANS_1::GetStrengthShearVnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthShearVnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4765)
inline double IRDimCodeResANS_1::GetStrengthShearVnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthShearVnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4766)
inline double IRDimCodeResANS_1::GetLatBuckLimMomentMrY ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimMomentMrY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4767)
inline double IRDimCodeResANS_1::GetLatBuckLimMomentMrZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimMomentMrZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4768)
inline double IRDimCodeResANS_1::GetStrengthFlexMnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexMnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4769)
inline double IRDimCodeResANS_1::GetStrengthFlexMnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexMnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4770)
inline double IRDimCodeResANS_1::GetPlastBendMomMpY ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastBendMomMpY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4771)
inline double IRDimCodeResANS_1::GetPlastBendMomMpZ ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastBendMomMpZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4772)
inline double IRDimCodeResANS_1::GetCritElastMomMcrY ( ) {
    double _result = 0;
    HRESULT _hr = get_CritElastMomMcrY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4773)
inline double IRDimCodeResANS_1::GetCritElastMomMcrZ ( ) {
    double _result = 0;
    HRESULT _hr = get_CritElastMomMcrZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4774)
inline double IRDimCodeResANS_1::GetCompResidulStressFR ( ) {
    double _result = 0;
    HRESULT _hr = get_CompResidulStressFR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4775)
inline double IRDimCodeResANS_1::GetCritStressFCR ( ) {
    double _result = 0;
    HRESULT _hr = get_CritStressFCR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimCodeResANS_2 wrapper method implementations
//

#pragma implementation_key(4776)
inline double IRDimCodeResANS_2::GetSecPlastModulusWplY ( ) {
    double _result = 0;
    HRESULT _hr = get_SecPlastModulusWplY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4777)
inline double IRDimCodeResANS_2::GetSecPlastModulusWplZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SecPlastModulusWplZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4778)
inline double IRDimCodeResANS_2::GetSecElastModulusWelY ( ) {
    double _result = 0;
    HRESULT _hr = get_SecElastModulusWelY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4779)
inline double IRDimCodeResANS_2::GetSecElastModulusWelZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SecElastModulusWelZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4780)
inline double IRDimCodeResANS_2::GetSecCompElastModulusWelYC ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCompElastModulusWelYC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4781)
inline double IRDimCodeResANS_2::GetSecTensElastModulusWelYC ( ) {
    double _result = 0;
    HRESULT _hr = get_SecTensElastModulusWelYC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4782)
inline double IRDimCodeResANS_2::GetSecCompElastModulusWelZC ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCompElastModulusWelZC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4783)
inline double IRDimCodeResANS_2::GetSecTensElastModulusWelZC ( ) {
    double _result = 0;
    HRESULT _hr = get_SecTensElastModulusWelZC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4784)
inline double IRDimCodeResANS_2::GetUtilFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_UtilFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4785)
inline double IRDimCodeResANS_2::GetUtilFactorShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_UtilFactorShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4786)
inline double IRDimCodeResANS_2::GetStressTorsShearY ( ) {
    double _result = 0;
    HRESULT _hr = get_StressTorsShearY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4787)
inline double IRDimCodeResANS_2::GetStressTorsShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StressTorsShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4788)
inline long IRDimCodeResANS_2::GetUpOrLowFlanInCompress ( ) {
    long _result = 0;
    HRESULT _hr = get_UpOrLowFlanInCompress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4789)
inline double IRDimCodeResANS_2::GetStressVarProfFbg ( ) {
    double _result = 0;
    HRESULT _hr = get_StressVarProfFbg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4790)
inline double IRDimCodeResANS_2::GetStressVarProfFsg ( ) {
    double _result = 0;
    HRESULT _hr = get_StressVarProfFsg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4791)
inline double IRDimCodeResANS_2::GetStressVarProfFwg ( ) {
    double _result = 0;
    HRESULT _hr = get_StressVarProfFwg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4792)
inline double IRDimCodeResANS_2::GetTorsInertiaMom ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsInertiaMom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4793)
inline double IRDimCodeResANS_2::GetStressComprFa ( ) {
    double _result = 0;
    HRESULT _hr = get_StressComprFa(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4794)
inline double IRDimCodeResANS_2::GetStressShearFvY ( ) {
    double _result = 0;
    HRESULT _hr = get_StressShearFvY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4795)
inline double IRDimCodeResANS_2::GetStressShearFvZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StressShearFvZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4796)
inline double IRDimCodeResANS_2::GetStressTorsFvT ( ) {
    double _result = 0;
    HRESULT _hr = get_StressTorsFvT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4797)
inline double IRDimCodeResANS_2::GetStressFlexComprFlanFbcY ( ) {
    double _result = 0;
    HRESULT _hr = get_StressFlexComprFlanFbcY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4798)
inline double IRDimCodeResANS_2::GetStressFlexComprFlanFbcZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StressFlexComprFlanFbcZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4799)
inline double IRDimCodeResANS_2::GetStressFlexTensFlanFbcY ( ) {
    double _result = 0;
    HRESULT _hr = get_StressFlexTensFlanFbcY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4800)
inline double IRDimCodeResANS_2::GetStressFlexTensFlanFbcZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StressFlexTensFlanFbcZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4801)
inline double IRDimCodeResANS_2::GetStressFlexFbY ( ) {
    double _result = 0;
    HRESULT _hr = get_StressFlexFbY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4802)
inline double IRDimCodeResANS_2::GetStressFlexFbZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StressFlexFbZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4803)
inline long IRDimCodeResANS_2::GetSecCompFlangeClass ( ) {
    long _result = 0;
    HRESULT _hr = get_SecCompFlangeClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4804)
inline long IRDimCodeResANS_2::GetSecCompWebClass ( ) {
    long _result = 0;
    HRESULT _hr = get_SecCompWebClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4805)
inline long IRDimCodeResANS_2::GetSecFlexFlangeClassY ( ) {
    long _result = 0;
    HRESULT _hr = get_SecFlexFlangeClassY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4806)
inline long IRDimCodeResANS_2::GetSecFlexWebClassY ( ) {
    long _result = 0;
    HRESULT _hr = get_SecFlexWebClassY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4807)
inline long IRDimCodeResANS_2::GetSecFlexFlangeClassZ ( ) {
    long _result = 0;
    HRESULT _hr = get_SecFlexFlangeClassZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4808)
inline long IRDimCodeResANS_2::GetSecFlexWebClassZ ( ) {
    long _result = 0;
    HRESULT _hr = get_SecFlexWebClassZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4809)
inline long IRDimCodeResANS_2::GetSecClass ( ) {
    long _result = 0;
    HRESULT _hr = get_SecClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4810)
inline double IRDimCodeResANS_2::GetSecFlangeSlend ( ) {
    double _result = 0;
    HRESULT _hr = get_SecFlangeSlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4811)
inline double IRDimCodeResANS_2::GetSecLimFlanSlendNonCompactXrN ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimFlanSlendNonCompactXrN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4812)
inline double IRDimCodeResANS_2::GetSecLimFlanSlendCompactXrN ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimFlanSlendCompactXrN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4813)
inline double IRDimCodeResANS_2::GetSecLimFlanSlendNonCompactXrmY ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimFlanSlendNonCompactXrmY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4814)
inline double IRDimCodeResANS_2::GetSecLimFlanSlendCompactXpmY ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimFlanSlendCompactXpmY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4815)
inline double IRDimCodeResANS_2::GetSecLimFlanSlendNonCompactXrmZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimFlanSlendNonCompactXrmZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4816)
inline double IRDimCodeResANS_2::GetSecLimFlanSlendCompactXpmZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimFlanSlendCompactXpmZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4817)
inline double IRDimCodeResANS_2::GetSecWebSlend ( ) {
    double _result = 0;
    HRESULT _hr = get_SecWebSlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4818)
inline double IRDimCodeResANS_2::GetSecLimWebSlendNonCompactYrN ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimWebSlendNonCompactYrN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4819)
inline double IRDimCodeResANS_2::GetSecLimWebSlendCompactYrN ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimWebSlendCompactYrN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4820)
inline double IRDimCodeResANS_2::GetSecLimWebSlendNonCompactYrmY ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimWebSlendNonCompactYrmY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4821)
inline double IRDimCodeResANS_2::GetSecLimWebSlendCompactYpmY ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimWebSlendCompactYpmY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4822)
inline double IRDimCodeResANS_2::GetSecLimWebSlendNonCompactYrmZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimWebSlendNonCompactYrmZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4823)
inline double IRDimCodeResANS_2::GetSecLimWebSlendCompactYpmZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLimWebSlendCompactYpmZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4824)
inline long IRDimCodeResANS_2::GetIsLrfdMethod ( ) {
    long _result = 0;
    HRESULT _hr = get_IsLrfdMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4825)
inline double IRDimCodeResANS_2::GetSafetyFactorTensFiOmT ( ) {
    double _result = 0;
    HRESULT _hr = get_SafetyFactorTensFiOmT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4826)
inline double IRDimCodeResANS_2::GetSafetyFactorTensFiOmTu ( ) {
    double _result = 0;
    HRESULT _hr = get_SafetyFactorTensFiOmTu(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4827)
inline double IRDimCodeResANS_2::GetSafetyFactorCompFiOmC ( ) {
    double _result = 0;
    HRESULT _hr = get_SafetyFactorCompFiOmC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4828)
inline double IRDimCodeResANS_2::GetSafetyFactorFlexFiOmB ( ) {
    double _result = 0;
    HRESULT _hr = get_SafetyFactorFlexFiOmB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4829)
inline double IRDimCodeResANS_2::GetSafetyFactorShearFiOmV ( ) {
    double _result = 0;
    HRESULT _hr = get_SafetyFactorShearFiOmV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4830)
inline double IRDimCodeResANS_2::GetEffAreaAe ( ) {
    double _result = 0;
    HRESULT _hr = get_EffAreaAe(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4831)
inline double IRDimCodeResANS_2::GetElastCritBuckStressFeY ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastCritBuckStressFeY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4832)
inline double IRDimCodeResANS_2::GetElastCritBuckStressFeZ ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastCritBuckStressFeZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4833)
inline double IRDimCodeResANS_2::GetElastCritBuckStressFeX ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastCritBuckStressFeX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4834)
inline double IRDimCodeResANS_2::GetFlexBuckStressFcrY ( ) {
    double _result = 0;
    HRESULT _hr = get_FlexBuckStressFcrY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4835)
inline double IRDimCodeResANS_2::GetFlexBuckStressFcrZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FlexBuckStressFcrZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4836)
inline double IRDimCodeResANS_2::GetFlexBuckStressFcrX ( ) {
    double _result = 0;
    HRESULT _hr = get_FlexBuckStressFcrX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4837)
inline double IRDimCodeResANS_2::GetFlexBuckStressFcrvY ( ) {
    double _result = 0;
    HRESULT _hr = get_FlexBuckStressFcrvY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4838)
inline double IRDimCodeResANS_2::GetFlexBuckStressFcrvZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FlexBuckStressFcrvZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4839)
inline double IRDimCodeResANS_2::GetStrengthAxCompPnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthAxCompPnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4840)
inline double IRDimCodeResANS_2::GetStrengthAxCompPnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthAxCompPnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4841)
inline double IRDimCodeResANS_2::GetStrengthAxCompPnX ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthAxCompPnX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimCodeResANS_3 wrapper method implementations
//

#pragma implementation_key(4842)
inline long IRDimCodeResANS_3::GetIsAnyInstability ( ) {
    long _result = 0;
    HRESULT _hr = get_IsAnyInstability(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4843)
inline long IRDimCodeResANS_3::GetIsTensFieldActPerm ( ) {
    long _result = 0;
    HRESULT _hr = get_IsTensFieldActPerm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4844)
inline long IRDimCodeResANS_3::GetIsBuckY ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4845)
inline long IRDimCodeResANS_3::GetIsBuckZ ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4846)
inline double IRDimCodeResANS_3::GetCompFlanInerIzc ( ) {
    double _result = 0;
    HRESULT _hr = get_CompFlanInerIzc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4847)
inline double IRDimCodeResANS_3::GetStrengthTorsTn ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthTorsTn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4848)
inline double IRDimCodeResANS_3::GetUtilFactorH11A ( ) {
    double _result = 0;
    HRESULT _hr = get_UtilFactorH11A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4849)
inline double IRDimCodeResANS_3::GetUtilFactorH11B ( ) {
    double _result = 0;
    HRESULT _hr = get_UtilFactorH11B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4850)
inline double IRDimCodeResANS_3::GetUtilFactorH12A ( ) {
    double _result = 0;
    HRESULT _hr = get_UtilFactorH12A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4851)
inline double IRDimCodeResANS_3::GetUtilFactorH12B ( ) {
    double _result = 0;
    HRESULT _hr = get_UtilFactorH12B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4852)
inline double IRDimCodeResANS_3::GetUtilFactorH21 ( ) {
    double _result = 0;
    HRESULT _hr = get_UtilFactorH21(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4853)
inline double IRDimCodeResANS_3::GetUtilFactorH36 ( ) {
    double _result = 0;
    HRESULT _hr = get_UtilFactorH36(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4854)
inline double IRDimCodeResANS_3::GetUtilFactorShear ( ) {
    double _result = 0;
    HRESULT _hr = get_UtilFactorShear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4855)
inline double IRDimCodeResANS_3::GetRedFactForSlendCompElemQa ( ) {
    double _result = 0;
    HRESULT _hr = get_RedFactForSlendCompElemQa(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4856)
inline double IRDimCodeResANS_3::GetRedFactForSlendCompElemQs ( ) {
    double _result = 0;
    HRESULT _hr = get_RedFactForSlendCompElemQs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4857)
inline double IRDimCodeResANS_3::GetWarpingConstCw ( ) {
    double _result = 0;
    HRESULT _hr = get_WarpingConstCw(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4858)
inline double IRDimCodeResANS_3::GetMonoSymParamRM ( ) {
    double _result = 0;
    HRESULT _hr = get_MonoSymParamRM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4859)
inline double IRDimCodeResANS_3::GetWebPlasFactCompRpc ( ) {
    double _result = 0;
    HRESULT _hr = get_WebPlasFactCompRpc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4860)
inline double IRDimCodeResANS_3::GetWebPlasFactTensRpc ( ) {
    double _result = 0;
    HRESULT _hr = get_WebPlasFactTensRpc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4861)
inline double IRDimCodeResANS_3::GetBendStrenRedFactRpg ( ) {
    double _result = 0;
    HRESULT _hr = get_BendStrenRedFactRpg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4862)
inline double IRDimCodeResANS_3::GetStrengthFlexYealdMnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexYealdMnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4863)
inline double IRDimCodeResANS_3::GetStrengthFlexYealdMnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexYealdMnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4864)
inline double IRDimCodeResANS_3::GetStrengthFlexLtbMnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexLtbMnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4865)
inline double IRDimCodeResANS_3::GetStrengthFlexLtbdMnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexLtbdMnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4866)
inline double IRDimCodeResANS_3::GetStrengthFlexFlbMnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexFlbMnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4867)
inline double IRDimCodeResANS_3::GetStrengthFlexFlbMnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexFlbMnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4868)
inline double IRDimCodeResANS_3::GetStrengthFlexWlbMnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexWlbMnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4869)
inline double IRDimCodeResANS_3::GetStrengthFlexWlbMnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexWlbMnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4870)
inline double IRDimCodeResANS_3::GetStrengthFlexLlbMnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexLlbMnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4871)
inline double IRDimCodeResANS_3::GetStrengthFlexLlbMnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexLlbMnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4872)
inline double IRDimCodeResANS_3::GetStrengthFlexLbMnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexLbMnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4873)
inline double IRDimCodeResANS_3::GetStrengthFlexLbMnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexLbMnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4874)
inline double IRDimCodeResANS_3::GetStrengthFlexTfyMnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexTfyMnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4875)
inline double IRDimCodeResANS_3::GetStrengthFlexTfyMnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexTfyMnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4876)
inline double IRDimCodeResANS_3::GetAreaShearY ( ) {
    double _result = 0;
    HRESULT _hr = get_AreaShearY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4877)
inline double IRDimCodeResANS_3::GetAreaShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_AreaShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4878)
inline double IRDimCodeResANS_3::GetShearCoefCvY ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearCoefCvY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4879)
inline double IRDimCodeResANS_3::GetShearCoefCvZ ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearCoefCvZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4880)
inline double IRDimCodeResANS_3::GetShearWebBuckCoefKvY ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearWebBuckCoefKvY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4881)
inline double IRDimCodeResANS_3::GetShearWebBuckCoefKvZ ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearWebBuckCoefKvZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4882)
inline long IRDimCodeResANS_3::GetCalcFNum ( ) {
    long _result = 0;
    HRESULT _hr = get_CalcFNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4883)
inline double IRDimCodeResANS_3::GetStressCritLtb ( ) {
    double _result = 0;
    HRESULT _hr = get_StressCritLtb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4884)
inline double IRDimCodeResANS_3::GetAlwbCompStressFa ( ) {
    double _result = 0;
    HRESULT _hr = get_AlwbCompStressFa(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4885)
inline double IRDimCodeResANS_3::GetAlwbCompStressFbY ( ) {
    double _result = 0;
    HRESULT _hr = get_AlwbCompStressFbY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4886)
inline double IRDimCodeResANS_3::GetAlwbCompStressFbZ ( ) {
    double _result = 0;
    HRESULT _hr = get_AlwbCompStressFbZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4887)
inline double IRDimCodeResANS_3::GetStiffGap ( ) {
    double _result = 0;
    HRESULT _hr = get_StiffGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimMembParamsCM66 wrapper method implementations
//

#pragma implementation_key(4888)
inline enum IRDimBuckDiagramCM66 IRDimMembParamsCM66::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramCM66 _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4889)
inline void IRDimMembParamsCM66::PutBucklingDiagramY ( enum IRDimBuckDiagramCM66 pVal ) {
    HRESULT _hr = put_BucklingDiagramY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4890)
inline enum IRDimBuckDiagramCM66 IRDimMembParamsCM66::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramCM66 _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4891)
inline void IRDimMembParamsCM66::PutBucklingDiagramZ ( enum IRDimBuckDiagramCM66 pVal ) {
    HRESULT _hr = put_BucklingDiagramZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4892)
inline double IRDimMembParamsCM66::GetBuckLenghtCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLenghtCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4893)
inline void IRDimMembParamsCM66::PutBuckLenghtCoeffY ( double pVal ) {
    HRESULT _hr = put_BuckLenghtCoeffY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4894)
inline double IRDimMembParamsCM66::GetBuckLenghtCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLenghtCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4895)
inline void IRDimMembParamsCM66::PutBuckLenghtCoeffZ ( double pVal ) {
    HRESULT _hr = put_BuckLenghtCoeffZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4896)
inline double IRDimMembParamsCM66::GetLoadTypeMomMcY ( ) {
    double _result = 0;
    HRESULT _hr = get_LoadTypeMomMcY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4897)
inline void IRDimMembParamsCM66::PutLoadTypeMomMcY ( double pVal ) {
    HRESULT _hr = put_LoadTypeMomMcY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4898)
inline double IRDimMembParamsCM66::GetLoadTypeMomMcZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LoadTypeMomMcZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4899)
inline void IRDimMembParamsCM66::PutLoadTypeMomMcZ ( double pVal ) {
    HRESULT _hr = put_LoadTypeMomMcZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4900)
inline double IRDimMembParamsCM66::GetLoadTypeDistY ( ) {
    double _result = 0;
    HRESULT _hr = get_LoadTypeDistY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4901)
inline void IRDimMembParamsCM66::PutLoadTypeDistY ( double pVal ) {
    HRESULT _hr = put_LoadTypeDistY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4902)
inline double IRDimMembParamsCM66::GetLoadTypeDistZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LoadTypeDistZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4903)
inline void IRDimMembParamsCM66::PutLoadTypeDistZ ( double pVal ) {
    HRESULT _hr = put_LoadTypeDistZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4904)
inline enum IRDimLaterBuckTypeCM66 IRDimMembParamsCM66::GetLatBuckType ( ) {
    enum IRDimLaterBuckTypeCM66 _result;
    HRESULT _hr = get_LatBuckType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4905)
inline void IRDimMembParamsCM66::PutLatBuckType ( enum IRDimLaterBuckTypeCM66 pVal ) {
    HRESULT _hr = put_LatBuckType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4906)
inline enum IRDimLoadLevelCM66 IRDimMembParamsCM66::GetLoadLevel ( ) {
    enum IRDimLoadLevelCM66 _result;
    HRESULT _hr = get_LoadLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4907)
inline void IRDimMembParamsCM66::PutLoadLevel ( enum IRDimLoadLevelCM66 pVal ) {
    HRESULT _hr = put_LoadLevel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4908)
inline double IRDimMembParamsCM66::GetLoadLevelValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LoadLevelValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4909)
inline void IRDimMembParamsCM66::PutLoadLevelValue ( double pVal ) {
    HRESULT _hr = put_LoadLevelValue(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4910)
inline enum IRDimLatBuckCoefDiagramCM66 IRDimMembParamsCM66::GetLatBuckCoef_LowFlan ( ) {
    enum IRDimLatBuckCoefDiagramCM66 _result;
    HRESULT _hr = get_LatBuckCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4911)
inline void IRDimMembParamsCM66::PutLatBuckCoef_LowFlan ( enum IRDimLatBuckCoefDiagramCM66 pVal ) {
    HRESULT _hr = put_LatBuckCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4912)
inline enum IRDimLatBuckCoefDiagramCM66 IRDimMembParamsCM66::GetLatBuckCoef_UppFlan ( ) {
    enum IRDimLatBuckCoefDiagramCM66 _result;
    HRESULT _hr = get_LatBuckCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4913)
inline void IRDimMembParamsCM66::PutLatBuckCoef_UppFlan ( enum IRDimLatBuckCoefDiagramCM66 pVal ) {
    HRESULT _hr = put_LatBuckCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4914)
inline double IRDimMembParamsCM66::GetUserDefLatBuckCoef_LowFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4915)
inline void IRDimMembParamsCM66::PutUserDefLatBuckCoef_LowFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4916)
inline double IRDimMembParamsCM66::GetUserDefLatBuckCoef_UppFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4917)
inline void IRDimMembParamsCM66::PutUserDefLatBuckCoef_UppFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4918)
inline enum IRDimLoadTypeCM66 IRDimMembParamsCM66::GetLoadTypeY ( ) {
    enum IRDimLoadTypeCM66 _result;
    HRESULT _hr = get_LoadTypeY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4919)
inline void IRDimMembParamsCM66::PutLoadTypeY ( enum IRDimLoadTypeCM66 pVal ) {
    HRESULT _hr = put_LoadTypeY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4920)
inline enum IRDimLoadTypeCM66 IRDimMembParamsCM66::GetLoadTypeZ ( ) {
    enum IRDimLoadTypeCM66 _result;
    HRESULT _hr = get_LoadTypeZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4921)
inline void IRDimMembParamsCM66::PutLoadTypeZ ( enum IRDimLoadTypeCM66 pVal ) {
    HRESULT _hr = put_LoadTypeZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4922)
inline double IRDimMembParamsCM66::GetTensAreaNetGros ( ) {
    double _result = 0;
    HRESULT _hr = get_TensAreaNetGros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4923)
inline void IRDimMembParamsCM66::PutTensAreaNetGros ( double pVal ) {
    HRESULT _hr = put_TensAreaNetGros(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4924)
inline long IRDimMembParamsCM66::GetTubeControl ( ) {
    long _result = 0;
    HRESULT _hr = get_TubeControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4925)
inline void IRDimMembParamsCM66::PutTubeControl ( long pVal ) {
    HRESULT _hr = put_TubeControl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4926)
inline enum IRDimAmplificationCM66 IRDimMembParamsCM66::GetAmplificationCoeff ( ) {
    enum IRDimAmplificationCM66 _result;
    HRESULT _hr = get_AmplificationCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4927)
inline void IRDimMembParamsCM66::PutAmplificationCoeff ( enum IRDimAmplificationCM66 pVal ) {
    HRESULT _hr = put_AmplificationCoeff(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimCodeResCM66 wrapper method implementations
//

#pragma implementation_key(4928)
inline long IRDimCodeResCM66::GetIsBuckY ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4929)
inline long IRDimCodeResCM66::GetIsBuckZ ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4930)
inline double IRDimCodeResCM66::GetStrsShearY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4931)
inline double IRDimCodeResCM66::GetStrsShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4932)
inline double IRDimCodeResCM66::GetStrsMax ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4933)
inline double IRDimCodeResCM66::GetStrsMom ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsMom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4934)
inline double IRDimCodeResCM66::GetStrsTens ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTens(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4935)
inline double IRDimCodeResCM66::GetStrsComp ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsComp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4936)
inline double IRDimCodeResCM66::GetStrsUprEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsUprEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4937)
inline double IRDimCodeResCM66::GetStrsRgtEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsRgtEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4938)
inline double IRDimCodeResCM66::GetStrsLowEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLowEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4939)
inline double IRDimCodeResCM66::GetStrsLftEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLftEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4940)
inline double IRDimCodeResCM66::GetStrsTubeUprMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeUprMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4941)
inline double IRDimCodeResCM66::GetStrsTubeRgtMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeRgtMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4942)
inline double IRDimCodeResCM66::GetStrsTubeLowMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeLowMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4943)
inline double IRDimCodeResCM66::GetStrsTubeLftMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeLftMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4944)
inline double IRDimCodeResCM66::GetStrsTmp1 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTmp1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4945)
inline double IRDimCodeResCM66::GetStrsTmp2 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTmp2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4946)
inline double IRDimCodeResCM66::GetStrsFinP1 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsFinP1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4947)
inline double IRDimCodeResCM66::GetStrsFinP2 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsFinP2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4948)
inline double IRDimCodeResCM66::GetStrsFinP3 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsFinP3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4949)
inline double IRDimCodeResCM66::GetStrsFinP4 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsFinP4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4950)
inline double IRDimCodeResCM66::GetStrsTubeFinP1 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeFinP1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4951)
inline double IRDimCodeResCM66::GetStrsTubeFinP2 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeFinP2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4952)
inline double IRDimCodeResCM66::GetStrsTubeFinP3 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeFinP3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4953)
inline double IRDimCodeResCM66::GetStrsTubeFinP4 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeFinP4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4954)
inline double IRDimCodeResCM66::GetStrsP1 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsP1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4955)
inline double IRDimCodeResCM66::GetStrsP2 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsP2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4956)
inline double IRDimCodeResCM66::GetStrsP3 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsP3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4957)
inline double IRDimCodeResCM66::GetStrsP4 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsP4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4958)
inline double IRDimCodeResCM66::GetStrsTubeP1 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeP1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4959)
inline double IRDimCodeResCM66::GetStrsTubeP2 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeP2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4960)
inline double IRDimCodeResCM66::GetStrsTubeP3 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeP3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4961)
inline double IRDimCodeResCM66::GetStrsTubeP4 ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTubeP4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4962)
inline double IRDimCodeResCM66::GetBuckSlendY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4963)
inline double IRDimCodeResCM66::GetBuckSlendZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4964)
inline double IRDimCodeResCM66::GetBuckStrsKY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckStrsKY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4965)
inline double IRDimCodeResCM66::GetBuckStrsKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckStrsKZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4966)
inline double IRDimCodeResCM66::GetBuckMiY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckMiY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4967)
inline double IRDimCodeResCM66::GetBuckMiZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckMiZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4968)
inline double IRDimCodeResCM66::GetBuckCoefKY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoefKY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4969)
inline double IRDimCodeResCM66::GetBuckCoefKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoefKZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4970)
inline double IRDimCodeResCM66::GetBuckCoefK1YZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoefK1YZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4971)
inline double IRDimCodeResCM66::GetBuckCoefK1Y ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoefK1Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4972)
inline double IRDimCodeResCM66::GetBuckCoefK1Z ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoefK1Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4973)
inline double IRDimCodeResCM66::GetBuckImpCoefKFY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckImpCoefKFY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4974)
inline double IRDimCodeResCM66::GetBuckImpCoefKFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckImpCoefKFZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4975)
inline double IRDimCodeResCM66::GetLTBuckC ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4976)
inline double IRDimCodeResCM66::GetLTBuckD ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4977)
inline double IRDimCodeResCM66::GetLTBuckBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckBeta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4978)
inline double IRDimCodeResCM66::GetLTBuckB ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4979)
inline double IRDimCodeResCM66::GetLTBuckStrsSigD ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckStrsSigD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4980)
inline double IRDimCodeResCM66::GetLTBuckLambda0 ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckLambda0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4981)
inline double IRDimCodeResCM66::GetLTBuckCoefKD ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckCoefKD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4982)
inline double IRDimCodeResCM66::GetLTBuckCoefKDorg ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckCoefKDorg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4983)
inline double IRDimCodeResCM66::GetLTBuckCprim ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckCprim(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4984)
inline double IRDimCodeResCM66::GetLTBuckLengthLD ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckLengthLD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4985)
inline long IRDimCodeResCM66::GetLTBuckLowUp ( ) {
    long _result = 0;
    HRESULT _hr = get_LTBuckLowUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4986)
inline double IRDimCodeResCM66::GetLTBuckLengthLDprim ( ) {
    double _result = 0;
    HRESULT _hr = get_LTBuckLengthLDprim(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4987)
inline double IRDimCodeResCM66::GetEffRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_EffRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4988)
inline double IRDimCodeResCM66::GetAllowStressRE ( ) {
    double _result = 0;
    HRESULT _hr = get_AllowStressRE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimMembParamsBS59 wrapper method implementations
//

#pragma implementation_key(4989)
inline enum IRDimBuckDiagramBS59 IRDimMembParamsBS59::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramBS59 _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4990)
inline void IRDimMembParamsBS59::PutBucklingDiagramY ( enum IRDimBuckDiagramBS59 pVal ) {
    HRESULT _hr = put_BucklingDiagramY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4991)
inline enum IRDimBuckDiagramBS59 IRDimMembParamsBS59::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramBS59 _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4992)
inline void IRDimMembParamsBS59::PutBucklingDiagramZ ( enum IRDimBuckDiagramBS59 pVal ) {
    HRESULT _hr = put_BucklingDiagramZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4993)
inline double IRDimMembParamsBS59::GetBuckLengthCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4994)
inline void IRDimMembParamsBS59::PutBuckLengthCoeffY ( double pVal ) {
    HRESULT _hr = put_BuckLengthCoeffY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4995)
inline double IRDimMembParamsBS59::GetBuckLengthCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4996)
inline void IRDimMembParamsBS59::PutBuckLengthCoeffZ ( double pVal ) {
    HRESULT _hr = put_BuckLengthCoeffZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4997)
inline enum IRDimLaterBuckTypeBS59 IRDimMembParamsBS59::GetLatBuckType ( ) {
    enum IRDimLaterBuckTypeBS59 _result;
    HRESULT _hr = get_LatBuckType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4998)
inline void IRDimMembParamsBS59::PutLatBuckType ( enum IRDimLaterBuckTypeBS59 pVal ) {
    HRESULT _hr = put_LatBuckType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4999)
inline enum IRDimLatBuckLengthCoefDiagramBS59 IRDimMembParamsBS59::GetLatBuckLengthCoef_LowFlan ( ) {
    enum IRDimLatBuckLengthCoefDiagramBS59 _result;
    HRESULT _hr = get_LatBuckLengthCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5000)
inline void IRDimMembParamsBS59::PutLatBuckLengthCoef_LowFlan ( enum IRDimLatBuckLengthCoefDiagramBS59 pVal ) {
    HRESULT _hr = put_LatBuckLengthCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5001)
inline enum IRDimLatBuckLengthCoefDiagramBS59 IRDimMembParamsBS59::GetLatBuckLengthCoef_UppFlan ( ) {
    enum IRDimLatBuckLengthCoefDiagramBS59 _result;
    HRESULT _hr = get_LatBuckLengthCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5002)
inline void IRDimMembParamsBS59::PutLatBuckLengthCoef_UppFlan ( enum IRDimLatBuckLengthCoefDiagramBS59 pVal ) {
    HRESULT _hr = put_LatBuckLengthCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5003)
inline double IRDimMembParamsBS59::GetUserDefLatBuckLengthCoef_LowFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckLengthCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5004)
inline void IRDimMembParamsBS59::PutUserDefLatBuckLengthCoef_LowFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckLengthCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5005)
inline double IRDimMembParamsBS59::GetUserDefLatBuckLengthCoef_UppFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckLengthCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5006)
inline void IRDimMembParamsBS59::PutUserDefLatBuckLengthCoef_UppFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckLengthCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5007)
inline enum IRDimSlendCorrectionDiagramBS59 IRDimMembParamsBS59::GetSlendCorrectionFactor_n ( ) {
    enum IRDimSlendCorrectionDiagramBS59 _result;
    HRESULT _hr = get_SlendCorrectionFactor_n(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5008)
inline void IRDimMembParamsBS59::PutSlendCorrectionFactor_n ( enum IRDimSlendCorrectionDiagramBS59 pVal ) {
    HRESULT _hr = put_SlendCorrectionFactor_n(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5009)
inline enum IRDimEqUniformMomentDiagramBS59 IRDimMembParamsBS59::GetEqMomentFactor_my ( ) {
    enum IRDimEqUniformMomentDiagramBS59 _result;
    HRESULT _hr = get_EqMomentFactor_my(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5010)
inline void IRDimMembParamsBS59::PutEqMomentFactor_my ( enum IRDimEqUniformMomentDiagramBS59 pVal ) {
    HRESULT _hr = put_EqMomentFactor_my(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5011)
inline enum IRDimEqUniformMomentDiagramBS59 IRDimMembParamsBS59::GetEqMomentFactor_mz ( ) {
    enum IRDimEqUniformMomentDiagramBS59 _result;
    HRESULT _hr = get_EqMomentFactor_mz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5012)
inline void IRDimMembParamsBS59::PutEqMomentFactor_mz ( enum IRDimEqUniformMomentDiagramBS59 pVal ) {
    HRESULT _hr = put_EqMomentFactor_mz(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5013)
inline double IRDimMembParamsBS59::GetUserDefSlendCorrectionFactor_n ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefSlendCorrectionFactor_n(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5014)
inline void IRDimMembParamsBS59::PutUserDefSlendCorrectionFactor_n ( double pVal ) {
    HRESULT _hr = put_UserDefSlendCorrectionFactor_n(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5015)
inline double IRDimMembParamsBS59::GetUserDefEqMomentFactor_my ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefEqMomentFactor_my(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5016)
inline void IRDimMembParamsBS59::PutUserDefEqMomentFactor_my ( double pVal ) {
    HRESULT _hr = put_UserDefEqMomentFactor_my(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5017)
inline double IRDimMembParamsBS59::GetUserDefEqMomentFactor_mz ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefEqMomentFactor_mz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5018)
inline void IRDimMembParamsBS59::PutUserDefEqMomentFactor_mz ( double pVal ) {
    HRESULT _hr = put_UserDefEqMomentFactor_mz(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5019)
inline double IRDimMembParamsBS59::GetAe_per_Ag_ratio ( ) {
    double _result = 0;
    HRESULT _hr = get_Ae_per_Ag_ratio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5020)
inline void IRDimMembParamsBS59::PutAe_per_Ag_ratio ( double pVal ) {
    HRESULT _hr = put_Ae_per_Ag_ratio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5021)
inline long IRDimMembParamsBS59::GetUnidirectionalBendigPipes ( ) {
    long _result = 0;
    HRESULT _hr = get_UnidirectionalBendigPipes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5022)
inline void IRDimMembParamsBS59::PutUnidirectionalBendigPipes ( long pVal ) {
    HRESULT _hr = put_UnidirectionalBendigPipes(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimMembParamsBS59_2000 wrapper method implementations
//

#pragma implementation_key(5023)
inline enum IRDimBuckDiagramBS59_2000 IRDimMembParamsBS59_2000::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramBS59_2000 _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5024)
inline void IRDimMembParamsBS59_2000::PutBucklingDiagramY ( enum IRDimBuckDiagramBS59_2000 pVal ) {
    HRESULT _hr = put_BucklingDiagramY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5025)
inline enum IRDimBuckDiagramBS59_2000 IRDimMembParamsBS59_2000::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramBS59_2000 _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5026)
inline void IRDimMembParamsBS59_2000::PutBucklingDiagramZ ( enum IRDimBuckDiagramBS59_2000 pVal ) {
    HRESULT _hr = put_BucklingDiagramZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5027)
inline double IRDimMembParamsBS59_2000::GetBuckLengthCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5028)
inline void IRDimMembParamsBS59_2000::PutBuckLengthCoeffY ( double pVal ) {
    HRESULT _hr = put_BuckLengthCoeffY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5029)
inline double IRDimMembParamsBS59_2000::GetBuckLengthCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5030)
inline void IRDimMembParamsBS59_2000::PutBuckLengthCoeffZ ( double pVal ) {
    HRESULT _hr = put_BuckLengthCoeffZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5031)
inline enum IRDimBuckCurveBS59_2000 IRDimMembParamsBS59_2000::GetBuckCurveY ( ) {
    enum IRDimBuckCurveBS59_2000 _result;
    HRESULT _hr = get_BuckCurveY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5032)
inline void IRDimMembParamsBS59_2000::PutBuckCurveY ( enum IRDimBuckCurveBS59_2000 pVal ) {
    HRESULT _hr = put_BuckCurveY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5033)
inline enum IRDimBuckCurveBS59_2000 IRDimMembParamsBS59_2000::GetBuckCurveZ ( ) {
    enum IRDimBuckCurveBS59_2000 _result;
    HRESULT _hr = get_BuckCurveZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5034)
inline void IRDimMembParamsBS59_2000::PutBuckCurveZ ( enum IRDimBuckCurveBS59_2000 pVal ) {
    HRESULT _hr = put_BuckCurveZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5035)
inline enum IRDimLaterBuckTypeBS59_2000 IRDimMembParamsBS59_2000::GetLatBuckType ( ) {
    enum IRDimLaterBuckTypeBS59_2000 _result;
    HRESULT _hr = get_LatBuckType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5036)
inline void IRDimMembParamsBS59_2000::PutLatBuckType ( enum IRDimLaterBuckTypeBS59_2000 pVal ) {
    HRESULT _hr = put_LatBuckType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5037)
inline enum IRDimLatBuckLengthCoefDiagramBS59_2000 IRDimMembParamsBS59_2000::GetLatBuckLengthCoef_LowFlan ( ) {
    enum IRDimLatBuckLengthCoefDiagramBS59_2000 _result;
    HRESULT _hr = get_LatBuckLengthCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5038)
inline void IRDimMembParamsBS59_2000::PutLatBuckLengthCoef_LowFlan ( enum IRDimLatBuckLengthCoefDiagramBS59_2000 pVal ) {
    HRESULT _hr = put_LatBuckLengthCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5039)
inline enum IRDimLatBuckLengthCoefDiagramBS59_2000 IRDimMembParamsBS59_2000::GetLatBuckLengthCoef_UppFlan ( ) {
    enum IRDimLatBuckLengthCoefDiagramBS59_2000 _result;
    HRESULT _hr = get_LatBuckLengthCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5040)
inline void IRDimMembParamsBS59_2000::PutLatBuckLengthCoef_UppFlan ( enum IRDimLatBuckLengthCoefDiagramBS59_2000 pVal ) {
    HRESULT _hr = put_LatBuckLengthCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5041)
inline double IRDimMembParamsBS59_2000::GetUserDefLatBuckLengthCoef_LowFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckLengthCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5042)
inline void IRDimMembParamsBS59_2000::PutUserDefLatBuckLengthCoef_LowFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckLengthCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5043)
inline double IRDimMembParamsBS59_2000::GetUserDefLatBuckLengthCoef_UppFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckLengthCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5044)
inline void IRDimMembParamsBS59_2000::PutUserDefLatBuckLengthCoef_UppFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckLengthCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5045)
inline enum IRDimCoefOfMomentDistrDiagramBS59_2000 IRDimMembParamsBS59_2000::GetLatBuckMltCoef ( ) {
    enum IRDimCoefOfMomentDistrDiagramBS59_2000 _result;
    HRESULT _hr = get_LatBuckMltCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5046)
inline void IRDimMembParamsBS59_2000::PutLatBuckMltCoef ( enum IRDimCoefOfMomentDistrDiagramBS59_2000 pVal ) {
    HRESULT _hr = put_LatBuckMltCoef(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5047)
inline double IRDimMembParamsBS59_2000::GetUserDefLatBuckMltCoef ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckMltCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5048)
inline void IRDimMembParamsBS59_2000::PutUserDefLatBuckMltCoef ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckMltCoef(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5049)
inline enum IRDimCoefOfMomentDistrDiagramBS59_2000 IRDimMembParamsBS59_2000::GetEqMomentFactor_my ( ) {
    enum IRDimCoefOfMomentDistrDiagramBS59_2000 _result;
    HRESULT _hr = get_EqMomentFactor_my(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5050)
inline void IRDimMembParamsBS59_2000::PutEqMomentFactor_my ( enum IRDimCoefOfMomentDistrDiagramBS59_2000 pVal ) {
    HRESULT _hr = put_EqMomentFactor_my(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5051)
inline enum IRDimCoefOfMomentDistrDiagramBS59_2000 IRDimMembParamsBS59_2000::GetEqMomentFactor_mz ( ) {
    enum IRDimCoefOfMomentDistrDiagramBS59_2000 _result;
    HRESULT _hr = get_EqMomentFactor_mz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5052)
inline void IRDimMembParamsBS59_2000::PutEqMomentFactor_mz ( enum IRDimCoefOfMomentDistrDiagramBS59_2000 pVal ) {
    HRESULT _hr = put_EqMomentFactor_mz(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5053)
inline double IRDimMembParamsBS59_2000::GetUserDefEqMomentFactor_my ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefEqMomentFactor_my(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5054)
inline void IRDimMembParamsBS59_2000::PutUserDefEqMomentFactor_my ( double pVal ) {
    HRESULT _hr = put_UserDefEqMomentFactor_my(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5055)
inline double IRDimMembParamsBS59_2000::GetUserDefEqMomentFactor_mz ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefEqMomentFactor_mz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5056)
inline void IRDimMembParamsBS59_2000::PutUserDefEqMomentFactor_mz ( double pVal ) {
    HRESULT _hr = put_UserDefEqMomentFactor_mz(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5057)
inline double IRDimMembParamsBS59_2000::GetAe_per_Ag_ratio ( ) {
    double _result = 0;
    HRESULT _hr = get_Ae_per_Ag_ratio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5058)
inline void IRDimMembParamsBS59_2000::PutAe_per_Ag_ratio ( double pVal ) {
    HRESULT _hr = put_Ae_per_Ag_ratio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5059)
inline double IRDimMembParamsBS59_2000::GetAvnet_per_Av_ratio ( ) {
    double _result = 0;
    HRESULT _hr = get_Avnet_per_Av_ratio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5060)
inline void IRDimMembParamsBS59_2000::PutAvnet_per_Av_ratio ( double pVal ) {
    HRESULT _hr = put_Avnet_per_Av_ratio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5061)
inline long IRDimMembParamsBS59_2000::GetHotFinishedPipes ( ) {
    long _result = 0;
    HRESULT _hr = get_HotFinishedPipes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5062)
inline void IRDimMembParamsBS59_2000::PutHotFinishedPipes ( long pVal ) {
    HRESULT _hr = put_HotFinishedPipes(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimMembParamsNS34 wrapper method implementations
//

#pragma implementation_key(5063)
inline enum IRDimBuckDiagramNS34 IRDimMembParamsNS34::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramNS34 _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5064)
inline void IRDimMembParamsNS34::PutBucklingDiagramY ( enum IRDimBuckDiagramNS34 pVal ) {
    HRESULT _hr = put_BucklingDiagramY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5065)
inline enum IRDimBuckDiagramNS34 IRDimMembParamsNS34::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramNS34 _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5066)
inline void IRDimMembParamsNS34::PutBucklingDiagramZ ( enum IRDimBuckDiagramNS34 pVal ) {
    HRESULT _hr = put_BucklingDiagramZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5067)
inline double IRDimMembParamsNS34::GetBuckLenghtCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLenghtCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5068)
inline void IRDimMembParamsNS34::PutBuckLenghtCoeffY ( double pVal ) {
    HRESULT _hr = put_BuckLenghtCoeffY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5069)
inline double IRDimMembParamsNS34::GetBuckLenghtCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLenghtCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5070)
inline void IRDimMembParamsNS34::PutBuckLenghtCoeffZ ( double pVal ) {
    HRESULT _hr = put_BuckLenghtCoeffZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5071)
inline long IRDimMembParamsNS34::GetLatBuck ( ) {
    long _result = 0;
    HRESULT _hr = get_LatBuck(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5072)
inline void IRDimMembParamsNS34::PutLatBuck ( long pVal ) {
    HRESULT _hr = put_LatBuck(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5073)
inline enum IRDimLoadLevelNS34 IRDimMembParamsNS34::GetLoadLevel ( ) {
    enum IRDimLoadLevelNS34 _result;
    HRESULT _hr = get_LoadLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5074)
inline void IRDimMembParamsNS34::PutLoadLevel ( enum IRDimLoadLevelNS34 pVal ) {
    HRESULT _hr = put_LoadLevel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5075)
inline double IRDimMembParamsNS34::GetLoadLevelValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LoadLevelValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5076)
inline void IRDimMembParamsNS34::PutLoadLevelValue ( double pVal ) {
    HRESULT _hr = put_LoadLevelValue(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5077)
inline enum IRDimLatBuckCoefDiagramNS34 IRDimMembParamsNS34::GetLatBuckCoef_LowFlan ( ) {
    enum IRDimLatBuckCoefDiagramNS34 _result;
    HRESULT _hr = get_LatBuckCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5078)
inline void IRDimMembParamsNS34::PutLatBuckCoef_LowFlan ( enum IRDimLatBuckCoefDiagramNS34 pVal ) {
    HRESULT _hr = put_LatBuckCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5079)
inline enum IRDimLatBuckCoefDiagramNS34 IRDimMembParamsNS34::GetLatBuckCoef_UppFlan ( ) {
    enum IRDimLatBuckCoefDiagramNS34 _result;
    HRESULT _hr = get_LatBuckCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5080)
inline void IRDimMembParamsNS34::PutLatBuckCoef_UppFlan ( enum IRDimLatBuckCoefDiagramNS34 pVal ) {
    HRESULT _hr = put_LatBuckCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5081)
inline double IRDimMembParamsNS34::GetUserDefLatBuckCoef_LowFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5082)
inline void IRDimMembParamsNS34::PutUserDefLatBuckCoef_LowFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5083)
inline double IRDimMembParamsNS34::GetUserDefLatBuckCoef_UppFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5084)
inline void IRDimMembParamsNS34::PutUserDefLatBuckCoef_UppFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5085)
inline enum IRDimLoadTypeNS34 IRDimMembParamsNS34::GetLoadTypeY ( ) {
    enum IRDimLoadTypeNS34 _result;
    HRESULT _hr = get_LoadTypeY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5086)
inline void IRDimMembParamsNS34::PutLoadTypeY ( enum IRDimLoadTypeNS34 pVal ) {
    HRESULT _hr = put_LoadTypeY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5087)
inline enum IRDimLoadTypeNS34 IRDimMembParamsNS34::GetLoadTypeZ ( ) {
    enum IRDimLoadTypeNS34 _result;
    HRESULT _hr = get_LoadTypeZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5088)
inline void IRDimMembParamsNS34::PutLoadTypeZ ( enum IRDimLoadTypeNS34 pVal ) {
    HRESULT _hr = put_LoadTypeZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5089)
inline double IRDimMembParamsNS34::GetTensAreaNetGros ( ) {
    double _result = 0;
    HRESULT _hr = get_TensAreaNetGros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5090)
inline void IRDimMembParamsNS34::PutTensAreaNetGros ( double pVal ) {
    HRESULT _hr = put_TensAreaNetGros(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5091)
inline long IRDimMembParamsNS34::GetTubeControl ( ) {
    long _result = 0;
    HRESULT _hr = get_TubeControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5092)
inline void IRDimMembParamsNS34::PutTubeControl ( long pVal ) {
    HRESULT _hr = put_TubeControl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5093)
inline long IRDimMembParamsNS34::GetMatCoeffGammaM1 ( ) {
    long _result = 0;
    HRESULT _hr = get_MatCoeffGammaM1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5094)
inline void IRDimMembParamsNS34::PutMatCoeffGammaM1 ( long pVal ) {
    HRESULT _hr = put_MatCoeffGammaM1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5095)
inline long IRDimMembParamsNS34::GetMatCoeffGammaM2 ( ) {
    long _result = 0;
    HRESULT _hr = get_MatCoeffGammaM2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5096)
inline void IRDimMembParamsNS34::PutMatCoeffGammaM2 ( long pVal ) {
    HRESULT _hr = put_MatCoeffGammaM2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimMembParamsEC3 wrapper method implementations
//

#pragma implementation_key(5097)
inline enum IRDimBuckDiagramEC3 IRDimMembParamsEC3::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramEC3 _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5098)
inline void IRDimMembParamsEC3::PutBucklingDiagramY ( enum IRDimBuckDiagramEC3 ret ) {
    HRESULT _hr = put_BucklingDiagramY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5099)
inline enum IRDimBuckDiagramEC3 IRDimMembParamsEC3::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramEC3 _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5100)
inline void IRDimMembParamsEC3::PutBucklingDiagramZ ( enum IRDimBuckDiagramEC3 ret ) {
    HRESULT _hr = put_BucklingDiagramZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5101)
inline enum IRDimLoadTypeEC3 IRDimMembParamsEC3::GetLoadTypeY ( ) {
    enum IRDimLoadTypeEC3 _result;
    HRESULT _hr = get_LoadTypeY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5102)
inline void IRDimMembParamsEC3::PutLoadTypeY ( enum IRDimLoadTypeEC3 ret ) {
    HRESULT _hr = put_LoadTypeY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5103)
inline enum IRDimLoadTypeEC3 IRDimMembParamsEC3::GetLoadTypeZ ( ) {
    enum IRDimLoadTypeEC3 _result;
    HRESULT _hr = get_LoadTypeZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5104)
inline void IRDimMembParamsEC3::PutLoadTypeZ ( enum IRDimLoadTypeEC3 ret ) {
    HRESULT _hr = put_LoadTypeZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5105)
inline enum IRDimLoadLevelEC3 IRDimMembParamsEC3::GetLoadLevel ( ) {
    enum IRDimLoadLevelEC3 _result;
    HRESULT _hr = get_LoadLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5106)
inline void IRDimMembParamsEC3::PutLoadLevel ( enum IRDimLoadLevelEC3 ret ) {
    HRESULT _hr = put_LoadLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5107)
inline double IRDimMembParamsEC3::GetLoadLevelValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LoadLevelValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5108)
inline void IRDimMembParamsEC3::PutLoadLevelValue ( double ret ) {
    HRESULT _hr = put_LoadLevelValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5109)
inline enum IRDimLatBuckCoeffDiagramEC3 IRDimMembParamsEC3::GetLatCoeffLowerFlange ( ) {
    enum IRDimLatBuckCoeffDiagramEC3 _result;
    HRESULT _hr = get_LatCoeffLowerFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5110)
inline void IRDimMembParamsEC3::PutLatCoeffLowerFlange ( enum IRDimLatBuckCoeffDiagramEC3 ret ) {
    HRESULT _hr = put_LatCoeffLowerFlange(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5111)
inline enum IRDimLatBuckCoeffDiagramEC3 IRDimMembParamsEC3::GetLatCoeffUpperFlange ( ) {
    enum IRDimLatBuckCoeffDiagramEC3 _result;
    HRESULT _hr = get_LatCoeffUpperFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5112)
inline void IRDimMembParamsEC3::PutLatCoeffUpperFlange ( enum IRDimLatBuckCoeffDiagramEC3 ret ) {
    HRESULT _hr = put_LatCoeffUpperFlange(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5113)
inline double IRDimMembParamsEC3::GetLatCoeffLowerFlangeValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LatCoeffLowerFlangeValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5114)
inline void IRDimMembParamsEC3::PutLatCoeffLowerFlangeValue ( double ret ) {
    HRESULT _hr = put_LatCoeffLowerFlangeValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5115)
inline double IRDimMembParamsEC3::GetLatCoeffUpperFlangeValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LatCoeffUpperFlangeValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5116)
inline void IRDimMembParamsEC3::PutLatCoeffUpperFlangeValue ( double ret ) {
    HRESULT _hr = put_LatCoeffUpperFlangeValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5117)
inline enum IRDimLaterBuckTypeEC3 IRDimMembParamsEC3::GetLatBuckType ( ) {
    enum IRDimLaterBuckTypeEC3 _result;
    HRESULT _hr = get_LatBuckType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5118)
inline void IRDimMembParamsEC3::PutLatBuckType ( enum IRDimLaterBuckTypeEC3 ret ) {
    HRESULT _hr = put_LatBuckType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5119)
inline double IRDimMembParamsEC3::GetTensAreaNetGros ( ) {
    double _result = 0;
    HRESULT _hr = get_TensAreaNetGros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5120)
inline void IRDimMembParamsEC3::PutTensAreaNetGros ( double ret ) {
    HRESULT _hr = put_TensAreaNetGros(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5121)
inline double IRDimMembParamsEC3::GetYieldStrengthValue ( ) {
    double _result = 0;
    HRESULT _hr = get_YieldStrengthValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5122)
inline void IRDimMembParamsEC3::PutYieldStrengthValue ( double ret ) {
    HRESULT _hr = put_YieldStrengthValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5123)
inline double IRDimMembParamsEC3::GetMaterCoeffGamma0 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5124)
inline void IRDimMembParamsEC3::PutMaterCoeffGamma0 ( double ret ) {
    HRESULT _hr = put_MaterCoeffGamma0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5125)
inline double IRDimMembParamsEC3::GetMaterCoeffGamma1 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5126)
inline void IRDimMembParamsEC3::PutMaterCoeffGamma1 ( double ret ) {
    HRESULT _hr = put_MaterCoeffGamma1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5127)
inline VARIANT_BOOL IRDimMembParamsEC3::GetTubeControl ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TubeControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5128)
inline void IRDimMembParamsEC3::PutTubeControl ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_TubeControl(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5129)
inline double IRDimMembParamsEC3::GetBuckLengthCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5130)
inline void IRDimMembParamsEC3::PutBuckLengthCoeffY ( double ret ) {
    HRESULT _hr = put_BuckLengthCoeffY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5131)
inline double IRDimMembParamsEC3::GetBuckLengthCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5132)
inline void IRDimMembParamsEC3::PutBuckLengthCoeffZ ( double ret ) {
    HRESULT _hr = put_BuckLengthCoeffZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5133)
inline double IRDimMembParamsEC3::GetRelLimitDeflUy ( ) {
    double _result = 0;
    HRESULT _hr = get_RelLimitDeflUy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5134)
inline void IRDimMembParamsEC3::PutRelLimitDeflUy ( double ret ) {
    HRESULT _hr = put_RelLimitDeflUy(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5135)
inline double IRDimMembParamsEC3::GetRelLimitdeflUz ( ) {
    double _result = 0;
    HRESULT _hr = get_RelLimitdeflUz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5136)
inline void IRDimMembParamsEC3::PutRelLimitdeflUz ( double ret ) {
    HRESULT _hr = put_RelLimitdeflUz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5137)
inline enum IRDimYieldStrengthTypeEC3 IRDimMembParamsEC3::GetYieldStrengthType ( ) {
    enum IRDimYieldStrengthTypeEC3 _result;
    HRESULT _hr = get_YieldStrengthType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5138)
inline void IRDimMembParamsEC3::PutYieldStrengthType ( enum IRDimYieldStrengthTypeEC3 ret ) {
    HRESULT _hr = put_YieldStrengthType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5139)
inline VARIANT_BOOL IRDimMembParamsEC3::GetHotRolledPipes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HotRolledPipes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5140)
inline void IRDimMembParamsEC3::PutHotRolledPipes ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_HotRolledPipes(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimCodeResEC3 wrapper method implementations
//

#pragma implementation_key(5141)
inline long IRDimCodeResEC3::GetIsBuckY ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5142)
inline long IRDimCodeResEC3::GetIsBuckZ ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5143)
inline double IRDimCodeResEC3::GetStrsShearY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5144)
inline double IRDimCodeResEC3::GetStrsShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5145)
inline double IRDimCodeResEC3::GetStrsComp ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsComp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5146)
inline double IRDimCodeResEC3::GetStrsTens ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTens(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5147)
inline double IRDimCodeResEC3::GetStrsUprEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsUprEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5148)
inline double IRDimCodeResEC3::GetStrsRgtEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsRgtEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5149)
inline double IRDimCodeResEC3::GetStrsLowEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLowEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5150)
inline double IRDimCodeResEC3::GetStrsLftEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLftEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5151)
inline long IRDimCodeResEC3::GetClassOfSect ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5152)
inline long IRDimCodeResEC3::GetClassOfSectElem1 ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSectElem1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5153)
inline long IRDimCodeResEC3::GetClassOfSectElem2 ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSectElem2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5154)
inline long IRDimCodeResEC3::GetClassOfSectElem3 ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSectElem3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5155)
inline long IRDimCodeResEC3::GetClassOfSectElem4 ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSectElem4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5156)
inline double IRDimCodeResEC3::GetWebSlend ( ) {
    double _result = 0;
    HRESULT _hr = get_WebSlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5157)
inline double IRDimCodeResEC3::GetWebSlend1 ( ) {
    double _result = 0;
    HRESULT _hr = get_WebSlend1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5158)
inline double IRDimCodeResEC3::GetUppFlanSlend ( ) {
    double _result = 0;
    HRESULT _hr = get_UppFlanSlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5159)
inline double IRDimCodeResEC3::GetLowFlanSlend1 ( ) {
    double _result = 0;
    HRESULT _hr = get_LowFlanSlend1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5160)
inline double IRDimCodeResEC3::GetLowFlanSlend2 ( ) {
    double _result = 0;
    HRESULT _hr = get_LowFlanSlend2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5161)
inline double IRDimCodeResEC3::GetBuckSLendLamy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSLendLamy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5162)
inline double IRDimCodeResEC3::GetBuclSlendLamz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuclSlendLamz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5163)
inline double IRDimCodeResEC3::GetBuckRelSlendLaby ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckRelSlendLaby(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5164)
inline double IRDimCodeResEC3::GetBuckRelSlendLabz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckRelSlendLabz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5165)
inline double IRDimCodeResEC3::GetLatBuckSlendLamlt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckSlendLamlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5166)
inline double IRDimCodeResEC3::GetMaxBuckSlend ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxBuckSlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5167)
inline double IRDimCodeResEC3::GetBuckParamKy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckParamKy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5168)
inline double IRDimCodeResEC3::GetBuckParamKz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckParamKz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5169)
inline double IRDimCodeResEC3::GetLatBuckParamKlt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamKlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5170)
inline double IRDimCodeResEC3::GetPlastAxForcStrenNplrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastAxForcStrenNplrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5171)
inline double IRDimCodeResEC3::GetTensStrenNurd ( ) {
    double _result = 0;
    HRESULT _hr = get_TensStrenNurd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5172)
inline double IRDimCodeResEC3::GetPlastTensStrenNtrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastTensStrenNtrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5173)
inline double IRDimCodeResEC3::GetPlastCompStrenNcrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastCompStrenNcrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5174)
inline double IRDimCodeResEC3::GetBuckStrenNbyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckStrenNbyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5175)
inline double IRDimCodeResEC3::GetBuckStrenNbzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckStrenNbzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5176)
inline double IRDimCodeResEC3::GetOverallBuckStrenNbrd ( ) {
    double _result = 0;
    HRESULT _hr = get_OverallBuckStrenNbrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5177)
inline double IRDimCodeResEC3::GetLatBuckLengthLd ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLengthLd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5178)
inline long IRDimCodeResEC3::GetLatBuckParamLd ( ) {
    long _result = 0;
    HRESULT _hr = get_LatBuckParamLd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5179)
inline double IRDimCodeResEC3::GetInteractParamAlfa ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamAlfa(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5180)
inline double IRDimCodeResEC3::GetInteractParamBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamBeta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5181)
inline double IRDimCodeResEC3::GetLatBuckParamC1 ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamC1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5182)
inline double IRDimCodeResEC3::GetLatBuckParamC2 ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamC2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5183)
inline double IRDimCodeResEC3::GetWarpingConstantIw ( ) {
    double _result = 0;
    HRESULT _hr = get_WarpingConstantIw(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5184)
inline double IRDimCodeResEC3::GetTorsMomInertIt ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsMomInertIt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5185)
inline double IRDimCodeResEC3::GetInteractParamMiy ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamMiy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5186)
inline double IRDimCodeResEC3::GetInteractParamMiz ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamMiz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5187)
inline double IRDimCodeResEC3::GetInteractParamMilt ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamMilt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5188)
inline double IRDimCodeResEC3::GetPlastMomStrenMplyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastMomStrenMplyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5189)
inline double IRDimCodeResEC3::GetPlastMomStrenMplzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastMomStrenMplzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5190)
inline double IRDimCodeResEC3::GetElastMomStrenMelyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastMomStrenMelyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5191)
inline double IRDimCodeResEC3::GetElastMomStrenMelzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastMomStrenMelzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5192)
inline double IRDimCodeResEC3::GetReducMomStrenMcyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMcyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5193)
inline double IRDimCodeResEC3::GetReducMomStrenMczrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMczrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5194)
inline double IRDimCodeResEC3::GetReducMomStrenMnyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMnyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5195)
inline double IRDimCodeResEC3::GetReducMomStrenMnzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMnzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5196)
inline double IRDimCodeResEC3::GetReducMomStrenMvyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMvyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5197)
inline double IRDimCodeResEC3::GetReducMomStrenMvzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMvzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5198)
inline double IRDimCodeResEC3::GetLatBuckMomStrenmbrd ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckMomStrenmbrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5199)
inline double IRDimCodeResEC3::GetEffectiveMomenMeff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffectiveMomenMeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5200)
inline double IRDimCodeResEC3::GetCritMomenMcr ( ) {
    double _result = 0;
    HRESULT _hr = get_CritMomenMcr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5201)
inline double IRDimCodeResEC3::GetShearStrenTplyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearStrenTplyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5202)
inline double IRDimCodeResEC3::GetShearStrenTplzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearStrenTplzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5203)
inline double IRDimCodeResEC3::GetBuckCoeffXy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoeffXy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5204)
inline double IRDimCodeResEC3::GetBuckCoeffXz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoeffXz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5205)
inline double IRDimCodeResEC3::GetBuckCoeffMinXi ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoeffMinXi(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5206)
inline double IRDimCodeResEC3::GetLatBuckParamFilt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamFilt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5207)
inline double IRDimCodeResEC3::GetLatBuckCoeffXlt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckCoeffXlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5208)
inline double IRDimCodeResEC3::GetLaodLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_LaodLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5209)
inline double IRDimCodeResEC3::GetMaterCoeffGamma0 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5210)
inline double IRDimCodeResEC3::GetMaterCoeffGamma1 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5211)
inline double IRDimCodeResEC3::GetMaterCoeffGamma2 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5212)
inline double IRDimCodeResEC3::GetCompParamBetaA ( ) {
    double _result = 0;
    HRESULT _hr = get_CompParamBetaA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5213)
inline double IRDimCodeResEC3::GetLatBuckParamBetaW ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamBetaW(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5214)
inline double IRDimCodeResEC3::GetBendParamBetMy ( ) {
    double _result = 0;
    HRESULT _hr = get_BendParamBetMy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5215)
inline double IRDimCodeResEC3::GetBendParamBetaMz ( ) {
    double _result = 0;
    HRESULT _hr = get_BendParamBetaMz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5216)
inline double IRDimCodeResEC3::GetBendParamBetaMlty ( ) {
    double _result = 0;
    HRESULT _hr = get_BendParamBetaMlty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5217)
inline double IRDimCodeResEC3::GetBendParamBetaMltz ( ) {
    double _result = 0;
    HRESULT _hr = get_BendParamBetaMltz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5218)
inline double IRDimCodeResEC3::GetMomStrengthMpzEuro ( ) {
    double _result = 0;
    HRESULT _hr = get_MomStrengthMpzEuro(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5219)
inline double IRDimCodeResEC3::GetMaterialCapacityFy ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterialCapacityFy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5220)
inline double IRDimCodeResEC3::GetElastSectModulWyel ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastSectModulWyel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5221)
inline double IRDimCodeResEC3::GetPlastSectModulWypl ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastSectModulWypl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5222)
inline double IRDimCodeResEC3::GetElastSectModulWzel ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastSectModulWzel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5223)
inline double IRDimCodeResEC3::GetPlastSectModulWzpl ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastSectModulWzpl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5224)
inline double IRDimCodeResEC3::GetEffSectModulWyeff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffSectModulWyeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5225)
inline double IRDimCodeResEC3::GetEffSectModulWzeff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffSectModulWzeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5226)
inline double IRDimCodeResEC3::GetEffSectAreaSeff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffSectAreaSeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5227)
inline double IRDimCodeResEC3::GetFlangeAreaAf ( ) {
    double _result = 0;
    HRESULT _hr = get_FlangeAreaAf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5228)
inline double IRDimCodeResEC3::GetFlangeAreaAw ( ) {
    double _result = 0;
    HRESULT _hr = get_FlangeAreaAw(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5229)
inline double IRDimCodeResEC3::GetAxForceExcentrEny ( ) {
    double _result = 0;
    HRESULT _hr = get_AxForceExcentrEny(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5230)
inline double IRDimCodeResEC3::GetAxForcExcentrEnz ( ) {
    double _result = 0;
    HRESULT _hr = get_AxForcExcentrEnz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5231)
inline double IRDimCodeResEC3::GetBuckCurveNumbY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveNumbY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5232)
inline double IRDimCodeResEC3::GetBuckCurveNumbZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveNumbZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5233)
inline double IRDimCodeResEC3::GetBuckCurveCoeffAlfy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveCoeffAlfy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5234)
inline double IRDimCodeResEC3::GetBuckCurveCoeffAlfz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveCoeffAlfz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5235)
inline double IRDimCodeResEC3::GetBuckParamFiy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckParamFiy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5236)
inline double IRDimCodeResEC3::GetBuckParamFiz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckParamFiz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5237)
inline double IRDimCodeResEC3::GetMaEffRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_MaEffRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5238)
inline double IRDimCodeResEC3::GetPartEffRatio1 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5239)
inline double IRDimCodeResEC3::GetPartEffRatio2 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5240)
inline double IRDimCodeResEC3::GetPartEffRatio3 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5241)
inline double IRDimCodeResEC3::GetPartEffRatio4 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5242)
inline double IRDimCodeResEC3::GetPartEffRatio5 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimThinWalledE32 wrapper method implementations
//

#pragma implementation_key(5243)
inline long IRDimThinWalledE32::GetActive ( ) {
    long _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5244)
inline void IRDimThinWalledE32::PutActive ( long ret ) {
    HRESULT _hr = put_Active(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5245)
inline enum IRDimThinWalledFormingTypeE32 IRDimThinWalledE32::GetTypeOfForming ( ) {
    enum IRDimThinWalledFormingTypeE32 _result;
    HRESULT _hr = get_TypeOfForming(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5246)
inline void IRDimThinWalledE32::PutTypeOfForming ( enum IRDimThinWalledFormingTypeE32 ret ) {
    HRESULT _hr = put_TypeOfForming(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5247)
inline long IRDimThinWalledE32::GetUseStiffWithProfSheets ( ) {
    long _result = 0;
    HRESULT _hr = get_UseStiffWithProfSheets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5248)
inline void IRDimThinWalledE32::PutUseStiffWithProfSheets ( long ret ) {
    HRESULT _hr = put_UseStiffWithProfSheets(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5249)
inline _bstr_t IRDimThinWalledE32::GetSheeting_Name ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Sheeting_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5250)
inline void IRDimThinWalledE32::PutSheeting_Name ( _bstr_t ret ) {
    HRESULT _hr = put_Sheeting_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5251)
inline double IRDimThinWalledE32::GetSheeting_NomThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Sheeting_NomThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5252)
inline void IRDimThinWalledE32::PutSheeting_NomThick ( double ret ) {
    HRESULT _hr = put_Sheeting_NomThick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5253)
inline double IRDimThinWalledE32::GetSheeting_CorrugWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Sheeting_CorrugWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5254)
inline void IRDimThinWalledE32::PutSheeting_CorrugWidth ( double ret ) {
    HRESULT _hr = put_Sheeting_CorrugWidth(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5255)
inline double IRDimThinWalledE32::GetSheeting_FlangeWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Sheeting_FlangeWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5256)
inline void IRDimThinWalledE32::PutSheeting_FlangeWidth ( double ret ) {
    HRESULT _hr = put_Sheeting_FlangeWidth(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5257)
inline double IRDimThinWalledE32::GetSheeting_SectNomOfIner ( ) {
    double _result = 0;
    HRESULT _hr = get_Sheeting_SectNomOfIner(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5258)
inline void IRDimThinWalledE32::PutSheeting_SectNomOfIner ( double ret ) {
    HRESULT _hr = put_Sheeting_SectNomOfIner(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5259)
inline enum IRDimThinWalledPosOfSheetingE32 IRDimThinWalledE32::GetPosOfSheeting ( ) {
    enum IRDimThinWalledPosOfSheetingE32 _result;
    HRESULT _hr = get_PosOfSheeting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5260)
inline void IRDimThinWalledE32::PutPosOfSheeting ( enum IRDimThinWalledPosOfSheetingE32 ret ) {
    HRESULT _hr = put_PosOfSheeting(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5261)
inline enum IRDimThinWalledSheetFastenedE32 IRDimThinWalledE32::GetSheetFastened ( ) {
    enum IRDimThinWalledSheetFastenedE32 _result;
    HRESULT _hr = get_SheetFastened(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5262)
inline void IRDimThinWalledE32::PutSheetFastened ( enum IRDimThinWalledSheetFastenedE32 ret ) {
    HRESULT _hr = put_SheetFastened(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5263)
inline enum IRDimThinWalledPitchOfFastenersE32 IRDimThinWalledE32::GetPitchOfFasteners ( ) {
    enum IRDimThinWalledPitchOfFastenersE32 _result;
    HRESULT _hr = get_PitchOfFasteners(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5264)
inline void IRDimThinWalledE32::PutPitchOfFasteners ( enum IRDimThinWalledPitchOfFastenersE32 ret ) {
    HRESULT _hr = put_PitchOfFasteners(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5265)
inline enum IRDimThinWalledModelForCalculE32 IRDimThinWalledE32::GetModelForCalcul ( ) {
    enum IRDimThinWalledModelForCalculE32 _result;
    HRESULT _hr = get_ModelForCalcul(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5266)
inline void IRDimThinWalledE32::PutModelForCalcul ( enum IRDimThinWalledModelForCalculE32 ret ) {
    HRESULT _hr = put_ModelForCalcul(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5267)
inline enum IRDimThinWalledPosOfPurlinsE32 IRDimThinWalledE32::GetPosOfPurlins ( ) {
    enum IRDimThinWalledPosOfPurlinsE32 _result;
    HRESULT _hr = get_PosOfPurlins(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5268)
inline void IRDimThinWalledE32::PutPosOfPurlins ( enum IRDimThinWalledPosOfPurlinsE32 ret ) {
    HRESULT _hr = put_PosOfPurlins(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5269)
inline double IRDimThinWalledE32::GetWebDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_WebDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5270)
inline void IRDimThinWalledE32::PutWebDistance ( double ret ) {
    HRESULT _hr = put_WebDistance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5271)
inline double IRDimThinWalledE32::GetSpacingOfPurlins ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingOfPurlins(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5272)
inline void IRDimThinWalledE32::PutSpacingOfPurlins ( double ret ) {
    HRESULT _hr = put_SpacingOfPurlins(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimFireResistE32 wrapper method implementations
//

#pragma implementation_key(5273)
inline long IRDimFireResistE32::GetActive ( ) {
    long _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5274)
inline void IRDimFireResistE32::PutActive ( long ret ) {
    HRESULT _hr = put_Active(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5275)
inline long IRDimFireResistE32::GetAutoMembTemp ( ) {
    long _result = 0;
    HRESULT _hr = get_AutoMembTemp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5276)
inline void IRDimFireResistE32::PutAutoMembTemp ( long ret ) {
    HRESULT _hr = put_AutoMembTemp(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5277)
inline double IRDimFireResistE32::GetUserDefMembTemp ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefMembTemp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5278)
inline void IRDimFireResistE32::PutUserDefMembTemp ( double ret ) {
    HRESULT _hr = put_UserDefMembTemp(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5279)
inline double IRDimFireResistE32::Gettreq ( ) {
    double _result = 0;
    HRESULT _hr = get_treq(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5280)
inline void IRDimFireResistE32::Puttreq ( double ret ) {
    HRESULT _hr = put_treq(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5281)
inline enum IRDimFireResistTempCurveE32 IRDimFireResistE32::GetTempCurve ( ) {
    enum IRDimFireResistTempCurveE32 _result;
    HRESULT _hr = get_TempCurve(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5282)
inline void IRDimFireResistE32::PutTempCurve ( enum IRDimFireResistTempCurveE32 ret ) {
    HRESULT _hr = put_TempCurve(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5283)
inline enum IRDimFireResistSteelMembProtE32 IRDimFireResistE32::GetSteelMembProt ( ) {
    enum IRDimFireResistSteelMembProtE32 _result;
    HRESULT _hr = get_SteelMembProt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5284)
inline void IRDimFireResistE32::PutSteelMembProt ( enum IRDimFireResistSteelMembProtE32 ret ) {
    HRESULT _hr = put_SteelMembProt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5285)
inline enum IRDimFireResistSectExpositionE32 IRDimFireResistE32::GetSectExposition ( ) {
    enum IRDimFireResistSectExpositionE32 _result;
    HRESULT _hr = get_SectExposition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5286)
inline void IRDimFireResistE32::PutSectExposition ( enum IRDimFireResistSectExpositionE32 ret ) {
    HRESULT _hr = put_SectExposition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5287)
inline double IRDimFireResistE32::Getgnr ( ) {
    double _result = 0;
    HRESULT _hr = get_gnr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5288)
inline void IRDimFireResistE32::Putgnr ( double ret ) {
    HRESULT _hr = put_gnr(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5289)
inline double IRDimFireResistE32::Getgnc ( ) {
    double _result = 0;
    HRESULT _hr = get_gnc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5290)
inline void IRDimFireResistE32::Putgnc ( double ret ) {
    HRESULT _hr = put_gnc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5291)
inline double IRDimFireResistE32::Getk_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_k_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5292)
inline void IRDimFireResistE32::Putk_2 ( double ret ) {
    HRESULT _hr = put_k_2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5293)
inline double IRDimFireResistE32::Getroa ( ) {
    double _result = 0;
    HRESULT _hr = get_roa(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5294)
inline void IRDimFireResistE32::Putroa ( double ret ) {
    HRESULT _hr = put_roa(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5295)
inline double IRDimFireResistE32::Getalfc ( ) {
    double _result = 0;
    HRESULT _hr = get_alfc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5296)
inline void IRDimFireResistE32::Putalfc ( double ret ) {
    HRESULT _hr = put_alfc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5297)
inline double IRDimFireResistE32::GetFi ( ) {
    double _result = 0;
    HRESULT _hr = get_Fi(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5298)
inline void IRDimFireResistE32::PutFi ( double ret ) {
    HRESULT _hr = put_Fi(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5299)
inline double IRDimFireResistE32::Getem ( ) {
    double _result = 0;
    HRESULT _hr = get_em(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5300)
inline void IRDimFireResistE32::Putem ( double ret ) {
    HRESULT _hr = put_em(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5301)
inline double IRDimFireResistE32::Getef ( ) {
    double _result = 0;
    HRESULT _hr = get_ef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5302)
inline void IRDimFireResistE32::Putef ( double ret ) {
    HRESULT _hr = put_ef(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5303)
inline long IRDimFireResistE32::GetIgnoreShadowEffect ( ) {
    long _result = 0;
    HRESULT _hr = get_IgnoreShadowEffect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5304)
inline void IRDimFireResistE32::PutIgnoreShadowEffect ( long ret ) {
    HRESULT _hr = put_IgnoreShadowEffect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5305)
inline enum IRDimFireResistEncasementTypeE32 IRDimFireResistE32::GetEncasementType ( ) {
    enum IRDimFireResistEncasementTypeE32 _result;
    HRESULT _hr = get_EncasementType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5306)
inline void IRDimFireResistE32::PutEncasementType ( enum IRDimFireResistEncasementTypeE32 ret ) {
    HRESULT _hr = put_EncasementType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5307)
inline double IRDimFireResistE32::Getdp ( ) {
    double _result = 0;
    HRESULT _hr = get_dp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5308)
inline void IRDimFireResistE32::Putdp ( double ret ) {
    HRESULT _hr = put_dp(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5309)
inline HRESULT IRDimFireResistE32::Material_GroupAndName ( _bstr_t group, _bstr_t Name, long lang ) {
    HRESULT _hr = raw_Material_GroupAndName(group, Name, lang);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5310)
inline _bstr_t IRDimFireResistE32::GetMaterial_Group ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material_Group(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5311)
inline _bstr_t IRDimFireResistE32::GetMaterial_Name ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5312)
inline double IRDimFireResistE32::GetMaterial_rop ( ) {
    double _result = 0;
    HRESULT _hr = get_Material_rop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5313)
inline void IRDimFireResistE32::PutMaterial_rop ( double ret ) {
    HRESULT _hr = put_Material_rop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5314)
inline double IRDimFireResistE32::GetMaterial_cp ( ) {
    double _result = 0;
    HRESULT _hr = get_Material_cp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5315)
inline void IRDimFireResistE32::PutMaterial_cp ( double ret ) {
    HRESULT _hr = put_Material_cp(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5316)
inline double IRDimFireResistE32::GetMaterial_lap ( ) {
    double _result = 0;
    HRESULT _hr = get_Material_lap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5317)
inline void IRDimFireResistE32::PutMaterial_lap ( double ret ) {
    HRESULT _hr = put_Material_lap(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimComplexSectE32 wrapper method implementations
//

#pragma implementation_key(5318)
inline long IRDimComplexSectE32::GetActive ( ) {
    long _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5319)
inline void IRDimComplexSectE32::PutActive ( long ret ) {
    HRESULT _hr = put_Active(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5320)
inline long IRDimComplexSectE32::GetNoLaticeXY ( ) {
    long _result = 0;
    HRESULT _hr = get_NoLaticeXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5321)
inline void IRDimComplexSectE32::PutNoLaticeXY ( long ret ) {
    HRESULT _hr = put_NoLaticeXY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5322)
inline long IRDimComplexSectE32::GetNoLaticeXZ ( ) {
    long _result = 0;
    HRESULT _hr = get_NoLaticeXZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5323)
inline void IRDimComplexSectE32::PutNoLaticeXZ ( long ret ) {
    HRESULT _hr = put_NoLaticeXZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5324)
inline enum IRDimComplexSectChordConnTypeE32 IRDimComplexSectE32::GetChordConnectTypeXY ( ) {
    enum IRDimComplexSectChordConnTypeE32 _result;
    HRESULT _hr = get_ChordConnectTypeXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5325)
inline void IRDimComplexSectE32::PutChordConnectTypeXY ( enum IRDimComplexSectChordConnTypeE32 ret ) {
    HRESULT _hr = put_ChordConnectTypeXY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5326)
inline enum IRDimComplexSectChordConnTypeE32 IRDimComplexSectE32::GetChordConnectTypeXZ ( ) {
    enum IRDimComplexSectChordConnTypeE32 _result;
    HRESULT _hr = get_ChordConnectTypeXZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5327)
inline void IRDimComplexSectE32::PutChordConnectTypeXZ ( enum IRDimComplexSectChordConnTypeE32 ret ) {
    HRESULT _hr = put_ChordConnectTypeXZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5328)
inline double IRDimComplexSectE32::GetBattenHeightXY ( ) {
    double _result = 0;
    HRESULT _hr = get_BattenHeightXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5329)
inline void IRDimComplexSectE32::PutBattenHeightXY ( double ret ) {
    HRESULT _hr = put_BattenHeightXY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5330)
inline double IRDimComplexSectE32::GetBattenHeightXZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BattenHeightXZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5331)
inline void IRDimComplexSectE32::PutBattenHeightXZ ( double ret ) {
    HRESULT _hr = put_BattenHeightXZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5332)
inline double IRDimComplexSectE32::GetBattenThicknessXY ( ) {
    double _result = 0;
    HRESULT _hr = get_BattenThicknessXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5333)
inline void IRDimComplexSectE32::PutBattenThicknessXY ( double ret ) {
    HRESULT _hr = put_BattenThicknessXY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5334)
inline double IRDimComplexSectE32::GetBattenThicknessXZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BattenThicknessXZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5335)
inline void IRDimComplexSectE32::PutBattenThicknessXZ ( double ret ) {
    HRESULT _hr = put_BattenThicknessXZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5336)
inline _bstr_t IRDimComplexSectE32::GetLaticeDiagonal_BaseXY ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LaticeDiagonal_BaseXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5337)
inline void IRDimComplexSectE32::PutLaticeDiagonal_BaseXY ( _bstr_t ret ) {
    HRESULT _hr = put_LaticeDiagonal_BaseXY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5338)
inline _bstr_t IRDimComplexSectE32::GetLaticeDiagonal_BaseXZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LaticeDiagonal_BaseXZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5339)
inline void IRDimComplexSectE32::PutLaticeDiagonal_BaseXZ ( _bstr_t ret ) {
    HRESULT _hr = put_LaticeDiagonal_BaseXZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5340)
inline _bstr_t IRDimComplexSectE32::GetLaticeDiagonal_SectXY ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LaticeDiagonal_SectXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5341)
inline void IRDimComplexSectE32::PutLaticeDiagonal_SectXY ( _bstr_t ret ) {
    HRESULT _hr = put_LaticeDiagonal_SectXY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5342)
inline _bstr_t IRDimComplexSectE32::GetLaticeDiagonal_SectXZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LaticeDiagonal_SectXZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5343)
inline void IRDimComplexSectE32::PutLaticeDiagonal_SectXZ ( _bstr_t ret ) {
    HRESULT _hr = put_LaticeDiagonal_SectXZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5344)
inline double IRDimComplexSectE32::GetLaticeDiagonal_Ad_XY ( ) {
    double _result = 0;
    HRESULT _hr = get_LaticeDiagonal_Ad_XY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5345)
inline void IRDimComplexSectE32::PutLaticeDiagonal_Ad_XY ( double ret ) {
    HRESULT _hr = put_LaticeDiagonal_Ad_XY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5346)
inline double IRDimComplexSectE32::GetLaticeDiagonal_Ad_XZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LaticeDiagonal_Ad_XZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5347)
inline void IRDimComplexSectE32::PutLaticeDiagonal_Ad_XZ ( double ret ) {
    HRESULT _hr = put_LaticeDiagonal_Ad_XZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5348)
inline _bstr_t IRDimComplexSectE32::GetLaticePost_BaseXY ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LaticePost_BaseXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5349)
inline void IRDimComplexSectE32::PutLaticePost_BaseXY ( _bstr_t ret ) {
    HRESULT _hr = put_LaticePost_BaseXY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5350)
inline _bstr_t IRDimComplexSectE32::GetLaticePost_BaseXZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LaticePost_BaseXZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5351)
inline void IRDimComplexSectE32::PutLaticePost_BaseXZ ( _bstr_t ret ) {
    HRESULT _hr = put_LaticePost_BaseXZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5352)
inline _bstr_t IRDimComplexSectE32::GetLaticePost_SectXY ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LaticePost_SectXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5353)
inline void IRDimComplexSectE32::PutLaticePost_SectXY ( _bstr_t ret ) {
    HRESULT _hr = put_LaticePost_SectXY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5354)
inline _bstr_t IRDimComplexSectE32::GetLaticePost_SectXZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LaticePost_SectXZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5355)
inline void IRDimComplexSectE32::PutLaticePost_SectXZ ( _bstr_t ret ) {
    HRESULT _hr = put_LaticePost_SectXZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5356)
inline double IRDimComplexSectE32::GetLaticePost_Av_XY ( ) {
    double _result = 0;
    HRESULT _hr = get_LaticePost_Av_XY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5357)
inline void IRDimComplexSectE32::PutLaticePost_Av_XY ( double ret ) {
    HRESULT _hr = put_LaticePost_Av_XY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5358)
inline double IRDimComplexSectE32::GetLaticePost_Av_XZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LaticePost_Av_XZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5359)
inline void IRDimComplexSectE32::PutLaticePost_Av_XZ ( double ret ) {
    HRESULT _hr = put_LaticePost_Av_XZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5360)
inline enum IRDimComplexSectDistTypeE32 IRDimComplexSectE32::GetDistribution ( ) {
    enum IRDimComplexSectDistTypeE32 _result;
    HRESULT _hr = get_Distribution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5361)
inline void IRDimComplexSectE32::PutDistribution ( enum IRDimComplexSectDistTypeE32 ret ) {
    HRESULT _hr = put_Distribution(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5362)
inline long IRDimComplexSectE32::GetBattensOrLaticeFieldsNum ( ) {
    long _result = 0;
    HRESULT _hr = get_BattensOrLaticeFieldsNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5363)
inline void IRDimComplexSectE32::PutBattensOrLaticeFieldsNum ( long ret ) {
    HRESULT _hr = put_BattensOrLaticeFieldsNum(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5364)
inline double IRDimComplexSectE32::GetSpacing_a ( ) {
    double _result = 0;
    HRESULT _hr = get_Spacing_a(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5365)
inline void IRDimComplexSectE32::PutSpacing_a ( double ret ) {
    HRESULT _hr = put_Spacing_a(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5366)
inline enum IRDimComplexSectLaticeTypeE32 IRDimComplexSectE32::GetLaticeType ( ) {
    enum IRDimComplexSectLaticeTypeE32 _result;
    HRESULT _hr = get_LaticeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5367)
inline void IRDimComplexSectE32::PutLaticeType ( enum IRDimComplexSectLaticeTypeE32 ret ) {
    HRESULT _hr = put_LaticeType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimMembParamsE32 wrapper method implementations
//

#pragma implementation_key(5368)
inline enum IRDimBuckDiagramE32 IRDimMembParamsE32::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramE32 _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5369)
inline void IRDimMembParamsE32::PutBucklingDiagramY ( enum IRDimBuckDiagramE32 ret ) {
    HRESULT _hr = put_BucklingDiagramY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5370)
inline enum IRDimBuckDiagramE32 IRDimMembParamsE32::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramE32 _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5371)
inline void IRDimMembParamsE32::PutBucklingDiagramZ ( enum IRDimBuckDiagramE32 ret ) {
    HRESULT _hr = put_BucklingDiagramZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5372)
inline double IRDimMembParamsE32::GetBuckLengthCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5373)
inline void IRDimMembParamsE32::PutBuckLengthCoeffY ( double ret ) {
    HRESULT _hr = put_BuckLengthCoeffY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5374)
inline double IRDimMembParamsE32::GetBuckLengthCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5375)
inline void IRDimMembParamsE32::PutBuckLengthCoeffZ ( double ret ) {
    HRESULT _hr = put_BuckLengthCoeffZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5376)
inline enum IRDimBucklingCurveE32 IRDimMembParamsE32::GetBucklingCurveY ( ) {
    enum IRDimBucklingCurveE32 _result;
    HRESULT _hr = get_BucklingCurveY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5377)
inline void IRDimMembParamsE32::PutBucklingCurveY ( enum IRDimBucklingCurveE32 ret ) {
    HRESULT _hr = put_BucklingCurveY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5378)
inline enum IRDimBucklingCurveE32 IRDimMembParamsE32::GetBucklingCurveZ ( ) {
    enum IRDimBucklingCurveE32 _result;
    HRESULT _hr = get_BucklingCurveZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5379)
inline void IRDimMembParamsE32::PutBucklingCurveZ ( enum IRDimBucklingCurveE32 ret ) {
    HRESULT _hr = put_BucklingCurveZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5380)
inline enum IRDimLoadTypeE32 IRDimMembParamsE32::GetLoadTypeY ( ) {
    enum IRDimLoadTypeE32 _result;
    HRESULT _hr = get_LoadTypeY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5381)
inline void IRDimMembParamsE32::PutLoadTypeY ( enum IRDimLoadTypeE32 ret ) {
    HRESULT _hr = put_LoadTypeY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5382)
inline enum IRDimLoadTypeE32 IRDimMembParamsE32::GetLoadTypeZ ( ) {
    enum IRDimLoadTypeE32 _result;
    HRESULT _hr = get_LoadTypeZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5383)
inline void IRDimMembParamsE32::PutLoadTypeZ ( enum IRDimLoadTypeE32 ret ) {
    HRESULT _hr = put_LoadTypeZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5384)
inline enum IRDimLoadLevelE32 IRDimMembParamsE32::GetLoadLevel ( ) {
    enum IRDimLoadLevelE32 _result;
    HRESULT _hr = get_LoadLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5385)
inline void IRDimMembParamsE32::PutLoadLevel ( enum IRDimLoadLevelE32 ret ) {
    HRESULT _hr = put_LoadLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5386)
inline double IRDimMembParamsE32::GetLoadLevelValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LoadLevelValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5387)
inline void IRDimMembParamsE32::PutLoadLevelValue ( double ret ) {
    HRESULT _hr = put_LoadLevelValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5388)
inline enum IRDimLatBuckCoeffDiagramE32 IRDimMembParamsE32::GetLatCoeffLowerFlange ( ) {
    enum IRDimLatBuckCoeffDiagramE32 _result;
    HRESULT _hr = get_LatCoeffLowerFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5389)
inline void IRDimMembParamsE32::PutLatCoeffLowerFlange ( enum IRDimLatBuckCoeffDiagramE32 ret ) {
    HRESULT _hr = put_LatCoeffLowerFlange(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5390)
inline enum IRDimLatBuckCoeffDiagramE32 IRDimMembParamsE32::GetLatCoeffUpperFlange ( ) {
    enum IRDimLatBuckCoeffDiagramE32 _result;
    HRESULT _hr = get_LatCoeffUpperFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5391)
inline void IRDimMembParamsE32::PutLatCoeffUpperFlange ( enum IRDimLatBuckCoeffDiagramE32 ret ) {
    HRESULT _hr = put_LatCoeffUpperFlange(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5392)
inline double IRDimMembParamsE32::GetLatCoeffLowerFlangeValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LatCoeffLowerFlangeValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5393)
inline void IRDimMembParamsE32::PutLatCoeffLowerFlangeValue ( double ret ) {
    HRESULT _hr = put_LatCoeffLowerFlangeValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5394)
inline double IRDimMembParamsE32::GetLatCoeffUpperFlangeValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LatCoeffUpperFlangeValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5395)
inline void IRDimMembParamsE32::PutLatCoeffUpperFlangeValue ( double ret ) {
    HRESULT _hr = put_LatCoeffUpperFlangeValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5396)
inline VARIANT_BOOL IRDimMembParamsE32::GetLateralBuckling ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LateralBuckling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5397)
inline void IRDimMembParamsE32::PutLateralBuckling ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_LateralBuckling(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5398)
inline enum IRDimLatBuckMethodTypeE32 IRDimMembParamsE32::GetLatBuckMethodType ( ) {
    enum IRDimLatBuckMethodTypeE32 _result;
    HRESULT _hr = get_LatBuckMethodType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5399)
inline void IRDimMembParamsE32::PutLatBuckMethodType ( enum IRDimLatBuckMethodTypeE32 ret ) {
    HRESULT _hr = put_LatBuckMethodType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5400)
inline double IRDimMembParamsE32::GetTensAreaNetGros ( ) {
    double _result = 0;
    HRESULT _hr = get_TensAreaNetGros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5401)
inline void IRDimMembParamsE32::PutTensAreaNetGros ( double ret ) {
    HRESULT _hr = put_TensAreaNetGros(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5402)
inline enum IRDimYieldStrengthTypeE32 IRDimMembParamsE32::GetYieldStrengthType ( ) {
    enum IRDimYieldStrengthTypeE32 _result;
    HRESULT _hr = get_YieldStrengthType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5403)
inline void IRDimMembParamsE32::PutYieldStrengthType ( enum IRDimYieldStrengthTypeE32 ret ) {
    HRESULT _hr = put_YieldStrengthType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5404)
inline double IRDimMembParamsE32::GetYieldStrengthValue ( ) {
    double _result = 0;
    HRESULT _hr = get_YieldStrengthValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5405)
inline void IRDimMembParamsE32::PutYieldStrengthValue ( double ret ) {
    HRESULT _hr = put_YieldStrengthValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5406)
inline double IRDimMembParamsE32::GetMaterCoeffGamma0 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5407)
inline void IRDimMembParamsE32::PutMaterCoeffGamma0 ( double ret ) {
    HRESULT _hr = put_MaterCoeffGamma0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5408)
inline double IRDimMembParamsE32::GetMaterCoeffGamma1 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5409)
inline void IRDimMembParamsE32::PutMaterCoeffGamma1 ( double ret ) {
    HRESULT _hr = put_MaterCoeffGamma1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5410)
inline double IRDimMembParamsE32::GetMaterCoeffGamma2 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5411)
inline void IRDimMembParamsE32::PutMaterCoeffGamma2 ( double ret ) {
    HRESULT _hr = put_MaterCoeffGamma2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5412)
inline VARIANT_BOOL IRDimMembParamsE32::GetTubeControl ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TubeControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5413)
inline void IRDimMembParamsE32::PutTubeControl ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_TubeControl(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5414)
inline VARIANT_BOOL IRDimMembParamsE32::GetHotRolledPipes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HotRolledPipes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5415)
inline void IRDimMembParamsE32::PutHotRolledPipes ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_HotRolledPipes(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5416)
inline VARIANT_BOOL IRDimMembParamsE32::GetTorsBuckOn ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TorsBuckOn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5417)
inline void IRDimMembParamsE32::PutTorsBuckOn ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_TorsBuckOn(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5418)
inline VARIANT_BOOL IRDimMembParamsE32::GetSimplified ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Simplified(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5419)
inline void IRDimMembParamsE32::PutSimplified ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Simplified(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5420)
inline VARIANT_BOOL IRDimMembParamsE32::GetAngleConn ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AngleConn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5421)
inline void IRDimMembParamsE32::PutAngleConn ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AngleConn(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5422)
inline VARIANT_BOOL IRDimMembParamsE32::GetBracedY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BracedY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5423)
inline void IRDimMembParamsE32::PutBracedY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_BracedY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5424)
inline VARIANT_BOOL IRDimMembParamsE32::GetBracedZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BracedZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5425)
inline void IRDimMembParamsE32::PutBracedZ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_BracedZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5426)
inline double IRDimMembParamsE32::GetLamLT0 ( ) {
    double _result = 0;
    HRESULT _hr = get_LamLT0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5427)
inline void IRDimMembParamsE32::PutLamLT0 ( double ret ) {
    HRESULT _hr = put_LamLT0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5428)
inline double IRDimMembParamsE32::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5429)
inline void IRDimMembParamsE32::PutBeta ( double ret ) {
    HRESULT _hr = put_Beta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5430)
inline double IRDimMembParamsE32::GetKfl ( ) {
    double _result = 0;
    HRESULT _hr = get_Kfl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5431)
inline void IRDimMembParamsE32::PutKfl ( double ret ) {
    HRESULT _hr = put_Kfl(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5432)
inline double IRDimMembParamsE32::GetEta ( ) {
    double _result = 0;
    HRESULT _hr = get_Eta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5433)
inline void IRDimMembParamsE32::PutEta ( double ret ) {
    HRESULT _hr = put_Eta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5434)
inline long IRDimMembParamsE32::GetBoltsNo ( ) {
    long _result = 0;
    HRESULT _hr = get_BoltsNo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5435)
inline void IRDimMembParamsE32::PutBoltsNo ( long ret ) {
    HRESULT _hr = put_BoltsNo(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5436)
inline double IRDimMembParamsE32::GetBoltsDiam ( ) {
    double _result = 0;
    HRESULT _hr = get_BoltsDiam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5437)
inline void IRDimMembParamsE32::PutBoltsDiam ( double ret ) {
    HRESULT _hr = put_BoltsDiam(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5438)
inline double IRDimMembParamsE32::GetDistP1 ( ) {
    double _result = 0;
    HRESULT _hr = get_DistP1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5439)
inline void IRDimMembParamsE32::PutDistP1 ( double ret ) {
    HRESULT _hr = put_DistP1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5440)
inline double IRDimMembParamsE32::GetDistE2 ( ) {
    double _result = 0;
    HRESULT _hr = get_DistE2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5441)
inline void IRDimMembParamsE32::PutDistE2 ( double ret ) {
    HRESULT _hr = put_DistE2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5442)
inline double IRDimMembParamsE32::GetRelLimitDeflUy ( ) {
    double _result = 0;
    HRESULT _hr = get_RelLimitDeflUy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5443)
inline void IRDimMembParamsE32::PutRelLimitDeflUy ( double ret ) {
    HRESULT _hr = put_RelLimitDeflUy(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5444)
inline double IRDimMembParamsE32::GetRelLimitdeflUz ( ) {
    double _result = 0;
    HRESULT _hr = get_RelLimitdeflUz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5445)
inline void IRDimMembParamsE32::PutRelLimitdeflUz ( double ret ) {
    HRESULT _hr = put_RelLimitdeflUz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5446)
inline IRDimThinWalledE32Ptr IRDimMembParamsE32::GetThinWalled ( ) {
    struct IRDimThinWalledE32 * _result = 0;
    HRESULT _hr = get_ThinWalled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimThinWalledE32Ptr(_result, false);
}

#pragma implementation_key(5447)
inline void IRDimMembParamsE32::PutThinWalled ( struct IRDimThinWalledE32 * ret ) {
    HRESULT _hr = put_ThinWalled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5448)
inline IRDimFireResistE32Ptr IRDimMembParamsE32::GetFireResist ( ) {
    struct IRDimFireResistE32 * _result = 0;
    HRESULT _hr = get_FireResist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimFireResistE32Ptr(_result, false);
}

#pragma implementation_key(5449)
inline void IRDimMembParamsE32::PutFireResist ( struct IRDimFireResistE32 * ret ) {
    HRESULT _hr = put_FireResist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5450)
inline IRDimComplexSectE32Ptr IRDimMembParamsE32::GetComplexSect ( ) {
    struct IRDimComplexSectE32 * _result = 0;
    HRESULT _hr = get_ComplexSect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimComplexSectE32Ptr(_result, false);
}

#pragma implementation_key(5451)
inline void IRDimMembParamsE32::PutComplexSect ( struct IRDimComplexSectE32 * ret ) {
    HRESULT _hr = put_ComplexSect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimCodeResE32_1 wrapper method implementations
//

#pragma implementation_key(5452)
inline long IRDimCodeResE32_1::GetIsBuckY ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5453)
inline long IRDimCodeResE32_1::GetIsBuckZ ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5454)
inline double IRDimCodeResE32_1::GetStrsShearY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5455)
inline double IRDimCodeResE32_1::GetStrsShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5456)
inline double IRDimCodeResE32_1::GetStrsComp ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsComp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5457)
inline double IRDimCodeResE32_1::GetStrsTens ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTens(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5458)
inline double IRDimCodeResE32_1::GetStrsUprEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsUprEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5459)
inline double IRDimCodeResE32_1::GetStrsRgtEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsRgtEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5460)
inline double IRDimCodeResE32_1::GetStrsLowEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLowEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5461)
inline double IRDimCodeResE32_1::GetStrsLftEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLftEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5462)
inline long IRDimCodeResE32_1::GetClassOfSect ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5463)
inline long IRDimCodeResE32_1::GetClassOfSectElem1 ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSectElem1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5464)
inline long IRDimCodeResE32_1::GetClassOfSectElem2 ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSectElem2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5465)
inline long IRDimCodeResE32_1::GetClassOfSectElem3 ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSectElem3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5466)
inline long IRDimCodeResE32_1::GetClassOfSectElem4 ( ) {
    long _result = 0;
    HRESULT _hr = get_ClassOfSectElem4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5467)
inline double IRDimCodeResE32_1::GetWebSlend ( ) {
    double _result = 0;
    HRESULT _hr = get_WebSlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5468)
inline double IRDimCodeResE32_1::GetWebSlend1 ( ) {
    double _result = 0;
    HRESULT _hr = get_WebSlend1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5469)
inline double IRDimCodeResE32_1::GetUppFlanSlend ( ) {
    double _result = 0;
    HRESULT _hr = get_UppFlanSlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5470)
inline double IRDimCodeResE32_1::GetLowFlanSlend1 ( ) {
    double _result = 0;
    HRESULT _hr = get_LowFlanSlend1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5471)
inline double IRDimCodeResE32_1::GetLowFlanSlend2 ( ) {
    double _result = 0;
    HRESULT _hr = get_LowFlanSlend2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5472)
inline double IRDimCodeResE32_1::GetBuckSLendLamy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSLendLamy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5473)
inline double IRDimCodeResE32_1::GetBuclSlendLamz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuclSlendLamz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5474)
inline double IRDimCodeResE32_1::GetBuckRelSlendLaby ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckRelSlendLaby(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5475)
inline double IRDimCodeResE32_1::GetBuckRelSlendLabz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckRelSlendLabz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5476)
inline double IRDimCodeResE32_1::GetLatBuckSlendLamlt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckSlendLamlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5477)
inline double IRDimCodeResE32_1::GetMaxBuckSlend ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxBuckSlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5478)
inline double IRDimCodeResE32_1::GetBuckParamKy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckParamKy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5479)
inline double IRDimCodeResE32_1::GetBuckParamKz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckParamKz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5480)
inline double IRDimCodeResE32_1::GetLatBuckParamKlt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamKlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5481)
inline double IRDimCodeResE32_1::GetPlastAxForcStrenNplrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastAxForcStrenNplrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5482)
inline double IRDimCodeResE32_1::GetTensStrenNurd ( ) {
    double _result = 0;
    HRESULT _hr = get_TensStrenNurd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5483)
inline double IRDimCodeResE32_1::GetPlastTensStrenNtrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastTensStrenNtrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5484)
inline double IRDimCodeResE32_1::GetPlastCompStrenNcrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastCompStrenNcrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5485)
inline double IRDimCodeResE32_1::GetBuckStrenNbyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckStrenNbyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5486)
inline double IRDimCodeResE32_1::GetBuckStrenNbzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckStrenNbzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5487)
inline double IRDimCodeResE32_1::GetOverallBuckStrenNbrd ( ) {
    double _result = 0;
    HRESULT _hr = get_OverallBuckStrenNbrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5488)
inline double IRDimCodeResE32_1::GetLatBuckLengthLd ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLengthLd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5489)
inline long IRDimCodeResE32_1::GetLatBuckParamLd ( ) {
    long _result = 0;
    HRESULT _hr = get_LatBuckParamLd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5490)
inline double IRDimCodeResE32_1::GetInteractParamAlfa ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamAlfa(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5491)
inline double IRDimCodeResE32_1::GetInteractParamBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamBeta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5492)
inline double IRDimCodeResE32_1::GetLatBuckParamC1 ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamC1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5493)
inline double IRDimCodeResE32_1::GetLatBuckParamC2 ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamC2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5494)
inline double IRDimCodeResE32_1::GetWarpingConstantIw ( ) {
    double _result = 0;
    HRESULT _hr = get_WarpingConstantIw(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5495)
inline double IRDimCodeResE32_1::GetTorsMomInertIt ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsMomInertIt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5496)
inline double IRDimCodeResE32_1::GetInteractParamMiy ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamMiy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5497)
inline double IRDimCodeResE32_1::GetInteractParamMiz ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamMiz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5498)
inline double IRDimCodeResE32_1::GetInteractParamMilt ( ) {
    double _result = 0;
    HRESULT _hr = get_InteractParamMilt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5499)
inline double IRDimCodeResE32_1::GetPlastMomStrenMplyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastMomStrenMplyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5500)
inline double IRDimCodeResE32_1::GetPlastMomStrenMplzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastMomStrenMplzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5501)
inline double IRDimCodeResE32_1::GetElastMomStrenMelyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastMomStrenMelyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5502)
inline double IRDimCodeResE32_1::GetElastMomStrenMelzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastMomStrenMelzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5503)
inline double IRDimCodeResE32_1::GetReducMomStrenMcyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMcyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5504)
inline double IRDimCodeResE32_1::GetReducMomStrenMczrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMczrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5505)
inline double IRDimCodeResE32_1::GetReducMomStrenMnyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMnyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5506)
inline double IRDimCodeResE32_1::GetReducMomStrenMnzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMnzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5507)
inline double IRDimCodeResE32_1::GetReducMomStrenMvyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMvyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5508)
inline double IRDimCodeResE32_1::GetReducMomStrenMvzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ReducMomStrenMvzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5509)
inline double IRDimCodeResE32_1::GetLatBuckMomStrenmbrd ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckMomStrenmbrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5510)
inline double IRDimCodeResE32_1::GetEffectiveMomenMeff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffectiveMomenMeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5511)
inline double IRDimCodeResE32_1::GetCritMomenMcr ( ) {
    double _result = 0;
    HRESULT _hr = get_CritMomenMcr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5512)
inline double IRDimCodeResE32_1::GetShearStrenTplyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearStrenTplyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5513)
inline double IRDimCodeResE32_1::GetShearStrenTplzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearStrenTplzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5514)
inline double IRDimCodeResE32_1::GetBuckCoeffXy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoeffXy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5515)
inline double IRDimCodeResE32_1::GetBuckCoeffXz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoeffXz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5516)
inline double IRDimCodeResE32_1::GetBuckCoeffMinXi ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoeffMinXi(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5517)
inline double IRDimCodeResE32_1::GetLatBuckParamFilt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamFilt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5518)
inline double IRDimCodeResE32_1::GetLatBuckCoeffXlt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckCoeffXlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5519)
inline double IRDimCodeResE32_1::GetLaodLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_LaodLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5520)
inline double IRDimCodeResE32_1::GetMaterCoeffGamma0 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5521)
inline double IRDimCodeResE32_1::GetMaterCoeffGamma1 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5522)
inline double IRDimCodeResE32_1::GetMaterCoeffGamma2 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterCoeffGamma2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5523)
inline double IRDimCodeResE32_1::GetCompParamBetaA ( ) {
    double _result = 0;
    HRESULT _hr = get_CompParamBetaA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5524)
inline double IRDimCodeResE32_1::GetLatBuckParamBetaW ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamBetaW(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5525)
inline double IRDimCodeResE32_1::GetBendParamBetMy ( ) {
    double _result = 0;
    HRESULT _hr = get_BendParamBetMy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5526)
inline double IRDimCodeResE32_1::GetBendParamBetaMz ( ) {
    double _result = 0;
    HRESULT _hr = get_BendParamBetaMz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5527)
inline double IRDimCodeResE32_1::GetBendParamBetaMlty ( ) {
    double _result = 0;
    HRESULT _hr = get_BendParamBetaMlty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5528)
inline double IRDimCodeResE32_1::GetBendParamBetaMltz ( ) {
    double _result = 0;
    HRESULT _hr = get_BendParamBetaMltz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5529)
inline double IRDimCodeResE32_1::GetMomStrengthMpzEuro ( ) {
    double _result = 0;
    HRESULT _hr = get_MomStrengthMpzEuro(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5530)
inline double IRDimCodeResE32_1::GetMaterialCapacityFy ( ) {
    double _result = 0;
    HRESULT _hr = get_MaterialCapacityFy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5531)
inline double IRDimCodeResE32_1::GetElastSectModulWyel ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastSectModulWyel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5532)
inline double IRDimCodeResE32_1::GetPlastSectModulWypl ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastSectModulWypl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5533)
inline double IRDimCodeResE32_1::GetElastSectModulWzel ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastSectModulWzel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5534)
inline double IRDimCodeResE32_1::GetPlastSectModulWzpl ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastSectModulWzpl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5535)
inline double IRDimCodeResE32_1::GetEffSectModulWyeff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffSectModulWyeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5536)
inline double IRDimCodeResE32_1::GetEffSectModulWzeff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffSectModulWzeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5537)
inline double IRDimCodeResE32_1::GetEffSectAreaSeff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffSectAreaSeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5538)
inline double IRDimCodeResE32_1::GetFlangeAreaAf ( ) {
    double _result = 0;
    HRESULT _hr = get_FlangeAreaAf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5539)
inline double IRDimCodeResE32_1::GetFlangeAreaAw ( ) {
    double _result = 0;
    HRESULT _hr = get_FlangeAreaAw(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5540)
inline double IRDimCodeResE32_1::GetAxForceExcentrEny ( ) {
    double _result = 0;
    HRESULT _hr = get_AxForceExcentrEny(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5541)
inline double IRDimCodeResE32_1::GetAxForcExcentrEnz ( ) {
    double _result = 0;
    HRESULT _hr = get_AxForcExcentrEnz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5542)
inline double IRDimCodeResE32_1::GetBuckCurveNumbY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveNumbY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5543)
inline double IRDimCodeResE32_1::GetBuckCurveNumbZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveNumbZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5544)
inline double IRDimCodeResE32_1::GetBuckCurveCoeffAlfy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveCoeffAlfy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5545)
inline double IRDimCodeResE32_1::GetBuckCurveCoeffAlfz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveCoeffAlfz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5546)
inline double IRDimCodeResE32_1::GetBuckParamFiy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckParamFiy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5547)
inline double IRDimCodeResE32_1::GetBuckParamFiz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckParamFiz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimCodeResE32_2 wrapper method implementations
//

#pragma implementation_key(5548)
inline double IRDimCodeResE32_2::GetMaEffRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_MaEffRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5549)
inline double IRDimCodeResE32_2::GetPartEffRatio1 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5550)
inline double IRDimCodeResE32_2::GetPartEffRatio2 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5551)
inline double IRDimCodeResE32_2::GetPartEffRatio3 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5552)
inline double IRDimCodeResE32_2::GetPartEffRatio4 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5553)
inline double IRDimCodeResE32_2::GetPartEffRatio5 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5554)
inline double IRDimCodeResE32_2::GetCompPartElastSectModulWyel ( ) {
    double _result = 0;
    HRESULT _hr = get_CompPartElastSectModulWyel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5555)
inline double IRDimCodeResE32_2::GetCompPartElastSectModulWzel ( ) {
    double _result = 0;
    HRESULT _hr = get_CompPartElastSectModulWzel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5556)
inline double IRDimCodeResE32_2::GetPartEffRatio6 ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5557)
inline double IRDimCodeResE32_2::GetPartEffRatio6Y ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio6Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5558)
inline double IRDimCodeResE32_2::GetPartEffRatio6Z ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio6Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5559)
inline double IRDimCodeResE32_2::GetPartEffRatio7Y ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio7Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5560)
inline double IRDimCodeResE32_2::GetPartEffRatio7Z ( ) {
    double _result = 0;
    HRESULT _hr = get_PartEffRatio7Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5561)
inline double IRDimCodeResE32_2::GetShearMaxWebSlendBetaV ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearMaxWebSlendBetaV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5562)
inline double IRDimCodeResE32_2::GetProfCodeAct ( ) {
    double _result = 0;
    HRESULT _hr = get_ProfCodeAct(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5563)
inline double IRDimCodeResE32_2::GetProfGroup ( ) {
    double _result = 0;
    HRESULT _hr = get_ProfGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5564)
inline double IRDimCodeResE32_2::GetShearFlanSlendXs ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearFlanSlendXs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5565)
inline double IRDimCodeResE32_2::GetShearWebSlendYs ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearWebSlendYs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5566)
inline double IRDimCodeResE32_2::GetEffectSectModulWypleff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffectSectModulWypleff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5567)
inline double IRDimCodeResE32_2::GetEffectSectModulWzpleff ( ) {
    double _result = 0;
    HRESULT _hr = get_EffectSectModulWzpleff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5568)
inline double IRDimCodeResE32_2::GetShearCoeffEtaV ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearCoeffEtaV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5569)
inline double IRDimCodeResE32_2::GetTorsShearStressTauTorsY ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsShearStressTauTorsY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5570)
inline double IRDimCodeResE32_2::GetTorsShearStressTauTorsZ ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsShearStressTauTorsZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5571)
inline double IRDimCodeResE32_2::GetShearExactStressTauY ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearExactStressTauY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5572)
inline double IRDimCodeResE32_2::GetShearExactStressTauZ ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearExactStressTauZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5573)
inline double IRDimCodeResE32_2::GetShearExactWebAreaAw ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearExactWebAreaAw(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5574)
inline double IRDimCodeResE32_2::GetShearExactFlanArea ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearExactFlanArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5575)
inline double IRDimCodeResE32_2::GetShearTorsStrenVtyrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearTorsStrenVtyrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5576)
inline double IRDimCodeResE32_2::GetShearTorsStrenVtzrd ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearTorsStrenVtzrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5577)
inline double IRDimCodeResE32_2::GetIsPlastShearAnal ( ) {
    double _result = 0;
    HRESULT _hr = get_IsPlastShearAnal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5578)
inline double IRDimCodeResE32_2::GetShearMaterialCapacityFs ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearMaterialCapacityFs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5579)
inline double IRDimCodeResE32_2::GetMaxStrsSig ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxStrsSig(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5580)
inline double IRDimCodeResE32_2::GetMaxEffStrsSigEff ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxEffStrsSigEff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5581)
inline double IRDimCodeResE32_2::GetEffComprStrsSigEffC ( ) {
    double _result = 0;
    HRESULT _hr = get_EffComprStrsSigEffC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5582)
inline double IRDimCodeResE32_2::GetEffBendStrsSigEffMyUpp ( ) {
    double _result = 0;
    HRESULT _hr = get_EffBendStrsSigEffMyUpp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5583)
inline double IRDimCodeResE32_2::GetEffBendStrsSigEffMzRght ( ) {
    double _result = 0;
    HRESULT _hr = get_EffBendStrsSigEffMzRght(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5584)
inline double IRDimCodeResE32_2::GetEffBendStrsSigEffMyLow ( ) {
    double _result = 0;
    HRESULT _hr = get_EffBendStrsSigEffMyLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5585)
inline double IRDimCodeResE32_2::GetEffBendStrsSigEffMzLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_EffBendStrsSigEffMzLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5586)
inline double IRDimCodeResE32_2::GetSecCheckVy ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckVy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5587)
inline double IRDimCodeResE32_2::GetSecCheckVz ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckVz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5588)
inline double IRDimCodeResE32_2::GetSecCheckVyTors ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckVyTors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5589)
inline double IRDimCodeResE32_2::GetSecCheckVzTors ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckVzTors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5590)
inline double IRDimCodeResE32_2::GetSecCheckExactVy ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckExactVy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5591)
inline double IRDimCodeResE32_2::GetSecCheckExactVz ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckExactVz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5592)
inline double IRDimCodeResE32_2::GetSecCheckNt ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckNt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5593)
inline double IRDimCodeResE32_2::GetSecCheckNc ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckNc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5594)
inline double IRDimCodeResE32_2::GetSecCheckMy ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckMy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5595)
inline double IRDimCodeResE32_2::GetSecCheckMyVz ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckMyVz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5596)
inline double IRDimCodeResE32_2::GetSecCheckMz ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckMz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5597)
inline double IRDimCodeResE32_2::GetSecCheckMzVy ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckMzVy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5598)
inline double IRDimCodeResE32_2::GetSecCheckNMy ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckNMy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5599)
inline double IRDimCodeResE32_2::GetSecCheckNMz ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckNMz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5600)
inline double IRDimCodeResE32_2::GetSecCheckMyMz ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckMyMz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5601)
inline double IRDimCodeResE32_2::GetSecCheckNMyMz ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckNMyMz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5602)
inline double IRDimCodeResE32_2::GetSecCheckMises ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCheckMises(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5603)
inline double IRDimCodeResE32_2::GetBuckCheckNb ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCheckNb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5604)
inline double IRDimCodeResE32_2::GetBuckCheckMy ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCheckMy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5605)
inline double IRDimCodeResE32_2::GetBuckCheckNyMyMz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCheckNyMyMz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5606)
inline double IRDimCodeResE32_2::GetBuckCheckNzMyMz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCheckNzMyMz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5607)
inline double IRDimCodeResE32_2::GetBuckCurveY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5608)
inline double IRDimCodeResE32_2::GetBuckCurveZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCurveZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5609)
inline double IRDimCodeResE32_2::GetTorsBuckStrenNbtrd ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsBuckStrenNbtrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5610)
inline double IRDimCodeResE32_2::GetTorsBuckStrenNbtfrd ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsBuckStrenNbtfrd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5611)
inline double IRDimCodeResE32_2::GetCritTorsStrenNx ( ) {
    double _result = 0;
    HRESULT _hr = get_CritTorsStrenNx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5612)
inline double IRDimCodeResE32_2::GetCritTorsFlexStrenNxy ( ) {
    double _result = 0;
    HRESULT _hr = get_CritTorsFlexStrenNxy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5613)
inline double IRDimCodeResE32_2::GetTorsSlendLambx ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsSlendLambx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5614)
inline double IRDimCodeResE32_2::GetTorsFlexSlendLambxy ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsFlexSlendLambxy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5615)
inline double IRDimCodeResE32_2::GetTorsBuckParamFix ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsBuckParamFix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5616)
inline double IRDimCodeResE32_2::GetTorsFlexBuckParamFixy ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsFlexBuckParamFixy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5617)
inline double IRDimCodeResE32_2::GetTorsBuckCoeffXx ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsBuckCoeffXx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5618)
inline double IRDimCodeResE32_2::GetTorsFlexBuckCoeffXxy ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsFlexBuckCoeffXxy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5619)
inline double IRDimCodeResE32_2::GetTorsLengthLt ( ) {
    double _result = 0;
    HRESULT _hr = get_TorsLengthLt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5620)
inline double IRDimCodeResE32_2::GetNonEffFlanPartBneffFl ( ) {
    double _result = 0;
    HRESULT _hr = get_NonEffFlanPartBneffFl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5621)
inline double IRDimCodeResE32_2::GetNonEffWebPartHneffWeb ( ) {
    double _result = 0;
    HRESULT _hr = get_NonEffWebPartHneffWeb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimCodeResE32_3 wrapper method implementations
//

#pragma implementation_key(5622)
inline double IRDimCodeResE32_3::GetLatBuckCoefKc ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckCoefKc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5623)
inline double IRDimCodeResE32_3::GetLatBuckSlendLamLt0 ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckSlendLamLt0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5624)
inline double IRDimCodeResE32_3::GetLatBuckParamBetalt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamBetalt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5625)
inline double IRDimCodeResE32_3::GetLatBuckParamFlt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamFlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5626)
inline double IRDimCodeResE32_3::GetLatBuckCoeffXltmod ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckCoeffXltmod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5627)
inline double IRDimCodeResE32_3::GetLatBuckParamKfl ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamKfl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5628)
inline double IRDimCodeResE32_3::GetLatBuckCurvelt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckCurvelt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5629)
inline double IRDimCodeResE32_3::GetLatBuckParamAlt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckParamAlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5630)
inline double IRDimCodeResE32_3::GetLatBuckFlanRadiusIflt ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckFlanRadiusIflt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5631)
inline double IRDimCodeResE32_3::GetLatBuckMethod ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5632)
inline double IRDimCodeResE32_3::GetBuckCritEulerForcNcry ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCritEulerForcNcry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5633)
inline double IRDimCodeResE32_3::GetBuckCritEulerForcNcrz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCritEulerForcNcrz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5634)
inline double IRDimCodeResE32_3::GetBuckCritEulerForcNcrt ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCritEulerForcNcrt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5635)
inline double IRDimCodeResE32_3::GetOveralStabParamMiy ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamMiy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5636)
inline double IRDimCodeResE32_3::GetOveralStabParamMiz ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamMiz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5637)
inline double IRDimCodeResE32_3::GetOveralStabParamWy ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamWy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5638)
inline double IRDimCodeResE32_3::GetOveralStabParamWz ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamWz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5639)
inline double IRDimCodeResE32_3::GetOveralStabParamLab0 ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamLab0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5640)
inline double IRDimCodeResE32_3::GetOveralStabParamAlt ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamAlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5641)
inline double IRDimCodeResE32_3::GetMomDistrCoefCmy0 ( ) {
    double _result = 0;
    HRESULT _hr = get_MomDistrCoefCmy0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5642)
inline double IRDimCodeResE32_3::GetMomDistrCoefCmz0 ( ) {
    double _result = 0;
    HRESULT _hr = get_MomDistrCoefCmz0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5643)
inline double IRDimCodeResE32_3::GetMomDistrCoefCmy ( ) {
    double _result = 0;
    HRESULT _hr = get_MomDistrCoefCmy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5644)
inline double IRDimCodeResE32_3::GetMomDistrCoefCmz ( ) {
    double _result = 0;
    HRESULT _hr = get_MomDistrCoefCmz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5645)
inline double IRDimCodeResE32_3::GetMomDistrCoefCmlt ( ) {
    double _result = 0;
    HRESULT _hr = get_MomDistrCoefCmlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5646)
inline double IRDimCodeResE32_3::GetOveralStabCyy ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabCyy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5647)
inline double IRDimCodeResE32_3::GetOveralStabCyz ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabCyz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5648)
inline double IRDimCodeResE32_3::GetOveralStabCzy ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabCzy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5649)
inline double IRDimCodeResE32_3::GetOveralStabCzz ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabCzz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5650)
inline double IRDimCodeResE32_3::GetOveralStabParamBlt ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamBlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5651)
inline double IRDimCodeResE32_3::GetOveralStabParamClt ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamClt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5652)
inline double IRDimCodeResE32_3::GetOveralStabParamDlt ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamDlt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5653)
inline double IRDimCodeResE32_3::GetOveralStabParamElt ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabParamElt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5654)
inline double IRDimCodeResE32_3::GetOveralStabKyy ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabKyy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5655)
inline double IRDimCodeResE32_3::GetOveralStabKyz ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabKyz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5656)
inline double IRDimCodeResE32_3::GetOveralStabKzy ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabKzy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5657)
inline double IRDimCodeResE32_3::GetOveralStabKzz ( ) {
    double _result = 0;
    HRESULT _hr = get_OveralStabKzz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5658)
inline double IRDimCodeResE32_3::GetOneChordOveralStabKyy1 ( ) {
    double _result = 0;
    HRESULT _hr = get_OneChordOveralStabKyy1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5659)
inline double IRDimCodeResE32_3::GetOneChordOveralStabKyz1 ( ) {
    double _result = 0;
    HRESULT _hr = get_OneChordOveralStabKyz1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5660)
inline double IRDimCodeResE32_3::GetOneChordOveralStabKzy1 ( ) {
    double _result = 0;
    HRESULT _hr = get_OneChordOveralStabKzy1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5661)
inline double IRDimCodeResE32_3::GetOneChordOveralStabKzz1 ( ) {
    double _result = 0;
    HRESULT _hr = get_OneChordOveralStabKzz1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5662)
inline double IRDimCodeResE32_3::GetOneChordOveralStabKyy2 ( ) {
    double _result = 0;
    HRESULT _hr = get_OneChordOveralStabKyy2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5663)
inline double IRDimCodeResE32_3::GetOneChordOveralStabKyz2 ( ) {
    double _result = 0;
    HRESULT _hr = get_OneChordOveralStabKyz2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5664)
inline double IRDimCodeResE32_3::GetOneChordOveralStabKzy2 ( ) {
    double _result = 0;
    HRESULT _hr = get_OneChordOveralStabKzy2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5665)
inline double IRDimCodeResE32_3::GetOneChordOveralStabKzz2 ( ) {
    double _result = 0;
    HRESULT _hr = get_OneChordOveralStabKzz2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5666)
inline double IRDimCodeResE32_3::GetShearCentrPositionYs ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearCentrPositionYs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5667)
inline double IRDimCodeResE32_3::GetCrgtdProfProjWaveLenW ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfProjWaveLenW(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5668)
inline double IRDimCodeResE32_3::GetCrgtdProfRealWaveLenS ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfRealWaveLenS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5669)
inline double IRDimCodeResE32_3::GetCrgtdProfFlexPrpStiffDx ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfFlexPrpStiffDx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5670)
inline double IRDimCodeResE32_3::GetCrgtdProfFlexPrlStiffDz ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfFlexPrlStiffDz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5671)
inline double IRDimCodeResE32_3::GetCrgtdProfStrsTaupig ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfStrsTaupig(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5672)
inline double IRDimCodeResE32_3::GetCrgtdProfStrsTaupil ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfStrsTaupil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5673)
inline double IRDimCodeResE32_3::GetCrgtdProfSlenLampig ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfSlenLampig(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5674)
inline double IRDimCodeResE32_3::GetCrgtdProfSlenLampil ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfSlenLampil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5675)
inline double IRDimCodeResE32_3::GetCrgtdProfCoefXpig ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfCoefXpig(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5676)
inline double IRDimCodeResE32_3::GetCrgtdProfCoefXpil ( ) {
    double _result = 0;
    HRESULT _hr = get_CrgtdProfCoefXpil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimCodeResE32_4 wrapper method implementations
//

#pragma implementation_key(5677)
inline long IRDimCodeResE32_4::GetIsFire ( ) {
    long _result = 0;
    HRESULT _hr = get_IsFire(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5678)
inline double IRDimCodeResE32_4::GetFire ( ) {
    double _result = 0;
    HRESULT _hr = get_Fire(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5679)
inline double IRDimCodeResE32_4::GetFireRedYealdFactKY0Y ( ) {
    double _result = 0;
    HRESULT _hr = get_FireRedYealdFactKY0Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5680)
inline double IRDimCodeResE32_4::GetFireRedYealdFactKY0Z ( ) {
    double _result = 0;
    HRESULT _hr = get_FireRedYealdFactKY0Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5681)
inline double IRDimCodeResE32_4::GetFireRedYoungFactKE0 ( ) {
    double _result = 0;
    HRESULT _hr = get_FireRedYoungFactKE0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5682)
inline double IRDimCodeResE32_4::GetFireMatCoeffGF ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMatCoeffGF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5683)
inline double IRDimCodeResE32_4::GetFireAdapFactK1 ( ) {
    double _result = 0;
    HRESULT _hr = get_FireAdapFactK1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5684)
inline double IRDimCodeResE32_4::GetFireAdapFactK2 ( ) {
    double _result = 0;
    HRESULT _hr = get_FireAdapFactK2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5685)
inline double IRDimCodeResE32_4::GetFireMaxMembSurfaceTempOA ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMaxMembSurfaceTempOA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5686)
inline double IRDimCodeResE32_4::GetFireMaxHorWebInShearTempOAY ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMaxHorWebInShearTempOAY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5687)
inline double IRDimCodeResE32_4::GetFireMaxVerWebInShearTempOAZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMaxVerWebInShearTempOAZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5688)
inline double IRDimCodeResE32_4::GetFireCritTempOACRIT ( ) {
    double _result = 0;
    HRESULT _hr = get_FireCritTempOACRIT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5689)
inline double IRDimCodeResE32_4::GetFireCritTime ( ) {
    double _result = 0;
    HRESULT _hr = get_FireCritTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5690)
inline long IRDimCodeResE32_4::GetIsThinWalled ( ) {
    long _result = 0;
    HRESULT _hr = get_IsThinWalled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5691)
inline long IRDimCodeResE32_4::GetIsMesThinWallTooSlend ( ) {
    long _result = 0;
    HRESULT _hr = get_IsMesThinWallTooSlend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5692)
inline long IRDimCodeResE32_4::GetIsMesThinWallStiffIgnored ( ) {
    long _result = 0;
    HRESULT _hr = get_IsMesThinWallStiffIgnored(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5693)
inline long IRDimCodeResE32_4::GetThinWallIsModifAeff ( ) {
    long _result = 0;
    HRESULT _hr = get_ThinWallIsModifAeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5694)
inline long IRDimCodeResE32_4::GetThinWallIsModifWeffy ( ) {
    long _result = 0;
    HRESULT _hr = get_ThinWallIsModifWeffy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5695)
inline long IRDimCodeResE32_4::GetThinWallIsModifWeffz ( ) {
    long _result = 0;
    HRESULT _hr = get_ThinWallIsModifWeffz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5696)
inline double IRDimCodeResE32_4::GetThinWallTensPartMomResistMcy_rdten ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallTensPartMomResistMcy_rdten(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5697)
inline double IRDimCodeResE32_4::GetThinWallCompPartMomResistMcy_rdcom ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallCompPartMomResistMcy_rdcom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5698)
inline double IRDimCodeResE32_4::GetThinWallTensPartMomResistMcz_rdten ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallTensPartMomResistMcz_rdten(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5699)
inline double IRDimCodeResE32_4::GetThinWallCompPartMomResistMcz_rdcom ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallCompPartMomResistMcz_rdcom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5700)
inline double IRDimCodeResE32_4::GetThinWallEffMomInerIyeff ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallEffMomInerIyeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5701)
inline double IRDimCodeResE32_4::GetThinWallEffRightEdgeDistVyeff ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallEffRightEdgeDistVyeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5702)
inline double IRDimCodeResE32_4::GetThinWallEffLeftEdgeDistVpyeff ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallEffLeftEdgeDistVpyeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5703)
inline double IRDimCodeResE32_4::GetThinWallEffMomInerIzeff ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallEffMomInerIzeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5704)
inline double IRDimCodeResE32_4::GetThinWallEffUpperEdgeDistVzeff ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallEffUpperEdgeDistVzeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5705)
inline double IRDimCodeResE32_4::GetThinWallEffLowerEdgeDistVpzeff ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallEffLowerEdgeDistVpzeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5706)
inline double IRDimCodeResE32_4::GetThinWallSecUsageFactNMy2 ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecUsageFactNMy2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5707)
inline double IRDimCodeResE32_4::GetThinWallSecUsageFactNMz2 ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecUsageFactNMz2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5708)
inline double IRDimCodeResE32_4::GetThinWallSecUsageFactNMyMz2 ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecUsageFactNMyMz2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5709)
inline double IRDimCodeResE32_4::GetThinWallSecUsageFactInteractNMV ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecUsageFactInteractNMV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5710)
inline double IRDimCodeResE32_4::GetThinWallMomIncreaseDmy ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallMomIncreaseDmy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5711)
inline double IRDimCodeResE32_4::GetThinWallMomIncreaseDmz ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallMomIncreaseDmz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5712)
inline double IRDimCodeResE32_4::GetThinWallShearTotalStressTauTot ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallShearTotalStressTauTot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5713)
inline double IRDimCodeResE32_4::GetThinWallSecUsageFactMisses ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecUsageFactMisses(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5714)
inline double IRDimCodeResE32_4::GetThinWallSecUsageFactShearTauTot ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecUsageFactShearTauTot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5715)
inline long IRDimCodeResE32_4::GetIsGravityLoad ( ) {
    long _result = 0;
    HRESULT _hr = get_IsGravityLoad(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5716)
inline long IRDimCodeResE32_4::GetIsThinWalledPurlin ( ) {
    long _result = 0;
    HRESULT _hr = get_IsThinWalledPurlin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5717)
inline double IRDimCodeResE32_4::GetThinWallShearCentPosZS ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallShearCentPosZS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5718)
inline double IRDimCodeResE32_4::GetThinWallMomInerIyz ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallMomInerIyz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5719)
inline double IRDimCodeResE32_4::GetThinWallShearCentPosZJ ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallShearCentPosZJ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5720)
inline double IRDimCodeResE32_4::GetThinWallEqivLoadQhEd ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallEqivLoadQhEd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5721)
inline double IRDimCodeResE32_4::GetThinWallStiffCDA ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallStiffCDA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5722)
inline double IRDimCodeResE32_4::GetThinWallStiffCDC ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallStiffCDC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5723)
inline double IRDimCodeResE32_4::GetThinWallStiffCD ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallStiffCD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5724)
inline double IRDimCodeResE32_4::GetThinWallStiffK ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallStiffK(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5725)
inline double IRDimCodeResE32_4::GetThinWallSpringSuppCoefR ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSpringSuppCoefR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5726)
inline double IRDimCodeResE32_4::GetThinWallCorFactKr ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallCorFactKr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5727)
inline double IRDimCodeResE32_4::GetThinWallLaterBendMomMfz ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallLaterBendMomMfz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5728)
inline double IRDimCodeResE32_4::GetThinWallSecAreaMomFreeFlanIfz ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecAreaMomFreeFlanIfz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5729)
inline double IRDimCodeResE32_4::GetThinWallSecModulFreeFlanWfz ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecModulFreeFlanWfz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5730)
inline double IRDimCodeResE32_4::GetThinWallSecModulFreeFlanWfzp ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecModulFreeFlanWfzp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5731)
inline double IRDimCodeResE32_4::GetThinWallCoefN1 ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallCoefN1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5732)
inline double IRDimCodeResE32_4::GetThinWallCoefN2 ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallCoefN2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5733)
inline double IRDimCodeResE32_4::GetThinWallCoefN3 ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallCoefN3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5734)
inline double IRDimCodeResE32_4::GetThinWallCoefN4 ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallCoefN4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5735)
inline double IRDimCodeResE32_4::GetThinWallBuckFreeFlanLengLfz ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallBuckFreeFlanLengLfz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5736)
inline double IRDimCodeResE32_4::GetThinWallRelSkendFreeFlanLamFz ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallRelSkendFreeFlanLamFz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5737)
inline double IRDimCodeResE32_4::GetThinWallRedFactLatTorsBuckXLTF ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallRedFactLatTorsBuckXLTF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5738)
inline double IRDimCodeResE32_4::GetThinWallSecUsageFactNMyMz3 ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallSecUsageFactNMyMz3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5739)
inline double IRDimCodeResE32_4::GetThinWallBuckUsageFactNMzMz ( ) {
    double _result = 0;
    HRESULT _hr = get_ThinWallBuckUsageFactNMzMz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5740)
inline double IRDimCodeResE32_4::GetPlastCoeffAlfaP ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastCoeffAlfaP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5741)
inline double IRDimCodeResE32_4::GetMomDistrCoefCmy0LT ( ) {
    double _result = 0;
    HRESULT _hr = get_MomDistrCoefCmy0LT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5742)
inline double IRDimCodeResE32_4::GetMomDistrCoefCmyLT ( ) {
    double _result = 0;
    HRESULT _hr = get_MomDistrCoefCmyLT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimMembParamsE52 wrapper method implementations
//

#pragma implementation_key(5743)
inline long IRDimMembParamsE52::GetVerifForBendingElems ( ) {
    long _result = 0;
    HRESULT _hr = get_VerifForBendingElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5744)
inline void IRDimMembParamsE52::PutVerifForBendingElems ( long pVal ) {
    HRESULT _hr = put_VerifForBendingElems(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5745)
inline long IRDimMembParamsE52::GetVerifForBendingElemsType ( ) {
    long _result = 0;
    HRESULT _hr = get_VerifForBendingElemsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5746)
inline void IRDimMembParamsE52::PutVerifForBendingElemsType ( long pVal ) {
    HRESULT _hr = put_VerifForBendingElemsType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5747)
inline double IRDimMembParamsE52::GetVerifForBendingElemsAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_VerifForBendingElemsAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5748)
inline void IRDimMembParamsE52::PutVerifForBendingElemsAngle ( double pVal ) {
    HRESULT _hr = put_VerifForBendingElemsAngle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5749)
inline double IRDimMembParamsE52::GetVerifForBendingElemsRayon ( ) {
    double _result = 0;
    HRESULT _hr = get_VerifForBendingElemsRayon(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5750)
inline void IRDimMembParamsE52::PutVerifForBendingElemsRayon ( double pVal ) {
    HRESULT _hr = put_VerifForBendingElemsRayon(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5751)
inline double IRDimMembParamsE52::GetVerifForBendingElemsHap ( ) {
    double _result = 0;
    HRESULT _hr = get_VerifForBendingElemsHap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5752)
inline void IRDimMembParamsE52::PutVerifForBendingElemsHap ( double pVal ) {
    HRESULT _hr = put_VerifForBendingElemsHap(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5753)
inline double IRDimMembParamsE52::GetVerifForBendingElemsLamThick ( ) {
    double _result = 0;
    HRESULT _hr = get_VerifForBendingElemsLamThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5754)
inline void IRDimMembParamsE52::PutVerifForBendingElemsLamThick ( double pVal ) {
    HRESULT _hr = put_VerifForBendingElemsLamThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5755)
inline double IRDimMembParamsE52::GetVerifForBendingElemsKvol ( ) {
    double _result = 0;
    HRESULT _hr = get_VerifForBendingElemsKvol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5756)
inline void IRDimMembParamsE52::PutVerifForBendingElemsKvol ( double pVal ) {
    HRESULT _hr = put_VerifForBendingElemsKvol(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5757)
inline double IRDimMembParamsE52::GetSystemCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_SystemCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5758)
inline void IRDimMembParamsE52::PutSystemCoeff ( double pVal ) {
    HRESULT _hr = put_SystemCoeff(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5759)
inline enum IRDimBuckDiagramE52 IRDimMembParamsE52::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramE52 _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5760)
inline void IRDimMembParamsE52::PutBucklingDiagramY ( enum IRDimBuckDiagramE52 ret ) {
    HRESULT _hr = put_BucklingDiagramY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5761)
inline enum IRDimBuckDiagramE52 IRDimMembParamsE52::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramE52 _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5762)
inline void IRDimMembParamsE52::PutBucklingDiagramZ ( enum IRDimBuckDiagramE52 ret ) {
    HRESULT _hr = put_BucklingDiagramZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5763)
inline double IRDimMembParamsE52::GetBuckLengthCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5764)
inline void IRDimMembParamsE52::PutBuckLengthCoeffY ( double ret ) {
    HRESULT _hr = put_BuckLengthCoeffY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5765)
inline double IRDimMembParamsE52::GetBuckLengthCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5766)
inline void IRDimMembParamsE52::PutBuckLengthCoeffZ ( double ret ) {
    HRESULT _hr = put_BuckLengthCoeffZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5767)
inline long IRDimMembParamsE52::Complex_IsSet ( enum IRDimMembDefBucklingDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_Complex_IsSet(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5768)
inline HRESULT IRDimMembParamsE52::Complex_Set ( enum IRDimMembDefBucklingDataType Type, long val ) {
    HRESULT _hr = raw_Complex_Set(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5769)
inline enum IRDimComplexBattenTypeE52 IRDimMembParamsE52::Complex_GetBattenType ( enum IRDimMembDefBucklingDataType Type ) {
    enum IRDimComplexBattenTypeE52 _result;
    HRESULT _hr = raw_Complex_GetBattenType(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5770)
inline HRESULT IRDimMembParamsE52::Complex_SetBattenType ( enum IRDimMembDefBucklingDataType Type, enum IRDimComplexBattenTypeE52 val ) {
    HRESULT _hr = raw_Complex_SetBattenType(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5771)
inline enum IRDimComplexConnectTypeE52 IRDimMembParamsE52::Complex_GetConnecType ( enum IRDimMembDefBucklingDataType Type ) {
    enum IRDimComplexConnectTypeE52 _result;
    HRESULT _hr = raw_Complex_GetConnecType(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5772)
inline HRESULT IRDimMembParamsE52::Complex_SetConnectType ( enum IRDimMembDefBucklingDataType Type, enum IRDimComplexConnectTypeE52 val ) {
    HRESULT _hr = raw_Complex_SetConnectType(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5773)
inline HRESULT IRDimMembParamsE52::Complex_BattenCoordClear ( enum IRDimMembDefBucklingDataType Type ) {
    HRESULT _hr = raw_Complex_BattenCoordClear(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5774)
inline long IRDimMembParamsE52::Complex_BattenCoordNum ( enum IRDimMembDefBucklingDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_Complex_BattenCoordNum(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5775)
inline long IRDimMembParamsE52::Complex_IsCoordRelValue ( enum IRDimMembDefBucklingDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_Complex_IsCoordRelValue(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5776)
inline HRESULT IRDimMembParamsE52::Complex_SetCoordRelValue ( enum IRDimMembDefBucklingDataType Type, long val ) {
    HRESULT _hr = raw_Complex_SetCoordRelValue(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5777)
inline HRESULT IRDimMembParamsE52::Complex_SetBattenCoord ( enum IRDimMembDefBucklingDataType Type, long no, double coord ) {
    HRESULT _hr = raw_Complex_SetBattenCoord(Type, no, coord);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5778)
inline HRESULT IRDimMembParamsE52::Complex_GetBattenCoord ( enum IRDimMembDefBucklingDataType Type, long no, double * ret ) {
    HRESULT _hr = raw_Complex_GetBattenCoord(Type, no, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5779)
inline enum IRDimLaterBuckTypeE52 IRDimMembParamsE52::GetLatBuckType ( ) {
    enum IRDimLaterBuckTypeE52 _result;
    HRESULT _hr = get_LatBuckType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5780)
inline void IRDimMembParamsE52::PutLatBuckType ( enum IRDimLaterBuckTypeE52 ret ) {
    HRESULT _hr = put_LatBuckType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5781)
inline enum IRDimLoadLevelE52 IRDimMembParamsE52::GetLoadLevel ( ) {
    enum IRDimLoadLevelE52 _result;
    HRESULT _hr = get_LoadLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5782)
inline void IRDimMembParamsE52::PutLoadLevel ( enum IRDimLoadLevelE52 ret ) {
    HRESULT _hr = put_LoadLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5783)
inline enum IRDimLoadTypeE52 IRDimMembParamsE52::GetLoadType ( ) {
    enum IRDimLoadTypeE52 _result;
    HRESULT _hr = get_LoadType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5784)
inline void IRDimMembParamsE52::PutLoadType ( enum IRDimLoadTypeE52 ret ) {
    HRESULT _hr = put_LoadType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5785)
inline enum IRDimLatBuckCoefDiagramE52 IRDimMembParamsE52::GetLatCoeffLowerFlange ( ) {
    enum IRDimLatBuckCoefDiagramE52 _result;
    HRESULT _hr = get_LatCoeffLowerFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5786)
inline void IRDimMembParamsE52::PutLatCoeffLowerFlange ( enum IRDimLatBuckCoefDiagramE52 ret ) {
    HRESULT _hr = put_LatCoeffLowerFlange(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5787)
inline enum IRDimLatBuckCoefDiagramE52 IRDimMembParamsE52::GetLatCoeffUpperFlange ( ) {
    enum IRDimLatBuckCoefDiagramE52 _result;
    HRESULT _hr = get_LatCoeffUpperFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5788)
inline void IRDimMembParamsE52::PutLatCoeffUpperFlange ( enum IRDimLatBuckCoefDiagramE52 ret ) {
    HRESULT _hr = put_LatCoeffUpperFlange(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5789)
inline double IRDimMembParamsE52::GetLatCoeffLowerFlangeValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LatCoeffLowerFlangeValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5790)
inline void IRDimMembParamsE52::PutLatCoeffLowerFlangeValue ( double ret ) {
    HRESULT _hr = put_LatCoeffLowerFlangeValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5791)
inline double IRDimMembParamsE52::GetLatCoeffUpperFlangeValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LatCoeffUpperFlangeValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5792)
inline void IRDimMembParamsE52::PutLatCoeffUpperFlangeValue ( double ret ) {
    HRESULT _hr = put_LatCoeffUpperFlangeValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5793)
inline long IRDimMembParamsE52::GetCamber_IsSet ( ) {
    long _result = 0;
    HRESULT _hr = get_Camber_IsSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5794)
inline void IRDimMembParamsE52::PutCamber_Set ( long _arg1 ) {
    HRESULT _hr = put_Camber_Set(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5795)
inline long IRDimMembParamsE52::GetCamber_UserDefined ( ) {
    long _result = 0;
    HRESULT _hr = get_Camber_UserDefined(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5796)
inline void IRDimMembParamsE52::PutCamber_UserDefined ( long ret ) {
    HRESULT _hr = put_Camber_UserDefined(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5797)
inline double IRDimMembParamsE52::GetCamber_uy ( ) {
    double _result = 0;
    HRESULT _hr = get_Camber_uy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5798)
inline void IRDimMembParamsE52::PutCamber_uy ( double ret ) {
    HRESULT _hr = put_Camber_uy(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5799)
inline double IRDimMembParamsE52::GetCamber_uz ( ) {
    double _result = 0;
    HRESULT _hr = get_Camber_uz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5800)
inline void IRDimMembParamsE52::PutCamber_uz ( double ret ) {
    HRESULT _hr = put_Camber_uz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5801)
inline long IRDimMembParamsE52::Camber_IsDefl_u_net_fin_YZ ( enum IRDimMembDefDeflDataType Type ) {
    long _result = 0;
    HRESULT _hr = raw_Camber_IsDefl_u_net_fin_YZ(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5802)
inline HRESULT IRDimMembParamsE52::Camber_SetDefl_u_net_fin_YZ ( enum IRDimMembDefDeflDataType Type, long val ) {
    HRESULT _hr = raw_Camber_SetDefl_u_net_fin_YZ(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5803)
inline double IRDimMembParamsE52::Camber_GetDefl_u_net_fin_ValueYZ ( enum IRDimMembDefDeflDataType Type ) {
    double _result = 0;
    HRESULT _hr = raw_Camber_GetDefl_u_net_fin_ValueYZ(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5804)
inline HRESULT IRDimMembParamsE52::Camber_SetDefl_u_net_fin_ValueYZ ( enum IRDimMembDefDeflDataType Type, double val ) {
    HRESULT _hr = raw_Camber_SetDefl_u_net_fin_ValueYZ(Type, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5805)
inline long IRDimMembParamsE52::GetDblSectsTreatedAsSolid ( ) {
    long _result = 0;
    HRESULT _hr = get_DblSectsTreatedAsSolid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5806)
inline void IRDimMembParamsE52::PutDblSectsTreatedAsSolid ( long ret ) {
    HRESULT _hr = put_DblSectsTreatedAsSolid(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5807)
inline enum IRDimMethodOfCritStressDetermE52 IRDimMembParamsE52::GetMethodOfCritStressDeterm ( ) {
    enum IRDimMethodOfCritStressDetermE52 _result;
    HRESULT _hr = get_MethodOfCritStressDeterm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5808)
inline void IRDimMembParamsE52::PutMethodOfCritStressDeterm ( enum IRDimMethodOfCritStressDetermE52 ret ) {
    HRESULT _hr = put_MethodOfCritStressDeterm(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5809)
inline long IRDimMembParamsE52::GetServiceClass ( ) {
    long _result = 0;
    HRESULT _hr = get_ServiceClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5810)
inline void IRDimMembParamsE52::PutServiceClass ( long ret ) {
    HRESULT _hr = put_ServiceClass(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5811)
inline double IRDimMembParamsE52::GetTensAreaNetGros ( ) {
    double _result = 0;
    HRESULT _hr = get_TensAreaNetGros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5812)
inline void IRDimMembParamsE52::PutTensAreaNetGros ( double ret ) {
    HRESULT _hr = put_TensAreaNetGros(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5813)
inline long IRDimMembParamsE52::GetUnidirectionalBending ( ) {
    long _result = 0;
    HRESULT _hr = get_UnidirectionalBending(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5814)
inline void IRDimMembParamsE52::PutUnidirectionalBending ( long ret ) {
    HRESULT _hr = put_UnidirectionalBending(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5815)
inline enum IRDimFireMethodE52 IRDimMembParamsE52::GetFire_Method ( ) {
    enum IRDimFireMethodE52 _result;
    HRESULT _hr = get_Fire_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5816)
inline void IRDimMembParamsE52::PutFire_Method ( enum IRDimFireMethodE52 ret ) {
    HRESULT _hr = put_Fire_Method(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5817)
inline long IRDimMembParamsE52::GetFire_ConsiderCarbonRadius ( ) {
    long _result = 0;
    HRESULT _hr = get_Fire_ConsiderCarbonRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5818)
inline void IRDimMembParamsE52::PutFire_ConsiderCarbonRadius ( long ret ) {
    HRESULT _hr = put_Fire_ConsiderCarbonRadius(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5819)
inline long IRDimMembParamsE52::GetFire_IsBurnVelocityDefByUser ( ) {
    long _result = 0;
    HRESULT _hr = get_Fire_IsBurnVelocityDefByUser(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5820)
inline void IRDimMembParamsE52::PutFire_IsBurnVelocityDefByUser ( long ret ) {
    HRESULT _hr = put_Fire_IsBurnVelocityDefByUser(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5821)
inline double IRDimMembParamsE52::GetFire_BurnVelocityVal ( ) {
    double _result = 0;
    HRESULT _hr = get_Fire_BurnVelocityVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5822)
inline void IRDimMembParamsE52::PutFire_BurnVelocityVal ( double ret ) {
    HRESULT _hr = put_Fire_BurnVelocityVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5823)
inline enum IRDimFireTimeOfReqResistE52 IRDimMembParamsE52::GetFire_TimeOfReqResist ( ) {
    enum IRDimFireTimeOfReqResistE52 _result;
    HRESULT _hr = get_Fire_TimeOfReqResist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5824)
inline void IRDimMembParamsE52::PutFire_TimeOfReqResist ( enum IRDimFireTimeOfReqResistE52 ret ) {
    HRESULT _hr = put_Fire_TimeOfReqResist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5825)
inline double IRDimMembParamsE52::GetFire_SurfaceProtection ( ) {
    double _result = 0;
    HRESULT _hr = get_Fire_SurfaceProtection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5826)
inline void IRDimMembParamsE52::PutFire_SurfaceProtection ( double ret ) {
    HRESULT _hr = put_Fire_SurfaceProtection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5827)
inline long IRDimMembParamsE52::Fire_GetAddProtectOfSectSides ( enum IRDimFireAddProtectOfSectSidesE52 in ) {
    long _result = 0;
    HRESULT _hr = raw_Fire_GetAddProtectOfSectSides(in, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5828)
inline HRESULT IRDimMembParamsE52::Fire_SetAddProtectOfSectSides ( enum IRDimFireAddProtectOfSectSidesE52 in, long val ) {
    HRESULT _hr = raw_Fire_SetAddProtectOfSectSides(in, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5829)
inline long IRDimMembParamsE52::GetFire_ContinuousProtection ( ) {
    long _result = 0;
    HRESULT _hr = get_Fire_ContinuousProtection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5830)
inline void IRDimMembParamsE52::PutFire_ContinuousProtection ( long ret ) {
    HRESULT _hr = put_Fire_ContinuousProtection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5831)
inline double IRDimMembParamsE52::GetGammaM ( ) {
    double _result = 0;
    HRESULT _hr = get_GammaM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5832)
inline void IRDimMembParamsE52::PutGammaM ( double pVal ) {
    HRESULT _hr = put_GammaM(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5833)
inline double IRDimMembParamsE52::GetGammaMGL ( ) {
    double _result = 0;
    HRESULT _hr = get_GammaMGL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5834)
inline void IRDimMembParamsE52::PutGammaMGL ( double pVal ) {
    HRESULT _hr = put_GammaMGL(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5835)
inline double IRDimMembParamsE52::GetGammaGMFI ( ) {
    double _result = 0;
    HRESULT _hr = get_GammaGMFI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5836)
inline void IRDimMembParamsE52::PutGammaGMFI ( double pVal ) {
    HRESULT _hr = put_GammaGMFI(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimCodeResE52 wrapper method implementations
//

#pragma implementation_key(5837)
inline long IRDimCodeResE52::GetIsBuckY ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5838)
inline long IRDimCodeResE52::GetIsBuckZ ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBuckZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5839)
inline double IRDimCodeResE52::GetStrsShearY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5840)
inline double IRDimCodeResE52::GetStrsShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5841)
inline double IRDimCodeResE52::GetStrsMax ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5842)
inline double IRDimCodeResE52::GetStrsMom ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsMom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5843)
inline double IRDimCodeResE52::GetStrsTens ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTens(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5844)
inline double IRDimCodeResE52::GetStrsComp ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsComp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5845)
inline double IRDimCodeResE52::GetStrsUprEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsUprEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5846)
inline double IRDimCodeResE52::GetStrsRgtEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsRgtEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5847)
inline double IRDimCodeResE52::GetStrsLowEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLowEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5848)
inline double IRDimCodeResE52::GetStrsLftEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLftEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5849)
inline double IRDimCodeResE52::GetCritLatTorsBuckMomMCR ( ) {
    double _result = 0;
    HRESULT _hr = get_CritLatTorsBuckMomMCR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5850)
inline double IRDimCodeResE52::GetCritBendStressSIGCR ( ) {
    double _result = 0;
    HRESULT _hr = get_CritBendStressSIGCR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5851)
inline double IRDimCodeResE52::GetStraigtnessFactBETAC ( ) {
    double _result = 0;
    HRESULT _hr = get_StraigtnessFactBETAC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5852)
inline double IRDimCodeResE52::GetInstabFactKC ( ) {
    double _result = 0;
    HRESULT _hr = get_InstabFactKC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5853)
inline double IRDimCodeResE52::GetInstabFactKCY ( ) {
    double _result = 0;
    HRESULT _hr = get_InstabFactKCY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5854)
inline double IRDimCodeResE52::GetInstabFactKCZ ( ) {
    double _result = 0;
    HRESULT _hr = get_InstabFactKCZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5855)
inline double IRDimCodeResE52::GetLengthY ( ) {
    double _result = 0;
    HRESULT _hr = get_LengthY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5856)
inline double IRDimCodeResE52::GetLengthZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LengthZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5857)
inline double IRDimCodeResE52::GetBuckLengthLFY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthLFY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5858)
inline double IRDimCodeResE52::GetBuckLengthLFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthLFZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5859)
inline double IRDimCodeResE52::GetShaftLengthL1Y ( ) {
    double _result = 0;
    HRESULT _hr = get_ShaftLengthL1Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5860)
inline double IRDimCodeResE52::GetShaftLengthL1Z ( ) {
    double _result = 0;
    HRESULT _hr = get_ShaftLengthL1Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5861)
inline double IRDimCodeResE52::GetBuckSlendRatioLAY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendRatioLAY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5862)
inline double IRDimCodeResE52::GetBuckSlendRatioLAZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendRatioLAZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5863)
inline double IRDimCodeResE52::GetBendRelSlendLAM ( ) {
    double _result = 0;
    HRESULT _hr = get_BendRelSlendLAM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5864)
inline double IRDimCodeResE52::GetLatTorsBuckLengthLd ( ) {
    double _result = 0;
    HRESULT _hr = get_LatTorsBuckLengthLd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5865)
inline double IRDimCodeResE52::GetBuckCritStressSIGCRY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCritStressSIGCRY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5866)
inline double IRDimCodeResE52::GetBuckCritStressSIGCRZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCritStressSIGCRZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5867)
inline double IRDimCodeResE52::GetBuckRelSlendRatioLARY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckRelSlendRatioLARY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5868)
inline double IRDimCodeResE52::GetBuckRelSlendRatioLARZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckRelSlendRatioLARZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5869)
inline double IRDimCodeResE52::GetLatTorsFactKCRIT ( ) {
    double _result = 0;
    HRESULT _hr = get_LatTorsFactKCRIT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5870)
inline double IRDimCodeResE52::GetModifFactorKMOD ( ) {
    double _result = 0;
    HRESULT _hr = get_ModifFactorKMOD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5871)
inline double IRDimCodeResE52::GetDepthFactorKHMY ( ) {
    double _result = 0;
    HRESULT _hr = get_DepthFactorKHMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5872)
inline double IRDimCodeResE52::GetDepthFactorKHMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_DepthFactorKHMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5873)
inline double IRDimCodeResE52::GetDepthFactorKHT ( ) {
    double _result = 0;
    HRESULT _hr = get_DepthFactorKHT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5874)
inline double IRDimCodeResE52::GetLengthFactorKL ( ) {
    double _result = 0;
    HRESULT _hr = get_LengthFactorKL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5875)
inline double IRDimCodeResE52::GetBendRedistrFactorKM ( ) {
    double _result = 0;
    HRESULT _hr = get_BendRedistrFactorKM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5876)
inline double IRDimCodeResE52::GetShapeFactorKSHAPE ( ) {
    double _result = 0;
    HRESULT _hr = get_ShapeFactorKSHAPE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5877)
inline double IRDimCodeResE52::GetTaperedEdgeFactorKMALFA ( ) {
    double _result = 0;
    HRESULT _hr = get_TaperedEdgeFactorKMALFA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5878)
inline double IRDimCodeResE52::GetDsgnTensStrenFT0D ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnTensStrenFT0D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5879)
inline double IRDimCodeResE52::GetDsgnCompStrenFC0D ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnCompStrenFC0D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5880)
inline double IRDimCodeResE52::GetDsgnBendStrenFMYD ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnBendStrenFMYD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5881)
inline double IRDimCodeResE52::GetDsgnBendStrenFMZD ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnBendStrenFMZD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5882)
inline double IRDimCodeResE52::GetDsgnShearStrenFMVD ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnShearStrenFMVD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5883)
inline double IRDimCodeResE52::GetMaxBendStressSIGMAXY ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxBendStressSIGMAXY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5884)
inline double IRDimCodeResE52::GetMaxBendStressSIGMAXZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxBendStressSIGMAXZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5885)
inline double IRDimCodeResE52::GetMaxUsageFact ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFact(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5886)
inline double IRDimCodeResE52::GetMaxUsageFactAxForce ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactAxForce(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5887)
inline double IRDimCodeResE52::GetMaxUsageFactY ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5888)
inline double IRDimCodeResE52::GetMaxUsageFactZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5889)
inline double IRDimCodeResE52::GetMaxUsageFactBendY ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactBendY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5890)
inline double IRDimCodeResE52::GetMaxUsageFactCompBendY ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactCompBendY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5891)
inline double IRDimCodeResE52::GetMaxUsageFactShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5892)
inline double IRDimCodeResE52::GetMaxUsageFactShearY ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactShearY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5893)
inline double IRDimCodeResE52::GetElastSecModulWELY ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastSecModulWELY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5894)
inline double IRDimCodeResE52::GetElastSecModulWELZ ( ) {
    double _result = 0;
    HRESULT _hr = get_ElastSecModulWELZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5895)
inline double IRDimCodeResE52::GetMaxAllowUsageFact ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxAllowUsageFact(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5896)
inline double IRDimCodeResE52::GetMaxUsageFactEq6_38 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactEq6_38(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5897)
inline double IRDimCodeResE52::GetMaxUsageFactEq6_41 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactEq6_41(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5898)
inline double IRDimCodeResE52::GetMaxUsageFactEq6_50 ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxUsageFactEq6_50(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5899)
inline double IRDimCodeResE52::GetDsgnBendSressSIGMAD ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnBendSressSIGMAD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5900)
inline double IRDimCodeResE52::GetDsgnBendSressSIGMD ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnBendSressSIGMD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5901)
inline double IRDimCodeResE52::GetDsgnTensSressSIGT90D ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnTensSressSIGT90D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5902)
inline double IRDimCodeResE52::GetDsgnBendStrenFMAD ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnBendStrenFMAD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5903)
inline double IRDimCodeResE52::GetDsgnCompStrenFC90D ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnCompStrenFC90D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5904)
inline double IRDimCodeResE52::GetDsgnTensStrenFT90D ( ) {
    double _result = 0;
    HRESULT _hr = get_DsgnTensStrenFT90D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5905)
inline double IRDimCodeResE52::GetSystemCoeffKLS ( ) {
    double _result = 0;
    HRESULT _hr = get_SystemCoeffKLS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5906)
inline double IRDimCodeResE52::GetVolumeFactorKVOL ( ) {
    double _result = 0;
    HRESULT _hr = get_VolumeFactorKVOL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5907)
inline double IRDimCodeResE52::GetRedFactKR ( ) {
    double _result = 0;
    HRESULT _hr = get_RedFactKR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5908)
inline double IRDimCodeResE52::GetRedFactKL ( ) {
    double _result = 0;
    HRESULT _hr = get_RedFactKL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5909)
inline double IRDimCodeResE52::GetRedFactKP ( ) {
    double _result = 0;
    HRESULT _hr = get_RedFactKP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5910)
inline double IRDimCodeResE52::GetRedFactKDIS ( ) {
    double _result = 0;
    HRESULT _hr = get_RedFactKDIS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5911)
inline double IRDimCodeResE52::GetEdgeAngleALFAouble ( ) {
    double _result = 0;
    HRESULT _hr = get_EdgeAngleALFAouble(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5912)
inline double IRDimCodeResE52::GetHightHAP ( ) {
    double _result = 0;
    HRESULT _hr = get_HightHAP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5913)
inline double IRDimCodeResE52::GetRadiusRINI ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusRINI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5914)
inline double IRDimCodeResE52::GetTaperedBeamThick ( ) {
    double _result = 0;
    HRESULT _hr = get_TaperedBeamThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5915)
inline long IRDimCodeResE52::GetIsFireCalc ( ) {
    long _result = 0;
    HRESULT _hr = get_IsFireCalc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5916)
inline long IRDimCodeResE52::GetFireRightSideProtection ( ) {
    long _result = 0;
    HRESULT _hr = get_FireRightSideProtection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5917)
inline long IRDimCodeResE52::GetFireLeftSideProtection ( ) {
    long _result = 0;
    HRESULT _hr = get_FireLeftSideProtection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5918)
inline long IRDimCodeResE52::GetFireUpperSideProtection ( ) {
    long _result = 0;
    HRESULT _hr = get_FireUpperSideProtection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5919)
inline long IRDimCodeResE52::GetFireLowerSideProtection ( ) {
    long _result = 0;
    HRESULT _hr = get_FireLowerSideProtection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5920)
inline long IRDimCodeResE52::GetFireCalcMethod ( ) {
    long _result = 0;
    HRESULT _hr = get_FireCalcMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5921)
inline long IRDimCodeResE52::GetFireRoundCorners ( ) {
    long _result = 0;
    HRESULT _hr = get_FireRoundCorners(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5922)
inline long IRDimCodeResE52::GetFireBurningSpeed ( ) {
    long _result = 0;
    HRESULT _hr = get_FireBurningSpeed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5923)
inline long IRDimCodeResE52::GetFireDblRectFull ( ) {
    long _result = 0;
    HRESULT _hr = get_FireDblRectFull(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5924)
inline double IRDimCodeResE52::GetFireBurningSpeedVal ( ) {
    double _result = 0;
    HRESULT _hr = get_FireBurningSpeedVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5925)
inline double IRDimCodeResE52::GetFireResistTime ( ) {
    double _result = 0;
    HRESULT _hr = get_FireResistTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5926)
inline double IRDimCodeResE52::GetFireRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_FireRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5927)
inline double IRDimCodeResE52::GetFireEffectiveCharringDepthDEF ( ) {
    double _result = 0;
    HRESULT _hr = get_FireEffectiveCharringDepthDEF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5928)
inline double IRDimCodeResE52::GetFirePerimeterOfBurnedFace ( ) {
    double _result = 0;
    HRESULT _hr = get_FirePerimeterOfBurnedFace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5929)
inline double IRDimCodeResE52::GetFireBurningSpeedBETA0 ( ) {
    double _result = 0;
    HRESULT _hr = get_FireBurningSpeedBETA0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5930)
inline double IRDimCodeResE52::GetFireCharringRateBETA ( ) {
    double _result = 0;
    HRESULT _hr = get_FireCharringRateBETA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5931)
inline double IRDimCodeResE52::GetFireCharringDepthDCHAR ( ) {
    double _result = 0;
    HRESULT _hr = get_FireCharringDepthDCHAR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5932)
inline double IRDimCodeResE52::GetFireWidthB ( ) {
    double _result = 0;
    HRESULT _hr = get_FireWidthB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5933)
inline double IRDimCodeResE52::GetFireHightH ( ) {
    double _result = 0;
    HRESULT _hr = get_FireHightH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5934)
inline double IRDimCodeResE52::GetFireAreaS ( ) {
    double _result = 0;
    HRESULT _hr = get_FireAreaS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5935)
inline double IRDimCodeResE52::GetFireShearAreaSY ( ) {
    double _result = 0;
    HRESULT _hr = get_FireShearAreaSY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5936)
inline double IRDimCodeResE52::GetFireShearAreaSZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireShearAreaSZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5937)
inline double IRDimCodeResE52::GetFireDistBetweenDblRectD ( ) {
    double _result = 0;
    HRESULT _hr = get_FireDistBetweenDblRectD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5938)
inline double IRDimCodeResE52::GetFireDblRectWidthBLEFT ( ) {
    double _result = 0;
    HRESULT _hr = get_FireDblRectWidthBLEFT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5939)
inline double IRDimCodeResE52::GetFireDblRectWidthBRIGHT ( ) {
    double _result = 0;
    HRESULT _hr = get_FireDblRectWidthBRIGHT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5940)
inline double IRDimCodeResE52::GetFireMidSpanWidthB ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanWidthB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5941)
inline double IRDimCodeResE52::GetFireMidSpanHightH ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanHightH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5942)
inline double IRDimCodeResE52::GetFireMidSpanAreaS ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanAreaS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5943)
inline double IRDimCodeResE52::GetFireMidSpanDistBetweenDblRect ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanDistBetweenDblRect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5944)
inline double IRDimCodeResE52::GetFireMidSpanDblRectWidthBLEFT ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanDblRectWidthBLEFT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5945)
inline double IRDimCodeResE52::GetFireMidSpanDblRectWidthBRIGHT ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanDblRectWidthBRIGHT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5946)
inline double IRDimCodeResE52::GetFireMomInerIY ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMomInerIY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5947)
inline double IRDimCodeResE52::GetFireMomInerIZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMomInerIZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5948)
inline double IRDimCodeResE52::GetFireRightEdgeDistVY ( ) {
    double _result = 0;
    HRESULT _hr = get_FireRightEdgeDistVY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5949)
inline double IRDimCodeResE52::GetFireLeftEdgeDistVPY ( ) {
    double _result = 0;
    HRESULT _hr = get_FireLeftEdgeDistVPY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5950)
inline double IRDimCodeResE52::GetFireUppEdgeDistVZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireUppEdgeDistVZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5951)
inline double IRDimCodeResE52::GetFireLowEdgeDistVPZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireLowEdgeDistVPZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5952)
inline double IRDimCodeResE52::GetFireMidSpanMomInerIY ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanMomInerIY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5953)
inline double IRDimCodeResE52::GetFireMidSpanMomInerIZdouble ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanMomInerIZdouble(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5954)
inline double IRDimCodeResE52::GetFireMidSpanRightEdgeDistVY ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanRightEdgeDistVY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5955)
inline double IRDimCodeResE52::GetFireMidSpanLeftEdgeDistVPY ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanLeftEdgeDistVPY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5956)
inline double IRDimCodeResE52::GetFireMidSpanUppEdgeDistVZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanUppEdgeDistVZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5957)
inline double IRDimCodeResE52::GetFireMidSpanLowEdgeDistVPZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireMidSpanLowEdgeDistVPZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5958)
inline double IRDimCodeResE52::GetFireKmodCompr ( ) {
    double _result = 0;
    HRESULT _hr = get_FireKmodCompr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5959)
inline double IRDimCodeResE52::GetFireKmodTens ( ) {
    double _result = 0;
    HRESULT _hr = get_FireKmodTens(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5960)
inline double IRDimCodeResE52::GetFireKmodBend ( ) {
    double _result = 0;
    HRESULT _hr = get_FireKmodBend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5961)
inline double IRDimCodeResE52::GetFireCoefKF ( ) {
    double _result = 0;
    HRESULT _hr = get_FireCoefKF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimMembParamsCB71 wrapper method implementations
//

#pragma implementation_key(5962)
inline enum IRDimBuckDiagramCB71 IRDimMembParamsCB71::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramCB71 _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5963)
inline void IRDimMembParamsCB71::PutBucklingDiagramY ( enum IRDimBuckDiagramCB71 ret ) {
    HRESULT _hr = put_BucklingDiagramY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5964)
inline enum IRDimBuckDiagramCB71 IRDimMembParamsCB71::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramCB71 _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5965)
inline void IRDimMembParamsCB71::PutBucklingDiagramZ ( enum IRDimBuckDiagramCB71 ret ) {
    HRESULT _hr = put_BucklingDiagramZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5966)
inline double IRDimMembParamsCB71::GetBucklLengthCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BucklLengthCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5967)
inline void IRDimMembParamsCB71::PutBucklLengthCoeffY ( double ret ) {
    HRESULT _hr = put_BucklLengthCoeffY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5968)
inline double IRDimMembParamsCB71::GetBuckLengthCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5969)
inline void IRDimMembParamsCB71::PutBuckLengthCoeffZ ( double ret ) {
    HRESULT _hr = put_BuckLengthCoeffZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5970)
inline enum IRDimLaterBuckTypeCB71 IRDimMembParamsCB71::GetLatBuckType ( ) {
    enum IRDimLaterBuckTypeCB71 _result;
    HRESULT _hr = get_LatBuckType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5971)
inline void IRDimMembParamsCB71::PutLatBuckType ( enum IRDimLaterBuckTypeCB71 ret ) {
    HRESULT _hr = put_LatBuckType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5972)
inline double IRDimMembParamsCB71::GetLatCoeffLowerFlangeValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LatCoeffLowerFlangeValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5973)
inline void IRDimMembParamsCB71::PutLatCoeffLowerFlangeValue ( double ret ) {
    HRESULT _hr = put_LatCoeffLowerFlangeValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5974)
inline double IRDimMembParamsCB71::GetLatCoeffUpperFlangeValue ( ) {
    double _result = 0;
    HRESULT _hr = get_LatCoeffUpperFlangeValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5975)
inline void IRDimMembParamsCB71::PutLatCoeffUpperFlangeValue ( double ret ) {
    HRESULT _hr = put_LatCoeffUpperFlangeValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5976)
inline enum IRDimLoadLevelCB71 IRDimMembParamsCB71::GetLoadLevel ( ) {
    enum IRDimLoadLevelCB71 _result;
    HRESULT _hr = get_LoadLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5977)
inline void IRDimMembParamsCB71::PutLoadLevel ( enum IRDimLoadLevelCB71 ret ) {
    HRESULT _hr = put_LoadLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5978)
inline enum IRDimLoadTypeCB71 IRDimMembParamsCB71::GetLoadTypeY ( ) {
    enum IRDimLoadTypeCB71 _result;
    HRESULT _hr = get_LoadTypeY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5979)
inline void IRDimMembParamsCB71::PutLoadTypeY ( enum IRDimLoadTypeCB71 ret ) {
    HRESULT _hr = put_LoadTypeY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5980)
inline double IRDimMembParamsCB71::GetTensAreaNetGros ( ) {
    double _result = 0;
    HRESULT _hr = get_TensAreaNetGros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5981)
inline void IRDimMembParamsCB71::PutTensAreaNetGros ( double ret ) {
    HRESULT _hr = put_TensAreaNetGros(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5982)
inline VARIANT_BOOL IRDimMembParamsCB71::GetTubeControl ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TubeControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5983)
inline void IRDimMembParamsCB71::PutTubeControl ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_TubeControl(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5984)
inline VARIANT_BOOL IRDimMembParamsCB71::GetArcBeamCheck ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ArcBeamCheck(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5985)
inline void IRDimMembParamsCB71::PutArcBeamCheck ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ArcBeamCheck(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5986)
inline double IRDimMembParamsCB71::GetArcRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_ArcRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5987)
inline void IRDimMembParamsCB71::PutArcRadius ( double ret ) {
    HRESULT _hr = put_ArcRadius(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5988)
inline double IRDimMembParamsCB71::GetInflDeflCoefTheta ( ) {
    double _result = 0;
    HRESULT _hr = get_InflDeflCoefTheta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5989)
inline void IRDimMembParamsCB71::PutInflDeflCoefTheta ( double ret ) {
    HRESULT _hr = put_InflDeflCoefTheta(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5990)
inline VARIANT_BOOL IRDimMembParamsCB71::GetBuckIsComposedY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BuckIsComposedY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5991)
inline void IRDimMembParamsCB71::PutBuckIsComposedY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_BuckIsComposedY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5992)
inline VARIANT_BOOL IRDimMembParamsCB71::GetBuckIsComposedZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BuckIsComposedZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5993)
inline void IRDimMembParamsCB71::PutBuckIsComposedZ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_BuckIsComposedZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5994)
inline double IRDimMembParamsCB71::GetBuckComposBeamCoefCey ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckComposBeamCoefCey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5995)
inline void IRDimMembParamsCB71::PutBuckComposBeamCoefCey ( double ret ) {
    HRESULT _hr = put_BuckComposBeamCoefCey(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5996)
inline double IRDimMembParamsCB71::GetBuckComposBeamCoefCez ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckComposBeamCoefCez(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5997)
inline void IRDimMembParamsCB71::PutBuckComposBeamCoefCez ( double ret ) {
    HRESULT _hr = put_BuckComposBeamCoefCez(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5998)
inline double IRDimMembParamsCB71::GetHumChangeDeltaH ( ) {
    double _result = 0;
    HRESULT _hr = get_HumChangeDeltaH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5999)
inline void IRDimMembParamsCB71::PutHumChangeDeltaH ( double ret ) {
    HRESULT _hr = put_HumChangeDeltaH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6000)
inline double IRDimMembParamsCB71::GetForceDistFromBeginDistX ( ) {
    double _result = 0;
    HRESULT _hr = get_ForceDistFromBeginDistX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6001)
inline void IRDimMembParamsCB71::PutForceDistFromBeginDistX ( double ret ) {
    HRESULT _hr = put_ForceDistFromBeginDistX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6002)
inline VARIANT_BOOL IRDimMembParamsCB71::GetFireLftSideProt ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FireLftSideProt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6003)
inline void IRDimMembParamsCB71::PutFireLftSideProt ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_FireLftSideProt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6004)
inline VARIANT_BOOL IRDimMembParamsCB71::GetFireUprSideProt ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FireUprSideProt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6005)
inline void IRDimMembParamsCB71::PutFireUprSideProt ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_FireUprSideProt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6006)
inline VARIANT_BOOL IRDimMembParamsCB71::GetFireRgtSideProt ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FireRgtSideProt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6007)
inline void IRDimMembParamsCB71::PutFireRgtSideProt ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_FireRgtSideProt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6008)
inline VARIANT_BOOL IRDimMembParamsCB71::GetFireLowSideProt ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FireLowSideProt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6009)
inline void IRDimMembParamsCB71::PutFireLowSideProt ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_FireLowSideProt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6010)
inline enum IRDimFireProtectionTimesCB71 IRDimMembParamsCB71::GetFireProtectionTime ( ) {
    enum IRDimFireProtectionTimesCB71 _result;
    HRESULT _hr = get_FireProtectionTime(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6011)
inline void IRDimMembParamsCB71::PutFireProtectionTime ( enum IRDimFireProtectionTimesCB71 ret ) {
    HRESULT _hr = put_FireProtectionTime(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6012)
inline enum IRDimFireMemberPositionsCB71 IRDimMembParamsCB71::GetFireMembPosition ( ) {
    enum IRDimFireMemberPositionsCB71 _result;
    HRESULT _hr = get_FireMembPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6013)
inline void IRDimMembParamsCB71::PutFireMembPosition ( enum IRDimFireMemberPositionsCB71 ret ) {
    HRESULT _hr = put_FireMembPosition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6014)
inline double IRDimMembParamsCB71::GetFireRequiredResist ( ) {
    double _result = 0;
    HRESULT _hr = get_FireRequiredResist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6015)
inline void IRDimMembParamsCB71::PutFireRequiredResist ( double ret ) {
    HRESULT _hr = put_FireRequiredResist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6016)
inline VARIANT_BOOL IRDimMembParamsCB71::GetFireContinProtForComposBeam ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FireContinProtForComposBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6017)
inline void IRDimMembParamsCB71::PutFireContinProtForComposBeam ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_FireContinProtForComposBeam(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimCodeResCB71 wrapper method implementations
//

#pragma implementation_key(6018)
inline VARIANT_BOOL IRDimCodeResCB71::GetBadWidthBfUnderFire ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BadWidthBfUnderFire(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6019)
inline short IRDimCodeResCB71::GetIsBuckY ( ) {
    short _result = 0;
    HRESULT _hr = get_IsBuckY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6020)
inline short IRDimCodeResCB71::GetIsBuckZ ( ) {
    short _result = 0;
    HRESULT _hr = get_IsBuckZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6021)
inline double IRDimCodeResCB71::GetStrsShearY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6022)
inline double IRDimCodeResCB71::GetStrsShearZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsShearZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6023)
inline double IRDimCodeResCB71::GetEfficiencyRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_EfficiencyRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6024)
inline double IRDimCodeResCB71::GetStrsFinal ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsFinal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6025)
inline double IRDimCodeResCB71::GetStrsBend ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsBend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6026)
inline double IRDimCodeResCB71::GetStrsTens ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsTens(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6027)
inline double IRDimCodeResCB71::GetStrsUprEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsUprEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6028)
inline double IRDimCodeResCB71::GetStrsRgtEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsRgtEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6029)
inline double IRDimCodeResCB71::GetStrsLowEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLowEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6030)
inline double IRDimCodeResCB71::GetStrsLftEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsLftEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6031)
inline double IRDimCodeResCB71::GetStrsBendInCompEdgeMY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsBendInCompEdgeMY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6032)
inline double IRDimCodeResCB71::GetStrsBendInCompEdgeMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsBendInCompEdgeMZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6033)
inline double IRDimCodeResCB71::GetStrsComp ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsComp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6034)
inline double IRDimCodeResCB71::GetLatBuckStrsCrit ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckStrsCrit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6035)
inline double IRDimCodeResCB71::GetStrsBendInCurveBeam ( ) {
    double _result = 0;
    HRESULT _hr = get_StrsBendInCurveBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6036)
inline double IRDimCodeResCB71::GetBuckLengthLFY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthLFY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6037)
inline double IRDimCodeResCB71::GetBuckLengthLFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthLFZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6038)
inline double IRDimCodeResCB71::GetBuckLengthComposBeamLey ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthComposBeamLey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6039)
inline double IRDimCodeResCB71::GetBuckLengthComposBeamLez ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLengthComposBeamLez(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6040)
inline double IRDimCodeResCB71::GetBuckSLendLay ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSLendLay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6041)
inline double IRDimCodeResCB71::GetBuckSlendLaz ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendLaz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6042)
inline double IRDimCodeResCB71::GetBuckSlendComposBeamLaym ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendComposBeamLaym(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6043)
inline double IRDimCodeResCB71::GetBuckSlendComposBeamLazm ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendComposBeamLazm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6044)
inline double IRDimCodeResCB71::GetLatBuckRelSlendLam ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckRelSlendLam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6045)
inline double IRDimCodeResCB71::GetBuckCoefKY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoefKY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6046)
inline double IRDimCodeResCB71::GetBuckCoefKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoefKZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6047)
inline double IRDimCodeResCB71::GetBuckCoefKMax ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckCoefKMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6048)
inline double IRDimCodeResCB71::GetLatBuckCoefKinst ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckCoefKinst(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6049)
inline double IRDimCodeResCB71::GetLatBuckLengthLd ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLengthLd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6050)
inline double IRDimCodeResCB71::GetLatBuckLengthCoef ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLengthCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6051)
inline short IRDimCodeResCB71::GetTimberType ( ) {
    short _result = 0;
    HRESULT _hr = get_TimberType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6052)
inline double IRDimCodeResCB71::GetMatAxCompResist ( ) {
    double _result = 0;
    HRESULT _hr = get_MatAxCompResist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6053)
inline double IRDimCodeResCB71::GetMatAxTensResist ( ) {
    double _result = 0;
    HRESULT _hr = get_MatAxTensResist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6054)
inline double IRDimCodeResCB71::GetMatBendResist ( ) {
    double _result = 0;
    HRESULT _hr = get_MatBendResist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6055)
inline double IRDimCodeResCB71::GetMatShearResist ( ) {
    double _result = 0;
    HRESULT _hr = get_MatShearResist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6056)
inline double IRDimCodeResCB71::GetMatTrCompResist ( ) {
    double _result = 0;
    HRESULT _hr = get_MatTrCompResist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6057)
inline double IRDimCodeResCB71::GetMatTrTensResist ( ) {
    double _result = 0;
    HRESULT _hr = get_MatTrTensResist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6058)
inline double IRDimCodeResCB71::GetCoefDependOnAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_CoefDependOnAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6059)
inline double IRDimCodeResCB71::GetCoefDependOnWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_CoefDependOnWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6060)
inline double IRDimCodeResCB71::GetCoefDependOnHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_CoefDependOnHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6061)
inline double IRDimCodeResCB71::GetCoefDependOnHumAndComp ( ) {
    double _result = 0;
    HRESULT _hr = get_CoefDependOnHumAndComp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6062)
inline double IRDimCodeResCB71::GetCoefDependOnHumAndBend ( ) {
    double _result = 0;
    HRESULT _hr = get_CoefDependOnHumAndBend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6063)
inline short IRDimCodeResCB71::GetFireProtection ( ) {
    short _result = 0;
    HRESULT _hr = get_FireProtection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6064)
inline double IRDimCodeResCB71::GetFireResistance ( ) {
    double _result = 0;
    HRESULT _hr = get_FireResistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6065)
inline short IRDimCodeResCB71::GetFireProtectionPosition ( ) {
    short _result = 0;
    HRESULT _hr = get_FireProtectionPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6066)
inline double IRDimCodeResCB71::GetFireWidthB ( ) {
    double _result = 0;
    HRESULT _hr = get_FireWidthB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6067)
inline double IRDimCodeResCB71::GetFireWidthH ( ) {
    double _result = 0;
    HRESULT _hr = get_FireWidthH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6068)
inline double IRDimCodeResCB71::GetFireSecAreaS ( ) {
    double _result = 0;
    HRESULT _hr = get_FireSecAreaS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6069)
inline double IRDimCodeResCB71::GetFireShearAreaSY ( ) {
    double _result = 0;
    HRESULT _hr = get_FireShearAreaSY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6070)
inline double IRDimCodeResCB71::GetFireShearAreaSZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireShearAreaSZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6071)
inline double IRDimCodeResCB71::GetFireRgtEdgeDistVy ( ) {
    double _result = 0;
    HRESULT _hr = get_FireRgtEdgeDistVy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6072)
inline double IRDimCodeResCB71::GetFireLftEdgeDistVpy ( ) {
    double _result = 0;
    HRESULT _hr = get_FireLftEdgeDistVpy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6073)
inline double IRDimCodeResCB71::GetFireUprEdgeDistVz ( ) {
    double _result = 0;
    HRESULT _hr = get_FireUprEdgeDistVz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6074)
inline double IRDimCodeResCB71::GetFireLowEdgeDistVPZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireLowEdgeDistVPZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6075)
inline double IRDimCodeResCB71::GetFireInerMomIx ( ) {
    double _result = 0;
    HRESULT _hr = get_FireInerMomIx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6076)
inline double IRDimCodeResCB71::GetFireInerMomIy ( ) {
    double _result = 0;
    HRESULT _hr = get_FireInerMomIy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6077)
inline double IRDimCodeResCB71::GetFireInerMomIz ( ) {
    double _result = 0;
    HRESULT _hr = get_FireInerMomIz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6078)
inline double IRDimCodeResCB71::GetFireSeModulWy ( ) {
    double _result = 0;
    HRESULT _hr = get_FireSeModulWy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6079)
inline double IRDimCodeResCB71::GetFireSeModulWZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FireSeModulWZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6080)
inline double IRDimCodeResCB71::GetFireRedCoefK1h ( ) {
    double _result = 0;
    HRESULT _hr = get_FireRedCoefK1h(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6081)
inline double IRDimCodeResCB71::GetFireRedCoefK1b ( ) {
    double _result = 0;
    HRESULT _hr = get_FireRedCoefK1b(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6082)
inline double IRDimCodeResCB71::GetFireProtectCoefK2 ( ) {
    double _result = 0;
    HRESULT _hr = get_FireProtectCoefK2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6083)
inline double IRDimCodeResCB71::GetFireWidthInMidSpanB ( ) {
    double _result = 0;
    HRESULT _hr = get_FireWidthInMidSpanB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6084)
inline double IRDimCodeResCB71::GetFireWidthAtMembEndB ( ) {
    double _result = 0;
    HRESULT _hr = get_FireWidthAtMembEndB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6085)
inline double IRDimCodeResCB71::GetFireHightInMidSpanH ( ) {
    double _result = 0;
    HRESULT _hr = get_FireHightInMidSpanH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6086)
inline double IRDimCodeResCB71::GetFireWidthAtMembEndH ( ) {
    double _result = 0;
    HRESULT _hr = get_FireWidthAtMembEndH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6087)
inline double IRDimCodeResCB71::GetFireSecAreaInMidSpanS ( ) {
    double _result = 0;
    HRESULT _hr = get_FireSecAreaInMidSpanS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6088)
inline double IRDimCodeResCB71::GetFireInerMomInMidSpanIy ( ) {
    double _result = 0;
    HRESULT _hr = get_FireInerMomInMidSpanIy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6089)
inline double IRDimCodeResCB71::GetFireInerMomInMidSpanIz ( ) {
    double _result = 0;
    HRESULT _hr = get_FireInerMomInMidSpanIz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRDimMembParamsLRFD wrapper method implementations
//

#pragma implementation_key(6090)
inline enum IRDimBuckDiagramLRFD IRDimMembParamsLRFD::GetBucklingDiagramY ( ) {
    enum IRDimBuckDiagramLRFD _result;
    HRESULT _hr = get_BucklingDiagramY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6091)
inline void IRDimMembParamsLRFD::PutBucklingDiagramY ( enum IRDimBuckDiagramLRFD pVal ) {
    HRESULT _hr = put_BucklingDiagramY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6092)
inline enum IRDimBuckDiagramLRFD IRDimMembParamsLRFD::GetBucklingDiagramZ ( ) {
    enum IRDimBuckDiagramLRFD _result;
    HRESULT _hr = get_BucklingDiagramZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6093)
inline void IRDimMembParamsLRFD::PutBucklingDiagramZ ( enum IRDimBuckDiagramLRFD pVal ) {
    HRESULT _hr = put_BucklingDiagramZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6094)
inline double IRDimMembParamsLRFD::GetBuckLenghtCoeffY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLenghtCoeffY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6095)
inline void IRDimMembParamsLRFD::PutBuckLenghtCoeffY ( double pVal ) {
    HRESULT _hr = put_BuckLenghtCoeffY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6096)
inline double IRDimMembParamsLRFD::GetBuckLenghtCoeffZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckLenghtCoeffZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6097)
inline void IRDimMembParamsLRFD::PutBuckLenghtCoeffZ ( double pVal ) {
    HRESULT _hr = put_BuckLenghtCoeffZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6098)
inline long IRDimMembParamsLRFD::GetLatBuck ( ) {
    long _result = 0;
    HRESULT _hr = get_LatBuck(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6099)
inline void IRDimMembParamsLRFD::PutLatBuck ( long pVal ) {
    HRESULT _hr = put_LatBuck(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6100)
inline enum IRDimLatBuckCoefDiagramLRFD IRDimMembParamsLRFD::GetLatBuckCoef_UppFlan ( ) {
    enum IRDimLatBuckCoefDiagramLRFD _result;
    HRESULT _hr = get_LatBuckCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6101)
inline void IRDimMembParamsLRFD::PutLatBuckCoef_UppFlan ( enum IRDimLatBuckCoefDiagramLRFD pVal ) {
    HRESULT _hr = put_LatBuckCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6102)
inline enum IRDimLatBuckCoefDiagramLRFD IRDimMembParamsLRFD::GetLatBuckCoef_LowFlan ( ) {
    enum IRDimLatBuckCoefDiagramLRFD _result;
    HRESULT _hr = get_LatBuckCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6103)
inline void IRDimMembParamsLRFD::PutLatBuckCoef_LowFlan ( enum IRDimLatBuckCoefDiagramLRFD pVal ) {
    HRESULT _hr = put_LatBuckCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6104)
inline double IRDimMembParamsLRFD::GetUserDefLatBuckCoef_UppFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckCoef_UppFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6105)
inline void IRDimMembParamsLRFD::PutUserDefLatBuckCoef_UppFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckCoef_UppFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6106)
inline double IRDimMembParamsLRFD::GetUserDefLatBuckCoef_LowFlan ( ) {
    double _result = 0;
    HRESULT _hr = get_UserDefLatBuckCoef_LowFlan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6107)
inline void IRDimMembParamsLRFD::PutUserDefLatBuckCoef_LowFlan ( double pVal ) {
    HRESULT _hr = put_UserDefLatBuckCoef_LowFlan(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6108)
inline enum IRDimLatBuckCbCoeffDiagramLRFD IRDimMembParamsLRFD::GetLatBuckCbCoeffDiagram ( ) {
    enum IRDimLatBuckCbCoeffDiagramLRFD _result;
    HRESULT _hr = get_LatBuckCbCoeffDiagram(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6109)
inline void IRDimMembParamsLRFD::PutLatBuckCbCoeffDiagram ( enum IRDimLatBuckCbCoeffDiagramLRFD pVal ) {
    HRESULT _hr = put_LatBuckCbCoeffDiagram(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6110)
inline double IRDimMembParamsLRFD::GetLatBuckCbCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckCbCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6111)
inline void IRDimMembParamsLRFD::PutLatBuckCbCoeff ( double pVal ) {
    HRESULT _hr = put_LatBuckCbCoeff(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6112)
inline double IRDimMembParamsLRFD::GetFactAnetto ( ) {
    double _result = 0;
    HRESULT _hr = get_FactAnetto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6113)
inline void IRDimMembParamsLRFD::PutFactAnetto ( double pVal ) {
    HRESULT _hr = put_FactAnetto(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6114)
inline long IRDimMembParamsLRFD::GetTubeControl ( ) {
    long _result = 0;
    HRESULT _hr = get_TubeControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6115)
inline void IRDimMembParamsLRFD::PutTubeControl ( long pVal ) {
    HRESULT _hr = put_TubeControl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRDimCodeResLRFD wrapper method implementations
//

#pragma implementation_key(6116)
inline double IRDimCodeResLRFD::GetBuckSlendY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6117)
inline double IRDimCodeResLRFD::GetBuckSlendZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckSlendZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6118)
inline double IRDimCodeResLRFD::GetBuckColSlendParamLamcY ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckColSlendParamLamcY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6119)
inline double IRDimCodeResLRFD::GetBuckColSlendParamLamcZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BuckColSlendParamLamcZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6120)
inline long IRDimCodeResLRFD::GetSecFlangeClass ( ) {
    long _result = 0;
    HRESULT _hr = get_SecFlangeClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6121)
inline long IRDimCodeResLRFD::GetSecWebClass ( ) {
    long _result = 0;
    HRESULT _hr = get_SecWebClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6122)
inline double IRDimCodeResLRFD::GetSecUppUppFlangeLocSlendX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecUppUppFlangeLocSlendX1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6123)
inline double IRDimCodeResLRFD::GetSecLowUppFlangeLocSlendX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLowUppFlangeLocSlendX2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6124)
inline double IRDimCodeResLRFD::GetSecUppFlangeWidthB ( ) {
    double _result = 0;
    HRESULT _hr = get_SecUppFlangeWidthB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6125)
inline double IRDimCodeResLRFD::GetSecFlangeDepthInMidSpanB1 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecFlangeDepthInMidSpanB1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6126)
inline double IRDimCodeResLRFD::GetSecLowFlangeDepthB2 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecLowFlangeDepthB2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6127)
inline double IRDimCodeResLRFD::GetSecHightD ( ) {
    double _result = 0;
    HRESULT _hr = get_SecHightD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6128)
inline double IRDimCodeResLRFD::GetSecUppFlangeThickT ( ) {
    double _result = 0;
    HRESULT _hr = get_SecUppFlangeThickT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6129)
inline double IRDimCodeResLRFD::GetSecUppFlangeThickT2 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecUppFlangeThickT2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6130)
inline double IRDimCodeResLRFD::GetSecWebHightH ( ) {
    double _result = 0;
    HRESULT _hr = get_SecWebHightH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6131)
inline double IRDimCodeResLRFD::GetSecHightAtMembBegH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecHightAtMembBegH1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6132)
inline double IRDimCodeResLRFD::GetSecHightAtMembBegH2 ( ) {
    double _result = 0;
    HRESULT _hr = get_SecHightAtMembBegH2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6133)
inline double IRDimCodeResLRFD::GetSecWebThickTW ( ) {
    double _result = 0;
    HRESULT _hr = get_SecWebThickTW(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6134)
inline double IRDimCodeResLRFD::GetSecFlangeLocSlendX ( ) {
    double _result = 0;
    HRESULT _hr = get_SecFlangeLocSlendX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6135)
inline double IRDimCodeResLRFD::GetSecWebLocSlendX ( ) {
    double _result = 0;
    HRESULT _hr = get_SecWebLocSlendX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6136)
inline double IRDimCodeResLRFD::GetLimWidthThickParamKC ( ) {
    double _result = 0;
    HRESULT _hr = get_LimWidthThickParamKC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6137)
inline double IRDimCodeResLRFD::GetRedFactForSlendCompElemQ ( ) {
    double _result = 0;
    HRESULT _hr = get_RedFactForSlendCompElemQ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6138)
inline double IRDimCodeResLRFD::GetLatBuckUnbracedLengthLB ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckUnbracedLengthLB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6139)
inline double IRDimCodeResLRFD::GetLatBuckBendCoefCB ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckBendCoefCB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6140)
inline double IRDimCodeResLRFD::GetLatBuckLimPlastUnbracedLengthLpY ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimPlastUnbracedLengthLpY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6141)
inline double IRDimCodeResLRFD::GetLatBuckLimPlastUnbracedLengthLpZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimPlastUnbracedLengthLpZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6142)
inline double IRDimCodeResLRFD::GetLatBuckLimUnbracedLengthLrY ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimUnbracedLengthLrY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6143)
inline double IRDimCodeResLRFD::GetLatBuckLimUnbracedLengthLrZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimUnbracedLengthLrZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6144)
inline double IRDimCodeResLRFD::GetLatBuckLimMomentMrY ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimMomentMrY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6145)
inline double IRDimCodeResLRFD::GetLatBuckLimMomentMrZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LatBuckLimMomentMrZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6146)
inline double IRDimCodeResLRFD::GetStrengthAxTensPT ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthAxTensPT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6147)
inline double IRDimCodeResLRFD::GetStrengthAxCompPA ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthAxCompPA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6148)
inline double IRDimCodeResLRFD::GetStrengthAxTensCompPn ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthAxTensCompPn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6149)
inline double IRDimCodeResLRFD::GetStrengthShearVnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthShearVnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6150)
inline double IRDimCodeResLRFD::GetStrengthShearVnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthShearVnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6151)
inline double IRDimCodeResLRFD::GetStrengthFlexMnY ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexMnY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6152)
inline double IRDimCodeResLRFD::GetStrengthFlexMnZ ( ) {
    double _result = 0;
    HRESULT _hr = get_StrengthFlexMnZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6153)
inline double IRDimCodeResLRFD::GetPlastBendMomMpY ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastBendMomMpY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6154)
inline double IRDimCodeResLRFD::GetPlastBendMomMpZ ( ) {
    double _result = 0;
    HRESULT _hr = get_PlastBendMomMpZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6155)
inline double IRDimCodeResLRFD::GetCritElastMomMcrY ( ) {
    double _result = 0;
    HRESULT _hr = get_CritElastMomMcrY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6156)
inline double IRDimCodeResLRFD::GetCritElastMomMcrZ ( ) {
    double _result = 0;
    HRESULT _hr = get_CritElastMomMcrZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6157)
inline double IRDimCodeResLRFD::GetCompResidulStressFR ( ) {
    double _result = 0;
    HRESULT _hr = get_CompResidulStressFR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6158)
inline double IRDimCodeResLRFD::GetCritStressFCR ( ) {
    double _result = 0;
    HRESULT _hr = get_CritStressFCR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6159)
inline double IRDimCodeResLRFD::GetSecPlastModulusWplY ( ) {
    double _result = 0;
    HRESULT _hr = get_SecPlastModulusWplY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6160)
inline double IRDimCodeResLRFD::GetSecPlastModulusWplZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SecPlastModulusWplZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6161)
inline double IRDimCodeResLRFD::GetSecElastModulusWelY ( ) {
    double _result = 0;
    HRESULT _hr = get_SecElastModulusWelY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6162)
inline double IRDimCodeResLRFD::GetSecElastModulusWelZ ( ) {
    double _result = 0;
    HRESULT _hr = get_SecElastModulusWelZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6163)
inline double IRDimCodeResLRFD::GetSecCompElastModulusWelYC ( ) {
    double _result = 0;
    HRESULT _hr = get_SecCompElastModulusWelYC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6164)
inline double IRDimCodeResLRFD::GetSecTensElastModulusWelYC ( ) {
    double _result = 0;
    HRESULT _hr = get_SecTensElastModulusWelYC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6165)
inline double IRDimCodeResLRFD::GetMaxEffRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxEffRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6166)
inline double IRDimCodeResLRFD::GetEffShearRatioY ( ) {
    double _result = 0;
    HRESULT _hr = get_EffShearRatioY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6167)
inline double IRDimCodeResLRFD::GetEffShearRatioZ ( ) {
    double _result = 0;
    HRESULT _hr = get_EffShearRatioZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRJointWeld wrapper method implementations
//

#pragma implementation_key(6168)
inline double IRJointWeld::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6169)
inline void IRJointWeld::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6170)
inline double IRJointWeld::GetStrength ( ) {
    double _result = 0;
    HRESULT _hr = get_Strength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6171)
inline void IRJointWeld::PutStrength ( double ret ) {
    HRESULT _hr = put_Strength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6172)
inline enum IRJointWeldType IRJointWeld::GetType ( ) {
    enum IRJointWeldType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6173)
inline void IRJointWeld::PutType ( enum IRJointWeldType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointPlate wrapper method implementations
//

#pragma implementation_key(6174)
inline double IRJointPlate::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6175)
inline void IRJointPlate::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6176)
inline double IRJointPlate::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6177)
inline void IRJointPlate::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6178)
inline double IRJointPlate::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6179)
inline void IRJointPlate::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6180)
inline long IRJointPlate::GetExist ( ) {
    long _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6181)
inline void IRJointPlate::PutExist ( long ret ) {
    HRESULT _hr = put_Exist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointKneeDiagonalStiff wrapper method implementations
//

#pragma implementation_key(6182)
inline enum IRJointKneeDiagonalStiffType IRJointKneeDiagonalStiff::GetType ( ) {
    enum IRJointKneeDiagonalStiffType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6183)
inline void IRJointKneeDiagonalStiff::PutType ( enum IRJointKneeDiagonalStiffType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6184)
inline double IRJointKneeDiagonalStiff::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6185)
inline void IRJointKneeDiagonalStiff::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6186)
inline long IRJointKneeDiagonalStiff::GetExist ( ) {
    long _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6187)
inline _bstr_t IRJointKneeDiagonalStiff::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6188)
inline void IRJointKneeDiagonalStiff::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBolts wrapper method implementations
//

#pragma implementation_key(6189)
inline double IRJointBolts::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6190)
inline _bstr_t IRJointBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6191)
inline void IRJointBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6192)
inline _bstr_t IRJointBolts::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6193)
inline void IRJointBolts::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6194)
inline double IRJointBolts::GetFriction ( ) {
    double _result = 0;
    HRESULT _hr = get_Friction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6195)
inline void IRJointBolts::PutFriction ( double ret ) {
    HRESULT _hr = put_Friction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6196)
inline double IRJointBolts::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6197)
inline int IRJointBolts::GetRows ( ) {
    int _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6198)
inline void IRJointBolts::PutRows ( int ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6199)
inline int IRJointBolts::GetCols ( ) {
    int _result = 0;
    HRESULT _hr = get_Cols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6200)
inline void IRJointBolts::PutCols ( int ret ) {
    HRESULT _hr = put_Cols(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6201)
inline double IRJointBolts::GetHeight1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Height1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6202)
inline void IRJointBolts::PutHeight1 ( double ret ) {
    HRESULT _hr = put_Height1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointKneeBolts wrapper method implementations
//

#pragma implementation_key(6203)
inline IRobotValuesArrayPtr IRJointKneeBolts::GetSpacingV ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_SpacingV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6204)
inline IRobotValuesArrayPtr IRJointKneeBolts::GetSpacingH ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_SpacingH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6205)
inline IRobotValuesArrayPtr IRJointKneeBolts::GetQuantityV ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_QuantityV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6206)
inline IRobotValuesArrayPtr IRJointKneeBolts::GetQuantityH ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_QuantityH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6207)
inline long IRJointKneeBolts::GetEqualSpac ( ) {
    long _result = 0;
    HRESULT _hr = get_EqualSpac(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6208)
inline void IRJointKneeBolts::PutEqualSpac ( long ret ) {
    HRESULT _hr = put_EqualSpac(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6209)
inline long IRJointKneeBolts::GetSymmetry ( ) {
    long _result = 0;
    HRESULT _hr = get_Symmetry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6210)
inline void IRJointKneeBolts::PutSymmetry ( long ret ) {
    HRESULT _hr = put_Symmetry(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6211)
inline enum IRJointBoltShearPortion IRJointKneeBolts::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6212)
inline void IRJointKneeBolts::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointKneeBracket wrapper method implementations
//

#pragma implementation_key(6213)
inline double IRJointKneeBracket::GetThickFlange ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6214)
inline void IRJointKneeBracket::PutThickFlange ( double ret ) {
    HRESULT _hr = put_ThickFlange(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6215)
inline double IRJointKneeBracket::GetThickWeb ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickWeb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6216)
inline void IRJointKneeBracket::PutThickWeb ( double ret ) {
    HRESULT _hr = put_ThickWeb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6217)
inline double IRJointKneeBracket::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6218)
inline void IRJointKneeBracket::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6219)
inline double IRJointKneeBracket::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6220)
inline void IRJointKneeBracket::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6221)
inline double IRJointKneeBracket::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6222)
inline void IRJointKneeBracket::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6223)
inline double IRJointKneeBracket::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6224)
inline void IRJointKneeBracket::PutAngle ( double ret ) {
    HRESULT _hr = put_Angle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6225)
inline long IRJointKneeBracket::GetExist ( ) {
    long _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6226)
inline void IRJointKneeBracket::PutExist ( int ret ) {
    HRESULT _hr = put_Exist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6227)
inline double IRJointKneeBracket::GetAngleExt ( enum IRJointAngleUnit Unit ) {
    double _result = 0;
    HRESULT _hr = get_AngleExt(Unit, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6228)
inline void IRJointKneeBracket::PutAngleExt ( enum IRJointAngleUnit Unit, double ret ) {
    HRESULT _hr = put_AngleExt(Unit, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6229)
inline _bstr_t IRJointKneeBracket::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6230)
inline void IRJointKneeBracket::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointKneeWebPlate wrapper method implementations
//

#pragma implementation_key(6231)
inline enum IRJointWebType IRJointKneeWebPlate::GetType ( ) {
    enum IRJointWebType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6232)
inline void IRJointKneeWebPlate::PutType ( enum IRJointWebType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6233)
inline IRJointWeldPtr IRJointKneeWebPlate::GetWeldTran ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldTran(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6234)
inline IRJointWeldPtr IRJointKneeWebPlate::GetWeldLong ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldLong(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6235)
inline IRJointKneeBoltsPtr IRJointKneeWebPlate::GetBolts ( ) {
    struct IRJointKneeBolts * _result = 0;
    HRESULT _hr = get_Bolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeBoltsPtr(_result, false);
}

#pragma implementation_key(6236)
inline double IRJointKneeWebPlate::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6237)
inline void IRJointKneeWebPlate::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6238)
inline double IRJointKneeWebPlate::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6239)
inline void IRJointKneeWebPlate::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6240)
inline double IRJointKneeWebPlate::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6241)
inline void IRJointKneeWebPlate::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6242)
inline _bstr_t IRJointKneeWebPlate::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6243)
inline void IRJointKneeWebPlate::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointKneeCodeParamsPN90 wrapper method implementations
//

#pragma implementation_key(6244)
inline _bstr_t IRJointKneeCodeParamsPN90::GetCategory ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Category(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6245)
inline void IRJointKneeCodeParamsPN90::PutCategory ( _bstr_t ret ) {
    HRESULT _hr = put_Category(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6246)
inline long IRJointKneeCodeParamsPN90::GetMultiVarLoad ( ) {
    long _result = 0;
    HRESULT _hr = get_MultiVarLoad(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6247)
inline void IRJointKneeCodeParamsPN90::PutMultiVarLoad ( long ret ) {
    HRESULT _hr = put_MultiVarLoad(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6248)
inline double IRJointKneeCodeParamsPN90::GetFrictionCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_FrictionCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6249)
inline void IRJointKneeCodeParamsPN90::PutFrictionCoeff ( double ret ) {
    HRESULT _hr = put_FrictionCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6250)
inline double IRJointKneeCodeParamsPN90::GetConditionalFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ConditionalFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6251)
inline void IRJointKneeCodeParamsPN90::PutConditionalFactor ( double ret ) {
    HRESULT _hr = put_ConditionalFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6252)
inline long IRJointKneeCodeParamsPN90::GetAutoCalc ( ) {
    long _result = 0;
    HRESULT _hr = get_AutoCalc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6253)
inline void IRJointKneeCodeParamsPN90::PutAutoCalc ( long ret ) {
    HRESULT _hr = put_AutoCalc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6254)
inline double IRJointKneeCodeParamsPN90::GetBending_wt1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Bending_wt1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6255)
inline void IRJointKneeCodeParamsPN90::PutBending_wt1 ( double ret ) {
    HRESULT _hr = put_Bending_wt1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6256)
inline double IRJointKneeCodeParamsPN90::GetBending_wt2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Bending_wt2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6257)
inline void IRJointKneeCodeParamsPN90::PutBending_wt2 ( double ret ) {
    HRESULT _hr = put_Bending_wt2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6258)
inline double IRJointKneeCodeParamsPN90::GetBending_wt3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Bending_wt3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6259)
inline void IRJointKneeCodeParamsPN90::PutBending_wt3 ( double ret ) {
    HRESULT _hr = put_Bending_wt3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6260)
inline double IRJointKneeCodeParamsPN90::GetBending_wt4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Bending_wt4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6261)
inline void IRJointKneeCodeParamsPN90::PutBending_wt4 ( double ret ) {
    HRESULT _hr = put_Bending_wt4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6262)
inline double IRJointKneeCodeParamsPN90::GetBending_wr1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Bending_wr1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6263)
inline void IRJointKneeCodeParamsPN90::PutBending_wr1 ( double ret ) {
    HRESULT _hr = put_Bending_wr1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6264)
inline double IRJointKneeCodeParamsPN90::GetBending_wr2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Bending_wr2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6265)
inline void IRJointKneeCodeParamsPN90::PutBending_wr2 ( double ret ) {
    HRESULT _hr = put_Bending_wr2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6266)
inline double IRJointKneeCodeParamsPN90::GetBending_wr3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Bending_wr3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6267)
inline void IRJointKneeCodeParamsPN90::PutBending_wr3 ( double ret ) {
    HRESULT _hr = put_Bending_wr3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6268)
inline double IRJointKneeCodeParamsPN90::GetBending_wr4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Bending_wr4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6269)
inline void IRJointKneeCodeParamsPN90::PutBending_wr4 ( double ret ) {
    HRESULT _hr = put_Bending_wr4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6270)
inline double IRJointKneeCodeParamsPN90::GetTension_wt1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Tension_wt1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6271)
inline void IRJointKneeCodeParamsPN90::PutTension_wt1 ( double ret ) {
    HRESULT _hr = put_Tension_wt1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6272)
inline double IRJointKneeCodeParamsPN90::GetTension_wt2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Tension_wt2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6273)
inline void IRJointKneeCodeParamsPN90::PutTension_wt2 ( double ret ) {
    HRESULT _hr = put_Tension_wt2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6274)
inline double IRJointKneeCodeParamsPN90::GetTension_wt3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Tension_wt3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6275)
inline void IRJointKneeCodeParamsPN90::PutTension_wt3 ( double ret ) {
    HRESULT _hr = put_Tension_wt3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6276)
inline double IRJointKneeCodeParamsPN90::GetTension_wr1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Tension_wr1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6277)
inline void IRJointKneeCodeParamsPN90::PutTension_wr1 ( double ret ) {
    HRESULT _hr = put_Tension_wr1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6278)
inline double IRJointKneeCodeParamsPN90::GetTension_wr2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Tension_wr2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6279)
inline void IRJointKneeCodeParamsPN90::PutTension_wr2 ( double ret ) {
    HRESULT _hr = put_Tension_wr2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6280)
inline double IRJointKneeCodeParamsPN90::GetTension_wr3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Tension_wr3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6281)
inline void IRJointKneeCodeParamsPN90::PutTension_wr3 ( double ret ) {
    HRESULT _hr = put_Tension_wr3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointKneeCodeParamsCM66 wrapper method implementations
//

#pragma implementation_key(6282)
inline enum IRJointBoltsCalculateType IRJointKneeCodeParamsCM66::GetBoltsCalculate ( ) {
    enum IRJointBoltsCalculateType _result;
    HRESULT _hr = get_BoltsCalculate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6283)
inline void IRJointKneeCodeParamsCM66::PutBoltsCalculate ( enum IRJointBoltsCalculateType ret ) {
    HRESULT _hr = put_BoltsCalculate(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6284)
inline enum IRJointColumnWebCalculateType IRJointKneeCodeParamsCM66::GetColumnWebCalculate ( ) {
    enum IRJointColumnWebCalculateType _result;
    HRESULT _hr = get_ColumnWebCalculate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6285)
inline void IRJointKneeCodeParamsCM66::PutColumnWebCalculate ( enum IRJointColumnWebCalculateType ret ) {
    HRESULT _hr = put_ColumnWebCalculate(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6286)
inline double IRJointKneeCodeParamsCM66::GetFrictionCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_FrictionCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6287)
inline void IRJointKneeCodeParamsCM66::PutFrictionCoeff ( double ret ) {
    HRESULT _hr = put_FrictionCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointKneeCodeParamsEC32 wrapper method implementations
//

#pragma implementation_key(6288)
inline _bstr_t IRJointKneeCodeParamsEC32::GetCategoryToShear ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CategoryToShear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6289)
inline void IRJointKneeCodeParamsEC32::PutCategoryToShear ( _bstr_t ret ) {
    HRESULT _hr = put_CategoryToShear(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6290)
inline double IRJointKneeCodeParamsEC32::GetCoeffMi ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffMi(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6291)
inline void IRJointKneeCodeParamsEC32::PutCoeffMi ( double ret ) {
    HRESULT _hr = put_CoeffMi(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6292)
inline double IRJointKneeCodeParamsEC32::GetCoeffKsi ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffKsi(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6293)
inline void IRJointKneeCodeParamsEC32::PutCoeffKsi ( double ret ) {
    HRESULT _hr = put_CoeffKsi(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6294)
inline enum IRJointGlobalAnalysisType IRJointKneeCodeParamsEC32::GetGloblalAnalysisType ( ) {
    enum IRJointGlobalAnalysisType _result;
    HRESULT _hr = get_GloblalAnalysisType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6295)
inline void IRJointKneeCodeParamsEC32::PutGloblalAnalysisType ( enum IRJointGlobalAnalysisType ret ) {
    HRESULT _hr = put_GloblalAnalysisType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6296)
inline enum IRJointFrameType IRJointKneeCodeParamsEC32::GetFrameType ( ) {
    enum IRJointFrameType _result;
    HRESULT _hr = get_FrameType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6297)
inline void IRJointKneeCodeParamsEC32::PutFrameType ( enum IRJointFrameType ret ) {
    HRESULT _hr = put_FrameType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6298)
inline double IRJointKneeCodeParamsEC32::GetCoeffGammaM0 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffGammaM0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6299)
inline void IRJointKneeCodeParamsEC32::PutCoeffGammaM0 ( double ret ) {
    HRESULT _hr = put_CoeffGammaM0(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6300)
inline double IRJointKneeCodeParamsEC32::GetCoeffGammaM1 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffGammaM1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6301)
inline void IRJointKneeCodeParamsEC32::PutCoeffGammaM1 ( double ret ) {
    HRESULT _hr = put_CoeffGammaM1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6302)
inline double IRJointKneeCodeParamsEC32::GetCoeffGammaM2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffGammaM2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6303)
inline void IRJointKneeCodeParamsEC32::PutCoeffGammaM2 ( double ret ) {
    HRESULT _hr = put_CoeffGammaM2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6304)
inline double IRJointKneeCodeParamsEC32::GetCoeffGammaM3 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffGammaM3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6305)
inline void IRJointKneeCodeParamsEC32::PutCoeffGammaM3 ( double ret ) {
    HRESULT _hr = put_CoeffGammaM3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6306)
inline double IRJointKneeCodeParamsEC32::GetRealBeamLength ( ) {
    double _result = 0;
    HRESULT _hr = get_RealBeamLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6307)
inline void IRJointKneeCodeParamsEC32::PutRealBeamLength ( double ret ) {
    HRESULT _hr = put_RealBeamLength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6308)
inline double IRJointKneeCodeParamsEC32::GetBeamLengthForCalc ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamLengthForCalc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6309)
inline void IRJointKneeCodeParamsEC32::PutBeamLengthForCalc ( double ret ) {
    HRESULT _hr = put_BeamLengthForCalc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointKneeStiffColumn wrapper method implementations
//

#pragma implementation_key(6310)
inline double IRJointKneeStiffColumn::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6311)
inline void IRJointKneeStiffColumn::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointProfile wrapper method implementations
//

#pragma implementation_key(6312)
inline _bstr_t IRJointProfile::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6313)
inline void IRJointProfile::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6314)
inline _bstr_t IRJointProfile::GetSection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6315)
inline void IRJointProfile::PutSection ( _bstr_t ret ) {
    HRESULT _hr = put_Section(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6316)
inline double IRJointProfile::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6317)
inline void IRJointProfile::PutAngle ( double ret ) {
    HRESULT _hr = put_Angle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6318)
inline long IRJointProfile::GetBarNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_BarNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6319)
inline void IRJointProfile::PutBarNumber ( long ret ) {
    HRESULT _hr = put_BarNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6320)
inline HRESULT IRJointProfile::Edit ( enum IRJointConnectionType ctype ) {
    HRESULT _hr = raw_Edit(ctype);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6321)
inline double IRJointProfile::GetAngleExt ( enum IRJointAngleUnit Unit ) {
    double _result = 0;
    HRESULT _hr = get_AngleExt(Unit, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6322)
inline void IRJointProfile::PutAngleExt ( enum IRJointAngleUnit Unit, double ret ) {
    HRESULT _hr = put_AngleExt(Unit, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6323)
inline HRESULT IRJointProfile::EditComponent ( enum IRJointComponentType ctype ) {
    HRESULT _hr = raw_EditComponent(ctype);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRJointKnee wrapper method implementations
//

#pragma implementation_key(6324)
inline enum IRJointKneeType IRJointKnee::GetKneeType ( ) {
    enum IRJointKneeType _result;
    HRESULT _hr = get_KneeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6325)
inline void IRJointKnee::PutKneeType ( enum IRJointKneeType ret ) {
    HRESULT _hr = put_KneeType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6326)
inline enum IRJointKneeReinfType IRJointKnee::GetStiffTypeUp ( ) {
    enum IRJointKneeReinfType _result;
    HRESULT _hr = get_StiffTypeUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6327)
inline enum IRJointKneeReinfType IRJointKnee::GetStiffTypeLow ( ) {
    enum IRJointKneeReinfType _result;
    HRESULT _hr = get_StiffTypeLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6328)
inline IRJointKneeBoltsPtr IRJointKnee::GetBolts ( ) {
    struct IRJointKneeBolts * _result = 0;
    HRESULT _hr = get_Bolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeBoltsPtr(_result, false);
}

#pragma implementation_key(6329)
inline IRJointPlatePtr IRJointKnee::GetPlate ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_Plate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6330)
inline double IRJointKnee::GetPlatePositionLow ( ) {
    double _result = 0;
    HRESULT _hr = get_PlatePositionLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6331)
inline void IRJointKnee::PutPlatePositionLow ( double ret ) {
    HRESULT _hr = put_PlatePositionLow(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6332)
inline IRJointKneeBracketPtr IRJointKnee::GetBracketUp ( ) {
    struct IRJointKneeBracket * _result = 0;
    HRESULT _hr = get_BracketUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeBracketPtr(_result, false);
}

#pragma implementation_key(6333)
inline IRJointKneeBracketPtr IRJointKnee::GetBracketLow ( ) {
    struct IRJointKneeBracket * _result = 0;
    HRESULT _hr = get_BracketLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeBracketPtr(_result, false);
}

#pragma implementation_key(6334)
inline IRJointPlatePtr IRJointKnee::GetTensionPlateUp ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_TensionPlateUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6335)
inline IRJointPlatePtr IRJointKnee::GetTensionPlateLow ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_TensionPlateLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6336)
inline IRJointKneeStiffColumnPtr IRJointKnee::GetStiffUp ( ) {
    struct IRJointKneeStiffColumn * _result = 0;
    HRESULT _hr = get_StiffUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeStiffColumnPtr(_result, false);
}

#pragma implementation_key(6337)
inline IRJointKneeStiffColumnPtr IRJointKnee::GetStiffLow ( ) {
    struct IRJointKneeStiffColumn * _result = 0;
    HRESULT _hr = get_StiffLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeStiffColumnPtr(_result, false);
}

#pragma implementation_key(6338)
inline IRJointPlatePtr IRJointKnee::GetVStiffUp ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_VStiffUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6339)
inline IRJointPlatePtr IRJointKnee::GetVStiffLow ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_VStiffLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6340)
inline IRJointWeldPtr IRJointKnee::GetWeldWeb ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldWeb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6341)
inline IRJointWeldPtr IRJointKnee::GetWeldFlange ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6342)
inline IRJointWeldPtr IRJointKnee::GetWeldStiff ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldStiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6343)
inline enum IRJointKneeWebStiffType IRJointKnee::GetWebStiffType ( ) {
    enum IRJointKneeWebStiffType _result;
    HRESULT _hr = get_WebStiffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6344)
inline IRJointKneeDiagonalStiffPtr IRJointKnee::GetStiffDiag ( ) {
    struct IRJointKneeDiagonalStiff * _result = 0;
    HRESULT _hr = get_StiffDiag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeDiagonalStiffPtr(_result, false);
}

#pragma implementation_key(6345)
inline IRJointKneeWebPlatePtr IRJointKnee::GetWebPlate ( ) {
    struct IRJointKneeWebPlate * _result = 0;
    HRESULT _hr = get_WebPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeWebPlatePtr(_result, false);
}

#pragma implementation_key(6346)
inline enum IRJointKneeFixType IRJointKnee::GetFixType ( ) {
    enum IRJointKneeFixType _result;
    HRESULT _hr = get_FixType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6347)
inline void IRJointKnee::PutFixType ( enum IRJointKneeFixType ret ) {
    HRESULT _hr = put_FixType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6348)
inline IRobotMaterialDataPtr IRJointKnee::GetMaterPlates ( ) {
    struct IRobotMaterialData * _result = 0;
    HRESULT _hr = get_MaterPlates(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMaterialDataPtr(_result, false);
}

#pragma implementation_key(6349)
inline IRJointProfilePtr IRJointKnee::GetColumn ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Column(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6350)
inline IRJointProfilePtr IRJointKnee::GetBeam ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Beam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6351)
inline IRJointKneeCodeParamsPN90Ptr IRJointKnee::GetCodeParamsPN90 ( ) {
    struct IRJointKneeCodeParamsPN90 * _result = 0;
    HRESULT _hr = get_CodeParamsPN90(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeCodeParamsPN90Ptr(_result, false);
}

#pragma implementation_key(6352)
inline IRJointKneeCodeParamsCM66Ptr IRJointKnee::GetCodeParamsCM66 ( ) {
    struct IRJointKneeCodeParamsCM66 * _result = 0;
    HRESULT _hr = get_CodeParamsCM66(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeCodeParamsCM66Ptr(_result, false);
}

#pragma implementation_key(6353)
inline IRJointKneeCodeParamsEC32Ptr IRJointKnee::GetCodeParamsEC32 ( ) {
    struct IRJointKneeCodeParamsEC32 * _result = 0;
    HRESULT _hr = get_CodeParamsEC32(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointKneeCodeParamsEC32Ptr(_result, false);
}

#pragma implementation_key(6354)
inline void IRJointKnee::PutStiffTypeUp ( enum IRJointKneeReinfType ret ) {
    HRESULT _hr = put_StiffTypeUp(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6355)
inline void IRJointKnee::PutStiffTypeLow ( enum IRJointKneeReinfType ret ) {
    HRESULT _hr = put_StiffTypeLow(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6356)
inline double IRJointKnee::GetPlatePosition ( ) {
    double _result = 0;
    HRESULT _hr = get_PlatePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6357)
inline void IRJointKnee::PutPlatePosition ( double ret ) {
    HRESULT _hr = put_PlatePosition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6358)
inline double IRJointKnee::GetFlanPlatePosUpper ( ) {
    double _result = 0;
    HRESULT _hr = get_FlanPlatePosUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6359)
inline void IRJointKnee::PutFlanPlatePosUpper ( double ret ) {
    HRESULT _hr = put_FlanPlatePosUpper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6360)
inline double IRJointKnee::GetFlanPlatePosLower ( ) {
    double _result = 0;
    HRESULT _hr = get_FlanPlatePosLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6361)
inline void IRJointKnee::PutFlanPlatePosLower ( double ret ) {
    HRESULT _hr = put_FlanPlatePosLower(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6362)
inline IRJointPlatePtr IRJointKnee::GetFlanPlateUpper ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_FlanPlateUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6363)
inline IRJointPlatePtr IRJointKnee::GetFlanPlateLower ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_FlanPlateLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6364)
inline IRJointPlatePtr IRJointKnee::GetWebColumnStiffenerHUpper ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_WebColumnStiffenerHUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6365)
inline IRJointPlatePtr IRJointKnee::GetWebColumnStiffenerHLower ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_WebColumnStiffenerHLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6366)
inline IRJointPlatePtr IRJointKnee::GetWebBeamStiffenerVUpper ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_WebBeamStiffenerVUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6367)
inline IRJointPlatePtr IRJointKnee::GetWebBeamStiffenerVLower ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_WebBeamStiffenerVLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6368)
inline _bstr_t IRJointKnee::GetDefComponentMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DefComponentMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6369)
inline void IRJointKnee::PutDefComponentMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_DefComponentMaterial(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6370)
inline long IRJointKnee::GetIsDefComponentMaterialSet ( ) {
    long _result = 0;
    HRESULT _hr = get_IsDefComponentMaterialSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6371)
inline void IRJointKnee::PutIsDefComponentMaterialSet ( long ret ) {
    HRESULT _hr = put_IsDefComponentMaterialSet(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6372)
inline IRobotNamesArrayPtr IRJointKnee::GetBoltsDimensionNamesVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionNamesVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(6373)
inline IRobotNamesArrayPtr IRJointKnee::GetBoltsClassVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsClassVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(6374)
inline IRobotValuesArrayPtr IRJointKnee::GetBoltsDimensionsVector ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionsVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6375)
inline void IRJointKnee::PutWebStiffType ( enum IRJointKneeWebStiffType ret ) {
    HRESULT _hr = put_WebStiffType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6376)
inline void IRJointKnee::PutIsBolted ( long ret ) {
    HRESULT _hr = put_IsBolted(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6377)
inline long IRJointKnee::GetIsBolted ( ) {
    long _result = 0;
    HRESULT _hr = get_IsBolted(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6378)
inline IRJointWeldPtr IRJointKnee::GetWeldBracketUpFlange ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldBracketUpFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6379)
inline IRJointWeldPtr IRJointKnee::GetWeldBracketDownFlange ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldBracketDownFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6380)
inline _bstr_t IRJointKnee::GetMaterial ( enum IRJointKneeMaterials par ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(par, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6381)
inline void IRJointKnee::PutMaterial ( enum IRJointKneeMaterials par, _bstr_t ret ) {
    HRESULT _hr = put_Material(par, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointKneeLoad wrapper method implementations
//

#pragma implementation_key(6382)
inline double IRJointKneeLoad::GetM ( ) {
    double _result = 0;
    HRESULT _hr = get_M(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6383)
inline void IRJointKneeLoad::PutM ( double ret ) {
    HRESULT _hr = put_M(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6384)
inline double IRJointKneeLoad::GetN ( ) {
    double _result = 0;
    HRESULT _hr = get_N(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6385)
inline void IRJointKneeLoad::PutN ( double ret ) {
    HRESULT _hr = put_N(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6386)
inline double IRJointKneeLoad::GetQ ( ) {
    double _result = 0;
    HRESULT _hr = get_Q(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6387)
inline void IRJointKneeLoad::PutQ ( double ret ) {
    HRESULT _hr = put_Q(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointAnchorBolt wrapper method implementations
//

#pragma implementation_key(6388)
inline double IRJointAnchorBolt::GetLength1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Length1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6389)
inline void IRJointAnchorBolt::PutLength1 ( double ret ) {
    HRESULT _hr = put_Length1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6390)
inline double IRJointAnchorBolt::GetLength2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Length2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6391)
inline void IRJointAnchorBolt::PutLength2 ( double ret ) {
    HRESULT _hr = put_Length2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6392)
inline double IRJointAnchorBolt::GetLength3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Length3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6393)
inline void IRJointAnchorBolt::PutLength3 ( double ret ) {
    HRESULT _hr = put_Length3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6394)
inline double IRJointAnchorBolt::GetLength4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Length4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6395)
inline void IRJointAnchorBolt::PutLength4 ( double ret ) {
    HRESULT _hr = put_Length4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointAnchorPlate wrapper method implementations
//

#pragma implementation_key(6396)
inline enum IRJointAnchorPlateType IRJointAnchorPlate::GetType ( ) {
    enum IRJointAnchorPlateType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6397)
inline void IRJointAnchorPlate::PutType ( enum IRJointAnchorPlateType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6398)
inline _bstr_t IRJointAnchorPlate::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6399)
inline void IRJointAnchorPlate::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointFootBolts wrapper method implementations
//

#pragma implementation_key(6400)
inline double IRJointFootBolts::GetSpacingH ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6401)
inline void IRJointFootBolts::PutSpacingH ( double ret ) {
    HRESULT _hr = put_SpacingH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6402)
inline double IRJointFootBolts::GetSpacingV ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6403)
inline void IRJointFootBolts::PutSpacingV ( double ret ) {
    HRESULT _hr = put_SpacingV(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6404)
inline long IRJointFootBolts::GetDiameter ( ) {
    long _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6405)
inline _bstr_t IRJointFootBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6406)
inline void IRJointFootBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6407)
inline _bstr_t IRJointFootBolts::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6408)
inline void IRJointFootBolts::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6409)
inline double IRJointFootBolts::GetFriction ( ) {
    double _result = 0;
    HRESULT _hr = get_Friction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6410)
inline void IRJointFootBolts::PutFriction ( double ret ) {
    HRESULT _hr = put_Friction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6411)
inline double IRJointFootBolts::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6412)
inline long IRJointFootBolts::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6413)
inline void IRJointFootBolts::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6414)
inline double IRJointFootBolts::GetDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_Distance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6415)
inline void IRJointFootBolts::PutDistance ( double ret ) {
    HRESULT _hr = put_Distance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6416)
inline _bstr_t IRJointFootBolts::GetMaterialName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaterialName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6417)
inline void IRJointFootBolts::PutMaterialName ( _bstr_t ret ) {
    HRESULT _hr = put_MaterialName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6418)
inline enum IRJointFootBoltsArrangement IRJointFootBolts::GetArrangement ( ) {
    enum IRJointFootBoltsArrangement _result;
    HRESULT _hr = get_Arrangement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6419)
inline void IRJointFootBolts::PutArrangement ( enum IRJointFootBoltsArrangement ret ) {
    HRESULT _hr = put_Arrangement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6420)
inline long IRJointFootBolts::GetCols ( ) {
    long _result = 0;
    HRESULT _hr = get_Cols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6421)
inline void IRJointFootBolts::PutCols ( long ret ) {
    HRESULT _hr = put_Cols(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6422)
inline IRobotValuesArrayPtr IRJointFootBolts::GetVecSpacingH ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_VecSpacingH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6423)
inline IRobotValuesArrayPtr IRJointFootBolts::GetVecSpacingV ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_VecSpacingV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6424)
inline VARIANT_BOOL IRJointFootBolts::GetEqualSpacingH ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EqualSpacingH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6425)
inline void IRJointFootBolts::PutEqualSpacingH ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_EqualSpacingH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6426)
inline VARIANT_BOOL IRJointFootBolts::GetEqualSpacingV ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EqualSpacingV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6427)
inline void IRJointFootBolts::PutEqualSpacingV ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_EqualSpacingV(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6428)
inline enum IRJointBoltShearPortion IRJointFootBolts::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6429)
inline void IRJointFootBolts::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointAnchor wrapper method implementations
//

#pragma implementation_key(6430)
inline enum IRJointAnchorType IRJointAnchor::GetType ( ) {
    enum IRJointAnchorType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6431)
inline void IRJointAnchor::PutType ( enum IRJointAnchorType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6432)
inline IRJointAnchorPlatePtr IRJointAnchor::GetAnchorPlate ( ) {
    struct IRJointAnchorPlate * _result = 0;
    HRESULT _hr = get_AnchorPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointAnchorPlatePtr(_result, false);
}

#pragma implementation_key(6433)
inline IRJointAnchorBoltPtr IRJointAnchor::GetTige ( ) {
    struct IRJointAnchorBolt * _result = 0;
    HRESULT _hr = get_Tige(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointAnchorBoltPtr(_result, false);
}

#pragma implementation_key(6434)
inline IRJointFootBoltsPtr IRJointAnchor::GetBolts ( ) {
    struct IRJointFootBolts * _result = 0;
    HRESULT _hr = get_Bolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootBoltsPtr(_result, false);
}

//
// interface IRJointFootPlate wrapper method implementations
//

#pragma implementation_key(6435)
inline enum IRJointFootPlateType IRJointFootPlate::GetType ( ) {
    enum IRJointFootPlateType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6436)
inline void IRJointFootPlate::PutType ( enum IRJointFootPlateType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6437)
inline double IRJointFootPlate::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6438)
inline void IRJointFootPlate::PutDiameter ( double ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6439)
inline long IRJointFootPlate::GetCenterAnchor ( ) {
    long _result = 0;
    HRESULT _hr = get_CenterAnchor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6440)
inline void IRJointFootPlate::PutCenterAnchor ( long ret ) {
    HRESULT _hr = put_CenterAnchor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointWedge wrapper method implementations
//

#pragma implementation_key(6441)
inline enum IRJointWedgeType IRJointWedge::GetType ( ) {
    enum IRJointWedgeType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6442)
inline void IRJointWedge::PutType ( enum IRJointWedgeType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6443)
inline double IRJointWedge::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6444)
inline void IRJointWedge::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6445)
inline IRJointProfilePtr IRJointWedge::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6446)
inline double IRJointWedge::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6447)
inline void IRJointWedge::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6448)
inline double IRJointWedge::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6449)
inline void IRJointWedge::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6450)
inline _bstr_t IRJointWedge::GetXTypeMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XTypeMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6451)
inline void IRJointWedge::PutXTypeMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_XTypeMaterial(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBearingPlate wrapper method implementations
//

#pragma implementation_key(6452)
inline double IRJointBearingPlate::GetThickBearingBar ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickBearingBar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6453)
inline void IRJointBearingPlate::PutThickBearingBar ( double ret ) {
    HRESULT _hr = put_ThickBearingBar(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointFootWelds wrapper method implementations
//

#pragma implementation_key(6454)
inline IRJointWeldPtr IRJointFootWelds::GetFootPlate ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_FootPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6455)
inline IRJointWeldPtr IRJointFootWelds::GetWedge ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_Wedge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6456)
inline IRJointWeldPtr IRJointFootWelds::GetWasher ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_Washer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6457)
inline IRJointWeldPtr IRJointFootWelds::GetBearing ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_Bearing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6458)
inline IRJointWeldPtr IRJointFootWelds::GetStiff ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_Stiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

//
// interface IRJointColumnBracket wrapper method implementations
//

#pragma implementation_key(6459)
inline double IRJointColumnBracket::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6460)
inline void IRJointColumnBracket::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6461)
inline double IRJointColumnBracket::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6462)
inline void IRJointColumnBracket::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6463)
inline double IRJointColumnBracket::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6464)
inline void IRJointColumnBracket::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6465)
inline double IRJointColumnBracket::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6466)
inline void IRJointColumnBracket::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6467)
inline double IRJointColumnBracket::GetVThick ( ) {
    double _result = 0;
    HRESULT _hr = get_VThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6468)
inline void IRJointColumnBracket::PutVThick ( double ret ) {
    HRESULT _hr = put_VThick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6469)
inline VARIANT_BOOL IRJointColumnBracket::Exist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRJointFootStiffenerHoriz wrapper method implementations
//

#pragma implementation_key(6470)
inline double IRJointFootStiffenerHoriz::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6471)
inline void IRJointFootStiffenerHoriz::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointFootStiffenerVert wrapper method implementations
//

#pragma implementation_key(6472)
inline double IRJointFootStiffenerVert::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6473)
inline void IRJointFootStiffenerVert::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6474)
inline double IRJointFootStiffenerVert::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6475)
inline void IRJointFootStiffenerVert::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6476)
inline double IRJointFootStiffenerVert::GetWidthSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_WidthSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6477)
inline void IRJointFootStiffenerVert::PutWidthSpacing ( double ret ) {
    HRESULT _hr = put_WidthSpacing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointFootMaterials wrapper method implementations
//

#pragma implementation_key(6478)
inline double IRJointFootMaterials::GetPlateSigma ( ) {
    double _result = 0;
    HRESULT _hr = get_PlateSigma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6479)
inline void IRJointFootMaterials::PutPlateSigma ( double ret ) {
    HRESULT _hr = put_PlateSigma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6480)
inline double IRJointFootMaterials::GetPlateYoung ( ) {
    double _result = 0;
    HRESULT _hr = get_PlateYoung(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6481)
inline void IRJointFootMaterials::PutPlateYoung ( double ret ) {
    HRESULT _hr = put_PlateYoung(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6482)
inline double IRJointFootMaterials::GetCementAmount ( ) {
    double _result = 0;
    HRESULT _hr = get_CementAmount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6483)
inline void IRJointFootMaterials::PutCementAmount ( double ret ) {
    HRESULT _hr = put_CementAmount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6484)
inline double IRJointFootMaterials::GetConcrSteelCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_ConcrSteelCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6485)
inline void IRJointFootMaterials::PutConcrSteelCoeff ( double ret ) {
    HRESULT _hr = put_ConcrSteelCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6486)
inline double IRJointFootMaterials::GetConcrClass ( ) {
    double _result = 0;
    HRESULT _hr = get_ConcrClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6487)
inline void IRJointFootMaterials::PutConcrClass ( double ret ) {
    HRESULT _hr = put_ConcrClass(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointColumnSquare wrapper method implementations
//

#pragma implementation_key(6488)
inline IRJointProfilePtr IRJointColumnSquare::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6489)
inline double IRJointColumnSquare::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6490)
inline void IRJointColumnSquare::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6491)
inline double IRJointColumnSquare::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6492)
inline void IRJointColumnSquare::PutDiameter ( double ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6493)
inline _bstr_t IRJointColumnSquare::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6494)
inline void IRJointColumnSquare::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6495)
inline _bstr_t IRJointColumnSquare::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6496)
inline void IRJointColumnSquare::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6497)
inline long IRJointColumnSquare::GetNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6498)
inline void IRJointColumnSquare::PutNumber ( long ret ) {
    HRESULT _hr = put_Number(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6499)
inline double IRJointColumnSquare::GetDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_Distance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6500)
inline void IRJointColumnSquare::PutDistance ( double ret ) {
    HRESULT _hr = put_Distance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6501)
inline double IRJointColumnSquare::GetSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_Spacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6502)
inline void IRJointColumnSquare::PutSpacing ( double ret ) {
    HRESULT _hr = put_Spacing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointColumnBFoundation wrapper method implementations
//

#pragma implementation_key(6503)
inline double IRJointColumnBFoundation::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6504)
inline void IRJointColumnBFoundation::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6505)
inline double IRJointColumnBFoundation::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6506)
inline void IRJointColumnBFoundation::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6507)
inline double IRJointColumnBFoundation::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6508)
inline void IRJointColumnBFoundation::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6509)
inline double IRJointColumnBFoundation::GetTg ( ) {
    double _result = 0;
    HRESULT _hr = get_Tg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6510)
inline void IRJointColumnBFoundation::PutTg ( double ret ) {
    HRESULT _hr = put_Tg(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6511)
inline _bstr_t IRJointColumnBFoundation::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6512)
inline void IRJointColumnBFoundation::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6513)
inline double IRJointColumnBFoundation::GetGroutLayer_fckg ( ) {
    double _result = 0;
    HRESULT _hr = get_GroutLayer_fckg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6514)
inline void IRJointColumnBFoundation::PutGroutLayer_fckg ( double ret ) {
    HRESULT _hr = put_GroutLayer_fckg(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6515)
inline double IRJointColumnBFoundation::GetGroutLayer_cfd ( ) {
    double _result = 0;
    HRESULT _hr = get_GroutLayer_cfd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6516)
inline void IRJointColumnBFoundation::PutGroutLayer_cfd ( double ret ) {
    HRESULT _hr = put_GroutLayer_cfd(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6517)
inline long IRJointColumnBFoundation::GetIsCracked ( ) {
    long _result = 0;
    HRESULT _hr = get_IsCracked(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6518)
inline void IRJointColumnBFoundation::PutIsCracked ( long ret ) {
    HRESULT _hr = put_IsCracked(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6519)
inline enum RJointCoeffPunchingMethodType IRJointColumnBFoundation::GetCoeffPunchingMethod ( ) {
    enum RJointCoeffPunchingMethodType _result;
    HRESULT _hr = get_CoeffPunchingMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6520)
inline void IRJointColumnBFoundation::PutCoeffPunchingMethod ( enum RJointCoeffPunchingMethodType ret ) {
    HRESULT _hr = put_CoeffPunchingMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6521)
inline long IRJointColumnBFoundation::GetIsCoeffSteelConcreteManual ( ) {
    long _result = 0;
    HRESULT _hr = get_IsCoeffSteelConcreteManual(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6522)
inline void IRJointColumnBFoundation::PutIsCoeffSteelConcreteManual ( long ret ) {
    HRESULT _hr = put_IsCoeffSteelConcreteManual(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6523)
inline double IRJointColumnBFoundation::GetCoeffSteelConcreteManual ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffSteelConcreteManual(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6524)
inline void IRJointColumnBFoundation::PutCoeffSteelConcreteManual ( double ret ) {
    HRESULT _hr = put_CoeffSteelConcreteManual(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6525)
inline double IRJointColumnBFoundation::GetCoeffK ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffK(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6526)
inline void IRJointColumnBFoundation::PutCoeffK ( double ret ) {
    HRESULT _hr = put_CoeffK(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6527)
inline enum IRJointCalcTypeCoeffK IRJointColumnBFoundation::GetCalcTypeCoeffK ( ) {
    enum IRJointCalcTypeCoeffK _result;
    HRESULT _hr = get_CalcTypeCoeffK(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6528)
inline void IRJointColumnBFoundation::PutCalcTypeCoeffK ( enum IRJointCalcTypeCoeffK ret ) {
    HRESULT _hr = put_CalcTypeCoeffK(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointFootStiffenerSimple wrapper method implementations
//

#pragma implementation_key(6529)
inline double IRJointFootStiffenerSimple::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6530)
inline void IRJointFootStiffenerSimple::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6531)
inline double IRJointFootStiffenerSimple::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6532)
inline void IRJointFootStiffenerSimple::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6533)
inline double IRJointFootStiffenerSimple::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6534)
inline void IRJointFootStiffenerSimple::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6535)
inline double IRJointFootStiffenerSimple::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6536)
inline void IRJointFootStiffenerSimple::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6537)
inline enum IRJointFootStiffType IRJointFootStiffenerSimple::GetType ( ) {
    enum IRJointFootStiffType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6538)
inline void IRJointFootStiffenerSimple::PutType ( enum IRJointFootStiffType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6539)
inline double IRJointFootStiffenerSimple::GetCutHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_CutHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6540)
inline void IRJointFootStiffenerSimple::PutCutHorizontal ( double ret ) {
    HRESULT _hr = put_CutHorizontal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6541)
inline double IRJointFootStiffenerSimple::GetCutVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_CutVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6542)
inline void IRJointFootStiffenerSimple::PutCutVertical ( double ret ) {
    HRESULT _hr = put_CutVertical(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointFootStiffenerTrapezoid wrapper method implementations
//

#pragma implementation_key(6543)
inline double IRJointFootStiffenerTrapezoid::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6544)
inline void IRJointFootStiffenerTrapezoid::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6545)
inline double IRJointFootStiffenerTrapezoid::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6546)
inline void IRJointFootStiffenerTrapezoid::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6547)
inline double IRJointFootStiffenerTrapezoid::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6548)
inline void IRJointFootStiffenerTrapezoid::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6549)
inline double IRJointFootStiffenerTrapezoid::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6550)
inline void IRJointFootStiffenerTrapezoid::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6551)
inline enum IRJointFootStiffType IRJointFootStiffenerTrapezoid::GetType ( ) {
    enum IRJointFootStiffType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6552)
inline void IRJointFootStiffenerTrapezoid::PutType ( enum IRJointFootStiffType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6553)
inline double IRJointFootStiffenerTrapezoid::GetCutHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_CutHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6554)
inline void IRJointFootStiffenerTrapezoid::PutCutHorizontal ( double ret ) {
    HRESULT _hr = put_CutHorizontal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6555)
inline double IRJointFootStiffenerTrapezoid::GetCutVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_CutVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6556)
inline void IRJointFootStiffenerTrapezoid::PutCutVertical ( double ret ) {
    HRESULT _hr = put_CutVertical(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointPinnedColumnBase wrapper method implementations
//

#pragma implementation_key(6557)
inline enum IRJointPinnedColumnBaseStiffType IRJointPinnedColumnBase::GetStiffType ( ) {
    enum IRJointPinnedColumnBaseStiffType _result;
    HRESULT _hr = get_StiffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6558)
inline void IRJointPinnedColumnBase::PutStiffType ( enum IRJointPinnedColumnBaseStiffType ret ) {
    HRESULT _hr = put_StiffType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6559)
inline IRJointProfilePtr IRJointPinnedColumnBase::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6560)
inline IRJointFootBoltsPtr IRJointPinnedColumnBase::GetBolts ( ) {
    struct IRJointFootBolts * _result = 0;
    HRESULT _hr = get_Bolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootBoltsPtr(_result, false);
}

#pragma implementation_key(6561)
inline IRJointAnchorPtr IRJointPinnedColumnBase::GetAnchor ( ) {
    struct IRJointAnchor * _result = 0;
    HRESULT _hr = get_Anchor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointAnchorPtr(_result, false);
}

#pragma implementation_key(6562)
inline IRJointFootPlatePtr IRJointPinnedColumnBase::GetFootPlate ( ) {
    struct IRJointFootPlate * _result = 0;
    HRESULT _hr = get_FootPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootPlatePtr(_result, false);
}

#pragma implementation_key(6563)
inline IRJointWedgePtr IRJointPinnedColumnBase::GetWedge ( ) {
    struct IRJointWedge * _result = 0;
    HRESULT _hr = get_Wedge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWedgePtr(_result, false);
}

#pragma implementation_key(6564)
inline IRJointPlatePtr IRJointPinnedColumnBase::GetBase ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_Base(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6565)
inline IRJointPlatePtr IRJointPinnedColumnBase::GetWasher ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_Washer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6566)
inline IRJointPlatePtr IRJointPinnedColumnBase::GetBearing ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_Bearing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6567)
inline IRJointBearingPlatePtr IRJointPinnedColumnBase::GetBearingPlate ( ) {
    struct IRJointBearingPlate * _result = 0;
    HRESULT _hr = get_BearingPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBearingPlatePtr(_result, false);
}

#pragma implementation_key(6568)
inline IRJointFootWeldsPtr IRJointPinnedColumnBase::GetWelds ( ) {
    struct IRJointFootWelds * _result = 0;
    HRESULT _hr = get_Welds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootWeldsPtr(_result, false);
}

#pragma implementation_key(6569)
inline IRJointFootStiffenerHorizPtr IRJointPinnedColumnBase::GetStiffHoriz ( ) {
    struct IRJointFootStiffenerHoriz * _result = 0;
    HRESULT _hr = get_StiffHoriz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootStiffenerHorizPtr(_result, false);
}

#pragma implementation_key(6570)
inline IRJointFootStiffenerVertPtr IRJointPinnedColumnBase::GetStiffVert ( ) {
    struct IRJointFootStiffenerVert * _result = 0;
    HRESULT _hr = get_StiffVert(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootStiffenerVertPtr(_result, false);
}

#pragma implementation_key(6571)
inline IRJointFootMaterialsPtr IRJointPinnedColumnBase::GetMaterials ( ) {
    struct IRJointFootMaterials * _result = 0;
    HRESULT _hr = get_Materials(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootMaterialsPtr(_result, false);
}

#pragma implementation_key(6572)
inline IRJointColumnSquarePtr IRJointPinnedColumnBase::GetSquare ( ) {
    struct IRJointColumnSquare * _result = 0;
    HRESULT _hr = get_Square(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointColumnSquarePtr(_result, false);
}

#pragma implementation_key(6573)
inline IRobotMaterialDataPtr IRJointPinnedColumnBase::GetBasePlateMaterial ( ) {
    struct IRobotMaterialData * _result = 0;
    HRESULT _hr = get_BasePlateMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMaterialDataPtr(_result, false);
}

#pragma implementation_key(6574)
inline long IRJointPinnedColumnBase::GetNodeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6575)
inline void IRJointPinnedColumnBase::PutNodeNumber ( long ret ) {
    HRESULT _hr = put_NodeNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6576)
inline long IRJointPinnedColumnBase::GetMilledEnd ( ) {
    long _result = 0;
    HRESULT _hr = get_MilledEnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6577)
inline void IRJointPinnedColumnBase::PutMilledEnd ( long ret ) {
    HRESULT _hr = put_MilledEnd(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6578)
inline _bstr_t IRJointPinnedColumnBase::GetMaterialName ( enum IRJointColumnBElementType Type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetMaterialName(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6579)
inline HRESULT IRJointPinnedColumnBase::SetMaterialName ( enum IRJointColumnBElementType Type, _bstr_t input ) {
    HRESULT _hr = raw_SetMaterialName(Type, input);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6580)
inline IRJointColumnBFoundationPtr IRJointPinnedColumnBase::GetFoundation ( ) {
    struct IRJointColumnBFoundation * _result = 0;
    HRESULT _hr = get_Foundation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointColumnBFoundationPtr(_result, false);
}

#pragma implementation_key(6581)
inline long IRJointPinnedColumnBase::GetIsSwayFrame ( ) {
    long _result = 0;
    HRESULT _hr = get_IsSwayFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6582)
inline void IRJointPinnedColumnBase::PutIsSwayFrame ( long ret ) {
    HRESULT _hr = put_IsSwayFrame(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6583)
inline double IRJointPinnedColumnBase::GetColumnLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6584)
inline void IRJointPinnedColumnBase::PutColumnLength ( double ret ) {
    HRESULT _hr = put_ColumnLength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6585)
inline double IRJointPinnedColumnBase::GetBetaCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_BetaCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6586)
inline void IRJointPinnedColumnBase::PutBetaCoeff ( double ret ) {
    HRESULT _hr = put_BetaCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6587)
inline IRJointFootStiffenerSimplePtr IRJointPinnedColumnBase::GetSimpleStiff ( ) {
    struct IRJointFootStiffenerSimple * _result = 0;
    HRESULT _hr = get_SimpleStiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootStiffenerSimplePtr(_result, false);
}

#pragma implementation_key(6588)
inline IRJointFootStiffenerTrapezoidPtr IRJointPinnedColumnBase::GetTrapezoidStiff ( ) {
    struct IRJointFootStiffenerTrapezoid * _result = 0;
    HRESULT _hr = get_TrapezoidStiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootStiffenerTrapezoidPtr(_result, false);
}

#pragma implementation_key(6589)
inline IRobotNamesArrayPtr IRJointPinnedColumnBase::BoltsDimensionNamesVector ( long from_anchors_base ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = raw_BoltsDimensionNamesVector(from_anchors_base, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(6590)
inline IRobotNamesArrayPtr IRJointPinnedColumnBase::BoltsClassVector ( long from_anchors_base ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = raw_BoltsClassVector(from_anchors_base, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(6591)
inline IRobotValuesArrayPtr IRJointPinnedColumnBase::BoltsDimensionsVector ( long from_anchors_base ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = raw_BoltsDimensionsVector(from_anchors_base, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6592)
inline HRESULT IRJointPinnedColumnBase::TurnedOnVerificationCEBFailure ( enum IRJointColumnBaseCEBFailureType Type, VARIANT_BOOL input ) {
    HRESULT _hr = raw_TurnedOnVerificationCEBFailure(Type, input);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6593)
inline VARIANT_BOOL IRJointPinnedColumnBase::IsTurnedOnVerificationCEBFailure ( enum IRJointColumnBaseCEBFailureType Type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsTurnedOnVerificationCEBFailure(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRJointPinnedLoad wrapper method implementations
//

#pragma implementation_key(6594)
inline double IRJointPinnedLoad::GetNt ( ) {
    double _result = 0;
    HRESULT _hr = get_Nt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6595)
inline void IRJointPinnedLoad::PutNt ( double ret ) {
    HRESULT _hr = put_Nt(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6596)
inline double IRJointPinnedLoad::GetNc ( ) {
    double _result = 0;
    HRESULT _hr = get_Nc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6597)
inline void IRJointPinnedLoad::PutNc ( double ret ) {
    HRESULT _hr = put_Nc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6598)
inline double IRJointPinnedLoad::GetTZ ( ) {
    double _result = 0;
    HRESULT _hr = get_TZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6599)
inline void IRJointPinnedLoad::PutTZ ( double ret ) {
    HRESULT _hr = put_TZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6600)
inline double IRJointPinnedLoad::GetNTz ( ) {
    double _result = 0;
    HRESULT _hr = get_NTz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6601)
inline void IRJointPinnedLoad::PutNTz ( double ret ) {
    HRESULT _hr = put_NTz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6602)
inline double IRJointPinnedLoad::GetTY ( ) {
    double _result = 0;
    HRESULT _hr = get_TY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6603)
inline void IRJointPinnedLoad::PutTY ( double ret ) {
    HRESULT _hr = put_TY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6604)
inline double IRJointPinnedLoad::GetNTy ( ) {
    double _result = 0;
    HRESULT _hr = get_NTy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6605)
inline void IRJointPinnedLoad::PutNTy ( double ret ) {
    HRESULT _hr = put_NTy(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointFootStiffenerComplex wrapper method implementations
//

#pragma implementation_key(6606)
inline double IRJointFootStiffenerComplex::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6607)
inline void IRJointFootStiffenerComplex::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6608)
inline double IRJointFootStiffenerComplex::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6609)
inline void IRJointFootStiffenerComplex::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6610)
inline double IRJointFootStiffenerComplex::GetThickPlateHor ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickPlateHor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6611)
inline void IRJointFootStiffenerComplex::PutThickPlateHor ( double ret ) {
    HRESULT _hr = put_ThickPlateHor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6612)
inline double IRJointFootStiffenerComplex::GetThickStiff ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickStiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6613)
inline void IRJointFootStiffenerComplex::PutThickStiff ( double ret ) {
    HRESULT _hr = put_ThickStiff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointFixedFootWelds wrapper method implementations
//

#pragma implementation_key(6614)
inline IRJointWeldPtr IRJointFixedFootWelds::GetFootPlate ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_FootPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6615)
inline IRJointWeldPtr IRJointFixedFootWelds::GetWedge ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_Wedge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6616)
inline IRJointWeldPtr IRJointFixedFootWelds::GetWasher ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_Washer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6617)
inline IRJointWeldPtr IRJointFixedFootWelds::GetStiff ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_Stiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

//
// interface IRJointFixedColumnBase wrapper method implementations
//

#pragma implementation_key(6618)
inline enum IRJointFixedColumnBaseStiffType IRJointFixedColumnBase::GetStiffType ( ) {
    enum IRJointFixedColumnBaseStiffType _result;
    HRESULT _hr = get_StiffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6619)
inline void IRJointFixedColumnBase::PutStiffType ( enum IRJointFixedColumnBaseStiffType ret ) {
    HRESULT _hr = put_StiffType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6620)
inline IRJointFootBoltsPtr IRJointFixedColumnBase::GetBolts ( ) {
    struct IRJointFootBolts * _result = 0;
    HRESULT _hr = get_Bolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootBoltsPtr(_result, false);
}

#pragma implementation_key(6621)
inline IRJointAnchorPtr IRJointFixedColumnBase::GetAnchor ( ) {
    struct IRJointAnchor * _result = 0;
    HRESULT _hr = get_Anchor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointAnchorPtr(_result, false);
}

#pragma implementation_key(6622)
inline IRJointFootPlatePtr IRJointFixedColumnBase::GetFootPlate ( ) {
    struct IRJointFootPlate * _result = 0;
    HRESULT _hr = get_FootPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootPlatePtr(_result, false);
}

#pragma implementation_key(6623)
inline IRJointWedgePtr IRJointFixedColumnBase::GetWedge ( ) {
    struct IRJointWedge * _result = 0;
    HRESULT _hr = get_Wedge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWedgePtr(_result, false);
}

#pragma implementation_key(6624)
inline IRJointPlatePtr IRJointFixedColumnBase::GetBase ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_Base(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6625)
inline IRJointPlatePtr IRJointFixedColumnBase::GetWasher ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_Washer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6626)
inline IRJointFixedFootWeldsPtr IRJointFixedColumnBase::GetWelds ( ) {
    struct IRJointFixedFootWelds * _result = 0;
    HRESULT _hr = get_Welds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFixedFootWeldsPtr(_result, false);
}

#pragma implementation_key(6627)
inline IRJointFootStiffenerSimplePtr IRJointFixedColumnBase::GetSimpleStiff ( ) {
    struct IRJointFootStiffenerSimple * _result = 0;
    HRESULT _hr = get_SimpleStiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootStiffenerSimplePtr(_result, false);
}

#pragma implementation_key(6628)
inline IRJointFootStiffenerComplexPtr IRJointFixedColumnBase::GetComplexStiff ( ) {
    struct IRJointFootStiffenerComplex * _result = 0;
    HRESULT _hr = get_ComplexStiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootStiffenerComplexPtr(_result, false);
}

#pragma implementation_key(6629)
inline IRJointProfilePtr IRJointFixedColumnBase::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6630)
inline IRJointFootMaterialsPtr IRJointFixedColumnBase::GetMaterials ( ) {
    struct IRJointFootMaterials * _result = 0;
    HRESULT _hr = get_Materials(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootMaterialsPtr(_result, false);
}

#pragma implementation_key(6631)
inline IRobotMaterialDataPtr IRJointFixedColumnBase::GetBasePlateMaterial ( ) {
    struct IRobotMaterialData * _result = 0;
    HRESULT _hr = get_BasePlateMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotMaterialDataPtr(_result, false);
}

#pragma implementation_key(6632)
inline long IRJointFixedColumnBase::GetNodeNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6633)
inline void IRJointFixedColumnBase::PutNodeNumber ( long ret ) {
    HRESULT _hr = put_NodeNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6634)
inline IRJointFootStiffenerTrapezoidPtr IRJointFixedColumnBase::GetTrapezoidStiff ( ) {
    struct IRJointFootStiffenerTrapezoid * _result = 0;
    HRESULT _hr = get_TrapezoidStiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointFootStiffenerTrapezoidPtr(_result, false);
}

#pragma implementation_key(6635)
inline IRJointPlatePtr IRJointFixedColumnBase::GetUpperPlate ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_UpperPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6636)
inline _bstr_t IRJointFixedColumnBase::GetMaterialName ( enum IRJointColumnBElementType Type ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetMaterialName(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6637)
inline HRESULT IRJointFixedColumnBase::SetMaterialName ( enum IRJointColumnBElementType Type, _bstr_t input ) {
    HRESULT _hr = raw_SetMaterialName(Type, input);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6638)
inline IRJointColumnBFoundationPtr IRJointFixedColumnBase::GetFoundation ( ) {
    struct IRJointColumnBFoundation * _result = 0;
    HRESULT _hr = get_Foundation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointColumnBFoundationPtr(_result, false);
}

#pragma implementation_key(6639)
inline long IRJointFixedColumnBase::GetIsSwayFrame ( ) {
    long _result = 0;
    HRESULT _hr = get_IsSwayFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6640)
inline void IRJointFixedColumnBase::PutIsSwayFrame ( long ret ) {
    HRESULT _hr = put_IsSwayFrame(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6641)
inline long IRJointFixedColumnBase::GetIsEndFrez ( ) {
    long _result = 0;
    HRESULT _hr = get_IsEndFrez(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6642)
inline void IRJointFixedColumnBase::PutIsEndFrez ( long ret ) {
    HRESULT _hr = put_IsEndFrez(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6643)
inline enum IRJointColumnBaseCalcModelType IRJointFixedColumnBase::GetColumnBaseCalcModel ( ) {
    enum IRJointColumnBaseCalcModelType _result;
    HRESULT _hr = get_ColumnBaseCalcModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6644)
inline void IRJointFixedColumnBase::PutColumnBaseCalcModel ( enum IRJointColumnBaseCalcModelType ret ) {
    HRESULT _hr = put_ColumnBaseCalcModel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6645)
inline double IRJointFixedColumnBase::GetColumnLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6646)
inline void IRJointFixedColumnBase::PutColumnLength ( double ret ) {
    HRESULT _hr = put_ColumnLength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6647)
inline double IRJointFixedColumnBase::GetBetaCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_BetaCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6648)
inline void IRJointFixedColumnBase::PutBetaCoeff ( double ret ) {
    HRESULT _hr = put_BetaCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6649)
inline IRobotNamesArrayPtr IRJointFixedColumnBase::BoltsDimensionNamesVector ( long from_anchors_base ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = raw_BoltsDimensionNamesVector(from_anchors_base, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(6650)
inline IRobotNamesArrayPtr IRJointFixedColumnBase::BoltsClassVector ( long from_anchors_base ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = raw_BoltsClassVector(from_anchors_base, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(6651)
inline IRobotValuesArrayPtr IRJointFixedColumnBase::BoltsDimensionsVector ( long from_anchors_base ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = raw_BoltsDimensionsVector(from_anchors_base, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6652)
inline HRESULT IRJointFixedColumnBase::TurnedOnVerificationCEBFailure ( enum IRJointColumnBaseCEBFailureType Type, VARIANT_BOOL input ) {
    HRESULT _hr = raw_TurnedOnVerificationCEBFailure(Type, input);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6653)
inline VARIANT_BOOL IRJointFixedColumnBase::IsTurnedOnVerificationCEBFailure ( enum IRJointColumnBaseCEBFailureType Type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsTurnedOnVerificationCEBFailure(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRJointFixedLoad wrapper method implementations
//

#pragma implementation_key(6654)
inline double IRJointFixedLoad::GetFX ( ) {
    double _result = 0;
    HRESULT _hr = get_FX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6655)
inline void IRJointFixedLoad::PutFX ( double ret ) {
    HRESULT _hr = put_FX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6656)
inline double IRJointFixedLoad::GetFY ( ) {
    double _result = 0;
    HRESULT _hr = get_FY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6657)
inline void IRJointFixedLoad::PutFY ( double ret ) {
    HRESULT _hr = put_FY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6658)
inline double IRJointFixedLoad::GetFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6659)
inline void IRJointFixedLoad::PutFZ ( double ret ) {
    HRESULT _hr = put_FZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6660)
inline double IRJointFixedLoad::GetMY ( ) {
    double _result = 0;
    HRESULT _hr = get_MY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6661)
inline void IRJointFixedLoad::PutMY ( double ret ) {
    HRESULT _hr = put_MY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6662)
inline double IRJointFixedLoad::GetMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6663)
inline void IRJointFixedLoad::PutMZ ( double ret ) {
    HRESULT _hr = put_MZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointConcreteMaterials wrapper method implementations
//

#pragma implementation_key(6664)
inline double IRJointConcreteMaterials::GetSigma ( ) {
    double _result = 0;
    HRESULT _hr = get_Sigma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6665)
inline void IRJointConcreteMaterials::PutSigma ( double ret ) {
    HRESULT _hr = put_Sigma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6666)
inline double IRJointConcreteMaterials::GetDosage ( ) {
    double _result = 0;
    HRESULT _hr = get_Dosage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6667)
inline void IRJointConcreteMaterials::PutDosage ( double ret ) {
    HRESULT _hr = put_Dosage(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6668)
inline double IRJointConcreteMaterials::GetCoeffBA ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffBA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6669)
inline void IRJointConcreteMaterials::PutCoeffBA ( double ret ) {
    HRESULT _hr = put_CoeffBA(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6670)
inline _bstr_t IRJointConcreteMaterials::GetConcrName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ConcrName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6671)
inline void IRJointConcreteMaterials::PutConcrName ( _bstr_t ret ) {
    HRESULT _hr = put_ConcrName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointConcreteColumnFoundation wrapper method implementations
//

#pragma implementation_key(6672)
inline double IRJointConcreteColumnFoundation::Getpar_a1 ( ) {
    double _result = 0;
    HRESULT _hr = get_par_a1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6673)
inline void IRJointConcreteColumnFoundation::Putpar_a1 ( double ret ) {
    HRESULT _hr = put_par_a1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6674)
inline double IRJointConcreteColumnFoundation::Getpar_l ( ) {
    double _result = 0;
    HRESULT _hr = get_par_l(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6675)
inline void IRJointConcreteColumnFoundation::Putpar_l ( double ret ) {
    HRESULT _hr = put_par_l(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6676)
inline double IRJointConcreteColumnFoundation::Getpar_l1 ( ) {
    double _result = 0;
    HRESULT _hr = get_par_l1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6677)
inline void IRJointConcreteColumnFoundation::Putpar_l1 ( double ret ) {
    HRESULT _hr = put_par_l1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6678)
inline double IRJointConcreteColumnFoundation::Getpar_l2 ( ) {
    double _result = 0;
    HRESULT _hr = get_par_l2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6679)
inline void IRJointConcreteColumnFoundation::Putpar_l2 ( double ret ) {
    HRESULT _hr = put_par_l2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6680)
inline double IRJointConcreteColumnFoundation::Getpar_b ( ) {
    double _result = 0;
    HRESULT _hr = get_par_b(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6681)
inline void IRJointConcreteColumnFoundation::Putpar_b ( double ret ) {
    HRESULT _hr = put_par_b(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6682)
inline double IRJointConcreteColumnFoundation::Getpar_b1 ( ) {
    double _result = 0;
    HRESULT _hr = get_par_b1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6683)
inline void IRJointConcreteColumnFoundation::Putpar_b1 ( double ret ) {
    HRESULT _hr = put_par_b1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6684)
inline double IRJointConcreteColumnFoundation::Getpar_b2 ( ) {
    double _result = 0;
    HRESULT _hr = get_par_b2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6685)
inline void IRJointConcreteColumnFoundation::Putpar_b2 ( double ret ) {
    HRESULT _hr = put_par_b2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6686)
inline double IRJointConcreteColumnFoundation::Getpar_h ( ) {
    double _result = 0;
    HRESULT _hr = get_par_h(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6687)
inline void IRJointConcreteColumnFoundation::Putpar_h ( double ret ) {
    HRESULT _hr = put_par_h(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6688)
inline double IRJointConcreteColumnFoundation::Getpar_h1 ( ) {
    double _result = 0;
    HRESULT _hr = get_par_h1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6689)
inline void IRJointConcreteColumnFoundation::Putpar_h1 ( double ret ) {
    HRESULT _hr = put_par_h1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6690)
inline double IRJointConcreteColumnFoundation::Getpar_h2 ( ) {
    double _result = 0;
    HRESULT _hr = get_par_h2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6691)
inline void IRJointConcreteColumnFoundation::Putpar_h2 ( double ret ) {
    HRESULT _hr = put_par_h2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6692)
inline double IRJointConcreteColumnFoundation::Getpar_o1 ( ) {
    double _result = 0;
    HRESULT _hr = get_par_o1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6693)
inline void IRJointConcreteColumnFoundation::Putpar_o1 ( double ret ) {
    HRESULT _hr = put_par_o1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6694)
inline double IRJointConcreteColumnFoundation::Getpar_o2 ( ) {
    double _result = 0;
    HRESULT _hr = get_par_o2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6695)
inline void IRJointConcreteColumnFoundation::Putpar_o2 ( double ret ) {
    HRESULT _hr = put_par_o2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointConcreteColumn wrapper method implementations
//

#pragma implementation_key(6696)
inline IRJointProfilePtr IRJointConcreteColumn::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6697)
inline double IRJointConcreteColumn::GetDepth ( ) {
    double _result = 0;
    HRESULT _hr = get_Depth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6698)
inline void IRJointConcreteColumn::PutDepth ( double ret ) {
    HRESULT _hr = put_Depth(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6699)
inline IRJointConcreteMaterialsPtr IRJointConcreteColumn::GetMaterials ( ) {
    struct IRJointConcreteMaterials * _result = 0;
    HRESULT _hr = get_Materials(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointConcreteMaterialsPtr(_result, false);
}

#pragma implementation_key(6700)
inline IRJointPlatePtr IRJointConcreteColumn::GetBase ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_Base(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6701)
inline IRJointConcreteColumnFoundationPtr IRJointConcreteColumn::GetFoundation ( ) {
    struct IRJointConcreteColumnFoundation * _result = 0;
    HRESULT _hr = get_Foundation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointConcreteColumnFoundationPtr(_result, false);
}

#pragma implementation_key(6702)
inline enum IRJointColumnBasePlateCalcModel IRJointConcreteColumn::GetCalcModel ( ) {
    enum IRJointColumnBasePlateCalcModel _result;
    HRESULT _hr = get_CalcModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6703)
inline void IRJointConcreteColumn::PutCalcModel ( enum IRJointColumnBasePlateCalcModel ret ) {
    HRESULT _hr = put_CalcModel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6704)
inline enum IRJointSpreadFootingType IRJointConcreteColumn::GetSpreadFootingType ( ) {
    enum IRJointSpreadFootingType _result;
    HRESULT _hr = get_SpreadFootingType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6705)
inline void IRJointConcreteColumn::PutSpreadFootingType ( enum IRJointSpreadFootingType ret ) {
    HRESULT _hr = put_SpreadFootingType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6706)
inline _bstr_t IRJointConcreteColumn::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6707)
inline void IRJointConcreteColumn::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointConcreteColumnLoad wrapper method implementations
//

#pragma implementation_key(6708)
inline double IRJointConcreteColumnLoad::GetFX ( ) {
    double _result = 0;
    HRESULT _hr = get_FX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6709)
inline void IRJointConcreteColumnLoad::PutFX ( double ret ) {
    HRESULT _hr = put_FX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6710)
inline double IRJointConcreteColumnLoad::GetFY ( ) {
    double _result = 0;
    HRESULT _hr = get_FY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6711)
inline void IRJointConcreteColumnLoad::PutFY ( double ret ) {
    HRESULT _hr = put_FY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6712)
inline double IRJointConcreteColumnLoad::GetFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6713)
inline void IRJointConcreteColumnLoad::PutFZ ( double ret ) {
    HRESULT _hr = put_FZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6714)
inline double IRJointConcreteColumnLoad::GetMY ( ) {
    double _result = 0;
    HRESULT _hr = get_MY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6715)
inline void IRJointConcreteColumnLoad::PutMY ( double ret ) {
    HRESULT _hr = put_MY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6716)
inline double IRJointConcreteColumnLoad::GetMZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6717)
inline void IRJointConcreteColumnLoad::PutMZ ( double ret ) {
    HRESULT _hr = put_MZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6718)
inline double IRJointConcreteColumnLoad::GetFxAssemb ( ) {
    double _result = 0;
    HRESULT _hr = get_FxAssemb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6719)
inline void IRJointConcreteColumnLoad::PutFxAssemb ( double ret ) {
    HRESULT _hr = put_FxAssemb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointAngleBolts wrapper method implementations
//

#pragma implementation_key(6720)
inline long IRJointAngleBolts::GetDiameter ( ) {
    long _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6721)
inline _bstr_t IRJointAngleBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6722)
inline void IRJointAngleBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6723)
inline _bstr_t IRJointAngleBolts::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6724)
inline void IRJointAngleBolts::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6725)
inline double IRJointAngleBolts::GetFriction ( ) {
    double _result = 0;
    HRESULT _hr = get_Friction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6726)
inline void IRJointAngleBolts::PutFriction ( double ret ) {
    HRESULT _hr = put_Friction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6727)
inline double IRJointAngleBolts::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6728)
inline long IRJointAngleBolts::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6729)
inline void IRJointAngleBolts::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6730)
inline double IRJointAngleBolts::GetDistFromUpperEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromUpperEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6731)
inline void IRJointAngleBolts::PutDistFromUpperEdge ( double ret ) {
    HRESULT _hr = put_DistFromUpperEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6732)
inline double IRJointAngleBolts::GetDistFromWeb ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromWeb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6733)
inline void IRJointAngleBolts::PutDistFromWeb ( double ret ) {
    HRESULT _hr = put_DistFromWeb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6734)
inline double IRJointAngleBolts::GetSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_Spacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6735)
inline void IRJointAngleBolts::PutSpacing ( double ret ) {
    HRESULT _hr = put_Spacing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6736)
inline enum IRJointBoltShearPortion IRJointAngleBolts::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6737)
inline void IRJointAngleBolts::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointAngle wrapper method implementations
//

#pragma implementation_key(6738)
inline enum IRJointAngleType IRJointAngle::GetType ( ) {
    enum IRJointAngleType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6739)
inline void IRJointAngle::PutType ( enum IRJointAngleType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6740)
inline IRJointProfilePtr IRJointAngle::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6741)
inline double IRJointAngle::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6742)
inline void IRJointAngle::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6743)
inline double IRJointAngle::GetDistFromUpperBeamEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromUpperBeamEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6744)
inline void IRJointAngle::PutDistFromUpperBeamEdge ( double ret ) {
    HRESULT _hr = put_DistFromUpperBeamEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6745)
inline enum IRJointAngleProfilePosition IRJointAngle::GetProfilePosition ( ) {
    enum IRJointAngleProfilePosition _result;
    HRESULT _hr = get_ProfilePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6746)
inline void IRJointAngle::PutProfilePosition ( enum IRJointAngleProfilePosition ret ) {
    HRESULT _hr = put_ProfilePosition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamCut wrapper method implementations
//

#pragma implementation_key(6747)
inline double IRJointBeamCut::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6748)
inline void IRJointBeamCut::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6749)
inline double IRJointBeamCut::GetHeightUpper ( ) {
    double _result = 0;
    HRESULT _hr = get_HeightUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6750)
inline void IRJointBeamCut::PutHeightUpper ( double ret ) {
    HRESULT _hr = put_HeightUpper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6751)
inline double IRJointBeamCut::GetHeightLower ( ) {
    double _result = 0;
    HRESULT _hr = get_HeightLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6752)
inline void IRJointBeamCut::PutHeightLower ( double ret ) {
    HRESULT _hr = put_HeightLower(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointWithAngles wrapper method implementations
//

#pragma implementation_key(6753)
inline IRJointAngleBoltsPtr IRJointWithAngles::GetBeamBolts ( ) {
    struct IRJointAngleBolts * _result = 0;
    HRESULT _hr = get_BeamBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointAngleBoltsPtr(_result, false);
}

#pragma implementation_key(6754)
inline IRJointAngleBoltsPtr IRJointWithAngles::GetColumnBolts ( ) {
    struct IRJointAngleBolts * _result = 0;
    HRESULT _hr = get_ColumnBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointAngleBoltsPtr(_result, false);
}

#pragma implementation_key(6755)
inline double IRJointWithAngles::GetDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_Distance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6756)
inline void IRJointWithAngles::PutDistance ( double ret ) {
    HRESULT _hr = put_Distance(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6757)
inline IRJointBeamCutPtr IRJointWithAngles::GetBeamCut ( ) {
    struct IRJointBeamCut * _result = 0;
    HRESULT _hr = get_BeamCut(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamCutPtr(_result, false);
}

#pragma implementation_key(6758)
inline IRJointAnglePtr IRJointWithAngles::GetAngle ( ) {
    struct IRJointAngle * _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointAnglePtr(_result, false);
}

#pragma implementation_key(6759)
inline IRJointProfilePtr IRJointWithAngles::GetBeamProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_BeamProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6760)
inline IRJointProfilePtr IRJointWithAngles::GetColumnProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_ColumnProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6761)
inline VARIANT_BOOL IRJointWithAngles::GetIsShearPortionAllBolts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6762)
inline void IRJointWithAngles::PutIsShearPortionAllBolts ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6763)
inline enum IRJointBoltShearPortion IRJointWithAngles::GetShearPortionAllBolts ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6764)
inline void IRJointWithAngles::PutShearPortionAllBolts ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointAngleLoad wrapper method implementations
//

#pragma implementation_key(6765)
inline double IRJointAngleLoad::GetFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6766)
inline void IRJointAngleLoad::PutFZ ( double ret ) {
    HRESULT _hr = put_FZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTubeFlangeProfile wrapper method implementations
//

#pragma implementation_key(6767)
inline _bstr_t IRJointTubeFlangeProfile::GetSection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6768)
inline void IRJointTubeFlangeProfile::PutSection ( _bstr_t ret ) {
    HRESULT _hr = put_Section(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6769)
inline double IRJointTubeFlangeProfile::GetExcentr ( ) {
    double _result = 0;
    HRESULT _hr = get_Excentr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6770)
inline void IRJointTubeFlangeProfile::PutExcentr ( double ret ) {
    HRESULT _hr = put_Excentr(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6771)
inline _bstr_t IRJointTubeFlangeProfile::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6772)
inline void IRJointTubeFlangeProfile::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6773)
inline long IRJointTubeFlangeProfile::GetBarNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_BarNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6774)
inline void IRJointTubeFlangeProfile::PutBarNumber ( long ret ) {
    HRESULT _hr = put_BarNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6775)
inline VARIANT_BOOL IRJointTubeFlangeProfile::GetExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6776)
inline IRJointProfilePtr IRJointTubeFlangeProfile::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6777)
inline double IRJointTubeFlangeProfile::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6778)
inline void IRJointTubeFlangeProfile::PutGamma ( double ret ) {
    HRESULT _hr = put_Gamma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6779)
inline double IRJointTubeFlangeProfile::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6780)
inline void IRJointTubeFlangeProfile::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTubeDiagProfile wrapper method implementations
//

#pragma implementation_key(6781)
inline _bstr_t IRJointTubeDiagProfile::GetSection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6782)
inline void IRJointTubeDiagProfile::PutSection ( _bstr_t ret ) {
    HRESULT _hr = put_Section(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6783)
inline double IRJointTubeDiagProfile::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6784)
inline void IRJointTubeDiagProfile::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6785)
inline double IRJointTubeDiagProfile::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6786)
inline void IRJointTubeDiagProfile::PutAngle ( double ret ) {
    HRESULT _hr = put_Angle(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6787)
inline double IRJointTubeDiagProfile::GetGap ( ) {
    double _result = 0;
    HRESULT _hr = get_Gap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6788)
inline void IRJointTubeDiagProfile::PutGap ( double ret ) {
    HRESULT _hr = put_Gap(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6789)
inline double IRJointTubeDiagProfile::GetOverlap ( ) {
    double _result = 0;
    HRESULT _hr = get_Overlap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6790)
inline void IRJointTubeDiagProfile::PutOverlap ( double ret ) {
    HRESULT _hr = put_Overlap(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6791)
inline _bstr_t IRJointTubeDiagProfile::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6792)
inline void IRJointTubeDiagProfile::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6793)
inline long IRJointTubeDiagProfile::GetBarNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_BarNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6794)
inline void IRJointTubeDiagProfile::PutBarNumber ( long ret ) {
    HRESULT _hr = put_BarNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6795)
inline VARIANT_BOOL IRJointTubeDiagProfile::GetExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6796)
inline IRJointProfilePtr IRJointTubeDiagProfile::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6797)
inline double IRJointTubeDiagProfile::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6798)
inline void IRJointTubeDiagProfile::PutGamma ( double ret ) {
    HRESULT _hr = put_Gamma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTubePostProfile wrapper method implementations
//

#pragma implementation_key(6799)
inline _bstr_t IRJointTubePostProfile::GetSection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6800)
inline void IRJointTubePostProfile::PutSection ( _bstr_t ret ) {
    HRESULT _hr = put_Section(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6801)
inline double IRJointTubePostProfile::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6802)
inline void IRJointTubePostProfile::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6803)
inline _bstr_t IRJointTubePostProfile::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6804)
inline void IRJointTubePostProfile::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6805)
inline VARIANT_BOOL IRJointTubePostProfile::GetExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6806)
inline long IRJointTubePostProfile::GetBarNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_BarNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6807)
inline void IRJointTubePostProfile::PutBarNumber ( long ret ) {
    HRESULT _hr = put_BarNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6808)
inline IRJointProfilePtr IRJointTubePostProfile::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6809)
inline double IRJointTubePostProfile::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6810)
inline void IRJointTubePostProfile::PutGamma ( double ret ) {
    HRESULT _hr = put_Gamma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTube wrapper method implementations
//

#pragma implementation_key(6811)
inline enum IRJointTubeType IRJointTube::GetTubeType ( ) {
    enum IRJointTubeType _result;
    HRESULT _hr = get_TubeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6812)
inline void IRJointTube::PutTubeType ( enum IRJointTubeType ret ) {
    HRESULT _hr = put_TubeType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6813)
inline IRJointTubeFlangeProfilePtr IRJointTube::GetFlange ( ) {
    struct IRJointTubeFlangeProfile * _result = 0;
    HRESULT _hr = get_Flange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTubeFlangeProfilePtr(_result, false);
}

#pragma implementation_key(6814)
inline _bstr_t IRJointTube::GetStiffMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StiffMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6815)
inline void IRJointTube::PutStiffMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_StiffMaterial(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6816)
inline IRJointTubeDiagProfilePtr IRJointTube::GetDiagLeftUpper ( ) {
    struct IRJointTubeDiagProfile * _result = 0;
    HRESULT _hr = get_DiagLeftUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTubeDiagProfilePtr(_result, false);
}

#pragma implementation_key(6817)
inline IRJointTubeDiagProfilePtr IRJointTube::GetDiagRightUpper ( ) {
    struct IRJointTubeDiagProfile * _result = 0;
    HRESULT _hr = get_DiagRightUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTubeDiagProfilePtr(_result, false);
}

#pragma implementation_key(6818)
inline IRJointTubeDiagProfilePtr IRJointTube::GetDiagLeftLower ( ) {
    struct IRJointTubeDiagProfile * _result = 0;
    HRESULT _hr = get_DiagLeftLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTubeDiagProfilePtr(_result, false);
}

#pragma implementation_key(6819)
inline IRJointTubePostProfilePtr IRJointTube::GetPostUpper ( ) {
    struct IRJointTubePostProfile * _result = 0;
    HRESULT _hr = get_PostUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTubePostProfilePtr(_result, false);
}

#pragma implementation_key(6820)
inline IRJointPlatePtr IRJointTube::GetStiffHoriz ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_StiffHoriz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6821)
inline IRJointPlatePtr IRJointTube::GetStiffLateral ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_StiffLateral(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6822)
inline IRJointWeldPtr IRJointTube::GetWeldDiag ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldDiag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6823)
inline IRJointWeldPtr IRJointTube::GetWeldStiff ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldStiff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6824)
inline _bstr_t IRJointTube::GetStiffHBracketMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StiffHBracketMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6825)
inline void IRJointTube::PutStiffHBracketMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_StiffHBracketMaterial(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6826)
inline IRJointPlatePtr IRJointTube::GetTransversePlate ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_TransversePlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6827)
inline _bstr_t IRJointTube::GetTransversePlateMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TransversePlateMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6828)
inline void IRJointTube::PutTransversePlateMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_TransversePlateMaterial(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6829)
inline VARIANT_BOOL IRJointTube::GetIsStiffWebChordDiagLeft ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsStiffWebChordDiagLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6830)
inline void IRJointTube::PutIsStiffWebChordDiagLeft ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsStiffWebChordDiagLeft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6831)
inline VARIANT_BOOL IRJointTube::GetIsStiffWebChordDiagRight ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsStiffWebChordDiagRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6832)
inline void IRJointTube::PutIsStiffWebChordDiagRight ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsStiffWebChordDiagRight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6833)
inline VARIANT_BOOL IRJointTube::GetIsStiffWebChordPost ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsStiffWebChordPost(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6834)
inline void IRJointTube::PutIsStiffWebChordPost ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsStiffWebChordPost(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6835)
inline double IRJointTube::GetThickStiffWebChord ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickStiffWebChord(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6836)
inline void IRJointTube::PutThickStiffWebChord ( double ret ) {
    HRESULT _hr = put_ThickStiffWebChord(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6837)
inline IRJointWeldPtr IRJointTube::GetWeldStiffWebChord ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldStiffWebChord(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6838)
inline VARIANT_BOOL IRJointTube::GetIsEccentricityTake ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsEccentricityTake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6839)
inline void IRJointTube::PutIsEccentricityTake ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsEccentricityTake(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6840)
inline IRJointPlatePtr IRJointTube::GetTransversePlateLeft ( ) {
    struct IRJointPlate * _result = 0;
    HRESULT _hr = get_TransversePlateLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointPlatePtr(_result, false);
}

#pragma implementation_key(6841)
inline _bstr_t IRJointTube::GetTransversePlateLeftMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TransversePlateLeftMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6842)
inline void IRJointTube::PutTransversePlateLeftMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_TransversePlateLeftMaterial(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6843)
inline IRJointWeldPtr IRJointTube::GetWeldTransPlateLeft ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldTransPlateLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(6844)
inline IRJointWeldPtr IRJointTube::GetWeldTransPlate ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldTransPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

//
// interface IRJointTubeLoad wrapper method implementations
//

#pragma implementation_key(6845)
inline double IRJointTubeLoad::GetFlangeN ( ) {
    double _result = 0;
    HRESULT _hr = get_FlangeN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6846)
inline void IRJointTubeLoad::PutFlangeN ( double ret ) {
    HRESULT _hr = put_FlangeN(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6847)
inline double IRJointTubeLoad::GetFlangeQ ( ) {
    double _result = 0;
    HRESULT _hr = get_FlangeQ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6848)
inline void IRJointTubeLoad::PutFlangeQ ( double ret ) {
    HRESULT _hr = put_FlangeQ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6849)
inline double IRJointTubeLoad::GetFlangeM ( ) {
    double _result = 0;
    HRESULT _hr = get_FlangeM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6850)
inline void IRJointTubeLoad::PutFlangeM ( double ret ) {
    HRESULT _hr = put_FlangeM(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6851)
inline double IRJointTubeLoad::GetDiagLeftUpperN ( ) {
    double _result = 0;
    HRESULT _hr = get_DiagLeftUpperN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6852)
inline void IRJointTubeLoad::PutDiagLeftUpperN ( double ret ) {
    HRESULT _hr = put_DiagLeftUpperN(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6853)
inline double IRJointTubeLoad::GetDiagLeftUpperM ( ) {
    double _result = 0;
    HRESULT _hr = get_DiagLeftUpperM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6854)
inline void IRJointTubeLoad::PutDiagLeftUpperM ( double ret ) {
    HRESULT _hr = put_DiagLeftUpperM(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6855)
inline double IRJointTubeLoad::GetDiagRightUpperN ( ) {
    double _result = 0;
    HRESULT _hr = get_DiagRightUpperN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6856)
inline void IRJointTubeLoad::PutDiagRightUpperN ( double ret ) {
    HRESULT _hr = put_DiagRightUpperN(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6857)
inline double IRJointTubeLoad::GetDiagRightUpperM ( ) {
    double _result = 0;
    HRESULT _hr = get_DiagRightUpperM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6858)
inline void IRJointTubeLoad::PutDiagRightUpperM ( double ret ) {
    HRESULT _hr = put_DiagRightUpperM(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6859)
inline double IRJointTubeLoad::GetPostUpperN ( ) {
    double _result = 0;
    HRESULT _hr = get_PostUpperN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6860)
inline void IRJointTubeLoad::PutPostUpperN ( double ret ) {
    HRESULT _hr = put_PostUpperN(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6861)
inline double IRJointTubeLoad::GetPostUpperM ( ) {
    double _result = 0;
    HRESULT _hr = get_PostUpperM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6862)
inline void IRJointTubeLoad::PutPostUpperM ( double ret ) {
    HRESULT _hr = put_PostUpperM(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6863)
inline double IRJointTubeLoad::GetDiagLeftLowerN ( ) {
    double _result = 0;
    HRESULT _hr = get_DiagLeftLowerN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6864)
inline void IRJointTubeLoad::PutDiagLeftLowerN ( double ret ) {
    HRESULT _hr = put_DiagLeftLowerN(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6865)
inline double IRJointTubeLoad::GetDiagLeftLowerM ( ) {
    double _result = 0;
    HRESULT _hr = get_DiagLeftLowerM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6866)
inline void IRJointTubeLoad::PutDiagLeftLowerM ( double ret ) {
    HRESULT _hr = put_DiagLeftLowerM(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetBoltsDiag wrapper method implementations
//

#pragma implementation_key(6867)
inline double IRJointGussetBoltsDiag::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6868)
inline void IRJointGussetBoltsDiag::PutDiameter ( double ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6869)
inline _bstr_t IRJointGussetBoltsDiag::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6870)
inline void IRJointGussetBoltsDiag::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6871)
inline double IRJointGussetBoltsDiag::GetFriction ( ) {
    double _result = 0;
    HRESULT _hr = get_Friction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6872)
inline void IRJointGussetBoltsDiag::PutFriction ( double ret ) {
    HRESULT _hr = put_Friction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6873)
inline long IRJointGussetBoltsDiag::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6874)
inline void IRJointGussetBoltsDiag::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6875)
inline IRobotValuesArrayPtr IRJointGussetBoltsDiag::GetSpacing ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_Spacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6876)
inline double IRJointGussetBoltsDiag::GetDistanceH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceH1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6877)
inline void IRJointGussetBoltsDiag::PutDistanceH1 ( double ret ) {
    HRESULT _hr = put_DistanceH1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6878)
inline double IRJointGussetBoltsDiag::GetBoltAxisShift ( ) {
    double _result = 0;
    HRESULT _hr = get_BoltAxisShift(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6879)
inline void IRJointGussetBoltsDiag::PutBoltAxisShift ( double ret ) {
    HRESULT _hr = put_BoltAxisShift(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6880)
inline enum IRJointBoltShearPortion IRJointGussetBoltsDiag::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6881)
inline void IRJointGussetBoltsDiag::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetWeldsDiag wrapper method implementations
//

#pragma implementation_key(6882)
inline double IRJointGussetWeldsDiag::GetThickFlange ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6883)
inline void IRJointGussetWeldsDiag::PutThickFlange ( double ret ) {
    HRESULT _hr = put_ThickFlange(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6884)
inline double IRJointGussetWeldsDiag::GetThickCorner ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickCorner(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6885)
inline void IRJointGussetWeldsDiag::PutThickCorner ( double ret ) {
    HRESULT _hr = put_ThickCorner(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6886)
inline double IRJointGussetWeldsDiag::GetLength1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Length1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6887)
inline void IRJointGussetWeldsDiag::PutLength1 ( double ret ) {
    HRESULT _hr = put_Length1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6888)
inline double IRJointGussetWeldsDiag::GetLength2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Length2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6889)
inline void IRJointGussetWeldsDiag::PutLength2 ( double ret ) {
    HRESULT _hr = put_Length2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetDiagonale wrapper method implementations
//

#pragma implementation_key(6890)
inline IRJointProfilePtr IRJointGussetDiagonale::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(6891)
inline IRJointGussetBoltsDiagPtr IRJointGussetDiagonale::GetBoltsDiag ( ) {
    struct IRJointGussetBoltsDiag * _result = 0;
    HRESULT _hr = get_BoltsDiag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetBoltsDiagPtr(_result, false);
}

#pragma implementation_key(6892)
inline IRJointGussetWeldsDiagPtr IRJointGussetDiagonale::GetWeldsDiag ( ) {
    struct IRJointGussetWeldsDiag * _result = 0;
    HRESULT _hr = get_WeldsDiag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetWeldsDiagPtr(_result, false);
}

#pragma implementation_key(6893)
inline double IRJointGussetDiagonale::GetDistanceEC ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceEC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6894)
inline void IRJointGussetDiagonale::PutDistanceEC ( double ret ) {
    HRESULT _hr = put_DistanceEC(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6895)
inline enum IRJointGussetDiagonalePositionType IRJointGussetDiagonale::GetPosition ( ) {
    enum IRJointGussetDiagonalePositionType _result;
    HRESULT _hr = get_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6896)
inline void IRJointGussetDiagonale::PutPosition ( enum IRJointGussetDiagonalePositionType ret ) {
    HRESULT _hr = put_Position(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6897)
inline VARIANT_BOOL IRJointGussetDiagonale::GetExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6898)
inline long IRJointGussetDiagonale::GetBarNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_BarNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6899)
inline void IRJointGussetDiagonale::PutBarNumber ( long ret ) {
    HRESULT _hr = put_BarNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6900)
inline void IRJointGussetDiagonale::PutExist ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_Exist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetSimplePlate wrapper method implementations
//

#pragma implementation_key(6901)
inline double IRJointGussetSimplePlate::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6902)
inline void IRJointGussetSimplePlate::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6903)
inline double IRJointGussetSimplePlate::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6904)
inline void IRJointGussetSimplePlate::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6905)
inline double IRJointGussetSimplePlate::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6906)
inline void IRJointGussetSimplePlate::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6907)
inline double IRJointGussetSimplePlate::GetDistanceEH ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceEH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6908)
inline void IRJointGussetSimplePlate::PutDistanceEH ( double ret ) {
    HRESULT _hr = put_DistanceEH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6909)
inline double IRJointGussetSimplePlate::GetDistanceEV ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceEV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6910)
inline void IRJointGussetSimplePlate::PutDistanceEV ( double ret ) {
    HRESULT _hr = put_DistanceEV(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6911)
inline double IRJointGussetSimplePlate::GetDistanceD ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6912)
inline void IRJointGussetSimplePlate::PutDistanceD ( double ret ) {
    HRESULT _hr = put_DistanceD(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6913)
inline _bstr_t IRJointGussetSimplePlate::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6914)
inline void IRJointGussetSimplePlate::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6915)
inline enum IRJointGussetCornersType IRJointGussetSimplePlate::GetCornersType ( ) {
    enum IRJointGussetCornersType _result;
    HRESULT _hr = get_CornersType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6916)
inline void IRJointGussetSimplePlate::PutCornersType ( enum IRJointGussetCornersType ret ) {
    HRESULT _hr = put_CornersType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6917)
inline double IRJointGussetSimplePlate::GetV1 ( ) {
    double _result = 0;
    HRESULT _hr = get_V1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6918)
inline void IRJointGussetSimplePlate::PutV1 ( double ret ) {
    HRESULT _hr = put_V1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6919)
inline double IRJointGussetSimplePlate::GetV2 ( ) {
    double _result = 0;
    HRESULT _hr = get_V2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6920)
inline void IRJointGussetSimplePlate::PutV2 ( double ret ) {
    HRESULT _hr = put_V2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6921)
inline double IRJointGussetSimplePlate::GetV3 ( ) {
    double _result = 0;
    HRESULT _hr = get_V3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6922)
inline void IRJointGussetSimplePlate::PutV3 ( double ret ) {
    HRESULT _hr = put_V3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6923)
inline double IRJointGussetSimplePlate::GetV4 ( ) {
    double _result = 0;
    HRESULT _hr = get_V4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6924)
inline void IRJointGussetSimplePlate::PutV4 ( double ret ) {
    HRESULT _hr = put_V4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6925)
inline double IRJointGussetSimplePlate::GetH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_H1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6926)
inline void IRJointGussetSimplePlate::PutH1 ( double ret ) {
    HRESULT _hr = put_H1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6927)
inline double IRJointGussetSimplePlate::GetH2 ( ) {
    double _result = 0;
    HRESULT _hr = get_H2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6928)
inline void IRJointGussetSimplePlate::PutH2 ( double ret ) {
    HRESULT _hr = put_H2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6929)
inline double IRJointGussetSimplePlate::GetH3 ( ) {
    double _result = 0;
    HRESULT _hr = get_H3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6930)
inline void IRJointGussetSimplePlate::PutH3 ( double ret ) {
    HRESULT _hr = put_H3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6931)
inline double IRJointGussetSimplePlate::GetH4 ( ) {
    double _result = 0;
    HRESULT _hr = get_H4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6932)
inline void IRJointGussetSimplePlate::PutH4 ( double ret ) {
    HRESULT _hr = put_H4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetSimpleAttachBoltsHorizontal wrapper method implementations
//

#pragma implementation_key(6933)
inline long IRJointGussetSimpleAttachBoltsHorizontal::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6934)
inline void IRJointGussetSimpleAttachBoltsHorizontal::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6935)
inline IRobotValuesArrayPtr IRJointGussetSimpleAttachBoltsHorizontal::GetSpacing ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_Spacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6936)
inline double IRJointGussetSimpleAttachBoltsHorizontal::GetDistanceH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceH1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6937)
inline void IRJointGussetSimpleAttachBoltsHorizontal::PutDistanceH1 ( double ret ) {
    HRESULT _hr = put_DistanceH1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6938)
inline double IRJointGussetSimpleAttachBoltsHorizontal::GetDistanceEB ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceEB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6939)
inline void IRJointGussetSimpleAttachBoltsHorizontal::PutDistanceEB ( double ret ) {
    HRESULT _hr = put_DistanceEB(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetSimpleAttachBoltsVertical wrapper method implementations
//

#pragma implementation_key(6940)
inline long IRJointGussetSimpleAttachBoltsVertical::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6941)
inline void IRJointGussetSimpleAttachBoltsVertical::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6942)
inline IRobotValuesArrayPtr IRJointGussetSimpleAttachBoltsVertical::GetSpacing ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_Spacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6943)
inline double IRJointGussetSimpleAttachBoltsVertical::GetDistanceH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceH1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6944)
inline void IRJointGussetSimpleAttachBoltsVertical::PutDistanceH1 ( double ret ) {
    HRESULT _hr = put_DistanceH1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6945)
inline double IRJointGussetSimpleAttachBoltsVertical::GetDistanceEB ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceEB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6946)
inline void IRJointGussetSimpleAttachBoltsVertical::PutDistanceEB ( double ret ) {
    HRESULT _hr = put_DistanceEB(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetSimpleAttachBolts wrapper method implementations
//

#pragma implementation_key(6947)
inline double IRJointGussetSimpleAttachBolts::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6948)
inline void IRJointGussetSimpleAttachBolts::PutDiameter ( double ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6949)
inline _bstr_t IRJointGussetSimpleAttachBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6950)
inline void IRJointGussetSimpleAttachBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6951)
inline double IRJointGussetSimpleAttachBolts::GetFriction ( ) {
    double _result = 0;
    HRESULT _hr = get_Friction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6952)
inline void IRJointGussetSimpleAttachBolts::PutFriction ( double ret ) {
    HRESULT _hr = put_Friction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6953)
inline IRJointGussetSimpleAttachBoltsHorizontalPtr IRJointGussetSimpleAttachBolts::GetHorizontal ( ) {
    struct IRJointGussetSimpleAttachBoltsHorizontal * _result = 0;
    HRESULT _hr = get_Horizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetSimpleAttachBoltsHorizontalPtr(_result, false);
}

#pragma implementation_key(6954)
inline IRJointGussetSimpleAttachBoltsVerticalPtr IRJointGussetSimpleAttachBolts::GetVertical ( ) {
    struct IRJointGussetSimpleAttachBoltsVertical * _result = 0;
    HRESULT _hr = get_Vertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetSimpleAttachBoltsVerticalPtr(_result, false);
}

#pragma implementation_key(6955)
inline enum IRJointBoltShearPortion IRJointGussetSimpleAttachBolts::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6956)
inline void IRJointGussetSimpleAttachBolts::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetSimpleAttachWelds wrapper method implementations
//

#pragma implementation_key(6957)
inline double IRJointGussetSimpleAttachWelds::GetThickEdgeB ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickEdgeB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6958)
inline void IRJointGussetSimpleAttachWelds::PutThickEdgeB ( double ret ) {
    HRESULT _hr = put_ThickEdgeB(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6959)
inline double IRJointGussetSimpleAttachWelds::GetThickEdgeA ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickEdgeA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6960)
inline void IRJointGussetSimpleAttachWelds::PutThickEdgeA ( double ret ) {
    HRESULT _hr = put_ThickEdgeA(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetSimpleAttachment wrapper method implementations
//

#pragma implementation_key(6961)
inline enum IRJointGussetFixType IRJointGussetSimpleAttachment::GetFixType ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6962)
inline void IRJointGussetSimpleAttachment::PutFixType ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6963)
inline IRJointGussetSimpleAttachBoltsPtr IRJointGussetSimpleAttachment::GetBoltsAttach ( ) {
    struct IRJointGussetSimpleAttachBolts * _result = 0;
    HRESULT _hr = get_BoltsAttach(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetSimpleAttachBoltsPtr(_result, false);
}

#pragma implementation_key(6964)
inline IRJointGussetSimpleAttachWeldsPtr IRJointGussetSimpleAttachment::GetWeldsAttach ( ) {
    struct IRJointGussetSimpleAttachWelds * _result = 0;
    HRESULT _hr = get_WeldsAttach(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetSimpleAttachWeldsPtr(_result, false);
}

#pragma implementation_key(6965)
inline enum IRJointWeldType IRJointGussetSimpleAttachment::GetWeldType ( ) {
    enum IRJointWeldType _result;
    HRESULT _hr = get_WeldType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6966)
inline void IRJointGussetSimpleAttachment::PutWeldType ( enum IRJointWeldType ret ) {
    HRESULT _hr = put_WeldType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6967)
inline long IRJointGussetSimpleAttachment::GetIsPlateToMainCorner ( ) {
    long _result = 0;
    HRESULT _hr = get_IsPlateToMainCorner(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6968)
inline void IRJointGussetSimpleAttachment::PutIsPlateToMainCorner ( long ret ) {
    HRESULT _hr = put_IsPlateToMainCorner(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetSimple wrapper method implementations
//

#pragma implementation_key(6969)
inline enum IRJointGussetSimpleProfilePosition IRJointGussetSimple::GetProfilePosition ( ) {
    enum IRJointGussetSimpleProfilePosition _result;
    HRESULT _hr = get_ProfilePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6970)
inline void IRJointGussetSimple::PutProfilePosition ( enum IRJointGussetSimpleProfilePosition ret ) {
    HRESULT _hr = put_ProfilePosition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6971)
inline enum IRJointGussetFixType IRJointGussetSimple::GetFixType ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6972)
inline void IRJointGussetSimple::PutFixType ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6973)
inline IRJointGussetDiagonalePtr IRJointGussetSimple::GetDiagonale ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_Diagonale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(6974)
inline IRJointGussetSimplePlatePtr IRJointGussetSimple::GetGussetPlate ( ) {
    struct IRJointGussetSimplePlate * _result = 0;
    HRESULT _hr = get_GussetPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetSimplePlatePtr(_result, false);
}

#pragma implementation_key(6975)
inline IRJointGussetSimpleAttachmentPtr IRJointGussetSimple::GetAttachment ( ) {
    struct IRJointGussetSimpleAttachment * _result = 0;
    HRESULT _hr = get_Attachment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetSimpleAttachmentPtr(_result, false);
}

#pragma implementation_key(6976)
inline IRobotNamesArrayPtr IRJointGussetSimple::GetBoltsDimensionNamesVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionNamesVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(6977)
inline IRobotNamesArrayPtr IRJointGussetSimple::GetBoltsClassVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsClassVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(6978)
inline IRobotValuesArrayPtr IRJointGussetSimple::GetBoltsDimensionsVector ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionsVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(6979)
inline VARIANT_BOOL IRJointGussetSimple::GetIsShearPortionAllBolts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6980)
inline void IRJointGussetSimple::PutIsShearPortionAllBolts ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6981)
inline enum IRJointBoltShearPortion IRJointGussetSimple::GetShearPortionAllBolts ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6982)
inline void IRJointGussetSimple::PutShearPortionAllBolts ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetCrossPlate wrapper method implementations
//

#pragma implementation_key(6983)
inline double IRJointGussetCrossPlate::GetB1 ( ) {
    double _result = 0;
    HRESULT _hr = get_B1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6984)
inline void IRJointGussetCrossPlate::PutB1 ( double ret ) {
    HRESULT _hr = put_B1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6985)
inline double IRJointGussetCrossPlate::GetB2 ( ) {
    double _result = 0;
    HRESULT _hr = get_B2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6986)
inline void IRJointGussetCrossPlate::PutB2 ( double ret ) {
    HRESULT _hr = put_B2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6987)
inline double IRJointGussetCrossPlate::GetB3 ( ) {
    double _result = 0;
    HRESULT _hr = get_B3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6988)
inline void IRJointGussetCrossPlate::PutB3 ( double ret ) {
    HRESULT _hr = put_B3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6989)
inline double IRJointGussetCrossPlate::GetB4 ( ) {
    double _result = 0;
    HRESULT _hr = get_B4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6990)
inline void IRJointGussetCrossPlate::PutB4 ( double ret ) {
    HRESULT _hr = put_B4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6991)
inline double IRJointGussetCrossPlate::GetH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_H1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6992)
inline void IRJointGussetCrossPlate::PutH1 ( double ret ) {
    HRESULT _hr = put_H1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6993)
inline double IRJointGussetCrossPlate::GetH2 ( ) {
    double _result = 0;
    HRESULT _hr = get_H2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6994)
inline void IRJointGussetCrossPlate::PutH2 ( double ret ) {
    HRESULT _hr = put_H2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6995)
inline double IRJointGussetCrossPlate::GetH3 ( ) {
    double _result = 0;
    HRESULT _hr = get_H3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6996)
inline void IRJointGussetCrossPlate::PutH3 ( double ret ) {
    HRESULT _hr = put_H3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6997)
inline double IRJointGussetCrossPlate::GetH4 ( ) {
    double _result = 0;
    HRESULT _hr = get_H4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6998)
inline void IRJointGussetCrossPlate::PutH4 ( double ret ) {
    HRESULT _hr = put_H4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6999)
inline double IRJointGussetCrossPlate::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7000)
inline void IRJointGussetCrossPlate::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7001)
inline _bstr_t IRJointGussetCrossPlate::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7002)
inline void IRJointGussetCrossPlate::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7003)
inline enum IRJointGussetCornersType IRJointGussetCrossPlate::GetCornersType ( ) {
    enum IRJointGussetCornersType _result;
    HRESULT _hr = get_CornersType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7004)
inline void IRJointGussetCrossPlate::PutCornersType ( enum IRJointGussetCornersType ret ) {
    HRESULT _hr = put_CornersType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7005)
inline double IRJointGussetCrossPlate::GetCutV1 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutV1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7006)
inline void IRJointGussetCrossPlate::PutCutV1 ( double ret ) {
    HRESULT _hr = put_CutV1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7007)
inline double IRJointGussetCrossPlate::GetCutV2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutV2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7008)
inline void IRJointGussetCrossPlate::PutCutV2 ( double ret ) {
    HRESULT _hr = put_CutV2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7009)
inline double IRJointGussetCrossPlate::GetCutV3 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutV3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7010)
inline void IRJointGussetCrossPlate::PutCutV3 ( double ret ) {
    HRESULT _hr = put_CutV3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7011)
inline double IRJointGussetCrossPlate::GetCutV4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutV4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7012)
inline void IRJointGussetCrossPlate::PutCutV4 ( double ret ) {
    HRESULT _hr = put_CutV4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7013)
inline double IRJointGussetCrossPlate::GetCutH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutH1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7014)
inline void IRJointGussetCrossPlate::PutCutH1 ( double ret ) {
    HRESULT _hr = put_CutH1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7015)
inline double IRJointGussetCrossPlate::GetCutH2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutH2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7016)
inline void IRJointGussetCrossPlate::PutCutH2 ( double ret ) {
    HRESULT _hr = put_CutH2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7017)
inline double IRJointGussetCrossPlate::GetCutH3 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutH3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7018)
inline void IRJointGussetCrossPlate::PutCutH3 ( double ret ) {
    HRESULT _hr = put_CutH3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7019)
inline double IRJointGussetCrossPlate::GetCutH4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutH4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7020)
inline void IRJointGussetCrossPlate::PutCutH4 ( double ret ) {
    HRESULT _hr = put_CutH4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7021)
inline double IRJointGussetCrossPlate::GetHOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_HOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7022)
inline void IRJointGussetCrossPlate::PutHOffset ( double ret ) {
    HRESULT _hr = put_HOffset(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7023)
inline double IRJointGussetCrossPlate::GetVOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_VOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7024)
inline void IRJointGussetCrossPlate::PutVOffset ( double ret ) {
    HRESULT _hr = put_VOffset(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7025)
inline double IRJointGussetCrossPlate::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7026)
inline void IRJointGussetCrossPlate::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7027)
inline double IRJointGussetCrossPlate::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7028)
inline void IRJointGussetCrossPlate::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7029)
inline double IRJointGussetCrossPlate::GetHorizontalOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_HorizontalOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7030)
inline void IRJointGussetCrossPlate::PutHorizontalOffset ( double ret ) {
    HRESULT _hr = put_HorizontalOffset(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetCross wrapper method implementations
//

#pragma implementation_key(7031)
inline enum IRJointGussetCrossProfileCutting IRJointGussetCross::GetProfileCutting ( ) {
    enum IRJointGussetCrossProfileCutting _result;
    HRESULT _hr = get_ProfileCutting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7032)
inline void IRJointGussetCross::PutProfileCutting ( enum IRJointGussetCrossProfileCutting ret ) {
    HRESULT _hr = put_ProfileCutting(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7033)
inline enum IRJointGussetFixType IRJointGussetCross::GetFixType_LeftU_RightL ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_LeftU_RightL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7034)
inline void IRJointGussetCross::PutFixType_LeftU_RightL ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_LeftU_RightL(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7035)
inline enum IRJointGussetFixType IRJointGussetCross::GetFixType_LeftL_RightU ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_LeftL_RightU(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7036)
inline void IRJointGussetCross::PutFixType_LeftL_RightU ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_LeftL_RightU(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7037)
inline IRJointGussetDiagonalePtr IRJointGussetCross::GetDiagLeftUpper ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_DiagLeftUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(7038)
inline IRJointGussetDiagonalePtr IRJointGussetCross::GetDiagLeftLower ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_DiagLeftLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(7039)
inline IRJointGussetDiagonalePtr IRJointGussetCross::GetDiagRightUpper ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_DiagRightUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(7040)
inline IRJointGussetDiagonalePtr IRJointGussetCross::GetDiagRightLower ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_DiagRightLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(7041)
inline IRJointGussetCrossPlatePtr IRJointGussetCross::GetGussetPlate ( ) {
    struct IRJointGussetCrossPlate * _result = 0;
    HRESULT _hr = get_GussetPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetCrossPlatePtr(_result, false);
}

#pragma implementation_key(7042)
inline IRobotNamesArrayPtr IRJointGussetCross::GetBoltsDimensionNamesVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionNamesVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7043)
inline IRobotNamesArrayPtr IRJointGussetCross::GetBoltsClassVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsClassVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7044)
inline IRobotValuesArrayPtr IRJointGussetCross::GetBoltsDimensionsVector ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionsVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(7045)
inline enum IRJointGussetFixType IRJointGussetCross::GetFixType_LeftUpper ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_LeftUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7046)
inline void IRJointGussetCross::PutFixType_LeftUpper ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_LeftUpper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7047)
inline enum IRJointGussetFixType IRJointGussetCross::GetFixType_RightUpper ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_RightUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7048)
inline void IRJointGussetCross::PutFixType_RightUpper ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_RightUpper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7049)
inline enum IRJointGussetFixType IRJointGussetCross::GetFixType_LeftLower ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_LeftLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7050)
inline void IRJointGussetCross::PutFixType_LeftLower ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_LeftLower(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7051)
inline enum IRJointGussetFixType IRJointGussetCross::GetFixType_RightLower ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_RightLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7052)
inline void IRJointGussetCross::PutFixType_RightLower ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_RightLower(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7053)
inline VARIANT_BOOL IRJointGussetCross::GetIsShearPortionAllBolts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7054)
inline void IRJointGussetCross::PutIsShearPortionAllBolts ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7055)
inline enum IRJointBoltShearPortion IRJointGussetCross::GetShearPortionAllBolts ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7056)
inline void IRJointGussetCross::PutShearPortionAllBolts ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetFlangePlate wrapper method implementations
//

#pragma implementation_key(7057)
inline double IRJointGussetFlangePlate::GetB1 ( ) {
    double _result = 0;
    HRESULT _hr = get_B1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7058)
inline void IRJointGussetFlangePlate::PutB1 ( double ret ) {
    HRESULT _hr = put_B1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7059)
inline double IRJointGussetFlangePlate::GetB2 ( ) {
    double _result = 0;
    HRESULT _hr = get_B2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7060)
inline void IRJointGussetFlangePlate::PutB2 ( double ret ) {
    HRESULT _hr = put_B2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7061)
inline double IRJointGussetFlangePlate::GetB3 ( ) {
    double _result = 0;
    HRESULT _hr = get_B3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7062)
inline void IRJointGussetFlangePlate::PutB3 ( double ret ) {
    HRESULT _hr = put_B3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7063)
inline double IRJointGussetFlangePlate::GetB4 ( ) {
    double _result = 0;
    HRESULT _hr = get_B4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7064)
inline void IRJointGussetFlangePlate::PutB4 ( double ret ) {
    HRESULT _hr = put_B4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7065)
inline double IRJointGussetFlangePlate::GetH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_H1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7066)
inline void IRJointGussetFlangePlate::PutH1 ( double ret ) {
    HRESULT _hr = put_H1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7067)
inline double IRJointGussetFlangePlate::GetH2 ( ) {
    double _result = 0;
    HRESULT _hr = get_H2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7068)
inline void IRJointGussetFlangePlate::PutH2 ( double ret ) {
    HRESULT _hr = put_H2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7069)
inline double IRJointGussetFlangePlate::GetH3 ( ) {
    double _result = 0;
    HRESULT _hr = get_H3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7070)
inline void IRJointGussetFlangePlate::PutH3 ( double ret ) {
    HRESULT _hr = put_H3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7071)
inline double IRJointGussetFlangePlate::GetH4 ( ) {
    double _result = 0;
    HRESULT _hr = get_H4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7072)
inline void IRJointGussetFlangePlate::PutH4 ( double ret ) {
    HRESULT _hr = put_H4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7073)
inline double IRJointGussetFlangePlate::GetEH ( ) {
    double _result = 0;
    HRESULT _hr = get_EH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7074)
inline void IRJointGussetFlangePlate::PutEH ( double ret ) {
    HRESULT _hr = put_EH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7075)
inline double IRJointGussetFlangePlate::GetEV ( ) {
    double _result = 0;
    HRESULT _hr = get_EV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7076)
inline void IRJointGussetFlangePlate::PutEV ( double ret ) {
    HRESULT _hr = put_EV(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7077)
inline double IRJointGussetFlangePlate::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7078)
inline void IRJointGussetFlangePlate::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7079)
inline _bstr_t IRJointGussetFlangePlate::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7080)
inline void IRJointGussetFlangePlate::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7081)
inline enum IRJointGussetCornersType IRJointGussetFlangePlate::GetCornersType ( ) {
    enum IRJointGussetCornersType _result;
    HRESULT _hr = get_CornersType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7082)
inline void IRJointGussetFlangePlate::PutCornersType ( enum IRJointGussetCornersType ret ) {
    HRESULT _hr = put_CornersType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7083)
inline enum IRJointGussetFlangePlateRegularType IRJointGussetFlangePlate::GetType ( ) {
    enum IRJointGussetFlangePlateRegularType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7084)
inline void IRJointGussetFlangePlate::PutType ( enum IRJointGussetFlangePlateRegularType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7085)
inline double IRJointGussetFlangePlate::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7086)
inline void IRJointGussetFlangePlate::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7087)
inline double IRJointGussetFlangePlate::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7088)
inline void IRJointGussetFlangePlate::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7089)
inline long IRJointGussetFlangePlate::GetNewPlateDefinition ( ) {
    long _result = 0;
    HRESULT _hr = get_NewPlateDefinition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7090)
inline void IRJointGussetFlangePlate::PutNewPlateDefinition ( long ret ) {
    HRESULT _hr = put_NewPlateDefinition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7091)
inline double IRJointGussetFlangePlate::GetHOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_HOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7092)
inline void IRJointGussetFlangePlate::PutHOffset ( double ret ) {
    HRESULT _hr = put_HOffset(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7093)
inline double IRJointGussetFlangePlate::GetVOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_VOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7094)
inline void IRJointGussetFlangePlate::PutVOffset ( double ret ) {
    HRESULT _hr = put_VOffset(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7095)
inline double IRJointGussetFlangePlate::GetCutV1 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutV1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7096)
inline void IRJointGussetFlangePlate::PutCutV1 ( double ret ) {
    HRESULT _hr = put_CutV1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7097)
inline double IRJointGussetFlangePlate::GetCutV2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutV2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7098)
inline void IRJointGussetFlangePlate::PutCutV2 ( double ret ) {
    HRESULT _hr = put_CutV2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7099)
inline double IRJointGussetFlangePlate::GetCutV3 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutV3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7100)
inline void IRJointGussetFlangePlate::PutCutV3 ( double ret ) {
    HRESULT _hr = put_CutV3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7101)
inline double IRJointGussetFlangePlate::GetCutV4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutV4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7102)
inline void IRJointGussetFlangePlate::PutCutV4 ( double ret ) {
    HRESULT _hr = put_CutV4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7103)
inline double IRJointGussetFlangePlate::GetCutH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutH1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7104)
inline void IRJointGussetFlangePlate::PutCutH1 ( double ret ) {
    HRESULT _hr = put_CutH1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7105)
inline double IRJointGussetFlangePlate::GetCutH2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutH2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7106)
inline void IRJointGussetFlangePlate::PutCutH2 ( double ret ) {
    HRESULT _hr = put_CutH2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7107)
inline double IRJointGussetFlangePlate::GetCutH3 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutH3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7108)
inline void IRJointGussetFlangePlate::PutCutH3 ( double ret ) {
    HRESULT _hr = put_CutH3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7109)
inline double IRJointGussetFlangePlate::GetCutH4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CutH4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7110)
inline void IRJointGussetFlangePlate::PutCutH4 ( double ret ) {
    HRESULT _hr = put_CutH4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetFlange wrapper method implementations
//

#pragma implementation_key(7111)
inline enum IRJointGussetFixType IRJointGussetFlange::GetFixType_FlangeLeft ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_FlangeLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7112)
inline void IRJointGussetFlange::PutFixType_FlangeLeft ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_FlangeLeft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7113)
inline enum IRJointGussetFixType IRJointGussetFlange::GetFixType_FlangeRight ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_FlangeRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7114)
inline void IRJointGussetFlange::PutFixType_FlangeRight ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_FlangeRight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7115)
inline enum IRJointGussetFixType IRJointGussetFlange::GetFixType_DiagonalLeft ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_DiagonalLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7116)
inline void IRJointGussetFlange::PutFixType_DiagonalLeft ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_DiagonalLeft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7117)
inline enum IRJointGussetFixType IRJointGussetFlange::GetFixType_DiagonalRight ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_DiagonalRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7118)
inline void IRJointGussetFlange::PutFixType_DiagonalRight ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_DiagonalRight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7119)
inline enum IRJointGussetFixType IRJointGussetFlange::GetFixType_DiagonalUp ( ) {
    enum IRJointGussetFixType _result;
    HRESULT _hr = get_FixType_DiagonalUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7120)
inline void IRJointGussetFlange::PutFixType_DiagonalUp ( enum IRJointGussetFixType ret ) {
    HRESULT _hr = put_FixType_DiagonalUp(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7121)
inline enum IRJointGussetFlangeProfileCutting IRJointGussetFlange::GetProfileCutting ( ) {
    enum IRJointGussetFlangeProfileCutting _result;
    HRESULT _hr = get_ProfileCutting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7122)
inline void IRJointGussetFlange::PutProfileCutting ( enum IRJointGussetFlangeProfileCutting ret ) {
    HRESULT _hr = put_ProfileCutting(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7123)
inline IRJointGussetDiagonalePtr IRJointGussetFlange::GetFlangeLeft ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_FlangeLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(7124)
inline IRJointGussetDiagonalePtr IRJointGussetFlange::GetFlangeRight ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_FlangeRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(7125)
inline IRJointGussetDiagonalePtr IRJointGussetFlange::GetDiagonalLeft ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_DiagonalLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(7126)
inline IRJointGussetDiagonalePtr IRJointGussetFlange::GetDiagonalRight ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_DiagonalRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(7127)
inline IRJointGussetDiagonalePtr IRJointGussetFlange::GetDiagonalUp ( ) {
    struct IRJointGussetDiagonale * _result = 0;
    HRESULT _hr = get_DiagonalUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetDiagonalePtr(_result, false);
}

#pragma implementation_key(7128)
inline IRJointGussetFlangePlatePtr IRJointGussetFlange::GetGussetPlate ( ) {
    struct IRJointGussetFlangePlate * _result = 0;
    HRESULT _hr = get_GussetPlate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointGussetFlangePlatePtr(_result, false);
}

#pragma implementation_key(7129)
inline IRobotNamesArrayPtr IRJointGussetFlange::GetBoltsDimensionNamesVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionNamesVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7130)
inline IRobotNamesArrayPtr IRJointGussetFlange::GetBoltsClassVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsClassVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7131)
inline IRobotValuesArrayPtr IRJointGussetFlange::GetBoltsDimensionsVector ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionsVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(7132)
inline VARIANT_BOOL IRJointGussetFlange::GetIsShearPortionAllBolts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7133)
inline void IRJointGussetFlange::PutIsShearPortionAllBolts ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7134)
inline enum IRJointBoltShearPortion IRJointGussetFlange::GetShearPortionAllBolts ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7135)
inline void IRJointGussetFlange::PutShearPortionAllBolts ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetSimpleLoad wrapper method implementations
//

#pragma implementation_key(7136)
inline double IRJointGussetSimpleLoad::GetFX ( ) {
    double _result = 0;
    HRESULT _hr = get_FX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7137)
inline void IRJointGussetSimpleLoad::PutFX ( double ret ) {
    HRESULT _hr = put_FX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetCrossLoad wrapper method implementations
//

#pragma implementation_key(7138)
inline double IRJointGussetCrossLoad::GetFx_LeftUpper ( ) {
    double _result = 0;
    HRESULT _hr = get_Fx_LeftUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7139)
inline void IRJointGussetCrossLoad::PutFx_LeftUpper ( double ret ) {
    HRESULT _hr = put_Fx_LeftUpper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7140)
inline double IRJointGussetCrossLoad::GetFx_LeftLower ( ) {
    double _result = 0;
    HRESULT _hr = get_Fx_LeftLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7141)
inline void IRJointGussetCrossLoad::PutFx_LeftLower ( double ret ) {
    HRESULT _hr = put_Fx_LeftLower(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7142)
inline double IRJointGussetCrossLoad::GetFx_RightUpper ( ) {
    double _result = 0;
    HRESULT _hr = get_Fx_RightUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7143)
inline void IRJointGussetCrossLoad::PutFx_RightUpper ( double ret ) {
    HRESULT _hr = put_Fx_RightUpper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7144)
inline double IRJointGussetCrossLoad::GetFx_RightLower ( ) {
    double _result = 0;
    HRESULT _hr = get_Fx_RightLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7145)
inline void IRJointGussetCrossLoad::PutFx_RightLower ( double ret ) {
    HRESULT _hr = put_Fx_RightLower(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointGussetFlangeLoad wrapper method implementations
//

#pragma implementation_key(7146)
inline double IRJointGussetFlangeLoad::GetFx_FlangeLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_Fx_FlangeLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7147)
inline void IRJointGussetFlangeLoad::PutFx_FlangeLeft ( double ret ) {
    HRESULT _hr = put_Fx_FlangeLeft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7148)
inline double IRJointGussetFlangeLoad::GetFx_FlangeRight ( ) {
    double _result = 0;
    HRESULT _hr = get_Fx_FlangeRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7149)
inline void IRJointGussetFlangeLoad::PutFx_FlangeRight ( double ret ) {
    HRESULT _hr = put_Fx_FlangeRight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7150)
inline double IRJointGussetFlangeLoad::GetFx_LeftUpper ( ) {
    double _result = 0;
    HRESULT _hr = get_Fx_LeftUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7151)
inline void IRJointGussetFlangeLoad::PutFx_LeftUpper ( double ret ) {
    HRESULT _hr = put_Fx_LeftUpper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7152)
inline double IRJointGussetFlangeLoad::GetFx_Upper ( ) {
    double _result = 0;
    HRESULT _hr = get_Fx_Upper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7153)
inline void IRJointGussetFlangeLoad::PutFx_Upper ( double ret ) {
    HRESULT _hr = put_Fx_Upper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7154)
inline double IRJointGussetFlangeLoad::GetFx_RightUpper ( ) {
    double _result = 0;
    HRESULT _hr = get_Fx_RightUpper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7155)
inline void IRJointGussetFlangeLoad::PutFx_RightUpper ( double ret ) {
    HRESULT _hr = put_Fx_RightUpper(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointMainBolts wrapper method implementations
//

#pragma implementation_key(7156)
inline _bstr_t IRJointMainBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7157)
inline void IRJointMainBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7158)
inline _bstr_t IRJointMainBolts::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7159)
inline void IRJointMainBolts::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7160)
inline long IRJointMainBolts::GetDiameter ( ) {
    long _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7161)
inline double IRJointMainBolts::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7162)
inline double IRJointMainBolts::GetFriction ( ) {
    double _result = 0;
    HRESULT _hr = get_Friction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7163)
inline void IRJointMainBolts::PutFriction ( double ret ) {
    HRESULT _hr = put_Friction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7164)
inline long IRJointMainBolts::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7165)
inline void IRJointMainBolts::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7166)
inline long IRJointMainBolts::GetCols ( ) {
    long _result = 0;
    HRESULT _hr = get_Cols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7167)
inline void IRJointMainBolts::PutCols ( long ret ) {
    HRESULT _hr = put_Cols(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7168)
inline double IRJointMainBolts::GetSpacingV ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7169)
inline void IRJointMainBolts::PutSpacingV ( double ret ) {
    HRESULT _hr = put_SpacingV(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7170)
inline double IRJointMainBolts::GetSpacingH ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7171)
inline void IRJointMainBolts::PutSpacingH ( double ret ) {
    HRESULT _hr = put_SpacingH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7172)
inline double IRJointMainBolts::GetDistFromUpperElementEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromUpperElementEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7173)
inline void IRJointMainBolts::PutDistFromUpperElementEdge ( double ret ) {
    HRESULT _hr = put_DistFromUpperElementEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7174)
inline double IRJointMainBolts::GetDistFromVertElementEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromVertElementEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7175)
inline void IRJointMainBolts::PutDistFromVertElementEdge ( double ret ) {
    HRESULT _hr = put_DistFromVertElementEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7176)
inline void IRJointMainBolts::PutDiameter ( long ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7177)
inline long IRJointMainBolts::GetCenterElement ( ) {
    long _result = 0;
    HRESULT _hr = get_CenterElement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7178)
inline void IRJointMainBolts::PutCenterElement ( long ret ) {
    HRESULT _hr = put_CenterElement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7179)
inline enum IRJointBoltShearPortion IRJointMainBolts::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7180)
inline void IRJointMainBolts::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamBolts wrapper method implementations
//

#pragma implementation_key(7181)
inline long IRJointBeamBolts::GetDiameter ( ) {
    long _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7182)
inline _bstr_t IRJointBeamBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7183)
inline void IRJointBeamBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7184)
inline _bstr_t IRJointBeamBolts::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7185)
inline void IRJointBeamBolts::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7186)
inline double IRJointBeamBolts::GetFriction ( ) {
    double _result = 0;
    HRESULT _hr = get_Friction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7187)
inline void IRJointBeamBolts::PutFriction ( double ret ) {
    HRESULT _hr = put_Friction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7188)
inline double IRJointBeamBolts::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7189)
inline long IRJointBeamBolts::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7190)
inline void IRJointBeamBolts::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7191)
inline long IRJointBeamBolts::GetCols ( ) {
    long _result = 0;
    HRESULT _hr = get_Cols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7192)
inline void IRJointBeamBolts::PutCols ( long ret ) {
    HRESULT _hr = put_Cols(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7193)
inline double IRJointBeamBolts::GetSpacingV ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7194)
inline void IRJointBeamBolts::PutSpacingV ( double ret ) {
    HRESULT _hr = put_SpacingV(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7195)
inline double IRJointBeamBolts::GetSpacingH ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7196)
inline void IRJointBeamBolts::PutSpacingH ( double ret ) {
    HRESULT _hr = put_SpacingH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7197)
inline double IRJointBeamBolts::GetDistFromUpperBeamEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromUpperBeamEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7198)
inline void IRJointBeamBolts::PutDistFromUpperBeamEdge ( double ret ) {
    HRESULT _hr = put_DistFromUpperBeamEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7199)
inline double IRJointBeamBolts::GetDistFromVertBeamEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromVertBeamEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7200)
inline void IRJointBeamBolts::PutDistFromVertBeamEdge ( double ret ) {
    HRESULT _hr = put_DistFromVertBeamEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7201)
inline long IRJointBeamBolts::GetCenterElement ( ) {
    long _result = 0;
    HRESULT _hr = get_CenterElement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7202)
inline void IRJointBeamBolts::PutCenterElement ( long ret ) {
    HRESULT _hr = put_CenterElement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7203)
inline void IRJointBeamBolts::PutDiameter ( long ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7204)
inline enum IRJointBoltShearPortion IRJointBeamBolts::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7205)
inline void IRJointBeamBolts::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamGirderSeatBolts wrapper method implementations
//

#pragma implementation_key(7206)
inline long IRJointBeamGirderSeatBolts::GetDiameter ( ) {
    long _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7207)
inline _bstr_t IRJointBeamGirderSeatBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7208)
inline void IRJointBeamGirderSeatBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7209)
inline _bstr_t IRJointBeamGirderSeatBolts::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7210)
inline void IRJointBeamGirderSeatBolts::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7211)
inline double IRJointBeamGirderSeatBolts::GetFriction ( ) {
    double _result = 0;
    HRESULT _hr = get_Friction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7212)
inline void IRJointBeamGirderSeatBolts::PutFriction ( double ret ) {
    HRESULT _hr = put_Friction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7213)
inline double IRJointBeamGirderSeatBolts::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7214)
inline long IRJointBeamGirderSeatBolts::GetCols ( ) {
    long _result = 0;
    HRESULT _hr = get_Cols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7215)
inline void IRJointBeamGirderSeatBolts::PutCols ( long ret ) {
    HRESULT _hr = put_Cols(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7216)
inline double IRJointBeamGirderSeatBolts::GetDistFromVertEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromVertEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7217)
inline void IRJointBeamGirderSeatBolts::PutDistFromVertEdge ( double ret ) {
    HRESULT _hr = put_DistFromVertEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7218)
inline double IRJointBeamGirderSeatBolts::GetDistFromPerpendicularArmEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromPerpendicularArmEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7219)
inline void IRJointBeamGirderSeatBolts::PutDistFromPerpendicularArmEdge ( double ret ) {
    HRESULT _hr = put_DistFromPerpendicularArmEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7220)
inline long IRJointBeamGirderSeatBolts::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7221)
inline void IRJointBeamGirderSeatBolts::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7222)
inline double IRJointBeamGirderSeatBolts::GetSpacingV ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7223)
inline void IRJointBeamGirderSeatBolts::PutSpacingV ( double ret ) {
    HRESULT _hr = put_SpacingV(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7224)
inline double IRJointBeamGirderSeatBolts::GetSpacingH ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7225)
inline void IRJointBeamGirderSeatBolts::PutSpacingH ( double ret ) {
    HRESULT _hr = put_SpacingH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7226)
inline void IRJointBeamGirderSeatBolts::PutDiameter ( long ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7227)
inline long IRJointBeamGirderSeatBolts::GetCenterElement ( ) {
    long _result = 0;
    HRESULT _hr = get_CenterElement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7228)
inline void IRJointBeamGirderSeatBolts::PutCenterElement ( long ret ) {
    HRESULT _hr = put_CenterElement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7229)
inline enum IRJointBoltShearPortion IRJointBeamGirderSeatBolts::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7230)
inline void IRJointBeamGirderSeatBolts::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamGirderBeam wrapper method implementations
//

#pragma implementation_key(7231)
inline IRJointProfilePtr IRJointBeamGirderBeam::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7232)
inline IRJointBeamCutPtr IRJointBeamGirderBeam::GetCutEnd ( ) {
    struct IRJointBeamCut * _result = 0;
    HRESULT _hr = get_CutEnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamCutPtr(_result, false);
}

//
// interface IRJointBeamGirderAngle wrapper method implementations
//

#pragma implementation_key(7233)
inline IRJointAnglePtr IRJointBeamGirderAngle::GetElement ( ) {
    struct IRJointAngle * _result = 0;
    HRESULT _hr = get_Element(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointAnglePtr(_result, false);
}

#pragma implementation_key(7234)
inline IRJointMainBoltsPtr IRJointBeamGirderAngle::GetBoltsMain ( ) {
    struct IRJointMainBolts * _result = 0;
    HRESULT _hr = get_BoltsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointMainBoltsPtr(_result, false);
}

#pragma implementation_key(7235)
inline IRJointBeamBoltsPtr IRJointBeamGirderAngle::GetBoltsBeam ( ) {
    struct IRJointBeamBolts * _result = 0;
    HRESULT _hr = get_BoltsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamBoltsPtr(_result, false);
}

#pragma implementation_key(7236)
inline IRJointWeldPtr IRJointBeamGirderAngle::GetWeldsMain ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7237)
inline IRJointWeldPtr IRJointBeamGirderAngle::GetWeldsBeam ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7238)
inline enum IRJointConnectorsType IRJointBeamGirderAngle::GetConnectorsMain ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7239)
inline void IRJointBeamGirderAngle::PutConnectorsMain ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsMain(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7240)
inline enum IRJointConnectorsType IRJointBeamGirderAngle::GetConnectorsBeam ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7241)
inline void IRJointBeamGirderAngle::PutConnectorsBeam ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsBeam(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7242)
inline long IRJointBeamGirderAngle::GetCenterElement ( ) {
    long _result = 0;
    HRESULT _hr = get_CenterElement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7243)
inline void IRJointBeamGirderAngle::PutCenterElement ( long ret ) {
    HRESULT _hr = put_CenterElement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamPlate wrapper method implementations
//

#pragma implementation_key(7244)
inline double IRJointBeamPlate::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7245)
inline void IRJointBeamPlate::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7246)
inline double IRJointBeamPlate::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7247)
inline void IRJointBeamPlate::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7248)
inline double IRJointBeamPlate::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7249)
inline void IRJointBeamPlate::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7250)
inline double IRJointBeamPlate::GetDistFromUpperBeamEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromUpperBeamEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7251)
inline void IRJointBeamPlate::PutDistFromUpperBeamEdge ( double ret ) {
    HRESULT _hr = put_DistFromUpperBeamEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7252)
inline _bstr_t IRJointBeamPlate::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7253)
inline void IRJointBeamPlate::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7254)
inline enum IRJointConnectorsType IRJointBeamPlate::GetConnectorsType ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7255)
inline void IRJointBeamPlate::PutConnectorsType ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7256)
inline IRJointBeamBoltsPtr IRJointBeamPlate::GetBoltsBeam ( ) {
    struct IRJointBeamBolts * _result = 0;
    HRESULT _hr = get_BoltsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamBoltsPtr(_result, false);
}

#pragma implementation_key(7257)
inline IRJointWeldPtr IRJointBeamPlate::GetWeldsMain ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7258)
inline IRJointWeldPtr IRJointBeamPlate::GetWeldsBeam ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7259)
inline VARIANT_BOOL IRJointBeamPlate::GetOneSided ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OneSided(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7260)
inline void IRJointBeamPlate::PutOneSided ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_OneSided(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7261)
inline long IRJointBeamPlate::GetCenterElement ( ) {
    long _result = 0;
    HRESULT _hr = get_CenterElement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7262)
inline void IRJointBeamPlate::PutCenterElement ( long ret ) {
    HRESULT _hr = put_CenterElement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamGirderSeat wrapper method implementations
//

#pragma implementation_key(7263)
inline _bstr_t IRJointBeamGirderSeat::GetSection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7264)
inline void IRJointBeamGirderSeat::PutSection ( _bstr_t ret ) {
    HRESULT _hr = put_Section(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7265)
inline _bstr_t IRJointBeamGirderSeat::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7266)
inline void IRJointBeamGirderSeat::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7267)
inline double IRJointBeamGirderSeat::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7268)
inline void IRJointBeamGirderSeat::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7269)
inline enum IRJointConnectorsType IRJointBeamGirderSeat::GetConnectorsToWebType ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsToWebType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7270)
inline void IRJointBeamGirderSeat::PutConnectorsToWebType ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsToWebType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7271)
inline IRJointBeamGirderSeatBoltsPtr IRJointBeamGirderSeat::GetBoltsGirder ( ) {
    struct IRJointBeamGirderSeatBolts * _result = 0;
    HRESULT _hr = get_BoltsGirder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderSeatBoltsPtr(_result, false);
}

#pragma implementation_key(7272)
inline IRJointBeamGirderSeatBoltsPtr IRJointBeamGirderSeat::GetBoltsBeam ( ) {
    struct IRJointBeamGirderSeatBolts * _result = 0;
    HRESULT _hr = get_BoltsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderSeatBoltsPtr(_result, false);
}

#pragma implementation_key(7273)
inline IRJointWeldPtr IRJointBeamGirderSeat::GetWeldsGirder ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsGirder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7274)
inline IRJointWeldPtr IRJointBeamGirderSeat::GetWeldsBeam ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7275)
inline enum IRJointConnectorsType IRJointBeamGirderSeat::GetConnectorsToBeamFlange ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsToBeamFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7276)
inline void IRJointBeamGirderSeat::PutConnectorsToBeamFlange ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsToBeamFlange(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7277)
inline enum IRJointAngleProfilePosition IRJointBeamGirderSeat::GetProfilePosition ( ) {
    enum IRJointAngleProfilePosition _result;
    HRESULT _hr = get_ProfilePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7278)
inline void IRJointBeamGirderSeat::PutProfilePosition ( enum IRJointAngleProfilePosition ret ) {
    HRESULT _hr = put_ProfilePosition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7279)
inline IRJointProfilePtr IRJointBeamGirderSeat::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7280)
inline long IRJointBeamGirderSeat::GetExist ( ) {
    long _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7281)
inline void IRJointBeamGirderSeat::PutExist ( long ret ) {
    HRESULT _hr = put_Exist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamGirderStiffener wrapper method implementations
//

#pragma implementation_key(7282)
inline double IRJointBeamGirderStiffener::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7283)
inline void IRJointBeamGirderStiffener::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7284)
inline double IRJointBeamGirderStiffener::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7285)
inline void IRJointBeamGirderStiffener::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7286)
inline double IRJointBeamGirderStiffener::GetCutLength ( ) {
    double _result = 0;
    HRESULT _hr = get_CutLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7287)
inline void IRJointBeamGirderStiffener::PutCutLength ( double ret ) {
    HRESULT _hr = put_CutLength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7288)
inline double IRJointBeamGirderStiffener::GetCutHeightUp ( ) {
    double _result = 0;
    HRESULT _hr = get_CutHeightUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7289)
inline void IRJointBeamGirderStiffener::PutCutHeightUp ( double ret ) {
    HRESULT _hr = put_CutHeightUp(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7290)
inline double IRJointBeamGirderStiffener::GetCutHeightDown ( ) {
    double _result = 0;
    HRESULT _hr = get_CutHeightDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7291)
inline void IRJointBeamGirderStiffener::PutCutHeightDown ( double ret ) {
    HRESULT _hr = put_CutHeightDown(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7292)
inline double IRJointBeamGirderStiffener::GetCutEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_CutEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7293)
inline void IRJointBeamGirderStiffener::PutCutEdge ( double ret ) {
    HRESULT _hr = put_CutEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7294)
inline _bstr_t IRJointBeamGirderStiffener::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7295)
inline void IRJointBeamGirderStiffener::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7296)
inline enum IRJointConnectorsType IRJointBeamGirderStiffener::GetConnectorsType ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7297)
inline void IRJointBeamGirderStiffener::PutConnectorsType ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7298)
inline IRJointBeamBoltsPtr IRJointBeamGirderStiffener::GetBoltsBeam ( ) {
    struct IRJointBeamBolts * _result = 0;
    HRESULT _hr = get_BoltsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamBoltsPtr(_result, false);
}

#pragma implementation_key(7299)
inline IRJointWeldPtr IRJointBeamGirderStiffener::GetWeldsBeam ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

//
// interface IRJointBeamGirder wrapper method implementations
//

#pragma implementation_key(7300)
inline IRJointProfilePtr IRJointBeamGirder::GetGirder ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Girder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7301)
inline IRJointBeamGirderBeamPtr IRJointBeamGirder::GetBeamLeft ( ) {
    struct IRJointBeamGirderBeam * _result = 0;
    HRESULT _hr = get_BeamLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderBeamPtr(_result, false);
}

#pragma implementation_key(7302)
inline IRJointBeamGirderBeamPtr IRJointBeamGirder::GetBeamRight ( ) {
    struct IRJointBeamGirderBeam * _result = 0;
    HRESULT _hr = get_BeamRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderBeamPtr(_result, false);
}

#pragma implementation_key(7303)
inline IRJointBeamGirderAnglePtr IRJointBeamGirder::GetAngleLeft ( ) {
    struct IRJointBeamGirderAngle * _result = 0;
    HRESULT _hr = get_AngleLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderAnglePtr(_result, false);
}

#pragma implementation_key(7304)
inline IRJointBeamGirderAnglePtr IRJointBeamGirder::GetAngleRight ( ) {
    struct IRJointBeamGirderAngle * _result = 0;
    HRESULT _hr = get_AngleRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderAnglePtr(_result, false);
}

#pragma implementation_key(7305)
inline IRJointBeamGirderStiffenerPtr IRJointBeamGirder::GetStiffenerLeft ( ) {
    struct IRJointBeamGirderStiffener * _result = 0;
    HRESULT _hr = get_StiffenerLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderStiffenerPtr(_result, false);
}

#pragma implementation_key(7306)
inline IRJointBeamGirderStiffenerPtr IRJointBeamGirder::GetStiffenerRight ( ) {
    struct IRJointBeamGirderStiffener * _result = 0;
    HRESULT _hr = get_StiffenerRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderStiffenerPtr(_result, false);
}

#pragma implementation_key(7307)
inline IRJointBeamPlatePtr IRJointBeamGirder::GetPlateLeft ( ) {
    struct IRJointBeamPlate * _result = 0;
    HRESULT _hr = get_PlateLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamPlatePtr(_result, false);
}

#pragma implementation_key(7308)
inline IRJointBeamPlatePtr IRJointBeamGirder::GetPlateRight ( ) {
    struct IRJointBeamPlate * _result = 0;
    HRESULT _hr = get_PlateRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamPlatePtr(_result, false);
}

#pragma implementation_key(7309)
inline IRJointBeamGirderSeatPtr IRJointBeamGirder::GetSeatLeftUp ( ) {
    struct IRJointBeamGirderSeat * _result = 0;
    HRESULT _hr = get_SeatLeftUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderSeatPtr(_result, false);
}

#pragma implementation_key(7310)
inline IRJointBeamGirderSeatPtr IRJointBeamGirder::GetSeatLeftDown ( ) {
    struct IRJointBeamGirderSeat * _result = 0;
    HRESULT _hr = get_SeatLeftDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderSeatPtr(_result, false);
}

#pragma implementation_key(7311)
inline IRJointBeamGirderSeatPtr IRJointBeamGirder::GetSeatRightUp ( ) {
    struct IRJointBeamGirderSeat * _result = 0;
    HRESULT _hr = get_SeatRightUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderSeatPtr(_result, false);
}

#pragma implementation_key(7312)
inline IRJointBeamGirderSeatPtr IRJointBeamGirder::GetSeatRightDown ( ) {
    struct IRJointBeamGirderSeat * _result = 0;
    HRESULT _hr = get_SeatRightDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamGirderSeatPtr(_result, false);
}

#pragma implementation_key(7313)
inline double IRJointBeamGirder::GetDistGirderToBeamLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_DistGirderToBeamLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7314)
inline void IRJointBeamGirder::PutDistGirderToBeamLeft ( double ret ) {
    HRESULT _hr = put_DistGirderToBeamLeft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7315)
inline double IRJointBeamGirder::GetDistGirderToBeamRight ( ) {
    double _result = 0;
    HRESULT _hr = get_DistGirderToBeamRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7316)
inline void IRJointBeamGirder::PutDistGirderToBeamRight ( double ret ) {
    HRESULT _hr = put_DistGirderToBeamRight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7317)
inline double IRJointBeamGirder::GetDistGirderFlangeToBeamFlangeLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_DistGirderFlangeToBeamFlangeLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7318)
inline void IRJointBeamGirder::PutDistGirderFlangeToBeamFlangeLeft ( double ret ) {
    HRESULT _hr = put_DistGirderFlangeToBeamFlangeLeft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7319)
inline double IRJointBeamGirder::GetDistGirderFlangeToBeamFlangeRight ( ) {
    double _result = 0;
    HRESULT _hr = get_DistGirderFlangeToBeamFlangeRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7320)
inline void IRJointBeamGirder::PutDistGirderFlangeToBeamFlangeRight ( double ret ) {
    HRESULT _hr = put_DistGirderFlangeToBeamFlangeRight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7321)
inline enum IRJointElementType IRJointBeamGirder::GetElementType ( ) {
    enum IRJointElementType _result;
    HRESULT _hr = get_ElementType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7322)
inline void IRJointBeamGirder::PutElementType ( enum IRJointElementType ret ) {
    HRESULT _hr = put_ElementType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7323)
inline VARIANT_BOOL IRJointBeamGirder::GetIsSymetric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSymetric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7324)
inline void IRJointBeamGirder::PutIsSymetric ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSymetric(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7325)
inline VARIANT_BOOL IRJointBeamGirder::GetSeatLeftUpExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SeatLeftUpExist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7326)
inline void IRJointBeamGirder::PutSeatLeftUpExist ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SeatLeftUpExist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7327)
inline VARIANT_BOOL IRJointBeamGirder::GetSeatUpRightExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SeatUpRightExist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7328)
inline void IRJointBeamGirder::PutSeatUpRightExist ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SeatUpRightExist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7329)
inline VARIANT_BOOL IRJointBeamGirder::GetBeamLeftExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BeamLeftExist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7330)
inline void IRJointBeamGirder::PutBeamLeftExist ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_BeamLeftExist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7331)
inline IRobotNamesArrayPtr IRJointBeamGirder::GetBoltsDimensionNamesVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionNamesVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7332)
inline IRobotNamesArrayPtr IRJointBeamGirder::GetBoltsClassVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsClassVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7333)
inline IRobotValuesArrayPtr IRJointBeamGirder::GetBoltsDimensionsVector ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionsVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(7334)
inline VARIANT_BOOL IRJointBeamGirder::GetIsShearPortionAllBolts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7335)
inline void IRJointBeamGirder::PutIsShearPortionAllBolts ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7336)
inline enum IRJointBoltShearPortion IRJointBeamGirder::GetShearPortionAllBolts ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7337)
inline void IRJointBeamGirder::PutShearPortionAllBolts ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamGirderLoad wrapper method implementations
//

#pragma implementation_key(7338)
inline double IRJointBeamGirderLoad::GetLFx ( ) {
    double _result = 0;
    HRESULT _hr = get_LFx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7339)
inline void IRJointBeamGirderLoad::PutLFx ( double ret ) {
    HRESULT _hr = put_LFx(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7340)
inline double IRJointBeamGirderLoad::GetLFz ( ) {
    double _result = 0;
    HRESULT _hr = get_LFz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7341)
inline void IRJointBeamGirderLoad::PutLFz ( double ret ) {
    HRESULT _hr = put_LFz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7342)
inline double IRJointBeamGirderLoad::GetLMy ( ) {
    double _result = 0;
    HRESULT _hr = get_LMy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7343)
inline void IRJointBeamGirderLoad::PutLMy ( double ret ) {
    HRESULT _hr = put_LMy(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7344)
inline double IRJointBeamGirderLoad::GetRFx ( ) {
    double _result = 0;
    HRESULT _hr = get_RFx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7345)
inline void IRJointBeamGirderLoad::PutRFx ( double ret ) {
    HRESULT _hr = put_RFx(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7346)
inline double IRJointBeamGirderLoad::GetRFz ( ) {
    double _result = 0;
    HRESULT _hr = get_RFz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7347)
inline void IRJointBeamGirderLoad::PutRFz ( double ret ) {
    HRESULT _hr = put_RFz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7348)
inline double IRJointBeamGirderLoad::GetRMy ( ) {
    double _result = 0;
    HRESULT _hr = get_RMy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7349)
inline void IRJointBeamGirderLoad::PutRMy ( double ret ) {
    HRESULT _hr = put_RMy(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamAngle wrapper method implementations
//

#pragma implementation_key(7350)
inline IRJointAnglePtr IRJointBeamAngle::GetElement ( ) {
    struct IRJointAngle * _result = 0;
    HRESULT _hr = get_Element(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointAnglePtr(_result, false);
}

#pragma implementation_key(7351)
inline IRJointMainBoltsPtr IRJointBeamAngle::GetBoltsMain ( ) {
    struct IRJointMainBolts * _result = 0;
    HRESULT _hr = get_BoltsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointMainBoltsPtr(_result, false);
}

#pragma implementation_key(7352)
inline IRJointBeamBoltsPtr IRJointBeamAngle::GetBoltsBeam ( ) {
    struct IRJointBeamBolts * _result = 0;
    HRESULT _hr = get_BoltsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamBoltsPtr(_result, false);
}

#pragma implementation_key(7353)
inline IRJointWeldPtr IRJointBeamAngle::GetWeldsMain ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7354)
inline IRJointWeldPtr IRJointBeamAngle::GetWeldsBeam ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7355)
inline enum IRJointConnectorsType IRJointBeamAngle::GetConnectorsMain ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7356)
inline void IRJointBeamAngle::PutConnectorsMain ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsMain(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7357)
inline enum IRJointConnectorsType IRJointBeamAngle::GetConnectorsBeam ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7358)
inline void IRJointBeamAngle::PutConnectorsBeam ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsBeam(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7359)
inline long IRJointBeamAngle::GetCenterElement ( ) {
    long _result = 0;
    HRESULT _hr = get_CenterElement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7360)
inline void IRJointBeamAngle::PutCenterElement ( long ret ) {
    HRESULT _hr = put_CenterElement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamSeatMainBolts wrapper method implementations
//

#pragma implementation_key(7361)
inline _bstr_t IRJointBeamSeatMainBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7362)
inline void IRJointBeamSeatMainBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7363)
inline _bstr_t IRJointBeamSeatMainBolts::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7364)
inline void IRJointBeamSeatMainBolts::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7365)
inline long IRJointBeamSeatMainBolts::GetDiameter ( ) {
    long _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7366)
inline double IRJointBeamSeatMainBolts::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7367)
inline double IRJointBeamSeatMainBolts::GetFriction ( ) {
    double _result = 0;
    HRESULT _hr = get_Friction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7368)
inline void IRJointBeamSeatMainBolts::PutFriction ( double ret ) {
    HRESULT _hr = put_Friction(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7369)
inline long IRJointBeamSeatMainBolts::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7370)
inline void IRJointBeamSeatMainBolts::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7371)
inline long IRJointBeamSeatMainBolts::GetCols ( ) {
    long _result = 0;
    HRESULT _hr = get_Cols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7372)
inline void IRJointBeamSeatMainBolts::PutCols ( long ret ) {
    HRESULT _hr = put_Cols(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7373)
inline double IRJointBeamSeatMainBolts::GetSpacingV ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7374)
inline void IRJointBeamSeatMainBolts::PutSpacingV ( double ret ) {
    HRESULT _hr = put_SpacingV(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7375)
inline double IRJointBeamSeatMainBolts::GetSpacingH ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7376)
inline void IRJointBeamSeatMainBolts::PutSpacingH ( double ret ) {
    HRESULT _hr = put_SpacingH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7377)
inline double IRJointBeamSeatMainBolts::GetDistFromFlangeEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromFlangeEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7378)
inline void IRJointBeamSeatMainBolts::PutDistFromFlangeEdge ( double ret ) {
    HRESULT _hr = put_DistFromFlangeEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7379)
inline double IRJointBeamSeatMainBolts::GetDistFromVertElementEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistFromVertElementEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7380)
inline void IRJointBeamSeatMainBolts::PutDistFromVertElementEdge ( double ret ) {
    HRESULT _hr = put_DistFromVertElementEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7381)
inline void IRJointBeamSeatMainBolts::PutDiameter ( long ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7382)
inline long IRJointBeamSeatMainBolts::GetCenterElement ( ) {
    long _result = 0;
    HRESULT _hr = get_CenterElement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7383)
inline void IRJointBeamSeatMainBolts::PutCenterElement ( long ret ) {
    HRESULT _hr = put_CenterElement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7384)
inline enum IRJointBoltShearPortion IRJointBeamSeatMainBolts::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7385)
inline void IRJointBeamSeatMainBolts::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamSeatL wrapper method implementations
//

#pragma implementation_key(7386)
inline _bstr_t IRJointBeamSeatL::GetSection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7387)
inline void IRJointBeamSeatL::PutSection ( _bstr_t ret ) {
    HRESULT _hr = put_Section(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7388)
inline _bstr_t IRJointBeamSeatL::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7389)
inline void IRJointBeamSeatL::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7390)
inline double IRJointBeamSeatL::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7391)
inline void IRJointBeamSeatL::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7392)
inline enum IRJointConnectorsType IRJointBeamSeatL::GetConnectorsToMain ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsToMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7393)
inline void IRJointBeamSeatL::PutConnectorsToMain ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsToMain(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7394)
inline enum IRJointConnectorsType IRJointBeamSeatL::GetConnectorsToBeam ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsToBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7395)
inline void IRJointBeamSeatL::PutConnectorsToBeam ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsToBeam(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7396)
inline IRJointBeamSeatMainBoltsPtr IRJointBeamSeatL::GetBoltsMain ( ) {
    struct IRJointBeamSeatMainBolts * _result = 0;
    HRESULT _hr = get_BoltsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatMainBoltsPtr(_result, false);
}

#pragma implementation_key(7397)
inline IRJointMainBoltsPtr IRJointBeamSeatL::GetBoltsBeam ( ) {
    struct IRJointMainBolts * _result = 0;
    HRESULT _hr = get_BoltsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointMainBoltsPtr(_result, false);
}

#pragma implementation_key(7398)
inline IRJointWeldPtr IRJointBeamSeatL::GetWeldsMain ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7399)
inline IRJointWeldPtr IRJointBeamSeatL::GetWeldsBeam ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7400)
inline enum IRJointAngleProfilePosition IRJointBeamSeatL::GetProfilePosition ( ) {
    enum IRJointAngleProfilePosition _result;
    HRESULT _hr = get_ProfilePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7401)
inline void IRJointBeamSeatL::PutProfilePosition ( enum IRJointAngleProfilePosition ret ) {
    HRESULT _hr = put_ProfilePosition(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7402)
inline IRJointProfilePtr IRJointBeamSeatL::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7403)
inline long IRJointBeamSeatL::GetExist ( ) {
    long _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7404)
inline void IRJointBeamSeatL::PutExist ( long ret ) {
    HRESULT _hr = put_Exist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamSeatT wrapper method implementations
//

#pragma implementation_key(7405)
inline _bstr_t IRJointBeamSeatT::GetSection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7406)
inline void IRJointBeamSeatT::PutSection ( _bstr_t ret ) {
    HRESULT _hr = put_Section(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7407)
inline _bstr_t IRJointBeamSeatT::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7408)
inline void IRJointBeamSeatT::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7409)
inline double IRJointBeamSeatT::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7410)
inline void IRJointBeamSeatT::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7411)
inline enum IRJointConnectorsType IRJointBeamSeatT::GetConnectorsToMain ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsToMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7412)
inline void IRJointBeamSeatT::PutConnectorsToMain ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsToMain(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7413)
inline enum IRJointConnectorsType IRJointBeamSeatT::GetConnectorsToBeam ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsToBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7414)
inline void IRJointBeamSeatT::PutConnectorsToBeam ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsToBeam(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7415)
inline IRJointBeamSeatMainBoltsPtr IRJointBeamSeatT::GetBoltsMain ( ) {
    struct IRJointBeamSeatMainBolts * _result = 0;
    HRESULT _hr = get_BoltsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatMainBoltsPtr(_result, false);
}

#pragma implementation_key(7416)
inline IRJointMainBoltsPtr IRJointBeamSeatT::GetBoltsBeam ( ) {
    struct IRJointMainBolts * _result = 0;
    HRESULT _hr = get_BoltsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointMainBoltsPtr(_result, false);
}

#pragma implementation_key(7417)
inline IRJointWeldPtr IRJointBeamSeatT::GetWeldsMain ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7418)
inline IRJointWeldPtr IRJointBeamSeatT::GetWeldsBeam ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7419)
inline IRJointProfilePtr IRJointBeamSeatT::GetProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7420)
inline long IRJointBeamSeatT::GetExist ( ) {
    long _result = 0;
    HRESULT _hr = get_Exist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7421)
inline void IRJointBeamSeatT::PutExist ( long ret ) {
    HRESULT _hr = put_Exist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointBeamColumnFlangePlate wrapper method implementations
//

#pragma implementation_key(7422)
inline double IRJointBeamColumnFlangePlate::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7423)
inline void IRJointBeamColumnFlangePlate::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7424)
inline double IRJointBeamColumnFlangePlate::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7425)
inline void IRJointBeamColumnFlangePlate::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7426)
inline double IRJointBeamColumnFlangePlate::GetThick ( ) {
    double _result = 0;
    HRESULT _hr = get_Thick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7427)
inline void IRJointBeamColumnFlangePlate::PutThick ( double ret ) {
    HRESULT _hr = put_Thick(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7428)
inline _bstr_t IRJointBeamColumnFlangePlate::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7429)
inline void IRJointBeamColumnFlangePlate::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7430)
inline enum IRJointConnectorsType IRJointBeamColumnFlangePlate::GetConnectorsType ( ) {
    enum IRJointConnectorsType _result;
    HRESULT _hr = get_ConnectorsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7431)
inline void IRJointBeamColumnFlangePlate::PutConnectorsType ( enum IRJointConnectorsType ret ) {
    HRESULT _hr = put_ConnectorsType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7432)
inline IRJointMainBoltsPtr IRJointBeamColumnFlangePlate::GetBolts ( ) {
    struct IRJointMainBolts * _result = 0;
    HRESULT _hr = get_Bolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointMainBoltsPtr(_result, false);
}

#pragma implementation_key(7433)
inline IRJointWeldPtr IRJointBeamColumnFlangePlate::GetWeldsMain ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsMain(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

#pragma implementation_key(7434)
inline IRJointWeldPtr IRJointBeamColumnFlangePlate::GetWeldsFlange ( ) {
    struct IRJointWeld * _result = 0;
    HRESULT _hr = get_WeldsFlange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointWeldPtr(_result, false);
}

//
// interface IRJointBeamColumn wrapper method implementations
//

#pragma implementation_key(7435)
inline IRJointProfilePtr IRJointBeamColumn::GetColumn ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_Column(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7436)
inline IRJointProfilePtr IRJointBeamColumn::GetBeamLeft ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_BeamLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7437)
inline IRJointProfilePtr IRJointBeamColumn::GetBeamRight ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_BeamRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7438)
inline IRJointBeamAnglePtr IRJointBeamColumn::GetAngleLeft ( ) {
    struct IRJointBeamAngle * _result = 0;
    HRESULT _hr = get_AngleLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamAnglePtr(_result, false);
}

#pragma implementation_key(7439)
inline IRJointBeamAnglePtr IRJointBeamColumn::GetAngleRight ( ) {
    struct IRJointBeamAngle * _result = 0;
    HRESULT _hr = get_AngleRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamAnglePtr(_result, false);
}

#pragma implementation_key(7440)
inline IRJointBeamPlatePtr IRJointBeamColumn::GetPlateLeft ( ) {
    struct IRJointBeamPlate * _result = 0;
    HRESULT _hr = get_PlateLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamPlatePtr(_result, false);
}

#pragma implementation_key(7441)
inline IRJointBeamPlatePtr IRJointBeamColumn::GetPlateRight ( ) {
    struct IRJointBeamPlate * _result = 0;
    HRESULT _hr = get_PlateRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamPlatePtr(_result, false);
}

#pragma implementation_key(7442)
inline IRJointBeamSeatLPtr IRJointBeamColumn::GetLSeatLeftUp ( ) {
    struct IRJointBeamSeatL * _result = 0;
    HRESULT _hr = get_LSeatLeftUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatLPtr(_result, false);
}

#pragma implementation_key(7443)
inline IRJointBeamSeatLPtr IRJointBeamColumn::GetLSeatLeftDown ( ) {
    struct IRJointBeamSeatL * _result = 0;
    HRESULT _hr = get_LSeatLeftDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatLPtr(_result, false);
}

#pragma implementation_key(7444)
inline IRJointBeamSeatLPtr IRJointBeamColumn::GetLSeatRightUp ( ) {
    struct IRJointBeamSeatL * _result = 0;
    HRESULT _hr = get_LSeatRightUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatLPtr(_result, false);
}

#pragma implementation_key(7445)
inline IRJointBeamSeatLPtr IRJointBeamColumn::GetLSeatRightDown ( ) {
    struct IRJointBeamSeatL * _result = 0;
    HRESULT _hr = get_LSeatRightDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatLPtr(_result, false);
}

#pragma implementation_key(7446)
inline IRJointBeamSeatTPtr IRJointBeamColumn::GetTSeatLeftUp ( ) {
    struct IRJointBeamSeatT * _result = 0;
    HRESULT _hr = get_TSeatLeftUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatTPtr(_result, false);
}

#pragma implementation_key(7447)
inline IRJointBeamSeatTPtr IRJointBeamColumn::GetTSeatLeftDown ( ) {
    struct IRJointBeamSeatT * _result = 0;
    HRESULT _hr = get_TSeatLeftDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatTPtr(_result, false);
}

#pragma implementation_key(7448)
inline IRJointBeamSeatTPtr IRJointBeamColumn::GetTSeatRightUp ( ) {
    struct IRJointBeamSeatT * _result = 0;
    HRESULT _hr = get_TSeatRightUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatTPtr(_result, false);
}

#pragma implementation_key(7449)
inline IRJointBeamSeatTPtr IRJointBeamColumn::GetTSeatRightDown ( ) {
    struct IRJointBeamSeatT * _result = 0;
    HRESULT _hr = get_TSeatRightDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamSeatTPtr(_result, false);
}

#pragma implementation_key(7450)
inline IRJointBeamColumnFlangePlatePtr IRJointBeamColumn::GetBracketLeftUp ( ) {
    struct IRJointBeamColumnFlangePlate * _result = 0;
    HRESULT _hr = get_BracketLeftUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamColumnFlangePlatePtr(_result, false);
}

#pragma implementation_key(7451)
inline IRJointBeamColumnFlangePlatePtr IRJointBeamColumn::GetBracketLeftDown ( ) {
    struct IRJointBeamColumnFlangePlate * _result = 0;
    HRESULT _hr = get_BracketLeftDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamColumnFlangePlatePtr(_result, false);
}

#pragma implementation_key(7452)
inline IRJointBeamColumnFlangePlatePtr IRJointBeamColumn::GetBracketRightUp ( ) {
    struct IRJointBeamColumnFlangePlate * _result = 0;
    HRESULT _hr = get_BracketRightUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamColumnFlangePlatePtr(_result, false);
}

#pragma implementation_key(7453)
inline IRJointBeamColumnFlangePlatePtr IRJointBeamColumn::GetBracketRightDown ( ) {
    struct IRJointBeamColumnFlangePlate * _result = 0;
    HRESULT _hr = get_BracketRightDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamColumnFlangePlatePtr(_result, false);
}

#pragma implementation_key(7454)
inline double IRJointBeamColumn::GetDistColumnToBeamLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_DistColumnToBeamLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7455)
inline void IRJointBeamColumn::PutDistColumnToBeamLeft ( double ret ) {
    HRESULT _hr = put_DistColumnToBeamLeft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7456)
inline double IRJointBeamColumn::GetDistColumnToBeamRight ( ) {
    double _result = 0;
    HRESULT _hr = get_DistColumnToBeamRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7457)
inline void IRJointBeamColumn::PutDistColumnToBeamRight ( double ret ) {
    HRESULT _hr = put_DistColumnToBeamRight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7458)
inline enum IRJointBeamColumnElementType IRJointBeamColumn::GetElementType ( ) {
    enum IRJointBeamColumnElementType _result;
    HRESULT _hr = get_ElementType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7459)
inline void IRJointBeamColumn::PutElementType ( enum IRJointBeamColumnElementType ret ) {
    HRESULT _hr = put_ElementType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7460)
inline VARIANT_BOOL IRJointBeamColumn::GetBeamLeftExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BeamLeftExist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7461)
inline void IRJointBeamColumn::PutBeamLeftExist ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_BeamLeftExist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7462)
inline VARIANT_BOOL IRJointBeamColumn::GetIsSymetric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSymetric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7463)
inline void IRJointBeamColumn::PutIsSymetric ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSymetric(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7464)
inline VARIANT_BOOL IRJointBeamColumn::GetSeatLeftUpExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SeatLeftUpExist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7465)
inline void IRJointBeamColumn::PutSeatLeftUpExist ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SeatLeftUpExist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7466)
inline VARIANT_BOOL IRJointBeamColumn::GetSeatUpRightExist ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SeatUpRightExist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7467)
inline void IRJointBeamColumn::PutSeatUpRightExist ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SeatUpRightExist(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7468)
inline IRobotNamesArrayPtr IRJointBeamColumn::GetBoltsDimensionNamesVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionNamesVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7469)
inline IRobotNamesArrayPtr IRJointBeamColumn::GetBoltsClassVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsClassVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7470)
inline IRobotValuesArrayPtr IRJointBeamColumn::GetBoltsDimensionsVector ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionsVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(7471)
inline IRJointBeamCutPtr IRJointBeamColumn::GetBeamLeftCutEnd ( ) {
    struct IRJointBeamCut * _result = 0;
    HRESULT _hr = get_BeamLeftCutEnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamCutPtr(_result, false);
}

#pragma implementation_key(7472)
inline IRJointBeamCutPtr IRJointBeamColumn::GetBeamRightCutEnd ( ) {
    struct IRJointBeamCut * _result = 0;
    HRESULT _hr = get_BeamRightCutEnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointBeamCutPtr(_result, false);
}

#pragma implementation_key(7473)
inline VARIANT_BOOL IRJointBeamColumn::GetIsShearPortionAllBolts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7474)
inline void IRJointBeamColumn::PutIsShearPortionAllBolts ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7475)
inline enum IRJointBoltShearPortion IRJointBeamColumn::GetShearPortionAllBolts ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortionAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7476)
inline void IRJointBeamColumn::PutShearPortionAllBolts ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortionAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointSplicePlate wrapper method implementations
//

#pragma implementation_key(7477)
inline enum IRJointSplicePlateType IRJointSplicePlate::GetType ( ) {
    enum IRJointSplicePlateType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7478)
inline void IRJointSplicePlate::PutType ( enum IRJointSplicePlateType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7479)
inline long IRJointSplicePlate::GetCenter ( ) {
    long _result = 0;
    HRESULT _hr = get_Center(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7480)
inline void IRJointSplicePlate::PutCenter ( long ret ) {
    HRESULT _hr = put_Center(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7481)
inline long IRJointSplicePlate::GetOneSided ( ) {
    long _result = 0;
    HRESULT _hr = get_OneSided(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7482)
inline void IRJointSplicePlate::PutOneSided ( long ret ) {
    HRESULT _hr = put_OneSided(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7483)
inline double IRJointSplicePlate::GetDistanceFromPrimaryBarEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromPrimaryBarEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7484)
inline void IRJointSplicePlate::PutDistanceFromPrimaryBarEdge ( double ret ) {
    HRESULT _hr = put_DistanceFromPrimaryBarEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7485)
inline double IRJointSplicePlate::GetDistanceFromSecondaryBarEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromSecondaryBarEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7486)
inline void IRJointSplicePlate::PutDistanceFromSecondaryBarEdge ( double ret ) {
    HRESULT _hr = put_DistanceFromSecondaryBarEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7487)
inline double IRJointSplicePlate::GetDistanceFromEdgeOrPrimaryBarAxis ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromEdgeOrPrimaryBarAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7488)
inline void IRJointSplicePlate::PutDistanceFromEdgeOrPrimaryBarAxis ( double ret ) {
    HRESULT _hr = put_DistanceFromEdgeOrPrimaryBarAxis(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7489)
inline _bstr_t IRJointSplicePlate::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7490)
inline void IRJointSplicePlate::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointSpliceBolts wrapper method implementations
//

#pragma implementation_key(7491)
inline enum IRJointSpliceBoltsSetType IRJointSpliceBolts::GetSetType ( ) {
    enum IRJointSpliceBoltsSetType _result;
    HRESULT _hr = get_SetType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7492)
inline void IRJointSpliceBolts::PutSetType ( enum IRJointSpliceBoltsSetType ret ) {
    HRESULT _hr = put_SetType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7493)
inline _bstr_t IRJointSpliceBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7494)
inline void IRJointSpliceBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7495)
inline _bstr_t IRJointSpliceBolts::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7496)
inline void IRJointSpliceBolts::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7497)
inline double IRJointSpliceBolts::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7498)
inline void IRJointSpliceBolts::PutDiameter ( double ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7499)
inline enum IRJointBoltShearPortion IRJointSpliceBolts::GetShearPortion ( ) {
    enum IRJointBoltShearPortion _result;
    HRESULT _hr = get_ShearPortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7500)
inline void IRJointSpliceBolts::PutShearPortion ( enum IRJointBoltShearPortion ret ) {
    HRESULT _hr = put_ShearPortion(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7501)
inline enum IRJointSpliceBoltsConnectionCategory IRJointSpliceBolts::GetConnectionCategory ( ) {
    enum IRJointSpliceBoltsConnectionCategory _result;
    HRESULT _hr = get_ConnectionCategory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7502)
inline void IRJointSpliceBolts::PutConnectionCategory ( enum IRJointSpliceBoltsConnectionCategory ret ) {
    HRESULT _hr = put_ConnectionCategory(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7503)
inline double IRJointSpliceBolts::GetSlipFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_SlipFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7504)
inline void IRJointSpliceBolts::PutSlipFactor ( double ret ) {
    HRESULT _hr = put_SlipFactor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7505)
inline double IRJointSpliceBolts::GetKs ( ) {
    double _result = 0;
    HRESULT _hr = get_Ks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7506)
inline void IRJointSpliceBolts::PutKs ( double ret ) {
    HRESULT _hr = put_Ks(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7507)
inline long IRJointSpliceBolts::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7508)
inline void IRJointSpliceBolts::PutRows ( long ret ) {
    HRESULT _hr = put_Rows(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7509)
inline long IRJointSpliceBolts::GetCols ( ) {
    long _result = 0;
    HRESULT _hr = get_Cols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7510)
inline void IRJointSpliceBolts::PutCols ( long ret ) {
    HRESULT _hr = put_Cols(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7511)
inline long IRJointSpliceBolts::GetCenter ( ) {
    long _result = 0;
    HRESULT _hr = get_Center(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7512)
inline void IRJointSpliceBolts::PutCenter ( long ret ) {
    HRESULT _hr = put_Center(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7513)
inline double IRJointSpliceBolts::GetSpacingV ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingV(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7514)
inline void IRJointSpliceBolts::PutSpacingV ( double ret ) {
    HRESULT _hr = put_SpacingV(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7515)
inline double IRJointSpliceBolts::GetSpacingH ( ) {
    double _result = 0;
    HRESULT _hr = get_SpacingH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7516)
inline void IRJointSpliceBolts::PutSpacingH ( double ret ) {
    HRESULT _hr = put_SpacingH(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7517)
inline double IRJointSpliceBolts::GetDistanceFromHorizontalEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromHorizontalEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7518)
inline void IRJointSpliceBolts::PutDistanceFromHorizontalEdge ( double ret ) {
    HRESULT _hr = put_DistanceFromHorizontalEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7519)
inline double IRJointSpliceBolts::GetDistanceFromVerticalEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromVerticalEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7520)
inline void IRJointSpliceBolts::PutDistanceFromVerticalEdge ( double ret ) {
    HRESULT _hr = put_DistanceFromVerticalEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointSpliceWelds wrapper method implementations
//

#pragma implementation_key(7521)
inline double IRJointSpliceWelds::GetWebThicknessSecondary ( ) {
    double _result = 0;
    HRESULT _hr = get_WebThicknessSecondary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7522)
inline void IRJointSpliceWelds::PutWebThicknessSecondary ( double ret ) {
    HRESULT _hr = put_WebThicknessSecondary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7523)
inline double IRJointSpliceWelds::GetWebThicknessPrimary ( ) {
    double _result = 0;
    HRESULT _hr = get_WebThicknessPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7524)
inline void IRJointSpliceWelds::PutWebThicknessPrimary ( double ret ) {
    HRESULT _hr = put_WebThicknessPrimary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7525)
inline double IRJointSpliceWelds::GetUpperFlangeExternalThicknessSecondary ( ) {
    double _result = 0;
    HRESULT _hr = get_UpperFlangeExternalThicknessSecondary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7526)
inline void IRJointSpliceWelds::PutUpperFlangeExternalThicknessSecondary ( double ret ) {
    HRESULT _hr = put_UpperFlangeExternalThicknessSecondary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7527)
inline double IRJointSpliceWelds::GetUpperFlangeExternalThicknessPrimary ( ) {
    double _result = 0;
    HRESULT _hr = get_UpperFlangeExternalThicknessPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7528)
inline void IRJointSpliceWelds::PutUpperFlangeExternalThicknessPrimary ( double ret ) {
    HRESULT _hr = put_UpperFlangeExternalThicknessPrimary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7529)
inline double IRJointSpliceWelds::GetUpperFlangeInternalThicknessSecondary ( ) {
    double _result = 0;
    HRESULT _hr = get_UpperFlangeInternalThicknessSecondary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7530)
inline void IRJointSpliceWelds::PutUpperFlangeInternalThicknessSecondary ( double ret ) {
    HRESULT _hr = put_UpperFlangeInternalThicknessSecondary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7531)
inline double IRJointSpliceWelds::GetUpperFlangeInternalThicknessPrimary ( ) {
    double _result = 0;
    HRESULT _hr = get_UpperFlangeInternalThicknessPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7532)
inline void IRJointSpliceWelds::PutUpperFlangeInternalThicknessPrimary ( double ret ) {
    HRESULT _hr = put_UpperFlangeInternalThicknessPrimary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7533)
inline double IRJointSpliceWelds::GetLowerFlangeExternalThicknessSecondary ( ) {
    double _result = 0;
    HRESULT _hr = get_LowerFlangeExternalThicknessSecondary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7534)
inline void IRJointSpliceWelds::PutLowerFlangeExternalThicknessSecondary ( double ret ) {
    HRESULT _hr = put_LowerFlangeExternalThicknessSecondary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7535)
inline double IRJointSpliceWelds::GetLowerFlangeExternalThicknessPrimary ( ) {
    double _result = 0;
    HRESULT _hr = get_LowerFlangeExternalThicknessPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7536)
inline void IRJointSpliceWelds::PutLowerFlangeExternalThicknessPrimary ( double ret ) {
    HRESULT _hr = put_LowerFlangeExternalThicknessPrimary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7537)
inline double IRJointSpliceWelds::GetLowerFlangeInternalThicknessSecondary ( ) {
    double _result = 0;
    HRESULT _hr = get_LowerFlangeInternalThicknessSecondary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7538)
inline void IRJointSpliceWelds::PutLowerFlangeInternalThicknessSecondary ( double ret ) {
    HRESULT _hr = put_LowerFlangeInternalThicknessSecondary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7539)
inline double IRJointSpliceWelds::GetLowerFlangeInternalThicknessPrimary ( ) {
    double _result = 0;
    HRESULT _hr = get_LowerFlangeInternalThicknessPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7540)
inline void IRJointSpliceWelds::PutLowerFlangeInternalThicknessPrimary ( double ret ) {
    HRESULT _hr = put_LowerFlangeInternalThicknessPrimary(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointSplice wrapper method implementations
//

#pragma implementation_key(7541)
inline enum IRJointSpliceType IRJointSplice::GetSubType ( ) {
    enum IRJointSpliceType _result;
    HRESULT _hr = get_SubType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7542)
inline void IRJointSplice::PutSubType ( enum IRJointSpliceType ret ) {
    HRESULT _hr = put_SubType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7543)
inline long IRJointSplice::GetSymmetrical ( ) {
    long _result = 0;
    HRESULT _hr = get_Symmetrical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7544)
inline void IRJointSplice::PutSymmetrical ( long ret ) {
    HRESULT _hr = put_Symmetrical(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7545)
inline long IRJointSplice::GetAlignUpperBarsEdge ( ) {
    long _result = 0;
    HRESULT _hr = get_AlignUpperBarsEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7546)
inline void IRJointSplice::PutAlignUpperBarsEdge ( long ret ) {
    HRESULT _hr = put_AlignUpperBarsEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7547)
inline long IRJointSplice::GetTheSameMaterialForAllComponents ( ) {
    long _result = 0;
    HRESULT _hr = get_TheSameMaterialForAllComponents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7548)
inline void IRJointSplice::PutTheSameMaterialForAllComponents ( long ret ) {
    HRESULT _hr = put_TheSameMaterialForAllComponents(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7549)
inline long IRJointSplice::GetTheSameSettingsForAllBolts ( ) {
    long _result = 0;
    HRESULT _hr = get_TheSameSettingsForAllBolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7550)
inline void IRJointSplice::PutTheSameSettingsForAllBolts ( long ret ) {
    HRESULT _hr = put_TheSameSettingsForAllBolts(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7551)
inline long IRJointSplice::GetTheSameThicknessForWebWelds ( ) {
    long _result = 0;
    HRESULT _hr = get_TheSameThicknessForWebWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7552)
inline void IRJointSplice::PutTheSameThicknessForWebWelds ( long ret ) {
    HRESULT _hr = put_TheSameThicknessForWebWelds(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7553)
inline long IRJointSplice::GetTheSameThicknessForFlangeWelds ( ) {
    long _result = 0;
    HRESULT _hr = get_TheSameThicknessForFlangeWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7554)
inline void IRJointSplice::PutTheSameThicknessForFlangeWelds ( long ret ) {
    HRESULT _hr = put_TheSameThicknessForFlangeWelds(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7555)
inline double IRJointSplice::GetDistanceBetweenBarsEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceBetweenBarsEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7556)
inline void IRJointSplice::PutDistanceBetweenBarsEdge ( double ret ) {
    HRESULT _hr = put_DistanceBetweenBarsEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7557)
inline double IRJointSplice::GetDistanceFromBarAxis ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromBarAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7558)
inline void IRJointSplice::PutDistanceFromBarAxis ( double ret ) {
    HRESULT _hr = put_DistanceFromBarAxis(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7559)
inline enum IRJointSplicePlateJointType IRJointSplice::GetPlateJointType ( enum IRJointSplicePlatesSetType sType ) {
    enum IRJointSplicePlateJointType _result;
    HRESULT _hr = get_PlateJointType(sType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7560)
inline void IRJointSplice::PutPlateJointType ( enum IRJointSplicePlatesSetType sType, enum IRJointSplicePlateJointType ret ) {
    HRESULT _hr = put_PlateJointType(sType, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7561)
inline IRJointProfilePtr IRJointSplice::GetPrimaryProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_PrimaryProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7562)
inline IRJointProfilePtr IRJointSplice::GetSecondaryProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_SecondaryProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7563)
inline IRJointSplicePlatePtr IRJointSplice::GetPlate ( enum IRJointSplicePlateType plateType ) {
    struct IRJointSplicePlate * _result = 0;
    HRESULT _hr = get_Plate(plateType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointSplicePlatePtr(_result, false);
}

#pragma implementation_key(7564)
inline IRJointSpliceBoltsPtr IRJointSplice::GetBolts ( enum IRJointSpliceBoltsSetType boltsSetType ) {
    struct IRJointSpliceBolts * _result = 0;
    HRESULT _hr = get_Bolts(boltsSetType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointSpliceBoltsPtr(_result, false);
}

#pragma implementation_key(7565)
inline IRJointSpliceWeldsPtr IRJointSplice::GetWelds ( ) {
    struct IRJointSpliceWelds * _result = 0;
    HRESULT _hr = get_Welds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointSpliceWeldsPtr(_result, false);
}

#pragma implementation_key(7566)
inline IRobotNamesArrayPtr IRJointSplice::GetBoltsDimensionNamesVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionNamesVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7567)
inline IRobotNamesArrayPtr IRJointSplice::GetBoltsClassVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsClassVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7568)
inline IRobotValuesArrayPtr IRJointSplice::GetBoltsDimensionsVector ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionsVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

//
// interface IRJointSpliceLoad wrapper method implementations
//

#pragma implementation_key(7569)
inline double IRJointSpliceLoad::Getforce_N ( ) {
    double _result = 0;
    HRESULT _hr = get_force_N(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7570)
inline void IRJointSpliceLoad::Putforce_N ( double ret ) {
    HRESULT _hr = put_force_N(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7571)
inline double IRJointSpliceLoad::Getforce_Vy ( ) {
    double _result = 0;
    HRESULT _hr = get_force_Vy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7572)
inline void IRJointSpliceLoad::Putforce_Vy ( double ret ) {
    HRESULT _hr = put_force_Vy(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7573)
inline double IRJointSpliceLoad::Getforce_Vz ( ) {
    double _result = 0;
    HRESULT _hr = get_force_Vz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7574)
inline void IRJointSpliceLoad::Putforce_Vz ( double ret ) {
    HRESULT _hr = put_force_Vz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7575)
inline double IRJointSpliceLoad::Getmoment_My ( ) {
    double _result = 0;
    HRESULT _hr = get_moment_My(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7576)
inline void IRJointSpliceLoad::Putmoment_My ( double ret ) {
    HRESULT _hr = put_moment_My(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7577)
inline double IRJointSpliceLoad::Getmoment_Mz ( ) {
    double _result = 0;
    HRESULT _hr = get_moment_Mz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7578)
inline void IRJointSpliceLoad::Putmoment_Mz ( double ret ) {
    HRESULT _hr = put_moment_Mz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTieStiffeners wrapper method implementations
//

#pragma implementation_key(7579)
inline enum IRJointTieStiffenersType IRJointTieStiffeners::GetType ( ) {
    enum IRJointTieStiffenersType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7580)
inline void IRJointTieStiffeners::PutType ( enum IRJointTieStiffenersType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7581)
inline double IRJointTieStiffeners::GetHeigth ( ) {
    double _result = 0;
    HRESULT _hr = get_Heigth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7582)
inline void IRJointTieStiffeners::PutHeigth ( double ret ) {
    HRESULT _hr = put_Heigth(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7583)
inline double IRJointTieStiffeners::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7584)
inline void IRJointTieStiffeners::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7585)
inline double IRJointTieStiffeners::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7586)
inline void IRJointTieStiffeners::PutThickness ( double ret ) {
    HRESULT _hr = put_Thickness(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7587)
inline double IRJointTieStiffeners::GetCutVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_CutVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7588)
inline void IRJointTieStiffeners::PutCutVertical ( double ret ) {
    HRESULT _hr = put_CutVertical(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7589)
inline double IRJointTieStiffeners::GetCutHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_CutHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7590)
inline void IRJointTieStiffeners::PutCutHorizontal ( double ret ) {
    HRESULT _hr = put_CutHorizontal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7591)
inline _bstr_t IRJointTieStiffeners::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7592)
inline void IRJointTieStiffeners::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTiePlates wrapper method implementations
//

#pragma implementation_key(7593)
inline _bstr_t IRJointTiePlates::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7594)
inline void IRJointTiePlates::PutMaterial ( _bstr_t ret ) {
    HRESULT _hr = put_Material(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTieBolts wrapper method implementations
//

#pragma implementation_key(7595)
inline _bstr_t IRJointTieBolts::GetClassName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ClassName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7596)
inline void IRJointTieBolts::PutClassName ( _bstr_t ret ) {
    HRESULT _hr = put_ClassName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7597)
inline _bstr_t IRJointTieBolts::GetDiameterName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiameterName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7598)
inline void IRJointTieBolts::PutDiameterName ( _bstr_t ret ) {
    HRESULT _hr = put_DiameterName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7599)
inline double IRJointTieBolts::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7600)
inline void IRJointTieBolts::PutDiameter ( double ret ) {
    HRESULT _hr = put_Diameter(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7601)
inline enum IRJointTieBoltsConnectionCategory IRJointTieBolts::GetConnectionCategory ( ) {
    enum IRJointTieBoltsConnectionCategory _result;
    HRESULT _hr = get_ConnectionCategory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7602)
inline void IRJointTieBolts::PutConnectionCategory ( enum IRJointTieBoltsConnectionCategory ret ) {
    HRESULT _hr = put_ConnectionCategory(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7603)
inline enum IRJointTieBoltsArrangementType IRJointTieBolts::GetArrangement ( ) {
    enum IRJointTieBoltsArrangementType _result;
    HRESULT _hr = get_Arrangement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7604)
inline void IRJointTieBolts::PutArrangement ( enum IRJointTieBoltsArrangementType ret ) {
    HRESULT _hr = put_Arrangement(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7605)
inline long IRJointTieBolts::GetCircularNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_CircularNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7606)
inline void IRJointTieBolts::PutCircularNumber ( long ret ) {
    HRESULT _hr = put_CircularNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7607)
inline long IRJointTieBolts::GetVerticalNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_VerticalNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7608)
inline void IRJointTieBolts::PutVerticalNumber ( long ret ) {
    HRESULT _hr = put_VerticalNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7609)
inline long IRJointTieBolts::GetHorizontalNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_HorizontalNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7610)
inline void IRJointTieBolts::PutHorizontalNumber ( long ret ) {
    HRESULT _hr = put_HorizontalNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7611)
inline double IRJointTieBolts::GetDistanceFromCirclePlateEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromCirclePlateEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7612)
inline void IRJointTieBolts::PutDistanceFromCirclePlateEdge ( double ret ) {
    HRESULT _hr = put_DistanceFromCirclePlateEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7613)
inline double IRJointTieBolts::GetDistanceFromHorizontalRectPlateEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromHorizontalRectPlateEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7614)
inline void IRJointTieBolts::PutDistanceFromHorizontalRectPlateEdge ( double ret ) {
    HRESULT _hr = put_DistanceFromHorizontalRectPlateEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7615)
inline double IRJointTieBolts::GetDistanceFromVerticalRectPlateEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromVerticalRectPlateEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7616)
inline void IRJointTieBolts::PutDistanceFromVerticalRectPlateEdge ( double ret ) {
    HRESULT _hr = put_DistanceFromVerticalRectPlateEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7617)
inline double IRJointTieBolts::GetDistanceFromHorizontalRectProfileEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromHorizontalRectProfileEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7618)
inline void IRJointTieBolts::PutDistanceFromHorizontalRectProfileEdge ( double ret ) {
    HRESULT _hr = put_DistanceFromHorizontalRectProfileEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7619)
inline double IRJointTieBolts::GetDistanceFromVerticalRectProfileEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_DistanceFromVerticalRectProfileEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7620)
inline void IRJointTieBolts::PutDistanceFromVerticalRectProfileEdge ( double ret ) {
    HRESULT _hr = put_DistanceFromVerticalRectProfileEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7621)
inline long IRJointTieBolts::GetHorizontalSpacingInputByDistanceFromEdge ( ) {
    long _result = 0;
    HRESULT _hr = get_HorizontalSpacingInputByDistanceFromEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7622)
inline void IRJointTieBolts::PutHorizontalSpacingInputByDistanceFromEdge ( long ret ) {
    HRESULT _hr = put_HorizontalSpacingInputByDistanceFromEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7623)
inline long IRJointTieBolts::GetVerticalSpacingInputByDistanceFromEdge ( ) {
    long _result = 0;
    HRESULT _hr = get_VerticalSpacingInputByDistanceFromEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7624)
inline void IRJointTieBolts::PutVerticalSpacingInputByDistanceFromEdge ( long ret ) {
    HRESULT _hr = put_VerticalSpacingInputByDistanceFromEdge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7625)
inline double IRJointTieBolts::GetHorizontalSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_HorizontalSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7626)
inline void IRJointTieBolts::PutHorizontalSpacing ( double ret ) {
    HRESULT _hr = put_HorizontalSpacing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7627)
inline double IRJointTieBolts::GetVerticalSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7628)
inline void IRJointTieBolts::PutVerticalSpacing ( double ret ) {
    HRESULT _hr = put_VerticalSpacing(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTieWelds wrapper method implementations
//

#pragma implementation_key(7629)
inline enum IRJointWeldType IRJointTieWelds::GetBarsType ( ) {
    enum IRJointWeldType _result;
    HRESULT _hr = get_BarsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7630)
inline void IRJointTieWelds::PutBarsType ( enum IRJointWeldType ret ) {
    HRESULT _hr = put_BarsType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7631)
inline enum IRJointWeldType IRJointTieWelds::GetStiffenersType ( ) {
    enum IRJointWeldType _result;
    HRESULT _hr = get_StiffenersType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7632)
inline void IRJointTieWelds::PutStiffenersType ( enum IRJointWeldType ret ) {
    HRESULT _hr = put_StiffenersType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7633)
inline double IRJointTieWelds::Geta_w ( ) {
    double _result = 0;
    HRESULT _hr = get_a_w(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7634)
inline void IRJointTieWelds::Puta_w ( double ret ) {
    HRESULT _hr = put_a_w(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7635)
inline double IRJointTieWelds::Geta_s ( ) {
    double _result = 0;
    HRESULT _hr = get_a_s(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7636)
inline void IRJointTieWelds::Puta_s ( double ret ) {
    HRESULT _hr = put_a_s(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTieConnectors wrapper method implementations
//

#pragma implementation_key(7637)
inline IRJointTieBoltsPtr IRJointTieConnectors::GetBolts ( ) {
    struct IRJointTieBolts * _result = 0;
    HRESULT _hr = get_Bolts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTieBoltsPtr(_result, false);
}

#pragma implementation_key(7638)
inline IRJointTieWeldsPtr IRJointTieConnectors::GetWelds ( ) {
    struct IRJointTieWelds * _result = 0;
    HRESULT _hr = get_Welds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTieWeldsPtr(_result, false);
}

//
// interface IRJointTie wrapper method implementations
//

#pragma implementation_key(7639)
inline long IRJointTie::GetTheSameMaterialForAllComponents ( ) {
    long _result = 0;
    HRESULT _hr = get_TheSameMaterialForAllComponents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7640)
inline void IRJointTie::PutTheSameMaterialForAllComponents ( long ret ) {
    HRESULT _hr = put_TheSameMaterialForAllComponents(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7641)
inline IRJointProfilePtr IRJointTie::GetPrimaryProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_PrimaryProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7642)
inline IRJointProfilePtr IRJointTie::GetSecondaryProfile ( ) {
    struct IRJointProfile * _result = 0;
    HRESULT _hr = get_SecondaryProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointProfilePtr(_result, false);
}

#pragma implementation_key(7643)
inline IRJointTieStiffenersPtr IRJointTie::GetStiffeners ( ) {
    struct IRJointTieStiffeners * _result = 0;
    HRESULT _hr = get_Stiffeners(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTieStiffenersPtr(_result, false);
}

#pragma implementation_key(7644)
inline IRJointTiePlatesPtr IRJointTie::GetPlates ( ) {
    struct IRJointTiePlates * _result = 0;
    HRESULT _hr = get_Plates(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTiePlatesPtr(_result, false);
}

#pragma implementation_key(7645)
inline IRJointTieConnectorsPtr IRJointTie::GetConnectors ( ) {
    struct IRJointTieConnectors * _result = 0;
    HRESULT _hr = get_Connectors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointTieConnectorsPtr(_result, false);
}

#pragma implementation_key(7646)
inline IRobotNamesArrayPtr IRJointTie::GetBoltsDimensionNamesVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionNamesVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7647)
inline IRobotNamesArrayPtr IRJointTie::GetBoltsClassVector ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_BoltsClassVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7648)
inline IRobotValuesArrayPtr IRJointTie::GetBoltsDimensionsVector ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_BoltsDimensionsVector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

#pragma implementation_key(7649)
inline long IRJointTie::GetVaryingLoads ( ) {
    long _result = 0;
    HRESULT _hr = get_VaryingLoads(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7650)
inline void IRJointTie::PutVaryingLoads ( long ret ) {
    HRESULT _hr = put_VaryingLoads(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRJointTieLoad wrapper method implementations
//

#pragma implementation_key(7651)
inline double IRJointTieLoad::GetforceULS_N1 ( ) {
    double _result = 0;
    HRESULT _hr = get_forceULS_N1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7652)
inline void IRJointTieLoad::PutforceULS_N1 ( double ret ) {
    HRESULT _hr = put_forceULS_N1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7653)
inline double IRJointTieLoad::GetforceULS_N2 ( ) {
    double _result = 0;
    HRESULT _hr = get_forceULS_N2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7654)
inline void IRJointTieLoad::PutforceULS_N2 ( double ret ) {
    HRESULT _hr = put_forceULS_N2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7655)
inline double IRJointTieLoad::GetforceSLS_N1 ( ) {
    double _result = 0;
    HRESULT _hr = get_forceSLS_N1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7656)
inline void IRJointTieLoad::PutforceSLS_N1 ( double ret ) {
    HRESULT _hr = put_forceSLS_N1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7657)
inline double IRJointTieLoad::GetforceSLS_N2 ( ) {
    double _result = 0;
    HRESULT _hr = get_forceSLS_N2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7658)
inline void IRJointTieLoad::PutforceSLS_N2 ( double ret ) {
    HRESULT _hr = put_forceSLS_N2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrBarSectionData wrapper method implementations
//

#pragma implementation_key(7659)
inline int IRConcrBarSectionData::GetN ( ) {
    int _result = 0;
    HRESULT _hr = get_N(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7660)
inline void IRConcrBarSectionData::PutN ( int ret ) {
    HRESULT _hr = put_N(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7661)
inline double IRConcrBarSectionData::GetH ( ) {
    double _result = 0;
    HRESULT _hr = get_H(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7662)
inline void IRConcrBarSectionData::PutH ( double ret ) {
    HRESULT _hr = put_H(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7663)
inline double IRConcrBarSectionData::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7664)
inline void IRConcrBarSectionData::PutB ( double ret ) {
    HRESULT _hr = put_B(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7665)
inline double IRConcrBarSectionData::GetBf ( ) {
    double _result = 0;
    HRESULT _hr = get_Bf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7666)
inline void IRConcrBarSectionData::PutBf ( double ret ) {
    HRESULT _hr = put_Bf(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7667)
inline double IRConcrBarSectionData::GetHf ( ) {
    double _result = 0;
    HRESULT _hr = get_Hf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7668)
inline void IRConcrBarSectionData::PutHf ( double ret ) {
    HRESULT _hr = put_Hf(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7669)
inline double IRConcrBarSectionData::GetBfb ( ) {
    double _result = 0;
    HRESULT _hr = get_Bfb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7670)
inline void IRConcrBarSectionData::PutBfb ( double ret ) {
    HRESULT _hr = put_Bfb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7671)
inline double IRConcrBarSectionData::GetHfb ( ) {
    double _result = 0;
    HRESULT _hr = get_Hfb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7672)
inline void IRConcrBarSectionData::PutHfb ( double ret ) {
    HRESULT _hr = put_Hfb(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7673)
inline double IRConcrBarSectionData::GetA ( ) {
    double _result = 0;
    HRESULT _hr = get_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7674)
inline void IRConcrBarSectionData::PutA ( double ret ) {
    HRESULT _hr = put_A(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7675)
inline double IRConcrBarSectionData::GetAp ( ) {
    double _result = 0;
    HRESULT _hr = get_Ap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7676)
inline void IRConcrBarSectionData::PutAp ( double ret ) {
    HRESULT _hr = put_Ap(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7677)
inline double IRConcrBarSectionData::GetAc ( ) {
    double _result = 0;
    HRESULT _hr = get_Ac(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7678)
inline void IRConcrBarSectionData::PutAc ( double ret ) {
    HRESULT _hr = put_Ac(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7679)
inline double IRConcrBarSectionData::GetPer ( ) {
    double _result = 0;
    HRESULT _hr = get_Per(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7680)
inline void IRConcrBarSectionData::PutPer ( double ret ) {
    HRESULT _hr = put_Per(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7681)
inline enum IRConcrBarSectionGeometryType IRConcrBarSectionData::GetType ( ) {
    enum IRConcrBarSectionGeometryType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7682)
inline void IRConcrBarSectionData::PutType ( enum IRConcrBarSectionGeometryType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7683)
inline double IRConcrBarSectionData::GetRr ( ) {
    double _result = 0;
    HRESULT _hr = get_Rr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7684)
inline void IRConcrBarSectionData::PutRr ( double ret ) {
    HRESULT _hr = put_Rr(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7685)
inline double IRConcrBarSectionData::GetRl ( ) {
    double _result = 0;
    HRESULT _hr = get_Rl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7686)
inline void IRConcrBarSectionData::PutRl ( double ret ) {
    HRESULT _hr = put_Rl(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRBestParamSet wrapper method implementations
//

#pragma implementation_key(7687)
inline long IRBestParamSet::GetDouble ( int param_id, double * _value ) {
    long _result = 0;
    HRESULT _hr = raw_GetDouble(param_id, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7688)
inline long IRBestParamSet::SetDouble ( int param_id, double _value ) {
    long _result = 0;
    HRESULT _hr = raw_SetDouble(param_id, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7689)
inline long IRBestParamSet::GetInteger ( int param_id, int * _value ) {
    long _result = 0;
    HRESULT _hr = raw_GetInteger(param_id, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7690)
inline long IRBestParamSet::SetInteger ( int param_id, int _value ) {
    long _result = 0;
    HRESULT _hr = raw_SetInteger(param_id, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7691)
inline long IRBestParamSet::GetString ( int param_id, BSTR * _value ) {
    long _result = 0;
    HRESULT _hr = raw_GetString(param_id, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7692)
inline long IRBestParamSet::SetString ( int param_id, _bstr_t _value ) {
    long _result = 0;
    HRESULT _hr = raw_SetString(param_id, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7693)
inline HRESULT IRBestParamSet::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7694)
inline HRESULT IRBestParamSet::ClearInteger ( int param_id ) {
    HRESULT _hr = raw_ClearInteger(param_id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7695)
inline HRESULT IRBestParamSet::ClearDouble ( int param_id ) {
    HRESULT _hr = raw_ClearDouble(param_id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7696)
inline HRESULT IRBestParamSet::ClearString ( int param_id ) {
    HRESULT _hr = raw_ClearString(param_id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7697)
inline long IRBestParamSet::IsValidDouble ( int param_id, double _value ) {
    long _result = 0;
    HRESULT _hr = raw_IsValidDouble(param_id, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7698)
inline long IRBestParamSet::IsValidInteger ( int param_id, int _value ) {
    long _result = 0;
    HRESULT _hr = raw_IsValidInteger(param_id, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7699)
inline long IRBestParamSet::IsValidString ( int param_id, _bstr_t _value ) {
    long _result = 0;
    HRESULT _hr = raw_IsValidString(param_id, _value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRBestCalcParamsData wrapper method implementations
//

#pragma implementation_key(7700)
inline IRobotValuesArrayPtr IRBestCalcParamsData::GetModularityList ( ) {
    struct IRobotValuesArray * _result = 0;
    HRESULT _hr = get_ModularityList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotValuesArrayPtr(_result, false);
}

//
// interface IRBestCalcParamsDataList wrapper method implementations
//

#pragma implementation_key(7701)
inline _bstr_t IRBestCalcParamsDataList::GetSelected ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Selected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7702)
inline void IRBestCalcParamsDataList::PutSelected ( _bstr_t ret ) {
    HRESULT _hr = put_Selected(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7703)
inline IRobotNamesArrayPtr IRBestCalcParamsDataList::GetLabNames ( ) {
    struct IRobotNamesArray * _result = 0;
    HRESULT _hr = get_LabNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNamesArrayPtr(_result, false);
}

#pragma implementation_key(7704)
inline IRBestCalcParamsDataPtr IRBestCalcParamsDataList::Get ( _bstr_t lab_name ) {
    struct IRBestCalcParamsData * _result = 0;
    HRESULT _hr = raw_Get(lab_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRBestCalcParamsDataPtr(_result, false);
}

#pragma implementation_key(7705)
inline long IRBestCalcParamsDataList::Delete ( _bstr_t lab_name ) {
    long _result = 0;
    HRESULT _hr = raw_Delete(lab_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7706)
inline long IRBestCalcParamsDataList::Store ( _bstr_t lab_name, struct IRBestCalcParamsData * _params ) {
    long _result = 0;
    HRESULT _hr = raw_Store(lab_name, _params, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7707)
inline IRBestCalcParamsDataPtr IRBestCalcParamsDataList::Create ( ) {
    struct IRBestCalcParamsData * _result = 0;
    HRESULT _hr = raw_Create(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRBestCalcParamsDataPtr(_result, false);
}

//
// interface IRBestForceData wrapper method implementations
//

#pragma implementation_key(7708)
inline IRobotBarForceDataPtr IRBestForceData::GetValues ( ) {
    struct IRobotBarForceData * _result = 0;
    HRESULT _hr = get_Values(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarForceDataPtr(_result, false);
}

#pragma implementation_key(7709)
inline enum IRobotLimitState IRBestForceData::GetLimitState ( ) {
    enum IRobotLimitState _result;
    HRESULT _hr = get_LimitState(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRBestMemberDlg wrapper method implementations
//

#pragma implementation_key(7710)
inline HRESULT IRBestMemberDlg::DoModal ( struct IRBestMemberData * _params ) {
    HRESULT _hr = raw_DoModal(_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7711)
inline HRESULT IRBestMemberDlg::SetStandard ( struct IRBestMemberData * _params ) {
    HRESULT _hr = raw_SetStandard(_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRBestCalcParamsDlg wrapper method implementations
//

#pragma implementation_key(7712)
inline HRESULT IRBestCalcParamsDlg::DoModal ( struct IRBestCalcParamsDataList * param_list ) {
    HRESULT _hr = raw_DoModal(param_list);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7713)
inline HRESULT IRBestCalcParamsDlg::SetStandard ( struct IRBestCalcParamsData * _params ) {
    HRESULT _hr = raw_SetStandard(_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRBestPlateCalcParamsDlg wrapper method implementations
//

#pragma implementation_key(7714)
inline HRESULT IRBestPlateCalcParamsDlg::DoModal ( struct IRBestCalcParamsData * _params, BSTR * label_name ) {
    HRESULT _hr = raw_DoModal(_params, label_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7715)
inline HRESULT IRBestPlateCalcParamsDlg::SetStandard ( struct IRBestCalcParamsData * _params ) {
    HRESULT _hr = raw_SetStandard(_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRBestCodeCalcEngine wrapper method implementations
//

#pragma implementation_key(7716)
inline HRESULT IRBestCodeCalcEngine::SetParams ( struct IRBestCalcParamsData * calc_params, struct IRBestMemberData * memb_def ) {
    HRESULT _hr = raw_SetParams(calc_params, memb_def);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7717)
inline HRESULT IRBestCodeCalcEngine::SetGeometry ( struct IRConcrBarSectionData * sect_geo ) {
    HRESULT _hr = raw_SetGeometry(sect_geo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7718)
inline HRESULT IRBestCodeCalcEngine::SetForces ( struct IRobotObjectsArray * Forces, double pos ) {
    HRESULT _hr = raw_SetForces(Forces, pos);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7719)
inline HRESULT IRBestCodeCalcEngine::SetForcesSlender ( struct IRobotObjectsArray * forces_begin, struct IRobotObjectsArray * forces_midle, struct IRobotObjectsArray * forces_end ) {
    HRESULT _hr = raw_SetForcesSlender(forces_begin, forces_midle, forces_end);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7720)
inline HRESULT IRBestCodeCalcEngine::Calculate ( struct IRBestDimParams * dim_params ) {
    HRESULT _hr = raw_Calculate(dim_params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7721)
inline HRESULT IRBestCodeCalcEngine::GetResults ( struct IRBestResults * ret ) {
    HRESULT _hr = raw_GetResults(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7722)
inline HRESULT IRBestCodeCalcEngine::SetForcesArray ( SAFEARRAY * * _forces, SAFEARRAY * * _params, double _pos ) {
    HRESULT _hr = raw_SetForcesArray(_forces, _params, _pos);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRBestCodeService wrapper method implementations
//

#pragma implementation_key(7723)
inline IRBestCalcParamsDlgPtr IRBestCodeService::GetCalcParamsDlg ( ) {
    struct IRBestCalcParamsDlg * _result = 0;
    HRESULT _hr = get_CalcParamsDlg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRBestCalcParamsDlgPtr(_result, false);
}

#pragma implementation_key(7724)
inline IRBestMemberDlgPtr IRBestCodeService::GetMemberDlg ( ) {
    struct IRBestMemberDlg * _result = 0;
    HRESULT _hr = get_MemberDlg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRBestMemberDlgPtr(_result, false);
}

#pragma implementation_key(7725)
inline IRBestCodeCalcEnginePtr IRBestCodeService::GetCalcEngine ( ) {
    struct IRBestCodeCalcEngine * _result = 0;
    HRESULT _hr = get_CalcEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRBestCodeCalcEnginePtr(_result, false);
}

//
// interface IRBestCodeServiceExt wrapper method implementations
//

#pragma implementation_key(7726)
inline VARIANT_BOOL IRBestCodeServiceExt::IsServed ( enum IRBestCodeCalculationType calc_type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsServed(calc_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7727)
inline IUnknownPtr IRBestCodeServiceExt::GetCalcParamsDlg ( enum IRBestCodeCalculationType calc_type ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetCalcParamsDlg(calc_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface IRConcrPlateCodeService2 wrapper method implementations
//

#pragma implementation_key(7728)
inline _bstr_t IRConcrPlateCodeService2::GetRobotVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RobotVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7729)
inline VARIANT_BOOL IRConcrPlateCodeService2::GetShowLongTermCracking ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowLongTermCracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRBestCodeService2 wrapper method implementations
//

#pragma implementation_key(7730)
inline _bstr_t IRBestCodeService2::GetRobotVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RobotVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7731)
inline VARIANT_BOOL IRBestCodeService2::GetShowBucklingButton ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowBucklingButton(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotCodeRegistrar wrapper method implementations
//

#pragma implementation_key(7732)
inline enum IRobotCodeType IRobotCodeRegistrar::GetCodeType ( ) {
    enum IRobotCodeType _result;
    HRESULT _hr = get_CodeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7733)
inline void IRobotCodeRegistrar::PutCodeType ( enum IRobotCodeType ret ) {
    HRESULT _hr = put_CodeType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7734)
inline _bstr_t IRobotCodeRegistrar::GetCodeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7735)
inline void IRobotCodeRegistrar::PutCodeName ( _bstr_t ret ) {
    HRESULT _hr = put_CodeName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7736)
inline _bstr_t IRobotCodeRegistrar::GetManufacturer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Manufacturer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7737)
inline void IRobotCodeRegistrar::PutManufacturer ( _bstr_t ret ) {
    HRESULT _hr = put_Manufacturer(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7738)
inline _bstr_t IRobotCodeRegistrar::GetGuid ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Guid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7739)
inline void IRobotCodeRegistrar::PutGuid ( _bstr_t ret ) {
    HRESULT _hr = put_Guid(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7740)
inline _bstr_t IRobotCodeRegistrar::GetProgId ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProgId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7741)
inline void IRobotCodeRegistrar::PutProgId ( _bstr_t ret ) {
    HRESULT _hr = put_ProgId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7742)
inline HRESULT IRobotCodeRegistrar::Register ( ) {
    HRESULT _hr = raw_Register();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7743)
inline HRESULT IRobotCodeRegistrar::Unregister ( ) {
    HRESULT _hr = raw_Unregister();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7744)
inline _bstr_t IRobotCodeRegistrar::GetCountry ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Country(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7745)
inline void IRobotCodeRegistrar::PutCountry ( _bstr_t ret ) {
    HRESULT _hr = put_Country(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotCmdInfo wrapper method implementations
//

#pragma implementation_key(7746)
inline long IRobotCmdInfo::GetId ( ) {
    long _result = 0;
    HRESULT _hr = get_Id(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7747)
inline void IRobotCmdInfo::PutId ( long ret ) {
    HRESULT _hr = put_Id(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7748)
inline _bstr_t IRobotCmdInfo::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7749)
inline void IRobotCmdInfo::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7750)
inline VARIANT_BOOL IRobotCmdInfo::GetMenuEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MenuEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7751)
inline void IRobotCmdInfo::PutMenuEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_MenuEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7752)
inline long IRobotCmdInfo::GetMenuChecked ( ) {
    long _result = 0;
    HRESULT _hr = get_MenuChecked(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7753)
inline void IRobotCmdInfo::PutMenuChecked ( long ret ) {
    HRESULT _hr = put_MenuChecked(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotCmdList wrapper method implementations
//

#pragma implementation_key(7754)
inline long IRobotCmdList::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7755)
inline long IRobotCmdList::New ( long cmd_id, _bstr_t cmd_name ) {
    long _result = 0;
    HRESULT _hr = raw_New(cmd_id, cmd_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7756)
inline IRobotCmdInfoPtr IRobotCmdList::Get ( long idx ) {
    struct IRobotCmdInfo * _result = 0;
    HRESULT _hr = raw_Get(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCmdInfoPtr(_result, false);
}

//
// interface IRobotAddInRegistrar wrapper method implementations
//

#pragma implementation_key(7757)
inline _bstr_t IRobotAddInRegistrar::GetProviderName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProviderName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7758)
inline void IRobotAddInRegistrar::PutProviderName ( _bstr_t ret ) {
    HRESULT _hr = put_ProviderName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7759)
inline _bstr_t IRobotAddInRegistrar::GetProductName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProductName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7760)
inline void IRobotAddInRegistrar::PutProductName ( _bstr_t ret ) {
    HRESULT _hr = put_ProductName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7761)
inline _bstr_t IRobotAddInRegistrar::GetGuid ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Guid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7762)
inline void IRobotAddInRegistrar::PutGuid ( _bstr_t ret ) {
    HRESULT _hr = put_Guid(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7763)
inline _bstr_t IRobotAddInRegistrar::GetProgId ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProgId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7764)
inline void IRobotAddInRegistrar::PutProgId ( _bstr_t ret ) {
    HRESULT _hr = put_ProgId(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7765)
inline VARIANT_BOOL IRobotAddInRegistrar::Register ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Register(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7766)
inline HRESULT IRobotAddInRegistrar::Unregister ( ) {
    HRESULT _hr = raw_Unregister();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7767)
inline VARIANT_BOOL IRobotAddInRegistrar::InstallMenu ( _bstr_t menu_name, struct IRobotCmdList * options ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_InstallMenu(menu_name, options, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotAddInMngr wrapper method implementations
//

#pragma implementation_key(7768)
inline long IRobotAddInMngr::InstallCommand ( long add_in_id, long cmd_id ) {
    long _result = 0;
    HRESULT _hr = raw_InstallCommand(add_in_id, cmd_id, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrSteelParams wrapper method implementations
//

#pragma implementation_key(7769)
inline double IRConcrSteelParams::GetFY ( ) {
    double _result = 0;
    HRESULT _hr = get_FY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7770)
inline void IRConcrSteelParams::PutFY ( double ret ) {
    HRESULT _hr = put_FY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7771)
inline double IRConcrSteelParams::GetFt ( ) {
    double _result = 0;
    HRESULT _hr = get_Ft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7772)
inline void IRConcrSteelParams::PutFt ( double ret ) {
    HRESULT _hr = put_Ft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7773)
inline double IRConcrSteelParams::GetFy_calc ( ) {
    double _result = 0;
    HRESULT _hr = get_Fy_calc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7774)
inline void IRConcrSteelParams::PutFy_calc ( double ret ) {
    HRESULT _hr = put_Fy_calc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7775)
inline double IRConcrSteelParams::GetFt_calc ( ) {
    double _result = 0;
    HRESULT _hr = get_Ft_calc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7776)
inline void IRConcrSteelParams::PutFt_calc ( double ret ) {
    HRESULT _hr = put_Ft_calc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7777)
inline double IRConcrSteelParams::GetEy ( ) {
    double _result = 0;
    HRESULT _hr = get_Ey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7778)
inline void IRConcrSteelParams::PutEy ( double ret ) {
    HRESULT _hr = put_Ey(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7779)
inline short IRConcrSteelParams::GetGrade ( ) {
    short _result = 0;
    HRESULT _hr = get_Grade(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7780)
inline void IRConcrSteelParams::PutGrade ( short ret ) {
    HRESULT _hr = put_Grade(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrConcreteParams wrapper method implementations
//

#pragma implementation_key(7781)
inline double IRConcrConcreteParams::GetFc ( ) {
    double _result = 0;
    HRESULT _hr = get_Fc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7782)
inline void IRConcrConcreteParams::PutFc ( double ret ) {
    HRESULT _hr = put_Fc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7783)
inline double IRConcrConcreteParams::GetFcj ( ) {
    double _result = 0;
    HRESULT _hr = get_Fcj(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7784)
inline void IRConcrConcreteParams::PutFcj ( double ret ) {
    HRESULT _hr = put_Fcj(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7785)
inline double IRConcrConcreteParams::GetFc_calc ( ) {
    double _result = 0;
    HRESULT _hr = get_Fc_calc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7786)
inline void IRConcrConcreteParams::PutFc_calc ( double ret ) {
    HRESULT _hr = put_Fc_calc(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7787)
inline double IRConcrConcreteParams::GetFt ( ) {
    double _result = 0;
    HRESULT _hr = get_Ft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7788)
inline void IRConcrConcreteParams::PutFt ( double ret ) {
    HRESULT _hr = put_Ft(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7789)
inline double IRConcrConcreteParams::GetEc ( ) {
    double _result = 0;
    HRESULT _hr = get_Ec(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7790)
inline void IRConcrConcreteParams::PutEc ( double ret ) {
    HRESULT _hr = put_Ec(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7791)
inline short IRConcrConcreteParams::GetGrade ( ) {
    short _result = 0;
    HRESULT _hr = get_Grade(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7792)
inline void IRConcrConcreteParams::PutGrade ( short ret ) {
    HRESULT _hr = put_Grade(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrReinforceData wrapper method implementations
//

#pragma implementation_key(7793)
inline double IRConcrReinforceData::GetBarDim_D1_Bot ( ) {
    double _result = 0;
    HRESULT _hr = get_BarDim_D1_Bot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7794)
inline void IRConcrReinforceData::PutBarDim_D1_Bot ( double ret ) {
    HRESULT _hr = put_BarDim_D1_Bot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7795)
inline double IRConcrReinforceData::GetBarDim_D1_Up ( ) {
    double _result = 0;
    HRESULT _hr = get_BarDim_D1_Up(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7796)
inline void IRConcrReinforceData::PutBarDim_D1_Up ( double ret ) {
    HRESULT _hr = put_BarDim_D1_Up(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7797)
inline double IRConcrReinforceData::GetBarDim_D2_Bot ( ) {
    double _result = 0;
    HRESULT _hr = get_BarDim_D2_Bot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7798)
inline void IRConcrReinforceData::PutBarDim_D2_Bot ( double ret ) {
    HRESULT _hr = put_BarDim_D2_Bot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7799)
inline double IRConcrReinforceData::GetBarDim_D2_Up ( ) {
    double _result = 0;
    HRESULT _hr = get_BarDim_D2_Up(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7800)
inline void IRConcrReinforceData::PutBarDim_D2_Up ( double ret ) {
    HRESULT _hr = put_BarDim_D2_Up(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7801)
inline double IRConcrReinforceData::GetCover_Bot ( ) {
    double _result = 0;
    HRESULT _hr = get_Cover_Bot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7802)
inline void IRConcrReinforceData::PutCover_Bot ( double ret ) {
    HRESULT _hr = put_Cover_Bot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7803)
inline double IRConcrReinforceData::GetCover_Up ( ) {
    double _result = 0;
    HRESULT _hr = get_Cover_Up(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7804)
inline void IRConcrReinforceData::PutCover_Up ( double ret ) {
    HRESULT _hr = put_Cover_Up(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7805)
inline _bstr_t IRConcrReinforceData::GetCodeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7806)
inline IRConcrSteelParamsPtr IRConcrReinforceData::GetReinforcingSteel ( ) {
    struct IRConcrSteelParams * _result = 0;
    HRESULT _hr = get_ReinforcingSteel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelParamsPtr(_result, false);
}

#pragma implementation_key(7807)
inline IRConcrConcreteParamsPtr IRConcrReinforceData::GetConcrete ( ) {
    struct IRConcrConcreteParams * _result = 0;
    HRESULT _hr = get_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrConcreteParamsPtr(_result, false);
}

#pragma implementation_key(7808)
inline enum IRConcrReinforceDirection IRConcrReinforceData::GetMainDirection ( double * _x, double * _y, double * _z ) {
    enum IRConcrReinforceDirection _result;
    HRESULT _hr = raw_GetMainDirection(_x, _y, _z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7809)
inline HRESULT IRConcrReinforceData::SetMainDirection ( enum IRConcrReinforceDirection dir_type, double _x, double _y, double _z ) {
    HRESULT _hr = raw_SetMainDirection(dir_type, _x, _y, _z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRConcrReinforceDataMain wrapper method implementations
//

#pragma implementation_key(7810)
inline enum IRConcrReinforceCalcType IRConcrReinforceDataMain::GetReinfCalcType ( ) {
    enum IRConcrReinforceCalcType _result;
    HRESULT _hr = get_ReinfCalcType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7811)
inline void IRConcrReinforceDataMain::PutReinfCalcType ( enum IRConcrReinforceCalcType ret ) {
    HRESULT _hr = put_ReinfCalcType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7812)
inline VARIANT_BOOL IRConcrReinforceDataMain::GetUnidirReinf ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UnidirReinf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7813)
inline void IRConcrReinforceDataMain::PutUnidirReinf ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UnidirReinf(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7814)
inline VARIANT_BOOL IRConcrReinforceDataMain::GetMembraneReinfInOneLayer ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MembraneReinfInOneLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7815)
inline void IRConcrReinforceDataMain::PutMembraneReinfInOneLayer ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_MembraneReinfInOneLayer(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7816)
inline enum IRConcrMinimumReinforcementType IRConcrReinforceDataMain::GetMinimumReinf ( ) {
    enum IRConcrMinimumReinforcementType _result;
    HRESULT _hr = get_MinimumReinf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7817)
inline void IRConcrReinforceDataMain::PutMinimumReinf ( enum IRConcrMinimumReinforcementType ret ) {
    HRESULT _hr = put_MinimumReinf(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrReinforceData2 wrapper method implementations
//

#pragma implementation_key(7818)
inline IRConcrReinforceDataMainPtr IRConcrReinforceData2::GetMain ( ) {
    struct IRConcrReinforceDataMain * _result = 0;
    HRESULT _hr = get_Main(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforceDataMainPtr(_result, false);
}

//
// interface IRConcr_PN84_ReinforceData wrapper method implementations
//

#pragma implementation_key(7819)
inline VARIANT_BOOL IRConcr_PN84_ReinforceData::GetCheckConstructionStages ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CheckConstructionStages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7820)
inline void IRConcr_PN84_ReinforceData::PutCheckConstructionStages ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CheckConstructionStages(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7821)
inline VARIANT_BOOL IRConcr_PN84_ReinforceData::GetSingleShortLoad ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SingleShortLoad(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7822)
inline void IRConcr_PN84_ReinforceData::PutSingleShortLoad ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SingleShortLoad(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7823)
inline VARIANT_BOOL IRConcr_PN84_ReinforceData::GetLongActionAbove100 ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LongActionAbove100(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7824)
inline void IRConcr_PN84_ReinforceData::PutLongActionAbove100 ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_LongActionAbove100(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7825)
inline VARIANT_BOOL IRConcr_PN84_ReinforceData::GetSLS_Cracking ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Cracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7826)
inline void IRConcr_PN84_ReinforceData::PutSLS_Cracking ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Cracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7827)
inline VARIANT_BOOL IRConcr_PN84_ReinforceData::GetSLS_Deflection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Deflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7828)
inline void IRConcr_PN84_ReinforceData::PutSLS_Deflection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Deflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7829)
inline VARIANT_BOOL IRConcr_PN84_ReinforceData::GetSLS_CrackingReinfCorrect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CrackingReinfCorrect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7830)
inline void IRConcr_PN84_ReinforceData::PutSLS_CrackingReinfCorrect ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CrackingReinfCorrect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7831)
inline VARIANT_BOOL IRConcr_PN84_ReinforceData::GetSLS_DeflectionReinfCorrect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_DeflectionReinfCorrect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7832)
inline void IRConcr_PN84_ReinforceData::PutSLS_DeflectionReinfCorrect ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_DeflectionReinfCorrect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7833)
inline short IRConcr_PN84_ReinforceData::GetSLS_Exposure ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_Exposure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7834)
inline void IRConcr_PN84_ReinforceData::PutSLS_Exposure ( short ret ) {
    HRESULT _hr = put_SLS_Exposure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7835)
inline double IRConcr_PN84_ReinforceData::GetSLS_MaxCracking ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxCracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7836)
inline void IRConcr_PN84_ReinforceData::PutSLS_MaxCracking ( double ret ) {
    HRESULT _hr = put_SLS_MaxCracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7837)
inline double IRConcr_PN84_ReinforceData::GetSLS_MaxDeflection ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxDeflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7838)
inline void IRConcr_PN84_ReinforceData::PutSLS_MaxDeflection ( double ret ) {
    HRESULT _hr = put_SLS_MaxDeflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7839)
inline double IRConcr_PN84_ReinforceData::GetSLS_LoadsRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_LoadsRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7840)
inline void IRConcr_PN84_ReinforceData::PutSLS_LoadsRatio ( double ret ) {
    HRESULT _hr = put_SLS_LoadsRatio(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7841)
inline short IRConcr_PN84_ReinforceData::GetSLS_ConcreteAge ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_ConcreteAge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7842)
inline void IRConcr_PN84_ReinforceData::PutSLS_ConcreteAge ( short ret ) {
    HRESULT _hr = put_SLS_ConcreteAge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7843)
inline enum IRConcr_PN84_HumidityType IRConcr_PN84_ReinforceData::GetSLS_EnvHumidity ( ) {
    enum IRConcr_PN84_HumidityType _result;
    HRESULT _hr = get_SLS_EnvHumidity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7844)
inline void IRConcr_PN84_ReinforceData::PutSLS_EnvHumidity ( enum IRConcr_PN84_HumidityType ret ) {
    HRESULT _hr = put_SLS_EnvHumidity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7845)
inline double IRConcr_PN84_ReinforceData::GetSLS_CreepingCoef ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_CreepingCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7846)
inline void IRConcr_PN84_ReinforceData::PutSLS_CreepingCoef ( double ret ) {
    HRESULT _hr = put_SLS_CreepingCoef(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7847)
inline IRConcrReinforceDataMainPtr IRConcr_PN84_ReinforceData::GetMain ( ) {
    struct IRConcrReinforceDataMain * _result = 0;
    HRESULT _hr = get_Main(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforceDataMainPtr(_result, false);
}

//
// interface IRConcr_PN99_ReinforceData wrapper method implementations
//

#pragma implementation_key(7848)
inline VARIANT_BOOL IRConcr_PN99_ReinforceData::GetSLS_Cracking ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Cracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7849)
inline void IRConcr_PN99_ReinforceData::PutSLS_Cracking ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Cracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7850)
inline VARIANT_BOOL IRConcr_PN99_ReinforceData::GetSLS_Deflection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Deflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7851)
inline void IRConcr_PN99_ReinforceData::PutSLS_Deflection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Deflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7852)
inline VARIANT_BOOL IRConcr_PN99_ReinforceData::GetSLS_CrackingReinfCorrect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CrackingReinfCorrect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7853)
inline void IRConcr_PN99_ReinforceData::PutSLS_CrackingReinfCorrect ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CrackingReinfCorrect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7854)
inline VARIANT_BOOL IRConcr_PN99_ReinforceData::GetSLS_DeflectionReinfCorrect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_DeflectionReinfCorrect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7855)
inline void IRConcr_PN99_ReinforceData::PutSLS_DeflectionReinfCorrect ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_DeflectionReinfCorrect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7856)
inline short IRConcr_PN99_ReinforceData::GetSLS_Exposure ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_Exposure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7857)
inline void IRConcr_PN99_ReinforceData::PutSLS_Exposure ( short ret ) {
    HRESULT _hr = put_SLS_Exposure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7858)
inline double IRConcr_PN99_ReinforceData::GetSLS_MaxCracking ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxCracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7859)
inline void IRConcr_PN99_ReinforceData::PutSLS_MaxCracking ( double ret ) {
    HRESULT _hr = put_SLS_MaxCracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7860)
inline double IRConcr_PN99_ReinforceData::GetSLS_MaxDeflection ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxDeflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7861)
inline void IRConcr_PN99_ReinforceData::PutSLS_MaxDeflection ( double ret ) {
    HRESULT _hr = put_SLS_MaxDeflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7862)
inline double IRConcr_PN99_ReinforceData::GetSLS_Concrete ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7863)
inline void IRConcr_PN99_ReinforceData::PutSLS_Concrete ( double ret ) {
    HRESULT _hr = put_SLS_Concrete(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7864)
inline short IRConcr_PN99_ReinforceData::GetSLS_ConcreteAge ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_ConcreteAge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7865)
inline void IRConcr_PN99_ReinforceData::PutSLS_ConcreteAge ( short ret ) {
    HRESULT _hr = put_SLS_ConcreteAge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7866)
inline double IRConcr_PN99_ReinforceData::GetSLS_EnvHumidityVal ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_EnvHumidityVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7867)
inline void IRConcr_PN99_ReinforceData::PutSLS_EnvHumidityVal ( double ret ) {
    HRESULT _hr = put_SLS_EnvHumidityVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7868)
inline IRConcrReinforceDataMainPtr IRConcr_PN99_ReinforceData::GetMain ( ) {
    struct IRConcrReinforceDataMain * _result = 0;
    HRESULT _hr = get_Main(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforceDataMainPtr(_result, false);
}

#pragma implementation_key(7869)
inline double IRConcr_PN99_ReinforceData::GetSLS_LoadRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_LoadRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7870)
inline void IRConcr_PN99_ReinforceData::PutSLS_LoadRatio ( double ret ) {
    HRESULT _hr = put_SLS_LoadRatio(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7871)
inline VARIANT_BOOL IRConcr_PN99_ReinforceData::GetSLS_CreepingCoef ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CreepingCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7872)
inline void IRConcr_PN99_ReinforceData::PutSLS_CreepingCoef ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CreepingCoef(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7873)
inline double IRConcr_PN99_ReinforceData::GetSLS_CreepingCoefValue ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_CreepingCoefValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7874)
inline void IRConcr_PN99_ReinforceData::PutSLS_CreepingCoefValue ( double ret ) {
    HRESULT _hr = put_SLS_CreepingCoefValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7875)
inline short IRConcr_PN99_ReinforceData::GetSLS_ExposureTop ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_ExposureTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7876)
inline void IRConcr_PN99_ReinforceData::PutSLS_ExposureTop ( short ret ) {
    HRESULT _hr = put_SLS_ExposureTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7877)
inline short IRConcr_PN99_ReinforceData::GetSLS_ExposureBot ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_ExposureBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7878)
inline void IRConcr_PN99_ReinforceData::PutSLS_ExposureBot ( short ret ) {
    HRESULT _hr = put_SLS_ExposureBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7879)
inline double IRConcr_PN99_ReinforceData::GetSLS_MaxCrackingTop ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxCrackingTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7880)
inline void IRConcr_PN99_ReinforceData::PutSLS_MaxCrackingTop ( double ret ) {
    HRESULT _hr = put_SLS_MaxCrackingTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7881)
inline VARIANT_BOOL IRConcr_PN99_ReinforceData::GetSLS_MaxCrackingTopEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_MaxCrackingTopEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7882)
inline void IRConcr_PN99_ReinforceData::PutSLS_MaxCrackingTopEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_MaxCrackingTopEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7883)
inline double IRConcr_PN99_ReinforceData::GetSLS_MaxCrackingBot ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxCrackingBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7884)
inline void IRConcr_PN99_ReinforceData::PutSLS_MaxCrackingBot ( double ret ) {
    HRESULT _hr = put_SLS_MaxCrackingBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7885)
inline VARIANT_BOOL IRConcr_PN99_ReinforceData::GetSLS_MaxCrackingBotEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_MaxCrackingBotEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7886)
inline void IRConcr_PN99_ReinforceData::PutSLS_MaxCrackingBotEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_MaxCrackingBotEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7887)
inline VARIANT_BOOL IRConcr_PN99_ReinforceData::GetIsSpecialStructure ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSpecialStructure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7888)
inline void IRConcr_PN99_ReinforceData::PutIsSpecialStructure ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSpecialStructure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcr_BAEL_ReinforceData wrapper method implementations
//

#pragma implementation_key(7889)
inline enum IRConcr_BAEL_CrackingType IRConcr_BAEL_ReinforceData::GetCracking ( ) {
    enum IRConcr_BAEL_CrackingType _result;
    HRESULT _hr = get_Cracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7890)
inline void IRConcr_BAEL_ReinforceData::PutCracking ( enum IRConcr_BAEL_CrackingType ret ) {
    HRESULT _hr = put_Cracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7891)
inline enum IRConcr_BAEL_EnvironmentType IRConcr_BAEL_ReinforceData::GetCrackEnv ( ) {
    enum IRConcr_BAEL_EnvironmentType _result;
    HRESULT _hr = get_CrackEnv(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7892)
inline void IRConcr_BAEL_ReinforceData::PutCrackEnv ( enum IRConcr_BAEL_EnvironmentType ret ) {
    HRESULT _hr = put_CrackEnv(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7893)
inline enum IRConcr_BAEL_WaterLevel IRConcr_BAEL_ReinforceData::GetCrackWaterLevel ( ) {
    enum IRConcr_BAEL_WaterLevel _result;
    HRESULT _hr = get_CrackWaterLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7894)
inline void IRConcr_BAEL_ReinforceData::PutCrackWaterLevel ( enum IRConcr_BAEL_WaterLevel ret ) {
    HRESULT _hr = put_CrackWaterLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7895)
inline double IRConcr_BAEL_ReinforceData::GetCrackAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_CrackAlpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7896)
inline void IRConcr_BAEL_ReinforceData::PutCrackAlpha ( double ret ) {
    HRESULT _hr = put_CrackAlpha(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7897)
inline _bstr_t IRConcr_BAEL_ReinforceData::GetSteelSymbol ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SteelSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7898)
inline void IRConcr_BAEL_ReinforceData::PutSteelSymbol ( _bstr_t ret ) {
    HRESULT _hr = put_SteelSymbol(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7899)
inline VARIANT_BOOL IRConcr_BAEL_ReinforceData::GetSLS_Deflection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Deflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7900)
inline void IRConcr_BAEL_ReinforceData::PutSLS_Deflection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Deflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7901)
inline VARIANT_BOOL IRConcr_BAEL_ReinforceData::GetSLS_DeflectionReinfCorrect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_DeflectionReinfCorrect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7902)
inline void IRConcr_BAEL_ReinforceData::PutSLS_DeflectionReinfCorrect ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_DeflectionReinfCorrect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7903)
inline double IRConcr_BAEL_ReinforceData::GetSLS_MaxDeflection ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxDeflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7904)
inline void IRConcr_BAEL_ReinforceData::PutSLS_MaxDeflection ( double ret ) {
    HRESULT _hr = put_SLS_MaxDeflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7905)
inline VARIANT_BOOL IRConcr_BAEL_ReinforceData::GetCrackExtraParams ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CrackExtraParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7906)
inline void IRConcr_BAEL_ReinforceData::PutCrackExtraParams ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CrackExtraParams(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7907)
inline IRConcrReinforceDataMainPtr IRConcr_BAEL_ReinforceData::GetMain ( ) {
    struct IRConcrReinforceDataMain * _result = 0;
    HRESULT _hr = get_Main(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforceDataMainPtr(_result, false);
}

#pragma implementation_key(7908)
inline enum IRConcr_BAEL_CrackingType IRConcr_BAEL_ReinforceData::GetCrackingTop ( ) {
    enum IRConcr_BAEL_CrackingType _result;
    HRESULT _hr = get_CrackingTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7909)
inline void IRConcr_BAEL_ReinforceData::PutCrackingTop ( enum IRConcr_BAEL_CrackingType ret ) {
    HRESULT _hr = put_CrackingTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7910)
inline enum IRConcr_BAEL_CrackingType IRConcr_BAEL_ReinforceData::GetCrackingBot ( ) {
    enum IRConcr_BAEL_CrackingType _result;
    HRESULT _hr = get_CrackingBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7911)
inline void IRConcr_BAEL_ReinforceData::PutCrackingBot ( enum IRConcr_BAEL_CrackingType ret ) {
    HRESULT _hr = put_CrackingBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7912)
inline enum IRConcr_BAEL_EnvironmentType IRConcr_BAEL_ReinforceData::GetCrackEnvTop ( ) {
    enum IRConcr_BAEL_EnvironmentType _result;
    HRESULT _hr = get_CrackEnvTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7913)
inline void IRConcr_BAEL_ReinforceData::PutCrackEnvTop ( enum IRConcr_BAEL_EnvironmentType ret ) {
    HRESULT _hr = put_CrackEnvTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7914)
inline enum IRConcr_BAEL_EnvironmentType IRConcr_BAEL_ReinforceData::GetCrackEnvBot ( ) {
    enum IRConcr_BAEL_EnvironmentType _result;
    HRESULT _hr = get_CrackEnvBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7915)
inline void IRConcr_BAEL_ReinforceData::PutCrackEnvBot ( enum IRConcr_BAEL_EnvironmentType ret ) {
    HRESULT _hr = put_CrackEnvBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7916)
inline enum IRConcr_BAEL_WaterLevel IRConcr_BAEL_ReinforceData::GetCrackWaterLevelTop ( ) {
    enum IRConcr_BAEL_WaterLevel _result;
    HRESULT _hr = get_CrackWaterLevelTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7917)
inline void IRConcr_BAEL_ReinforceData::PutCrackWaterLevelTop ( enum IRConcr_BAEL_WaterLevel ret ) {
    HRESULT _hr = put_CrackWaterLevelTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7918)
inline enum IRConcr_BAEL_WaterLevel IRConcr_BAEL_ReinforceData::GetCrackWaterLevelBot ( ) {
    enum IRConcr_BAEL_WaterLevel _result;
    HRESULT _hr = get_CrackWaterLevelBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7919)
inline void IRConcr_BAEL_ReinforceData::PutCrackWaterLevelBot ( enum IRConcr_BAEL_WaterLevel ret ) {
    HRESULT _hr = put_CrackWaterLevelBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7920)
inline double IRConcr_BAEL_ReinforceData::GetCrackAlphaTop ( ) {
    double _result = 0;
    HRESULT _hr = get_CrackAlphaTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7921)
inline void IRConcr_BAEL_ReinforceData::PutCrackAlphaTop ( double ret ) {
    HRESULT _hr = put_CrackAlphaTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7922)
inline double IRConcr_BAEL_ReinforceData::GetCrackAlphaBot ( ) {
    double _result = 0;
    HRESULT _hr = get_CrackAlphaBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7923)
inline void IRConcr_BAEL_ReinforceData::PutCrackAlphaBot ( double ret ) {
    HRESULT _hr = put_CrackAlphaBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7924)
inline VARIANT_BOOL IRConcr_BAEL_ReinforceData::GetCrackExtraParamsTop ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CrackExtraParamsTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7925)
inline void IRConcr_BAEL_ReinforceData::PutCrackExtraParamsTop ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CrackExtraParamsTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7926)
inline VARIANT_BOOL IRConcr_BAEL_ReinforceData::GetCrackExtraParamsBot ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CrackExtraParamsBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7927)
inline void IRConcr_BAEL_ReinforceData::PutCrackExtraParamsBot ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CrackExtraParamsBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7928)
inline double IRConcr_BAEL_ReinforceData::GetSLS_ConcreteStressesTop ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_ConcreteStressesTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7929)
inline void IRConcr_BAEL_ReinforceData::PutSLS_ConcreteStressesTop ( double ret ) {
    HRESULT _hr = put_SLS_ConcreteStressesTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7930)
inline double IRConcr_BAEL_ReinforceData::GetSLS_SteelStressesTop ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_SteelStressesTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7931)
inline void IRConcr_BAEL_ReinforceData::PutSLS_SteelStressesTop ( double ret ) {
    HRESULT _hr = put_SLS_SteelStressesTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7932)
inline double IRConcr_BAEL_ReinforceData::GetSLS_ConcreteStressesBot ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_ConcreteStressesBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7933)
inline void IRConcr_BAEL_ReinforceData::PutSLS_ConcreteStressesBot ( double ret ) {
    HRESULT _hr = put_SLS_ConcreteStressesBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7934)
inline double IRConcr_BAEL_ReinforceData::GetSLS_SteelStressesBot ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_SteelStressesBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7935)
inline void IRConcr_BAEL_ReinforceData::PutSLS_SteelStressesBot ( double ret ) {
    HRESULT _hr = put_SLS_SteelStressesBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcr_ACI318_ReinforceData wrapper method implementations
//

#pragma implementation_key(7936)
inline VARIANT_BOOL IRConcr_ACI318_ReinforceData::GetSLS_Cracking ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Cracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7937)
inline void IRConcr_ACI318_ReinforceData::PutSLS_Cracking ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Cracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7938)
inline VARIANT_BOOL IRConcr_ACI318_ReinforceData::GetSLS_Deflection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Deflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7939)
inline void IRConcr_ACI318_ReinforceData::PutSLS_Deflection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Deflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7940)
inline VARIANT_BOOL IRConcr_ACI318_ReinforceData::GetSLS_ReinforcementCorrection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_ReinforcementCorrection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7941)
inline void IRConcr_ACI318_ReinforceData::PutSLS_ReinforcementCorrection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_ReinforcementCorrection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7942)
inline double IRConcr_ACI318_ReinforceData::GetSLS_MaxCracking ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxCracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7943)
inline void IRConcr_ACI318_ReinforceData::PutSLS_MaxCracking ( double ret ) {
    HRESULT _hr = put_SLS_MaxCracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7944)
inline double IRConcr_ACI318_ReinforceData::GetSLS_MaxDeflection ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxDeflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7945)
inline void IRConcr_ACI318_ReinforceData::PutSLS_MaxDeflection ( double ret ) {
    HRESULT _hr = put_SLS_MaxDeflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7946)
inline double IRConcr_ACI318_ReinforceData::GetSLS_LoadRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_LoadRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7947)
inline void IRConcr_ACI318_ReinforceData::PutSLS_LoadRatio ( double ret ) {
    HRESULT _hr = put_SLS_LoadRatio(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7948)
inline enum IRConcr_ACI318_LoadActionPeriodType IRConcr_ACI318_ReinforceData::GetSLS_LoadActionPeriod ( ) {
    enum IRConcr_ACI318_LoadActionPeriodType _result;
    HRESULT _hr = get_SLS_LoadActionPeriod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7949)
inline void IRConcr_ACI318_ReinforceData::PutSLS_LoadActionPeriod ( enum IRConcr_ACI318_LoadActionPeriodType ret ) {
    HRESULT _hr = put_SLS_LoadActionPeriod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7950)
inline VARIANT_BOOL IRConcr_ACI318_ReinforceData::GetSLS_Factor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Factor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7951)
inline void IRConcr_ACI318_ReinforceData::PutSLS_Factor ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Factor(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7952)
inline double IRConcr_ACI318_ReinforceData::GetSLS_FactorValue ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_FactorValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7953)
inline void IRConcr_ACI318_ReinforceData::PutSLS_FactorValue ( double ret ) {
    HRESULT _hr = put_SLS_FactorValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7954)
inline VARIANT_BOOL IRConcr_ACI318_ReinforceData::GetIsMetric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsMetric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7955)
inline HRESULT IRConcr_ACI318_ReinforceData::SetBarDim ( enum IRConcrReinforceBarType _type, enum IRConcr_ACI318_BarDim _val ) {
    HRESULT _hr = raw_SetBarDim(_type, _val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7956)
inline enum IRConcr_ACI318_BarDim IRConcr_ACI318_ReinforceData::GetBarDim ( enum IRConcrReinforceBarType _type ) {
    enum IRConcr_ACI318_BarDim _result;
    HRESULT _hr = raw_GetBarDim(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7957)
inline HRESULT IRConcr_ACI318_ReinforceData::SetMetricBarDim ( enum IRConcrReinforceBarType _type, enum IRConcr_ACI318_MetricBarDim _val ) {
    HRESULT _hr = raw_SetMetricBarDim(_type, _val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7958)
inline enum IRConcr_ACI318_MetricBarDim IRConcr_ACI318_ReinforceData::GetMetricBarDim ( enum IRConcrReinforceBarType _bar_type ) {
    enum IRConcr_ACI318_MetricBarDim _result;
    HRESULT _hr = raw_GetMetricBarDim(_bar_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7959)
inline IRConcrReinforceDataMainPtr IRConcr_ACI318_ReinforceData::GetMain ( ) {
    struct IRConcrReinforceDataMain * _result = 0;
    HRESULT _hr = get_Main(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforceDataMainPtr(_result, false);
}

#pragma implementation_key(7960)
inline VARIANT_BOOL IRConcr_ACI318_ReinforceData::GetSLS_CreepingCoef ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CreepingCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7961)
inline void IRConcr_ACI318_ReinforceData::PutSLS_CreepingCoef ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CreepingCoef(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7962)
inline double IRConcr_ACI318_ReinforceData::GetSLS_CreepingCoefValue ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_CreepingCoefValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7963)
inline void IRConcr_ACI318_ReinforceData::PutSLS_CreepingCoefValue ( double ret ) {
    HRESULT _hr = put_SLS_CreepingCoefValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcr_ACI318_ConcreteParams wrapper method implementations
//

#pragma implementation_key(7964)
inline VARIANT_BOOL IRConcr_ACI318_ConcreteParams::GetAsInStructure ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AsInStructure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7965)
inline void IRConcr_ACI318_ConcreteParams::PutAsInStructure ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AsInStructure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcr_BS8110_ReinforceData wrapper method implementations
//

#pragma implementation_key(7966)
inline VARIANT_BOOL IRConcr_BS8110_ReinforceData::GetSLS_Cracking ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Cracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7967)
inline void IRConcr_BS8110_ReinforceData::PutSLS_Cracking ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Cracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7968)
inline VARIANT_BOOL IRConcr_BS8110_ReinforceData::GetSLS_Deflection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Deflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7969)
inline void IRConcr_BS8110_ReinforceData::PutSLS_Deflection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Deflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7970)
inline VARIANT_BOOL IRConcr_BS8110_ReinforceData::GetSLS_DeflectionReinfCorection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_DeflectionReinfCorection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7971)
inline void IRConcr_BS8110_ReinforceData::PutSLS_DeflectionReinfCorection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_DeflectionReinfCorection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7972)
inline VARIANT_BOOL IRConcr_BS8110_ReinforceData::GetSLS_CrackingReinfCorection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CrackingReinfCorection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7973)
inline void IRConcr_BS8110_ReinforceData::PutSLS_CrackingReinfCorection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CrackingReinfCorection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7974)
inline enum IRConcr_BS8110_ExposureRatings IRConcr_BS8110_ReinforceData::GetSLS_Exposure ( ) {
    enum IRConcr_BS8110_ExposureRatings _result;
    HRESULT _hr = get_SLS_Exposure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7975)
inline void IRConcr_BS8110_ReinforceData::PutSLS_Exposure ( enum IRConcr_BS8110_ExposureRatings ret ) {
    HRESULT _hr = put_SLS_Exposure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7976)
inline double IRConcr_BS8110_ReinforceData::GetSLS_MaxDeflection ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxDeflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7977)
inline void IRConcr_BS8110_ReinforceData::PutSLS_MaxDeflection ( double ret ) {
    HRESULT _hr = put_SLS_MaxDeflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7978)
inline double IRConcr_BS8110_ReinforceData::GetSLS_MaxCracking ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxCracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7979)
inline void IRConcr_BS8110_ReinforceData::PutSLS_MaxCracking ( double ret ) {
    HRESULT _hr = put_SLS_MaxCracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7980)
inline double IRConcr_BS8110_ReinforceData::GetSLS_LoadRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_LoadRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7981)
inline void IRConcr_BS8110_ReinforceData::PutSLS_LoadRatio ( double ret ) {
    HRESULT _hr = put_SLS_LoadRatio(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7982)
inline enum IRConcr_BS8110_ConcreteAge IRConcr_BS8110_ReinforceData::GetSLS_ConcreteAge ( ) {
    enum IRConcr_BS8110_ConcreteAge _result;
    HRESULT _hr = get_SLS_ConcreteAge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7983)
inline void IRConcr_BS8110_ReinforceData::PutSLS_ConcreteAge ( enum IRConcr_BS8110_ConcreteAge ret ) {
    HRESULT _hr = put_SLS_ConcreteAge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7984)
inline short IRConcr_BS8110_ReinforceData::GetSLS_EnvHumidity ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_EnvHumidity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7985)
inline void IRConcr_BS8110_ReinforceData::PutSLS_EnvHumidity ( short ret ) {
    HRESULT _hr = put_SLS_EnvHumidity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7986)
inline VARIANT_BOOL IRConcr_BS8110_ReinforceData::GetSLS_CreepingCoef ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CreepingCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7987)
inline void IRConcr_BS8110_ReinforceData::PutSLS_CreepingCoef ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CreepingCoef(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7988)
inline double IRConcr_BS8110_ReinforceData::GetSLS_CreepingCoefValue ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_CreepingCoefValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7989)
inline void IRConcr_BS8110_ReinforceData::PutSLS_CreepingCoefValue ( double ret ) {
    HRESULT _hr = put_SLS_CreepingCoefValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7990)
inline enum IRConcr_BS8110_PartialSafetyFactors IRConcr_BS8110_ReinforceData::GetPartialSafetyFactors ( ) {
    enum IRConcr_BS8110_PartialSafetyFactors _result;
    HRESULT _hr = get_PartialSafetyFactors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7991)
inline void IRConcr_BS8110_ReinforceData::PutPartialSafetyFactors ( enum IRConcr_BS8110_PartialSafetyFactors ret ) {
    HRESULT _hr = put_PartialSafetyFactors(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7992)
inline IRConcrReinforceDataMainPtr IRConcr_BS8110_ReinforceData::GetMain ( ) {
    struct IRConcrReinforceDataMain * _result = 0;
    HRESULT _hr = get_Main(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforceDataMainPtr(_result, false);
}

//
// dispinterface _IRConcrSlabRequiredReinfEngineEvents wrapper method implementations
//

#pragma implementation_key(7993)
inline HRESULT _IRConcrSlabRequiredReinfEngineEvents::CalcNotify ( _bstr_t strText, long nType, VARIANT_BOOL * bHandled, long * nReturnValue ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0008\x0003\x400b\x4003", (BSTR)strText, nType, bHandled, nReturnValue);
    return _result;
}

#pragma implementation_key(7994)
inline HRESULT _IRConcrSlabRequiredReinfEngineEvents::ProgressNotify ( _bstr_t strText, long nType, long lParam, long wParam, long * nReturnValue ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0008\x0003\x0003\x0003\x4003", (BSTR)strText, nType, lParam, wParam, nReturnValue);
    return _result;
}

#pragma implementation_key(7995)
inline HRESULT _IRConcrSlabRequiredReinfEngineEvents::CalcNotifyEx ( long nCaller, _bstr_t strText, _bstr_t strFullText, _bstr_t strCaption, long nType, long nTypeEx, _bstr_t strSelection, VARIANT_BOOL * bHandled, long * nReturnValue ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0003\x0008\x0008\x0008\x0003\x0003\x0008\x400b\x4003", nCaller, (BSTR)strText, (BSTR)strFullText, (BSTR)strCaption, nType, nTypeEx, (BSTR)strSelection, bHandled, nReturnValue);
    return _result;
}

//
// interface IRConcr_SNIP_ConcreteParams wrapper method implementations
//

#pragma implementation_key(7996)
inline enum IRConcr_SNIP_ConcreteTypes IRConcr_SNIP_ConcreteParams::GetType ( ) {
    enum IRConcr_SNIP_ConcreteTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7997)
inline void IRConcr_SNIP_ConcreteParams::PutType ( enum IRConcr_SNIP_ConcreteTypes ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7998)
inline enum IRConcr_SNIP_CuringMethods IRConcr_SNIP_ConcreteParams::GetCuringMethod ( ) {
    enum IRConcr_SNIP_CuringMethods _result;
    HRESULT _hr = get_CuringMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7999)
inline void IRConcr_SNIP_ConcreteParams::PutCuringMethod ( enum IRConcr_SNIP_CuringMethods ret ) {
    HRESULT _hr = put_CuringMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8000)
inline VARIANT_BOOL IRConcr_SNIP_ConcreteParams::GetConcretingInLayers ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ConcretingInLayers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8001)
inline void IRConcr_SNIP_ConcreteParams::PutConcretingInLayers ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ConcretingInLayers(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8002)
inline VARIANT_BOOL IRConcr_SNIP_ConcreteParams::GetHighHumidity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HighHumidity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8003)
inline void IRConcr_SNIP_ConcreteParams::PutHighHumidity ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_HighHumidity(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcr_SNIP_ReinforceData wrapper method implementations
//

#pragma implementation_key(8004)
inline VARIANT_BOOL IRConcr_SNIP_ReinforceData::GetSLS_Cracking ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Cracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8005)
inline void IRConcr_SNIP_ReinforceData::PutSLS_Cracking ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Cracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8006)
inline VARIANT_BOOL IRConcr_SNIP_ReinforceData::GetSLS_CrackingReinfCorrection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CrackingReinfCorrection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8007)
inline void IRConcr_SNIP_ReinforceData::PutSLS_CrackingReinfCorrection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CrackingReinfCorrection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8008)
inline enum IRConcr_SNIP_Exposure IRConcr_SNIP_ReinforceData::GetSLS_Exposure ( ) {
    enum IRConcr_SNIP_Exposure _result;
    HRESULT _hr = get_SLS_Exposure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8009)
inline void IRConcr_SNIP_ReinforceData::PutSLS_Exposure ( enum IRConcr_SNIP_Exposure ret ) {
    HRESULT _hr = put_SLS_Exposure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcr_EC2_ReinforceData wrapper method implementations
//

#pragma implementation_key(8010)
inline VARIANT_BOOL IRConcr_EC2_ReinforceData::GetSLS_Cracking ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Cracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8011)
inline void IRConcr_EC2_ReinforceData::PutSLS_Cracking ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Cracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8012)
inline VARIANT_BOOL IRConcr_EC2_ReinforceData::GetSLS_Deflection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Deflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8013)
inline void IRConcr_EC2_ReinforceData::PutSLS_Deflection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Deflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8014)
inline VARIANT_BOOL IRConcr_EC2_ReinforceData::GetSLS_CrackingReinfCorrect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CrackingReinfCorrect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8015)
inline void IRConcr_EC2_ReinforceData::PutSLS_CrackingReinfCorrect ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CrackingReinfCorrect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8016)
inline VARIANT_BOOL IRConcr_EC2_ReinforceData::GetSLS_DeflectionReinfCorrect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_DeflectionReinfCorrect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8017)
inline void IRConcr_EC2_ReinforceData::PutSLS_DeflectionReinfCorrect ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_DeflectionReinfCorrect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8018)
inline enum IRConcr_EC2_ExposureRatings IRConcr_EC2_ReinforceData::GetSLS_Exposure ( ) {
    enum IRConcr_EC2_ExposureRatings _result;
    HRESULT _hr = get_SLS_Exposure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8019)
inline void IRConcr_EC2_ReinforceData::PutSLS_Exposure ( enum IRConcr_EC2_ExposureRatings ret ) {
    HRESULT _hr = put_SLS_Exposure(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8020)
inline double IRConcr_EC2_ReinforceData::GetSLS_MaxCracking ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxCracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8021)
inline void IRConcr_EC2_ReinforceData::PutSLS_MaxCracking ( double ret ) {
    HRESULT _hr = put_SLS_MaxCracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8022)
inline double IRConcr_EC2_ReinforceData::GetSLS_MaxDeflection ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxDeflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8023)
inline void IRConcr_EC2_ReinforceData::PutSLS_MaxDeflection ( double ret ) {
    HRESULT _hr = put_SLS_MaxDeflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8024)
inline short IRConcr_EC2_ReinforceData::GetSLS_ConcreteAge ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_ConcreteAge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8025)
inline void IRConcr_EC2_ReinforceData::PutSLS_ConcreteAge ( short ret ) {
    HRESULT _hr = put_SLS_ConcreteAge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8026)
inline double IRConcr_EC2_ReinforceData::GetSLS_EnvHumidityVal ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_EnvHumidityVal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8027)
inline void IRConcr_EC2_ReinforceData::PutSLS_EnvHumidityVal ( double ret ) {
    HRESULT _hr = put_SLS_EnvHumidityVal(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8028)
inline VARIANT_BOOL IRConcr_EC2_ReinforceData::GetSLS_CreepingCoef ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CreepingCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8029)
inline void IRConcr_EC2_ReinforceData::PutSLS_CreepingCoef ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CreepingCoef(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8030)
inline double IRConcr_EC2_ReinforceData::GetSLS_CreepingCoefValue ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_CreepingCoefValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8031)
inline void IRConcr_EC2_ReinforceData::PutSLS_CreepingCoefValue ( double ret ) {
    HRESULT _hr = put_SLS_CreepingCoefValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8032)
inline enum IRConcr_EC2_NAD IRConcr_EC2_ReinforceData::GetNAD ( ) {
    enum IRConcr_EC2_NAD _result;
    HRESULT _hr = get_NAD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8033)
inline void IRConcr_EC2_ReinforceData::PutNAD ( enum IRConcr_EC2_NAD ret ) {
    HRESULT _hr = put_NAD(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcr_IS2000_ReinforceData wrapper method implementations
//

#pragma implementation_key(8034)
inline VARIANT_BOOL IRConcr_IS2000_ReinforceData::GetSLS_Cracking ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Cracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8035)
inline void IRConcr_IS2000_ReinforceData::PutSLS_Cracking ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Cracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8036)
inline VARIANT_BOOL IRConcr_IS2000_ReinforceData::GetSLS_Deflection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_Deflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8037)
inline void IRConcr_IS2000_ReinforceData::PutSLS_Deflection ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_Deflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8038)
inline VARIANT_BOOL IRConcr_IS2000_ReinforceData::GetSLS_CrackingReinfCorrect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CrackingReinfCorrect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8039)
inline void IRConcr_IS2000_ReinforceData::PutSLS_CrackingReinfCorrect ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CrackingReinfCorrect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8040)
inline VARIANT_BOOL IRConcr_IS2000_ReinforceData::GetSLS_DeflectionReinfCorrect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_DeflectionReinfCorrect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8041)
inline void IRConcr_IS2000_ReinforceData::PutSLS_DeflectionReinfCorrect ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_DeflectionReinfCorrect(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8042)
inline short IRConcr_IS2000_ReinforceData::GetSLS_ConcreteAge ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_ConcreteAge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8043)
inline void IRConcr_IS2000_ReinforceData::PutSLS_ConcreteAge ( short ret ) {
    HRESULT _hr = put_SLS_ConcreteAge(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8044)
inline double IRConcr_IS2000_ReinforceData::GetSLS_MaxDeflection ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxDeflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8045)
inline void IRConcr_IS2000_ReinforceData::PutSLS_MaxDeflection ( double ret ) {
    HRESULT _hr = put_SLS_MaxDeflection(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8046)
inline double IRConcr_IS2000_ReinforceData::GetSLS_LoadRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_LoadRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8047)
inline void IRConcr_IS2000_ReinforceData::PutSLS_LoadRatio ( double ret ) {
    HRESULT _hr = put_SLS_LoadRatio(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8048)
inline VARIANT_BOOL IRConcr_IS2000_ReinforceData::GetSLS_CreepingCoeff ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_CreepingCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8049)
inline void IRConcr_IS2000_ReinforceData::PutSLS_CreepingCoeff ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_CreepingCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8050)
inline double IRConcr_IS2000_ReinforceData::GetSLS_CreepingCoeffValue ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_CreepingCoeffValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8051)
inline void IRConcr_IS2000_ReinforceData::PutSLS_CreepingCoeffValue ( double ret ) {
    HRESULT _hr = put_SLS_CreepingCoeffValue(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8052)
inline short IRConcr_IS2000_ReinforceData::GetSLS_ExposureTop ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_ExposureTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8053)
inline void IRConcr_IS2000_ReinforceData::PutSLS_ExposureTop ( short ret ) {
    HRESULT _hr = put_SLS_ExposureTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8054)
inline short IRConcr_IS2000_ReinforceData::GetSLS_ExposureBot ( ) {
    short _result = 0;
    HRESULT _hr = get_SLS_ExposureBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8055)
inline void IRConcr_IS2000_ReinforceData::PutSLS_ExposureBot ( short ret ) {
    HRESULT _hr = put_SLS_ExposureBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8056)
inline double IRConcr_IS2000_ReinforceData::GetSLS_MaxCrackingTop ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxCrackingTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8057)
inline void IRConcr_IS2000_ReinforceData::PutSLS_MaxCrackingTop ( double ret ) {
    HRESULT _hr = put_SLS_MaxCrackingTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8058)
inline VARIANT_BOOL IRConcr_IS2000_ReinforceData::GetSLS_MaxCrackingTopEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_MaxCrackingTopEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8059)
inline void IRConcr_IS2000_ReinforceData::PutSLS_MaxCrackingTopEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_MaxCrackingTopEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8060)
inline double IRConcr_IS2000_ReinforceData::GetSLS_MaxCrackingBot ( ) {
    double _result = 0;
    HRESULT _hr = get_SLS_MaxCrackingBot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8061)
inline void IRConcr_IS2000_ReinforceData::PutSLS_MaxCrackingBot ( double ret ) {
    HRESULT _hr = put_SLS_MaxCrackingBot(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8062)
inline VARIANT_BOOL IRConcr_IS2000_ReinforceData::GetSLS_MaxCrackingBotEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SLS_MaxCrackingBotEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8063)
inline void IRConcr_IS2000_ReinforceData::PutSLS_MaxCrackingBotEnabled ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SLS_MaxCrackingBotEnabled(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8064)
inline IRConcrReinforceDataMainPtr IRConcr_IS2000_ReinforceData::GetMain ( ) {
    struct IRConcrReinforceDataMain * _result = 0;
    HRESULT _hr = get_Main(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforceDataMainPtr(_result, false);
}

//
// interface IRConcrColumnBucklingModel wrapper method implementations
//

#pragma implementation_key(8065)
inline VARIANT_BOOL IRConcrColumnBucklingModel::GetIsSwayY ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSwayY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8066)
inline void IRConcrColumnBucklingModel::PutIsSwayY ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSwayY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8067)
inline VARIANT_BOOL IRConcrColumnBucklingModel::GetIsSwayZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSwayZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8068)
inline void IRConcrColumnBucklingModel::PutIsSwayZ ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSwayZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8069)
inline VARIANT_BOOL IRConcrColumnBucklingModel::GetIsDirectionYOff ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDirectionYOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8070)
inline void IRConcrColumnBucklingModel::PutIsDirectionYOff ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsDirectionYOff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8071)
inline VARIANT_BOOL IRConcrColumnBucklingModel::GetIsDirectionZOff ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDirectionZOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8072)
inline void IRConcrColumnBucklingModel::PutIsDirectionZOff ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsDirectionZOff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8073)
inline double IRConcrColumnBucklingModel::GetKY ( ) {
    double _result = 0;
    HRESULT _hr = get_KY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8074)
inline void IRConcrColumnBucklingModel::PutKY ( double ret ) {
    HRESULT _hr = put_KY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8075)
inline double IRConcrColumnBucklingModel::GetLy ( ) {
    double _result = 0;
    HRESULT _hr = get_Ly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8076)
inline void IRConcrColumnBucklingModel::PutLy ( double ret ) {
    HRESULT _hr = put_Ly(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8077)
inline double IRConcrColumnBucklingModel::GetKZ ( ) {
    double _result = 0;
    HRESULT _hr = get_KZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8078)
inline void IRConcrColumnBucklingModel::PutKZ ( double ret ) {
    HRESULT _hr = put_KZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8079)
inline double IRConcrColumnBucklingModel::GetLz ( ) {
    double _result = 0;
    HRESULT _hr = get_Lz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8080)
inline void IRConcrColumnBucklingModel::PutLz ( double ret ) {
    HRESULT _hr = put_Lz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8081)
inline double IRConcrColumnBucklingModel::GetTotalStructureHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TotalStructureHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8082)
inline void IRConcrColumnBucklingModel::PutTotalStructureHeight ( double ret ) {
    HRESULT _hr = put_TotalStructureHeight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8083)
inline long IRConcrColumnBucklingModel::GetNumberOfStories ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfStories(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8084)
inline void IRConcrColumnBucklingModel::PutNumberOfStories ( long ret ) {
    HRESULT _hr = put_NumberOfStories(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8085)
inline VARIANT_BOOL IRConcrColumnBucklingModel::GetIsTotalStructureHeight ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTotalStructureHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8086)
inline void IRConcrColumnBucklingModel::PutIsTotalStructureHeight ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsTotalStructureHeight(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrColumnLoad wrapper method implementations
//

#pragma implementation_key(8087)
inline _bstr_t IRConcrColumnLoad::GetCaseName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaseName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8088)
inline void IRConcrColumnLoad::PutCaseName ( _bstr_t ret ) {
    HRESULT _hr = put_CaseName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8089)
inline enum IRConcrColumnLoadCaseType IRConcrColumnLoad::GetCaseType ( ) {
    enum IRConcrColumnLoadCaseType _result;
    HRESULT _hr = get_CaseType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8090)
inline void IRConcrColumnLoad::PutCaseType ( enum IRConcrColumnLoadCaseType ret ) {
    HRESULT _hr = put_CaseType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8091)
inline double IRConcrColumnLoad::GetN ( ) {
    double _result = 0;
    HRESULT _hr = get_N(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8092)
inline void IRConcrColumnLoad::PutN ( double ret ) {
    HRESULT _hr = put_N(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8093)
inline double IRConcrColumnLoad::GetMyA ( ) {
    double _result = 0;
    HRESULT _hr = get_MyA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8094)
inline void IRConcrColumnLoad::PutMyA ( double ret ) {
    HRESULT _hr = put_MyA(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8095)
inline double IRConcrColumnLoad::GetMyB ( ) {
    double _result = 0;
    HRESULT _hr = get_MyB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8096)
inline void IRConcrColumnLoad::PutMyB ( double ret ) {
    HRESULT _hr = put_MyB(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8097)
inline double IRConcrColumnLoad::GetMyC ( ) {
    double _result = 0;
    HRESULT _hr = get_MyC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8098)
inline void IRConcrColumnLoad::PutMyC ( double ret ) {
    HRESULT _hr = put_MyC(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8099)
inline double IRConcrColumnLoad::GetFY ( ) {
    double _result = 0;
    HRESULT _hr = get_FY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8100)
inline void IRConcrColumnLoad::PutFY ( double ret ) {
    HRESULT _hr = put_FY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8101)
inline double IRConcrColumnLoad::GetMzA ( ) {
    double _result = 0;
    HRESULT _hr = get_MzA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8102)
inline void IRConcrColumnLoad::PutMzA ( double ret ) {
    HRESULT _hr = put_MzA(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8103)
inline double IRConcrColumnLoad::GetMzB ( ) {
    double _result = 0;
    HRESULT _hr = get_MzB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8104)
inline void IRConcrColumnLoad::PutMzB ( double ret ) {
    HRESULT _hr = put_MzB(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8105)
inline double IRConcrColumnLoad::GetMzC ( ) {
    double _result = 0;
    HRESULT _hr = get_MzC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8106)
inline void IRConcrColumnLoad::PutMzC ( double ret ) {
    HRESULT _hr = put_MzC(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8107)
inline double IRConcrColumnLoad::GetFZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8108)
inline void IRConcrColumnLoad::PutFZ ( double ret ) {
    HRESULT _hr = put_FZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8109)
inline double IRConcrColumnLoad::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8110)
inline void IRConcrColumnLoad::PutGamma ( double ret ) {
    HRESULT _hr = put_Gamma(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8111)
inline double IRConcrColumnLoad::GetMnsY ( ) {
    double _result = 0;
    HRESULT _hr = get_MnsY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8112)
inline void IRConcrColumnLoad::PutMnsY ( double ret ) {
    HRESULT _hr = put_MnsY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8113)
inline double IRConcrColumnLoad::GetMnsZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MnsZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8114)
inline void IRConcrColumnLoad::PutMnsZ ( double ret ) {
    HRESULT _hr = put_MnsZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8115)
inline double IRConcrColumnLoad::GetNdN ( ) {
    double _result = 0;
    HRESULT _hr = get_NdN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8116)
inline void IRConcrColumnLoad::PutNdN ( double ret ) {
    HRESULT _hr = put_NdN(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrColumnLoads wrapper method implementations
//

#pragma implementation_key(8117)
inline IUnknownPtr IRConcrColumnLoads::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8118)
inline IRConcrColumnLoadPtr IRConcrColumnLoads::Getitem ( long index ) {
    struct IRConcrColumnLoad * _result = 0;
    HRESULT _hr = get_item(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrColumnLoadPtr(_result, false);
}

#pragma implementation_key(8119)
inline long IRConcrColumnLoads::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8120)
inline IRConcrColumnLoadPtr IRConcrColumnLoads::Add ( ) {
    struct IRConcrColumnLoad * _result = 0;
    HRESULT _hr = raw_Add(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrColumnLoadPtr(_result, false);
}

#pragma implementation_key(8121)
inline HRESULT IRConcrColumnLoads::RemoveAll ( ) {
    HRESULT _hr = raw_RemoveAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRConcrCodeReport wrapper method implementations
//

#pragma implementation_key(8122)
inline HRESULT IRConcrCodeReport::AddMessage ( _bstr_t _message ) {
    HRESULT _hr = raw_AddMessage(_message);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8123)
inline HRESULT IRConcrCodeReport::AddWarning ( _bstr_t _warning ) {
    HRESULT _hr = raw_AddWarning(_warning);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8124)
inline HRESULT IRConcrCodeReport::AddError ( _bstr_t _text ) {
    HRESULT _hr = raw_AddError(_text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRobotProtectionInfo wrapper method implementations
//

#pragma implementation_key(8125)
inline VARIANT_BOOL IRobotProtectionInfo::IsExtensionEnabled ( long _ext_num ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsExtensionEnabled(_ext_num, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotSTRFileAnalyser wrapper method implementations
//

#pragma implementation_key(8126)
inline IRobotFileInsertParamsPtr IRobotSTRFileAnalyser::GetInsertParams ( ) {
    struct IRobotFileInsertParams * _result = 0;
    HRESULT _hr = get_InsertParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFileInsertParamsPtr(_result, false);
}

#pragma implementation_key(8127)
inline IRobotSTRParamsPtr IRobotSTRFileAnalyser::GetParams ( ) {
    struct IRobotSTRParams * _result = 0;
    HRESULT _hr = get_Params(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSTRParamsPtr(_result, false);
}

#pragma implementation_key(8128)
inline VARIANT_BOOL IRobotSTRFileAnalyser::ReadParams ( _bstr_t _file_path ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadParams(_file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8129)
inline VARIANT_BOOL IRobotSTRFileAnalyser::InsertToProject ( _bstr_t _file_path, VARIANT_BOOL _ignore_warnings, VARIANT_BOOL _only_geometry ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_InsertToProject(_file_path, _ignore_warnings, _only_geometry, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrBarDiameters wrapper method implementations
//

#pragma implementation_key(8130)
inline IUnknownPtr IRConcrBarDiameters::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8131)
inline double IRConcrBarDiameters::Getitem ( long index ) {
    double _result = 0;
    HRESULT _hr = get_item(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8132)
inline long IRConcrBarDiameters::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8133)
inline HRESULT IRConcrBarDiameters::Add ( double _newDiam ) {
    HRESULT _hr = raw_Add(_newDiam);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8134)
inline HRESULT IRConcrBarDiameters::RemoveAll ( ) {
    HRESULT _hr = raw_RemoveAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRConcrConcrete wrapper method implementations
//

#pragma implementation_key(8135)
inline double IRConcrConcrete::GetCharacteristicStrength ( ) {
    double _result = 0;
    HRESULT _hr = get_CharacteristicStrength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8136)
inline void IRConcrConcrete::PutCharacteristicStrength ( double ret ) {
    HRESULT _hr = put_CharacteristicStrength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrSteelNames wrapper method implementations
//

#pragma implementation_key(8137)
inline IUnknownPtr IRConcrSteelNames::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8138)
inline _bstr_t IRConcrSteelNames::Getitem ( long index ) {
    BSTR _result = 0;
    HRESULT _hr = get_item(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8139)
inline long IRConcrSteelNames::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrSteel wrapper method implementations
//

#pragma implementation_key(8140)
inline _bstr_t IRConcrSteel::GetSelectedName ( enum IRConcrSteelType _type ) {
    BSTR _result = 0;
    HRESULT _hr = get_SelectedName(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8141)
inline void IRConcrSteel::PutSelectedName ( enum IRConcrSteelType _type, _bstr_t ret ) {
    HRESULT _hr = put_SelectedName(_type, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8142)
inline enum IRConcrSteelSurfaceType IRConcrSteel::GetSurfaceType ( enum IRConcrSteelType _type ) {
    enum IRConcrSteelSurfaceType _result;
    HRESULT _hr = get_SurfaceType(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8143)
inline void IRConcrSteel::PutSurfaceType ( enum IRConcrSteelType _type, enum IRConcrSteelSurfaceType ret ) {
    HRESULT _hr = put_SurfaceType(_type, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8144)
inline IRConcrSteelStrengthsPtr IRConcrSteel::GetAvailableStrengths ( enum IRConcrSteelSurfaceType surface ) {
    struct IRConcrSteelStrengths * _result = 0;
    HRESULT _hr = get_AvailableStrengths(surface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelStrengthsPtr(_result, false);
}

#pragma implementation_key(8145)
inline IRConcrSteelNamesPtr IRConcrSteel::GetAvailableNames ( enum IRConcrSteelSurfaceType surface ) {
    struct IRConcrSteelNames * _result = 0;
    HRESULT _hr = get_AvailableNames(surface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelNamesPtr(_result, false);
}

#pragma implementation_key(8146)
inline IRConcrBarDiametersPtr IRConcrSteel::GetBarDiameters ( enum IRConcrSteelType _type ) {
    struct IRConcrBarDiameters * _result = 0;
    HRESULT _hr = get_BarDiameters(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBarDiametersPtr(_result, false);
}

#pragma implementation_key(8147)
inline double IRConcrSteel::GetCharacteristicStrength ( enum IRConcrSteelType _type ) {
    double _result = 0;
    HRESULT _hr = get_CharacteristicStrength(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8148)
inline void IRConcrSteel::PutCharacteristicStrength ( enum IRConcrSteelType _type, double ret ) {
    HRESULT _hr = put_CharacteristicStrength(_type, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8149)
inline _bstr_t IRConcrSteel::GetBarsDatabasePath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BarsDatabasePath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IRConcrReinforcingBar wrapper method implementations
//

#pragma implementation_key(8150)
inline enum IRConcrSteelType IRConcrReinforcingBar::GetSteelType ( ) {
    enum IRConcrSteelType _result;
    HRESULT _hr = get_SteelType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8151)
inline void IRConcrReinforcingBar::PutSteelType ( enum IRConcrSteelType ret ) {
    HRESULT _hr = put_SteelType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8152)
inline double IRConcrReinforcingBar::GetWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Weight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8153)
inline IRobotGeoPoint3DPtr IRConcrReinforcingBar::GetPosition ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(8154)
inline IRobotGeoPoint3DPtr IRConcrReinforcingBar::GetDirectionX ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_DirectionX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(8155)
inline IRobotGeoPoint3DPtr IRConcrReinforcingBar::GetDirectionY ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_DirectionY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(8156)
inline IRobotGeoPoint3DPtr IRConcrReinforcingBar::GetDirectionZ ( ) {
    struct IRobotGeoPoint3D * _result = 0;
    HRESULT _hr = get_DirectionZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGeoPoint3DPtr(_result, false);
}

#pragma implementation_key(8157)
inline short IRConcrReinforcingBar::GetSpan ( ) {
    short _result = 0;
    HRESULT _hr = get_Span(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8158)
inline void IRConcrReinforcingBar::PutSpan ( short ret ) {
    HRESULT _hr = put_Span(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8159)
inline enum IRConcrBarType IRConcrReinforcingBar::GetType ( ) {
    enum IRConcrBarType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8160)
inline enum IRConcrBarSubtype IRConcrReinforcingBar::GetSubType ( ) {
    enum IRConcrBarSubtype _result;
    HRESULT _hr = get_SubType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8161)
inline int IRConcrReinforcingBar::GetGroupNumber ( ) {
    int _result = 0;
    HRESULT _hr = get_GroupNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8162)
inline void IRConcrReinforcingBar::PutGroupNumber ( int ret ) {
    HRESULT _hr = put_GroupNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8163)
inline long IRConcrReinforcingBar::GetROBarEditorId ( ) {
    long _result = 0;
    HRESULT _hr = get_ROBarEditorId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8164)
inline VARIANT_BOOL IRConcrReinforcingBar::SetDirections ( double _Xx, double _Xy, double _Xz, double _Yx, double _Yy, double _Yz ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetDirections(_Xx, _Xy, _Xz, _Yx, _Yy, _Yz, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8165)
inline IDispatchPtr IRConcrReinforcingBar::GetROBarEditor ( VARIANT_BOOL _readOnly ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetROBarEditor(_readOnly, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8166)
inline HRESULT IRConcrReinforcingBar::SetROBarEditor ( IDispatch * _editor ) {
    HRESULT _hr = raw_SetROBarEditor(_editor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8167)
inline VARIANT_BOOL IRConcrReinforcingBar::SetBarShape ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetBarShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8168)
inline VARIANT_BOOL IRConcrReinforcingBar::CreateCopy ( double _offX, double _offY, double _offZ, long _number ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateCopy(_offX, _offY, _offZ, _number, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8169)
inline VARIANT_BOOL IRConcrReinforcingBar::GetIsParametric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsParametric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8170)
inline void IRConcrReinforcingBar::PutIsParametric ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsParametric(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrReinforcingBars wrapper method implementations
//

#pragma implementation_key(8171)
inline IUnknownPtr IRConcrReinforcingBars::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8172)
inline IRConcrReinforcingBarPtr IRConcrReinforcingBars::Getitem ( long index ) {
    struct IRConcrReinforcingBar * _result = 0;
    HRESULT _hr = get_item(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcingBarPtr(_result, false);
}

#pragma implementation_key(8173)
inline long IRConcrReinforcingBars::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8174)
inline IRConcrReinforcingBarPtr IRConcrReinforcingBars::Add ( _bstr_t _shapeCode, enum IRConcrBarType _type, enum IRConcrBarSubtype _subType, double _diameter, double _bendDiam ) {
    struct IRConcrReinforcingBar * _result = 0;
    HRESULT _hr = raw_Add(_shapeCode, _type, _subType, _diameter, _bendDiam, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcingBarPtr(_result, false);
}

//
// interface IRConcrReinforcement wrapper method implementations
//

#pragma implementation_key(8175)
inline _bstr_t IRConcrReinforcement::GetComment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Comment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8176)
inline void IRConcrReinforcement::PutComment ( _bstr_t ret ) {
    HRESULT _hr = put_Comment(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8177)
inline long IRConcrReinforcement::GetGroupingMethod ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupingMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8178)
inline void IRConcrReinforcement::PutGroupingMethod ( long ret ) {
    HRESULT _hr = put_GroupingMethod(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8179)
inline VARIANT_BOOL IRConcrReinforcement::GetGroupGlobally ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GroupGlobally(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8180)
inline void IRConcrReinforcement::PutGroupGlobally ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GroupGlobally(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8181)
inline IRConcrReinforcingBarsPtr IRConcrReinforcement::GetBars ( ) {
    struct IRConcrReinforcingBars * _result = 0;
    HRESULT _hr = get_Bars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcingBarsPtr(_result, false);
}

#pragma implementation_key(8182)
inline HRESULT IRConcrReinforcement::RemoveAll ( ) {
    HRESULT _hr = raw_RemoveAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8183)
inline VARIANT_BOOL IRConcrReinforcement::LockRefresh ( VARIANT_BOOL _lock ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LockRefresh(_lock, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8184)
inline VARIANT_BOOL IRConcrReinforcement::Freeze ( VARIANT_BOOL _freeze ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Freeze(_freeze, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8185)
inline HRESULT IRConcrReinforcement::RemoveParametric ( ) {
    HRESULT _hr = raw_RemoveParametric();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8186)
inline VARIANT_BOOL IRConcrReinforcement::GetIsFrozen ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFrozen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrBeamSegment wrapper method implementations
//

#pragma implementation_key(8187)
inline enum IRConcrBeamSectionType IRConcrBeamSegment::GetSectionType ( ) {
    enum IRConcrBeamSectionType _result;
    HRESULT _hr = get_SectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8188)
inline void IRConcrBeamSegment::PutSectionType ( enum IRConcrBeamSectionType ret ) {
    HRESULT _hr = put_SectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8189)
inline double IRConcrBeamSegment::GetDim ( enum IRConcrBeamSectionDimType nType ) {
    double _result = 0;
    HRESULT _hr = get_Dim(nType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8190)
inline void IRConcrBeamSegment::PutDim ( enum IRConcrBeamSectionDimType nType, double ret ) {
    HRESULT _hr = put_Dim(nType, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrBeamSupport wrapper method implementations
//

#pragma implementation_key(8191)
inline double IRConcrBeamSupport::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8192)
inline void IRConcrBeamSupport::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8193)
inline enum IRConcrBeamSupportType IRConcrBeamSupport::GetType ( ) {
    enum IRConcrBeamSupportType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8194)
inline void IRConcrBeamSupport::PutType ( enum IRConcrBeamSupportType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8195)
inline _bstr_t IRConcrBeamSupport::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8196)
inline void IRConcrBeamSupport::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8197)
inline enum IRConcrBeamSupportMaterialType IRConcrBeamSupport::GetMaterialType ( ) {
    enum IRConcrBeamSupportMaterialType _result;
    HRESULT _hr = get_MaterialType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8198)
inline void IRConcrBeamSupport::PutMaterialType ( enum IRConcrBeamSupportMaterialType ret ) {
    HRESULT _hr = put_MaterialType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrBeamSpan wrapper method implementations
//

#pragma implementation_key(8199)
inline short IRConcrBeamSpan::GetSegmentNumber ( ) {
    short _result = 0;
    HRESULT _hr = get_SegmentNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8200)
inline void IRConcrBeamSpan::PutSegmentNumber ( short ret ) {
    HRESULT _hr = put_SegmentNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8201)
inline IRConcrBeamSegmentPtr IRConcrBeamSpan::Getsegment ( short nSegmentNumber ) {
    struct IRConcrBeamSegment * _result = 0;
    HRESULT _hr = get_segment(nSegmentNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamSegmentPtr(_result, false);
}

#pragma implementation_key(8202)
inline double IRConcrBeamSpan::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8203)
inline void IRConcrBeamSpan::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8204)
inline IRConcrBeamSupportPtr IRConcrBeamSpan::GetLeftSupport ( ) {
    struct IRConcrBeamSupport * _result = 0;
    HRESULT _hr = get_LeftSupport(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamSupportPtr(_result, false);
}

#pragma implementation_key(8205)
inline IRConcrBeamSupportPtr IRConcrBeamSpan::GetRightSupport ( ) {
    struct IRConcrBeamSupport * _result = 0;
    HRESULT _hr = get_RightSupport(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamSupportPtr(_result, false);
}

#pragma implementation_key(8206)
inline _bstr_t IRConcrBeamSpan::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8207)
inline void IRConcrBeamSpan::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8208)
inline double IRConcrBeamSpan::GetCalculationLength ( ) {
    double _result = 0;
    HRESULT _hr = get_CalculationLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8209)
inline VARIANT_BOOL IRConcrBeamSpan::GetHasOpenings ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasOpenings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrBeamGeometry wrapper method implementations
//

#pragma implementation_key(8210)
inline double IRConcrBeamGeometry::GetConcreteVolume ( ) {
    double _result = 0;
    HRESULT _hr = get_ConcreteVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8211)
inline double IRConcrBeamGeometry::GetShutteringArea ( ) {
    double _result = 0;
    HRESULT _hr = get_ShutteringArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8212)
inline short IRConcrBeamGeometry::GetSpanNumber ( ) {
    short _result = 0;
    HRESULT _hr = get_SpanNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8213)
inline void IRConcrBeamGeometry::PutSpanNumber ( short ret ) {
    HRESULT _hr = put_SpanNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8214)
inline IRConcrBeamSpanPtr IRConcrBeamGeometry::GetSpan ( short nSpanNo ) {
    struct IRConcrBeamSpan * _result = 0;
    HRESULT _hr = get_Span(nSpanNo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamSpanPtr(_result, false);
}

#pragma implementation_key(8215)
inline VARIANT_BOOL IRConcrBeamGeometry::GetLeftCantilever ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LeftCantilever(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8216)
inline void IRConcrBeamGeometry::PutLeftCantilever ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_LeftCantilever(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8217)
inline VARIANT_BOOL IRConcrBeamGeometry::GetRightCantilever ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RightCantilever(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8218)
inline void IRConcrBeamGeometry::PutRightCantilever ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RightCantilever(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8219)
inline VARIANT_BOOL IRConcrBeamGeometry::GetAutoNameSpans ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoNameSpans(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8220)
inline void IRConcrBeamGeometry::PutAutoNameSpans ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AutoNameSpans(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8221)
inline VARIANT_BOOL IRConcrBeamGeometry::GetAutoNameSupports ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoNameSupports(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8222)
inline void IRConcrBeamGeometry::PutAutoNameSupports ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AutoNameSupports(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8223)
inline HRESULT IRConcrBeamGeometry::UpdateInternalGeometryData ( ) {
    HRESULT _hr = raw_UpdateInternalGeometryData();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRConcrBeamImportOptions wrapper method implementations
//

#pragma implementation_key(8224)
inline VARIANT_BOOL IRConcrBeamImportOptions::GetImportCombinations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ImportCombinations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8225)
inline void IRConcrBeamImportOptions::PutImportCombinations ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ImportCombinations(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8226)
inline VARIANT_BOOL IRConcrBeamImportOptions::GetShowDialog ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowDialog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8227)
inline void IRConcrBeamImportOptions::PutShowDialog ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ShowDialog(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8228)
inline double IRConcrBeamImportOptions::GetLiveLongCoeff ( ) {
    double _result = 0;
    HRESULT _hr = get_LiveLongCoeff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8229)
inline void IRConcrBeamImportOptions::PutLiveLongCoeff ( double ret ) {
    HRESULT _hr = put_LiveLongCoeff(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8230)
inline VARIANT_BOOL IRConcrBeamImportOptions::GetRunCalcAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RunCalcAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8231)
inline void IRConcrBeamImportOptions::PutRunCalcAuto ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RunCalcAuto(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8232)
inline VARIANT_BOOL IRConcrBeamImportOptions::GetGroupByLevel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GroupByLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8233)
inline void IRConcrBeamImportOptions::PutGroupByLevel ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GroupByLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8234)
inline VARIANT_BOOL IRConcrBeamImportOptions::GetGroupByGeometry ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GroupByGeometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8235)
inline void IRConcrBeamImportOptions::PutGroupByGeometry ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GroupByGeometry(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrBeamCalcOptions wrapper method implementations
//

#pragma implementation_key(8236)
inline double IRConcrBeamCalcOptions::GetCoverBottom ( ) {
    double _result = 0;
    HRESULT _hr = get_CoverBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8237)
inline void IRConcrBeamCalcOptions::PutCoverBottom ( double ret ) {
    HRESULT _hr = put_CoverBottom(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8238)
inline VARIANT_BOOL IRConcrBeamCalcOptions::GetCoverBottomFixed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CoverBottomFixed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8239)
inline void IRConcrBeamCalcOptions::PutCoverBottomFixed ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CoverBottomFixed(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8240)
inline double IRConcrBeamCalcOptions::GetCoverTop ( ) {
    double _result = 0;
    HRESULT _hr = get_CoverTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8241)
inline void IRConcrBeamCalcOptions::PutCoverTop ( double ret ) {
    HRESULT _hr = put_CoverTop(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8242)
inline VARIANT_BOOL IRConcrBeamCalcOptions::GetCoverTopFixed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CoverTopFixed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8243)
inline void IRConcrBeamCalcOptions::PutCoverTopFixed ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CoverTopFixed(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8244)
inline double IRConcrBeamCalcOptions::GetCoverSide ( ) {
    double _result = 0;
    HRESULT _hr = get_CoverSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8245)
inline void IRConcrBeamCalcOptions::PutCoverSide ( double ret ) {
    HRESULT _hr = put_CoverSide(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8246)
inline VARIANT_BOOL IRConcrBeamCalcOptions::GetCoverSideFixed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CoverSideFixed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8247)
inline void IRConcrBeamCalcOptions::PutCoverSideFixed ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CoverSideFixed(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8248)
inline VARIANT_BOOL IRConcrBeamCalcOptions::GetCalcSpanLengthInAxis ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CalcSpanLengthInAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8249)
inline void IRConcrBeamCalcOptions::PutCalcSpanLengthInAxis ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_CalcSpanLengthInAxis(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrBeamPatternOptions wrapper method implementations
//

#pragma implementation_key(8250)
inline VARIANT_BOOL IRConcrBeamPatternOptions::GetSpanBySpan ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SpanBySpan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8251)
inline void IRConcrBeamPatternOptions::PutSpanBySpan ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_SpanBySpan(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrBeamSpanNumbers wrapper method implementations
//

#pragma implementation_key(8252)
inline IUnknownPtr IRConcrBeamSpanNumbers::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8253)
inline short IRConcrBeamSpanNumbers::Getitem ( long index ) {
    short _result = 0;
    HRESULT _hr = get_item(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8254)
inline long IRConcrBeamSpanNumbers::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8255)
inline HRESULT IRConcrBeamSpanNumbers::Add ( short _newVal ) {
    HRESULT _hr = raw_Add(_newVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8256)
inline HRESULT IRConcrBeamSpanNumbers::RemoveAll ( ) {
    HRESULT _hr = raw_RemoveAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRConcrBeamPointLoad wrapper method implementations
//

#pragma implementation_key(8257)
inline enum IRConcrBeamLoadNatureType IRConcrBeamPointLoad::GetNature ( ) {
    enum IRConcrBeamLoadNatureType _result;
    HRESULT _hr = get_Nature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8258)
inline void IRConcrBeamPointLoad::PutNature ( enum IRConcrBeamLoadNatureType ret ) {
    HRESULT _hr = put_Nature(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8259)
inline enum IRConcrBeamPointLoadType IRConcrBeamPointLoad::GetType ( ) {
    enum IRConcrBeamPointLoadType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8260)
inline void IRConcrBeamPointLoad::PutType ( enum IRConcrBeamPointLoadType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8261)
inline short IRConcrBeamPointLoad::GetCase ( ) {
    short _result = 0;
    HRESULT _hr = get_Case(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8262)
inline void IRConcrBeamPointLoad::PutCase ( short ret ) {
    HRESULT _hr = put_Case(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8263)
inline IRConcrBeamSpanNumbersPtr IRConcrBeamPointLoad::GetSpans ( ) {
    struct IRConcrBeamSpanNumbers * _result = 0;
    HRESULT _hr = get_Spans(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamSpanNumbersPtr(_result, false);
}

#pragma implementation_key(8264)
inline VARIANT_BOOL IRConcrBeamPointLoad::GetRelativeCoordinates ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RelativeCoordinates(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8265)
inline void IRConcrBeamPointLoad::PutRelativeCoordinates ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RelativeCoordinates(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8266)
inline double IRConcrBeamPointLoad::GetX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8267)
inline void IRConcrBeamPointLoad::PutX1 ( double ret ) {
    HRESULT _hr = put_X1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8268)
inline double IRConcrBeamPointLoad::GetValue ( ) {
    double _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8269)
inline void IRConcrBeamPointLoad::PutValue ( double ret ) {
    HRESULT _hr = put_Value(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrBeamLinearLoad wrapper method implementations
//

#pragma implementation_key(8270)
inline enum IRConcrBeamLoadNatureType IRConcrBeamLinearLoad::GetNature ( ) {
    enum IRConcrBeamLoadNatureType _result;
    HRESULT _hr = get_Nature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8271)
inline void IRConcrBeamLinearLoad::PutNature ( enum IRConcrBeamLoadNatureType ret ) {
    HRESULT _hr = put_Nature(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8272)
inline enum IRConcrBeamLinearLoadType IRConcrBeamLinearLoad::GetType ( ) {
    enum IRConcrBeamLinearLoadType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8273)
inline void IRConcrBeamLinearLoad::PutType ( enum IRConcrBeamLinearLoadType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8274)
inline short IRConcrBeamLinearLoad::GetCase ( ) {
    short _result = 0;
    HRESULT _hr = get_Case(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8275)
inline void IRConcrBeamLinearLoad::PutCase ( short ret ) {
    HRESULT _hr = put_Case(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8276)
inline IRConcrBeamSpanNumbersPtr IRConcrBeamLinearLoad::GetSpans ( ) {
    struct IRConcrBeamSpanNumbers * _result = 0;
    HRESULT _hr = get_Spans(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamSpanNumbersPtr(_result, false);
}

#pragma implementation_key(8277)
inline VARIANT_BOOL IRConcrBeamLinearLoad::GetRelativeCoordinates ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RelativeCoordinates(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8278)
inline void IRConcrBeamLinearLoad::PutRelativeCoordinates ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RelativeCoordinates(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8279)
inline double IRConcrBeamLinearLoad::GetX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8280)
inline void IRConcrBeamLinearLoad::PutX1 ( double ret ) {
    HRESULT _hr = put_X1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8281)
inline double IRConcrBeamLinearLoad::GetX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8282)
inline void IRConcrBeamLinearLoad::PutX2 ( double ret ) {
    HRESULT _hr = put_X2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8283)
inline double IRConcrBeamLinearLoad::GetX3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8284)
inline void IRConcrBeamLinearLoad::PutX3 ( double ret ) {
    HRESULT _hr = put_X3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8285)
inline double IRConcrBeamLinearLoad::GetX4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8286)
inline void IRConcrBeamLinearLoad::PutX4 ( double ret ) {
    HRESULT _hr = put_X4(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8287)
inline double IRConcrBeamLinearLoad::GetValue1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Value1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8288)
inline void IRConcrBeamLinearLoad::PutValue1 ( double ret ) {
    HRESULT _hr = put_Value1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8289)
inline double IRConcrBeamLinearLoad::GetValue2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Value2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8290)
inline void IRConcrBeamLinearLoad::PutValue2 ( double ret ) {
    HRESULT _hr = put_Value2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8291)
inline double IRConcrBeamLinearLoad::GetValue3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Value3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8292)
inline void IRConcrBeamLinearLoad::PutValue3 ( double ret ) {
    HRESULT _hr = put_Value3(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrBeamStoryOptions wrapper method implementations
//

#pragma implementation_key(8293)
inline enum IRConcrBeamCrackingType IRConcrBeamStoryOptions::GetCracking ( ) {
    enum IRConcrBeamCrackingType _result;
    HRESULT _hr = get_Cracking(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8294)
inline void IRConcrBeamStoryOptions::PutCracking ( enum IRConcrBeamCrackingType ret ) {
    HRESULT _hr = put_Cracking(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrBeam wrapper method implementations
//

#pragma implementation_key(8295)
inline IRConcrReinforcementPtr IRConcrBeam::GetReinforcement ( ) {
    struct IRConcrReinforcement * _result = 0;
    HRESULT _hr = get_Reinforcement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcementPtr(_result, false);
}

#pragma implementation_key(8296)
inline IRConcrSteelPtr IRConcrBeam::GetSteel ( ) {
    struct IRConcrSteel * _result = 0;
    HRESULT _hr = get_Steel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelPtr(_result, false);
}

#pragma implementation_key(8297)
inline IRConcrConcretePtr IRConcrBeam::GetConcrete ( ) {
    struct IRConcrConcrete * _result = 0;
    HRESULT _hr = get_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrConcretePtr(_result, false);
}

#pragma implementation_key(8298)
inline IRConcrBeamGeometryPtr IRConcrBeam::GetGeometry ( ) {
    struct IRConcrBeamGeometry * _result = 0;
    HRESULT _hr = get_Geometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamGeometryPtr(_result, false);
}

#pragma implementation_key(8299)
inline IRConcrBeamImportOptionsPtr IRConcrBeam::GetImportOptions ( ) {
    struct IRConcrBeamImportOptions * _result = 0;
    HRESULT _hr = get_ImportOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamImportOptionsPtr(_result, false);
}

#pragma implementation_key(8300)
inline short IRConcrBeam::GetStructureUserNoCount ( ) {
    short _result = 0;
    HRESULT _hr = get_StructureUserNoCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8301)
inline void IRConcrBeam::PutStructureUserNoCount ( short ret ) {
    HRESULT _hr = put_StructureUserNoCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8302)
inline long IRConcrBeam::GetStructureUserNo ( short nIdx ) {
    long _result = 0;
    HRESULT _hr = get_StructureUserNo(nIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8303)
inline void IRConcrBeam::PutStructureUserNo ( short nIdx, long ret ) {
    HRESULT _hr = put_StructureUserNo(nIdx, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8304)
inline IRConcrBeamCalcOptionsPtr IRConcrBeam::GetCalculationOptions ( ) {
    struct IRConcrBeamCalcOptions * _result = 0;
    HRESULT _hr = get_CalculationOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamCalcOptionsPtr(_result, false);
}

#pragma implementation_key(8305)
inline IRConcrBeamPatternOptionsPtr IRConcrBeam::GetPatternOptions ( ) {
    struct IRConcrBeamPatternOptions * _result = 0;
    HRESULT _hr = get_PatternOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamPatternOptionsPtr(_result, false);
}

#pragma implementation_key(8306)
inline _bstr_t IRConcrBeam::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8307)
inline IRConcrBeamPointLoadPtr IRConcrBeam::GetPointLoad ( short nNo ) {
    struct IRConcrBeamPointLoad * _result = 0;
    HRESULT _hr = get_PointLoad(nNo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamPointLoadPtr(_result, false);
}

#pragma implementation_key(8308)
inline IRConcrBeamLinearLoadPtr IRConcrBeam::GetLinearLoad ( short nNo ) {
    struct IRConcrBeamLinearLoad * _result = 0;
    HRESULT _hr = get_LinearLoad(nNo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamLinearLoadPtr(_result, false);
}

#pragma implementation_key(8309)
inline short IRConcrBeam::GetLinearLoadsCount ( ) {
    short _result = 0;
    HRESULT _hr = get_LinearLoadsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8310)
inline void IRConcrBeam::PutLinearLoadsCount ( short ret ) {
    HRESULT _hr = put_LinearLoadsCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8311)
inline short IRConcrBeam::GetPointLoadsCount ( ) {
    short _result = 0;
    HRESULT _hr = get_PointLoadsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8312)
inline void IRConcrBeam::PutPointLoadsCount ( short ret ) {
    HRESULT _hr = put_PointLoadsCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8313)
inline IRConcrBeamStoryOptionsPtr IRConcrBeam::GetStoryOptions ( ) {
    struct IRConcrBeamStoryOptions * _result = 0;
    HRESULT _hr = get_StoryOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamStoryOptionsPtr(_result, false);
}

#pragma implementation_key(8314)
inline VARIANT_BOOL IRConcrBeam::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8315)
inline long IRConcrBeam::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8316)
inline VARIANT_BOOL IRConcrBeam::CreateCalculationNoteRtf ( _bstr_t _fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateCalculationNoteRtf(_fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8317)
inline HRESULT IRConcrBeam::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8318)
inline HRESULT IRConcrBeam::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8319)
inline long IRConcrBeam::Verify ( VARIANT_BOOL _showErrors ) {
    long _result = 0;
    HRESULT _hr = raw_Verify(_showErrors, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8320)
inline VARIANT_BOOL IRConcrBeam::Calculate ( VARIANT_BOOL _createReinforcement ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Calculate(_createReinforcement, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8321)
inline VARIANT_BOOL IRConcrBeam::GenerateSpliceBars ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GenerateSpliceBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8322)
inline long IRConcrBeam::VerifySpan ( VARIANT_BOOL _showErrors, short _spanNo ) {
    long _result = 0;
    HRESULT _hr = raw_VerifySpan(_showErrors, _spanNo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8323)
inline VARIANT_BOOL IRConcrBeam::CreateFromBars ( _bstr_t _selText ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateFromBars(_selText, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8324)
inline VARIANT_BOOL IRConcrBeam::GetIsSelected ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSelected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8325)
inline void IRConcrBeam::PutIsSelected ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSelected(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8326)
inline long IRConcrBeam::GetNumberOfElements ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfElements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8327)
inline void IRConcrBeam::PutNumberOfElements ( long ret ) {
    HRESULT _hr = put_NumberOfElements(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrCodeBeam wrapper method implementations
//

#pragma implementation_key(8328)
inline VARIANT_BOOL IRConcrCodeBeam::Verification ( struct IRConcrBeam * _beam, struct IRConcrCodeReport * _report ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Verification(_beam, _report, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8329)
inline VARIANT_BOOL IRConcrCodeBeam::IsCommandEnabled ( enum IRConcrCodeBeamCommand _command ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsCommandEnabled(_command, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrColumnGeometry wrapper method implementations
//

#pragma implementation_key(8330)
inline double IRConcrColumnGeometry::GetDim ( enum IRConcrColumnDimensionType T ) {
    double _result = 0;
    HRESULT _hr = get_Dim(T, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8331)
inline void IRConcrColumnGeometry::PutDim ( enum IRConcrColumnDimensionType T, double ret ) {
    HRESULT _hr = put_Dim(T, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8332)
inline enum IRConcrColumnSectionType IRConcrColumnGeometry::GetSection ( ) {
    enum IRConcrColumnSectionType _result;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8333)
inline void IRConcrColumnGeometry::PutSection ( enum IRConcrColumnSectionType ret ) {
    HRESULT _hr = put_Section(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8334)
inline double IRConcrColumnGeometry::GetShutteringArea ( ) {
    double _result = 0;
    HRESULT _hr = get_ShutteringArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8335)
inline double IRConcrColumnGeometry::GetConcreteVolume ( ) {
    double _result = 0;
    HRESULT _hr = get_ConcreteVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8336)
inline _bstr_t IRConcrColumnGeometry::GetSectionName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SectionName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8337)
inline void IRConcrColumnGeometry::PutSectionName ( _bstr_t ret ) {
    HRESULT _hr = put_SectionName(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8338)
inline VARIANT_BOOL IRConcrColumnGeometry::GetDimIsFixed ( enum IRConcrColumnDimensionType T ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DimIsFixed(T, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8339)
inline void IRConcrColumnGeometry::PutDimIsFixed ( enum IRConcrColumnDimensionType T, VARIANT_BOOL ret ) {
    HRESULT _hr = put_DimIsFixed(T, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrColumnImportOptions wrapper method implementations
//

#pragma implementation_key(8340)
inline VARIANT_BOOL IRConcrColumnImportOptions::GetImportCombinations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ImportCombinations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8341)
inline void IRConcrColumnImportOptions::PutImportCombinations ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ImportCombinations(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8342)
inline VARIANT_BOOL IRConcrColumnImportOptions::GetGroupByGeometry ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GroupByGeometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8343)
inline void IRConcrColumnImportOptions::PutGroupByGeometry ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GroupByGeometry(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8344)
inline VARIANT_BOOL IRConcrColumnImportOptions::GetGroupByLevel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GroupByLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8345)
inline void IRConcrColumnImportOptions::PutGroupByLevel ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_GroupByLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8346)
inline VARIANT_BOOL IRConcrColumnImportOptions::GetRunCalcAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RunCalcAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8347)
inline void IRConcrColumnImportOptions::PutRunCalcAuto ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RunCalcAuto(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8348)
inline VARIANT_BOOL IRConcrColumnImportOptions::GetShowDialog ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowDialog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8349)
inline void IRConcrColumnImportOptions::PutShowDialog ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ShowDialog(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrColumnCalcOptions wrapper method implementations
//

#pragma implementation_key(8350)
inline double IRConcrColumnCalcOptions::GetCover ( ) {
    double _result = 0;
    HRESULT _hr = get_Cover(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8351)
inline void IRConcrColumnCalcOptions::PutCover ( double ret ) {
    HRESULT _hr = put_Cover(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrColumnPatternOptions wrapper method implementations
//

#pragma implementation_key(8352)
inline VARIANT_BOOL IRConcrColumnPatternOptions::GetTiesToBeam ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TiesToBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8353)
inline void IRConcrColumnPatternOptions::PutTiesToBeam ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_TiesToBeam(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrColumn wrapper method implementations
//

#pragma implementation_key(8354)
inline IRConcrReinforcementPtr IRConcrColumn::GetReinforcement ( ) {
    struct IRConcrReinforcement * _result = 0;
    HRESULT _hr = get_Reinforcement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcementPtr(_result, false);
}

#pragma implementation_key(8355)
inline IRConcrSteelPtr IRConcrColumn::GetSteel ( ) {
    struct IRConcrSteel * _result = 0;
    HRESULT _hr = get_Steel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelPtr(_result, false);
}

#pragma implementation_key(8356)
inline IRConcrConcretePtr IRConcrColumn::GetConcrete ( ) {
    struct IRConcrConcrete * _result = 0;
    HRESULT _hr = get_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrConcretePtr(_result, false);
}

#pragma implementation_key(8357)
inline IRConcrColumnGeometryPtr IRConcrColumn::GetGeometry ( ) {
    struct IRConcrColumnGeometry * _result = 0;
    HRESULT _hr = get_Geometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrColumnGeometryPtr(_result, false);
}

#pragma implementation_key(8358)
inline IRConcrColumnImportOptionsPtr IRConcrColumn::GetImportOptions ( ) {
    struct IRConcrColumnImportOptions * _result = 0;
    HRESULT _hr = get_ImportOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrColumnImportOptionsPtr(_result, false);
}

#pragma implementation_key(8359)
inline short IRConcrColumn::GetStructureUserNoCount ( ) {
    short _result = 0;
    HRESULT _hr = get_StructureUserNoCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8360)
inline void IRConcrColumn::PutStructureUserNoCount ( short ret ) {
    HRESULT _hr = put_StructureUserNoCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8361)
inline long IRConcrColumn::GetStructureUserNo ( short nIdx ) {
    long _result = 0;
    HRESULT _hr = get_StructureUserNo(nIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8362)
inline void IRConcrColumn::PutStructureUserNo ( short nIdx, long ret ) {
    HRESULT _hr = put_StructureUserNo(nIdx, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8363)
inline IRConcrColumnCalcOptionsPtr IRConcrColumn::GetCalculationOptions ( ) {
    struct IRConcrColumnCalcOptions * _result = 0;
    HRESULT _hr = get_CalculationOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrColumnCalcOptionsPtr(_result, false);
}

#pragma implementation_key(8364)
inline IRConcrColumnPatternOptionsPtr IRConcrColumn::GetPatternOptions ( ) {
    struct IRConcrColumnPatternOptions * _result = 0;
    HRESULT _hr = get_PatternOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrColumnPatternOptionsPtr(_result, false);
}

#pragma implementation_key(8365)
inline _bstr_t IRConcrColumn::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8366)
inline VARIANT_BOOL IRConcrColumn::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8367)
inline long IRConcrColumn::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8368)
inline VARIANT_BOOL IRConcrColumn::CreateCalculationNoteRtf ( _bstr_t _fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateCalculationNoteRtf(_fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8369)
inline HRESULT IRConcrColumn::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8370)
inline long IRConcrColumn::Verify ( VARIANT_BOOL _showErrors ) {
    long _result = 0;
    HRESULT _hr = raw_Verify(_showErrors, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8371)
inline VARIANT_BOOL IRConcrColumn::Calculate ( VARIANT_BOOL _createReinforcement ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Calculate(_createReinforcement, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8372)
inline HRESULT IRConcrColumn::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8373)
inline VARIANT_BOOL IRConcrColumn::CreateFromBars ( _bstr_t _selText ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateFromBars(_selText, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8374)
inline long IRConcrColumn::GetNumberOfElements ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfElements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8375)
inline void IRConcrColumn::PutNumberOfElements ( long ret ) {
    HRESULT _hr = put_NumberOfElements(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8376)
inline IRConcrColumnBucklingModelPtr IRConcrColumn::GetBucklingModel ( ) {
    struct IRConcrColumnBucklingModel * _result = 0;
    HRESULT _hr = get_BucklingModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrColumnBucklingModelPtr(_result, false);
}

#pragma implementation_key(8377)
inline IRConcrColumnLoadsPtr IRConcrColumn::GetLoads ( ) {
    struct IRConcrColumnLoads * _result = 0;
    HRESULT _hr = get_Loads(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrColumnLoadsPtr(_result, false);
}

#pragma implementation_key(8378)
inline VARIANT_BOOL IRConcrColumn::GetIsSelected ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSelected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8379)
inline void IRConcrColumn::PutIsSelected ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSelected(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8380)
inline VARIANT_BOOL IRConcrColumn::GetHasUpperColumn ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasUpperColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8381)
inline IRConcrColumnPtr IRConcrColumn::GetUpperColumn ( ) {
    struct IRConcrColumn * _result = 0;
    HRESULT _hr = get_UpperColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrColumnPtr(_result, false);
}

#pragma implementation_key(8382)
inline void IRConcrColumn::PutUpperColumn ( struct IRConcrColumn * ret ) {
    HRESULT _hr = put_UpperColumn(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8383)
inline double IRConcrColumn::GetUpperColumnDY ( ) {
    double _result = 0;
    HRESULT _hr = get_UpperColumnDY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8384)
inline void IRConcrColumn::PutUpperColumnDY ( double ret ) {
    HRESULT _hr = put_UpperColumnDY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8385)
inline double IRConcrColumn::GetUpperColumnDZ ( ) {
    double _result = 0;
    HRESULT _hr = get_UpperColumnDZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8386)
inline void IRConcrColumn::PutUpperColumnDZ ( double ret ) {
    HRESULT _hr = put_UpperColumnDZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrCodeColumn wrapper method implementations
//

#pragma implementation_key(8387)
inline VARIANT_BOOL IRConcrCodeColumn::Verification ( struct IRConcrColumn * _column, struct IRConcrCodeReport * _report ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Verification(_column, _report, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8388)
inline VARIANT_BOOL IRConcrCodeColumn::IsCommandEnabled ( enum IRConcrCodeColumnCommand _command ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsCommandEnabled(_command, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrCodeService wrapper method implementations
//

#pragma implementation_key(8389)
inline VARIANT_BOOL IRConcrCodeService::IsConcrComponentServed ( enum IRobotProjectComponentType _module ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsConcrComponentServed(_module, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8390)
inline IRConcrCodeColumnPtr IRConcrCodeService::GetColumn ( ) {
    struct IRConcrCodeColumn * _result = 0;
    HRESULT _hr = get_Column(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrCodeColumnPtr(_result, false);
}

#pragma implementation_key(8391)
inline IRConcrCodeBeamPtr IRConcrCodeService::GetBeam ( ) {
    struct IRConcrCodeBeam * _result = 0;
    HRESULT _hr = get_Beam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrCodeBeamPtr(_result, false);
}

//
// interface IRConcrContinuousFootingSegment wrapper method implementations
//

#pragma implementation_key(8392)
inline enum IRConcrContinuousFootingSectionType IRConcrContinuousFootingSegment::GetSectionType ( ) {
    enum IRConcrContinuousFootingSectionType _result;
    HRESULT _hr = get_SectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8393)
inline void IRConcrContinuousFootingSegment::PutSectionType ( enum IRConcrContinuousFootingSectionType ret ) {
    HRESULT _hr = put_SectionType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8394)
inline double IRConcrContinuousFootingSegment::GetDim ( enum IRConcrContinuousFootingSectionDimType nType ) {
    double _result = 0;
    HRESULT _hr = get_Dim(nType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8395)
inline void IRConcrContinuousFootingSegment::PutDim ( enum IRConcrContinuousFootingSectionDimType nType, double ret ) {
    HRESULT _hr = put_Dim(nType, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrContinuousFootingSupport wrapper method implementations
//

#pragma implementation_key(8396)
inline double IRConcrContinuousFootingSupport::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8397)
inline void IRConcrContinuousFootingSupport::PutWidth ( double ret ) {
    HRESULT _hr = put_Width(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8398)
inline _bstr_t IRConcrContinuousFootingSupport::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8399)
inline void IRConcrContinuousFootingSupport::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8400)
inline enum IRConcrContinuousFootingSupportMaterialType IRConcrContinuousFootingSupport::GetMaterialType ( ) {
    enum IRConcrContinuousFootingSupportMaterialType _result;
    HRESULT _hr = get_MaterialType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8401)
inline void IRConcrContinuousFootingSupport::PutMaterialType ( enum IRConcrContinuousFootingSupportMaterialType ret ) {
    HRESULT _hr = put_MaterialType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrContinuousFootingSpan wrapper method implementations
//

#pragma implementation_key(8402)
inline short IRConcrContinuousFootingSpan::GetSegmentNumber ( ) {
    short _result = 0;
    HRESULT _hr = get_SegmentNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8403)
inline void IRConcrContinuousFootingSpan::PutSegmentNumber ( short ret ) {
    HRESULT _hr = put_SegmentNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8404)
inline IRConcrContinuousFootingSegmentPtr IRConcrContinuousFootingSpan::Getsegment ( short nSegmentNumber ) {
    struct IRConcrContinuousFootingSegment * _result = 0;
    HRESULT _hr = get_segment(nSegmentNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrContinuousFootingSegmentPtr(_result, false);
}

#pragma implementation_key(8405)
inline double IRConcrContinuousFootingSpan::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8406)
inline void IRConcrContinuousFootingSpan::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8407)
inline IRConcrContinuousFootingSupportPtr IRConcrContinuousFootingSpan::GetLeftSupport ( ) {
    struct IRConcrContinuousFootingSupport * _result = 0;
    HRESULT _hr = get_LeftSupport(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrContinuousFootingSupportPtr(_result, false);
}

#pragma implementation_key(8408)
inline IRConcrContinuousFootingSupportPtr IRConcrContinuousFootingSpan::GetRightSupport ( ) {
    struct IRConcrContinuousFootingSupport * _result = 0;
    HRESULT _hr = get_RightSupport(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrContinuousFootingSupportPtr(_result, false);
}

#pragma implementation_key(8409)
inline _bstr_t IRConcrContinuousFootingSpan::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8410)
inline void IRConcrContinuousFootingSpan::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8411)
inline double IRConcrContinuousFootingSpan::GetCalculationLength ( ) {
    double _result = 0;
    HRESULT _hr = get_CalculationLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrContinuousFootingGeometry wrapper method implementations
//

#pragma implementation_key(8412)
inline double IRConcrContinuousFootingGeometry::GetConcreteVolume ( ) {
    double _result = 0;
    HRESULT _hr = get_ConcreteVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8413)
inline double IRConcrContinuousFootingGeometry::GetShutteringArea ( ) {
    double _result = 0;
    HRESULT _hr = get_ShutteringArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8414)
inline short IRConcrContinuousFootingGeometry::GetSpanNumber ( ) {
    short _result = 0;
    HRESULT _hr = get_SpanNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8415)
inline void IRConcrContinuousFootingGeometry::PutSpanNumber ( short ret ) {
    HRESULT _hr = put_SpanNumber(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8416)
inline IRConcrContinuousFootingSpanPtr IRConcrContinuousFootingGeometry::GetSpan ( short nSpanNo ) {
    struct IRConcrContinuousFootingSpan * _result = 0;
    HRESULT _hr = get_Span(nSpanNo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrContinuousFootingSpanPtr(_result, false);
}

#pragma implementation_key(8417)
inline VARIANT_BOOL IRConcrContinuousFootingGeometry::GetLeftCantilever ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LeftCantilever(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8418)
inline void IRConcrContinuousFootingGeometry::PutLeftCantilever ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_LeftCantilever(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8419)
inline VARIANT_BOOL IRConcrContinuousFootingGeometry::GetRightCantilever ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RightCantilever(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8420)
inline void IRConcrContinuousFootingGeometry::PutRightCantilever ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_RightCantilever(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8421)
inline VARIANT_BOOL IRConcrContinuousFootingGeometry::GetAutoNameSpans ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoNameSpans(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8422)
inline void IRConcrContinuousFootingGeometry::PutAutoNameSpans ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AutoNameSpans(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8423)
inline VARIANT_BOOL IRConcrContinuousFootingGeometry::GetAutoNameSupports ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoNameSupports(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8424)
inline void IRConcrContinuousFootingGeometry::PutAutoNameSupports ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_AutoNameSupports(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8425)
inline HRESULT IRConcrContinuousFootingGeometry::UpdateInternalGeometryData ( ) {
    HRESULT _hr = raw_UpdateInternalGeometryData();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRConcrContinuousFooting wrapper method implementations
//

#pragma implementation_key(8426)
inline IRConcrReinforcementPtr IRConcrContinuousFooting::GetReinforcement ( ) {
    struct IRConcrReinforcement * _result = 0;
    HRESULT _hr = get_Reinforcement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcementPtr(_result, false);
}

#pragma implementation_key(8427)
inline IRConcrSteelPtr IRConcrContinuousFooting::GetSteel ( ) {
    struct IRConcrSteel * _result = 0;
    HRESULT _hr = get_Steel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelPtr(_result, false);
}

#pragma implementation_key(8428)
inline IRConcrConcretePtr IRConcrContinuousFooting::GetConcrete ( ) {
    struct IRConcrConcrete * _result = 0;
    HRESULT _hr = get_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrConcretePtr(_result, false);
}

#pragma implementation_key(8429)
inline IRConcrContinuousFootingGeometryPtr IRConcrContinuousFooting::GetGeometry ( ) {
    struct IRConcrContinuousFootingGeometry * _result = 0;
    HRESULT _hr = get_Geometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrContinuousFootingGeometryPtr(_result, false);
}

#pragma implementation_key(8430)
inline short IRConcrContinuousFooting::GetStructureUserNoCount ( ) {
    short _result = 0;
    HRESULT _hr = get_StructureUserNoCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8431)
inline void IRConcrContinuousFooting::PutStructureUserNoCount ( short ret ) {
    HRESULT _hr = put_StructureUserNoCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8432)
inline long IRConcrContinuousFooting::GetStructureUserNo ( short nIdx ) {
    long _result = 0;
    HRESULT _hr = get_StructureUserNo(nIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8433)
inline void IRConcrContinuousFooting::PutStructureUserNo ( short nIdx, long ret ) {
    HRESULT _hr = put_StructureUserNo(nIdx, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8434)
inline IRConcrBeamImportOptionsPtr IRConcrContinuousFooting::GetImportOptions ( ) {
    struct IRConcrBeamImportOptions * _result = 0;
    HRESULT _hr = get_ImportOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamImportOptionsPtr(_result, false);
}

#pragma implementation_key(8435)
inline IRConcrBeamPatternOptionsPtr IRConcrContinuousFooting::GetPatternOptions ( ) {
    struct IRConcrBeamPatternOptions * _result = 0;
    HRESULT _hr = get_PatternOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamPatternOptionsPtr(_result, false);
}

#pragma implementation_key(8436)
inline IRConcrBeamCalcOptionsPtr IRConcrContinuousFooting::GetCalculationOptions ( ) {
    struct IRConcrBeamCalcOptions * _result = 0;
    HRESULT _hr = get_CalculationOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrBeamCalcOptionsPtr(_result, false);
}

#pragma implementation_key(8437)
inline _bstr_t IRConcrContinuousFooting::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8438)
inline VARIANT_BOOL IRConcrContinuousFooting::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8439)
inline long IRConcrContinuousFooting::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8440)
inline VARIANT_BOOL IRConcrContinuousFooting::CreateCalculationNoteRtf ( _bstr_t _fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateCalculationNoteRtf(_fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8441)
inline HRESULT IRConcrContinuousFooting::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8442)
inline HRESULT IRConcrContinuousFooting::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8443)
inline long IRConcrContinuousFooting::Verify ( VARIANT_BOOL _showErrors ) {
    long _result = 0;
    HRESULT _hr = raw_Verify(_showErrors, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8444)
inline VARIANT_BOOL IRConcrContinuousFooting::Calculate ( VARIANT_BOOL _createReinforcement ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Calculate(_createReinforcement, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8445)
inline VARIANT_BOOL IRConcrContinuousFooting::GetIsSelected ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSelected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8446)
inline void IRConcrContinuousFooting::PutIsSelected ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSelected(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8447)
inline long IRConcrContinuousFooting::GetNumberOfElements ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfElements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8448)
inline void IRConcrContinuousFooting::PutNumberOfElements ( long ret ) {
    HRESULT _hr = put_NumberOfElements(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrFootingPattern wrapper method implementations
//

#pragma implementation_key(8449)
inline double IRConcrFootingPattern::GetDiameter1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8450)
inline void IRConcrFootingPattern::PutDiameter1 ( double ret ) {
    HRESULT _hr = put_Diameter1(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8451)
inline double IRConcrFootingPattern::GetDiameter2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8452)
inline void IRConcrFootingPattern::PutDiameter2 ( double ret ) {
    HRESULT _hr = put_Diameter2(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8453)
inline double IRConcrFootingPattern::GetSpacing1Min ( ) {
    double _result = 0;
    HRESULT _hr = get_Spacing1Min(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8454)
inline void IRConcrFootingPattern::PutSpacing1Min ( double ret ) {
    HRESULT _hr = put_Spacing1Min(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8455)
inline double IRConcrFootingPattern::GetSpacing2Min ( ) {
    double _result = 0;
    HRESULT _hr = get_Spacing2Min(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8456)
inline void IRConcrFootingPattern::PutSpacing2Min ( double ret ) {
    HRESULT _hr = put_Spacing2Min(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8457)
inline double IRConcrFootingPattern::GetSpacing1Max ( ) {
    double _result = 0;
    HRESULT _hr = get_Spacing1Max(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8458)
inline void IRConcrFootingPattern::PutSpacing1Max ( double ret ) {
    HRESULT _hr = put_Spacing1Max(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8459)
inline double IRConcrFootingPattern::GetSpacing2Max ( ) {
    double _result = 0;
    HRESULT _hr = get_Spacing2Max(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8460)
inline void IRConcrFootingPattern::PutSpacing2Max ( double ret ) {
    HRESULT _hr = put_Spacing2Max(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrFootingCalculationOptions wrapper method implementations
//

#pragma implementation_key(8461)
inline double IRConcrFootingCalculationOptions::GetCover ( ) {
    double _result = 0;
    HRESULT _hr = get_Cover(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8462)
inline void IRConcrFootingCalculationOptions::PutCover ( double ret ) {
    HRESULT _hr = put_Cover(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8463)
inline double IRConcrFootingCalculationOptions::GetPierCover ( ) {
    double _result = 0;
    HRESULT _hr = get_PierCover(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8464)
inline void IRConcrFootingCalculationOptions::PutPierCover ( double ret ) {
    HRESULT _hr = put_PierCover(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8465)
inline double IRConcrFootingCalculationOptions::GetNominalCover ( ) {
    double _result = 0;
    HRESULT _hr = get_NominalCover(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8466)
inline double IRConcrFootingCalculationOptions::GetNominalPierCover ( ) {
    double _result = 0;
    HRESULT _hr = get_NominalPierCover(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrFootingResults wrapper method implementations
//

#pragma implementation_key(8467)
inline double IRConcrFootingResults::GetAX ( ) {
    double _result = 0;
    HRESULT _hr = get_AX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8468)
inline void IRConcrFootingResults::PutAX ( double ret ) {
    HRESULT _hr = put_AX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8469)
inline double IRConcrFootingResults::GetAY ( ) {
    double _result = 0;
    HRESULT _hr = get_AY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8470)
inline void IRConcrFootingResults::PutAY ( double ret ) {
    HRESULT _hr = put_AY(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8471)
inline double IRConcrFootingResults::Getval ( enum IRConcrFootResultType _type ) {
    double _result = 0;
    HRESULT _hr = get_val(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8472)
inline void IRConcrFootingResults::Putval ( enum IRConcrFootResultType _type, double ret ) {
    HRESULT _hr = put_val(_type, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrFootingGround wrapper method implementations
//

#pragma implementation_key(8473)
inline double IRConcrFootingGround::GetSoilLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_SoilLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8474)
inline void IRConcrFootingGround::PutSoilLevel ( double ret ) {
    HRESULT _hr = put_SoilLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8475)
inline double IRConcrFootingGround::GetColumnPierLevel ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnPierLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8476)
inline void IRConcrFootingGround::PutColumnPierLevel ( double ret ) {
    HRESULT _hr = put_ColumnPierLevel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrFootingGeometry wrapper method implementations
//

#pragma implementation_key(8477)
inline enum IRConcrFootingShapeType IRConcrFootingGeometry::GetShape ( ) {
    enum IRConcrFootingShapeType _result;
    HRESULT _hr = get_Shape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8478)
inline void IRConcrFootingGeometry::PutShape ( enum IRConcrFootingShapeType ret ) {
    HRESULT _hr = put_Shape(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8479)
inline enum IRConcrFootingType IRConcrFootingGeometry::GetType ( ) {
    enum IRConcrFootingType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8480)
inline void IRConcrFootingGeometry::PutType ( enum IRConcrFootingType ret ) {
    HRESULT _hr = put_Type(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8481)
inline double IRConcrFootingGeometry::GetShutteringArea ( ) {
    double _result = 0;
    HRESULT _hr = get_ShutteringArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8482)
inline double IRConcrFootingGeometry::GetConcreteVolume ( ) {
    double _result = 0;
    HRESULT _hr = get_ConcreteVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8483)
inline double IRConcrFootingGeometry::GetDim ( enum IRConcrFootingDimType _dimType ) {
    double _result = 0;
    HRESULT _hr = raw_GetDim(_dimType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8484)
inline HRESULT IRConcrFootingGeometry::SetDim ( enum IRConcrFootingDimType _dimType, double _val ) {
    HRESULT _hr = raw_SetDim(_dimType, _val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8485)
inline enum IRConcrFootingPierType IRConcrFootingGeometry::GetPierType ( ) {
    enum IRConcrFootingPierType _result;
    HRESULT _hr = get_PierType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8486)
inline void IRConcrFootingGeometry::PutPierType ( enum IRConcrFootingPierType ret ) {
    HRESULT _hr = put_PierType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrFooting wrapper method implementations
//

#pragma implementation_key(8487)
inline IRConcrFootingGeometryPtr IRConcrFooting::GetGeometry ( ) {
    struct IRConcrFootingGeometry * _result = 0;
    HRESULT _hr = get_Geometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrFootingGeometryPtr(_result, false);
}

#pragma implementation_key(8488)
inline IRConcrFootingGroundPtr IRConcrFooting::GetGround ( ) {
    struct IRConcrFootingGround * _result = 0;
    HRESULT _hr = get_Ground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrFootingGroundPtr(_result, false);
}

#pragma implementation_key(8489)
inline IRConcrFootingLoadsPtr IRConcrFooting::GetLoads ( ) {
    struct IRConcrFootingLoads * _result = 0;
    HRESULT _hr = get_Loads(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrFootingLoadsPtr(_result, false);
}

#pragma implementation_key(8490)
inline IRConcrFootingResultsPtr IRConcrFooting::GetResults ( ) {
    struct IRConcrFootingResults * _result = 0;
    HRESULT _hr = get_Results(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrFootingResultsPtr(_result, false);
}

#pragma implementation_key(8491)
inline IRConcrReinforcementPtr IRConcrFooting::GetReinforcement ( ) {
    struct IRConcrReinforcement * _result = 0;
    HRESULT _hr = get_Reinforcement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcementPtr(_result, false);
}

#pragma implementation_key(8492)
inline IRConcrSteelPtr IRConcrFooting::GetSteel ( ) {
    struct IRConcrSteel * _result = 0;
    HRESULT _hr = get_Steel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelPtr(_result, false);
}

#pragma implementation_key(8493)
inline IRConcrConcretePtr IRConcrFooting::GetConcrete ( ) {
    struct IRConcrConcrete * _result = 0;
    HRESULT _hr = get_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrConcretePtr(_result, false);
}

#pragma implementation_key(8494)
inline IRConcrFootingCalculationOptionsPtr IRConcrFooting::GetCalculationOptions ( ) {
    struct IRConcrFootingCalculationOptions * _result = 0;
    HRESULT _hr = get_CalculationOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrFootingCalculationOptionsPtr(_result, false);
}

#pragma implementation_key(8495)
inline IRConcrFootingPatternPtr IRConcrFooting::GetPattern ( ) {
    struct IRConcrFootingPattern * _result = 0;
    HRESULT _hr = get_Pattern(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrFootingPatternPtr(_result, false);
}

#pragma implementation_key(8496)
inline short IRConcrFooting::GetStructureUserNoCount ( ) {
    short _result = 0;
    HRESULT _hr = get_StructureUserNoCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8497)
inline void IRConcrFooting::PutStructureUserNoCount ( short ret ) {
    HRESULT _hr = put_StructureUserNoCount(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8498)
inline long IRConcrFooting::GetStructureUserNo ( short nIdx ) {
    long _result = 0;
    HRESULT _hr = get_StructureUserNo(nIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8499)
inline void IRConcrFooting::PutStructureUserNo ( short nIdx, long ret ) {
    HRESULT _hr = put_StructureUserNo(nIdx, ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8500)
inline _bstr_t IRConcrFooting::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8501)
inline VARIANT_BOOL IRConcrFooting::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8502)
inline long IRConcrFooting::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8503)
inline VARIANT_BOOL IRConcrFooting::CreateCalculationNoteRtf ( _bstr_t _fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateCalculationNoteRtf(_fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8504)
inline HRESULT IRConcrFooting::DisplayDrawing ( ) {
    HRESULT _hr = raw_DisplayDrawing();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8505)
inline HRESULT IRConcrFooting::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8506)
inline HRESULT IRConcrFooting::CreateReinforcement ( ) {
    HRESULT _hr = raw_CreateReinforcement();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8507)
inline HRESULT IRConcrFooting::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8508)
inline long IRConcrFooting::Verify ( VARIANT_BOOL _showErrors ) {
    long _result = 0;
    HRESULT _hr = raw_Verify(_showErrors, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8509)
inline VARIANT_BOOL IRConcrFooting::Calculate ( VARIANT_BOOL _createReinforcement ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Calculate(_createReinforcement, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8510)
inline VARIANT_BOOL IRConcrFooting::CreateFromNodes ( _bstr_t _selText ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateFromNodes(_selText, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8511)
inline long IRConcrFooting::GetNumberOfElements ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfElements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8512)
inline void IRConcrFooting::PutNumberOfElements ( long ret ) {
    HRESULT _hr = put_NumberOfElements(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8513)
inline double IRConcrFooting::GetFootRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_FootRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8514)
inline void IRConcrFooting::PutFootRotation ( double ret ) {
    HRESULT _hr = put_FootRotation(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8515)
inline VARIANT_BOOL IRConcrFooting::GetIsSelected ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSelected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8516)
inline void IRConcrFooting::PutIsSelected ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSelected(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrDrawingBarGroup wrapper method implementations
//

#pragma implementation_key(8517)
inline long IRConcrDrawingBarGroup::GetBarCount ( ) {
    long _result = 0;
    HRESULT _hr = get_BarCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8518)
inline IRConcrReinforcingBarPtr IRConcrDrawingBarGroup::GetBar ( long nBarIndex ) {
    struct IRConcrReinforcingBar * _result = 0;
    HRESULT _hr = get_Bar(nBarIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcingBarPtr(_result, false);
}

//
// interface IRConcrDrawing wrapper method implementations
//

#pragma implementation_key(8519)
inline long IRConcrDrawing::GetGroupCount ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8520)
inline IRConcrDrawingBarGroupPtr IRConcrDrawing::Getgroup ( long nIndex ) {
    struct IRConcrDrawingBarGroup * _result = 0;
    HRESULT _hr = get_group(nIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrDrawingBarGroupPtr(_result, false);
}

//
// interface IRConcrSlabWizard wrapper method implementations
//

#pragma implementation_key(8521)
inline double IRConcrSlabWizard::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8522)
inline void IRConcrSlabWizard::PutThickness ( double ret ) {
    HRESULT _hr = put_Thickness(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8523)
inline VARIANT_BOOL IRConcrSlabWizard::Finish ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Finish(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8524)
inline HRESULT IRConcrSlabWizard::AddSlabNode ( double _x, double _y ) {
    HRESULT _hr = raw_AddSlabNode(_x, _y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8525)
inline HRESULT IRConcrSlabWizard::AddOpening ( ) {
    HRESULT _hr = raw_AddOpening();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8526)
inline HRESULT IRConcrSlabWizard::AddOpeningNode ( double _x, double _y ) {
    HRESULT _hr = raw_AddOpeningNode(_x, _y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8527)
inline HRESULT IRConcrSlabWizard::AddColumnSupport ( double _x, double _y, double _b, double _h, double _alpha ) {
    HRESULT _hr = raw_AddColumnSupport(_x, _y, _b, _h, _alpha);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8528)
inline HRESULT IRConcrSlabWizard::AddWallSupport ( double _x1, double _y1, double _x2, double _y2, double _thickness, enum IRConcrSlabSupportType _type ) {
    HRESULT _hr = raw_AddWallSupport(_x1, _y1, _x2, _y2, _thickness, _type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IRConcrSlabPatternOptions wrapper method implementations
//

#pragma implementation_key(8529)
inline enum IRConcrSlabRnfType IRConcrSlabPatternOptions::GetReinforcementType ( ) {
    enum IRConcrSlabRnfType _result;
    HRESULT _hr = get_ReinforcementType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8530)
inline void IRConcrSlabPatternOptions::PutReinforcementType ( enum IRConcrSlabRnfType ret ) {
    HRESULT _hr = put_ReinforcementType(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8531)
inline enum IRConcrSlabRnfSegmentType IRConcrSlabPatternOptions::GetReinforcementSegment ( ) {
    enum IRConcrSlabRnfSegmentType _result;
    HRESULT _hr = get_ReinforcementSegment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8532)
inline void IRConcrSlabPatternOptions::PutReinforcementSegment ( enum IRConcrSlabRnfSegmentType ret ) {
    HRESULT _hr = put_ReinforcementSegment(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrSlabGeometry wrapper method implementations
//

#pragma implementation_key(8533)
inline double IRConcrSlabGeometry::GetShutteringArea ( ) {
    double _result = 0;
    HRESULT _hr = get_ShutteringArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8534)
inline double IRConcrSlabGeometry::GetConcreteVolume ( ) {
    double _result = 0;
    HRESULT _hr = get_ConcreteVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRConcrSlabCalculationOptions wrapper method implementations
//

#pragma implementation_key(8535)
inline double IRConcrSlabCalculationOptions::GetCover ( ) {
    double _result = 0;
    HRESULT _hr = get_Cover(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8536)
inline void IRConcrSlabCalculationOptions::PutCover ( double ret ) {
    HRESULT _hr = put_Cover(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8537)
inline double IRConcrSlabCalculationOptions::GetCoverLateral ( ) {
    double _result = 0;
    HRESULT _hr = get_CoverLateral(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8538)
inline void IRConcrSlabCalculationOptions::PutCoverLateral ( double ret ) {
    HRESULT _hr = put_CoverLateral(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrSlab wrapper method implementations
//

#pragma implementation_key(8539)
inline IRConcrReinforcementPtr IRConcrSlab::GetReinforcement ( ) {
    struct IRConcrReinforcement * _result = 0;
    HRESULT _hr = get_Reinforcement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcementPtr(_result, false);
}

#pragma implementation_key(8540)
inline IRConcrSteelPtr IRConcrSlab::GetSteel ( ) {
    struct IRConcrSteel * _result = 0;
    HRESULT _hr = get_Steel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelPtr(_result, false);
}

#pragma implementation_key(8541)
inline IRConcrConcretePtr IRConcrSlab::GetConcrete ( ) {
    struct IRConcrConcrete * _result = 0;
    HRESULT _hr = get_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrConcretePtr(_result, false);
}

#pragma implementation_key(8542)
inline IRConcrSlabGeometryPtr IRConcrSlab::GetGeometry ( ) {
    struct IRConcrSlabGeometry * _result = 0;
    HRESULT _hr = get_Geometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSlabGeometryPtr(_result, false);
}

#pragma implementation_key(8543)
inline IRConcrSlabCalculationOptionsPtr IRConcrSlab::GetCalculationOptions ( ) {
    struct IRConcrSlabCalculationOptions * _result = 0;
    HRESULT _hr = get_CalculationOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSlabCalculationOptionsPtr(_result, false);
}

#pragma implementation_key(8544)
inline IRConcrSlabPatternOptionsPtr IRConcrSlab::GetPatternOptions ( ) {
    struct IRConcrSlabPatternOptions * _result = 0;
    HRESULT _hr = get_PatternOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSlabPatternOptionsPtr(_result, false);
}

#pragma implementation_key(8545)
inline _bstr_t IRConcrSlab::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8546)
inline long IRConcrSlab::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8547)
inline VARIANT_BOOL IRConcrSlab::CreateCalculationNoteRtf ( _bstr_t _fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateCalculationNoteRtf(_fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8548)
inline HRESULT IRConcrSlab::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8549)
inline VARIANT_BOOL IRConcrSlab::CreateFromObjects ( _bstr_t _selText ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateFromObjects(_selText, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8550)
inline HRESULT IRConcrSlab::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8551)
inline IRConcrSlabWizardPtr IRConcrSlab::StartWizard ( ) {
    struct IRConcrSlabWizard * _result = 0;
    HRESULT _hr = raw_StartWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSlabWizardPtr(_result, false);
}

#pragma implementation_key(8552)
inline VARIANT_BOOL IRConcrSlab::GetIsSelected ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSelected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8553)
inline void IRConcrSlab::PutIsSelected ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSelected(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrWallOpening wrapper method implementations
//

#pragma implementation_key(8554)
inline _bstr_t IRConcrWallOpening::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8555)
inline void IRConcrWallOpening::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8556)
inline double IRConcrWallOpening::GetLX ( ) {
    double _result = 0;
    HRESULT _hr = get_LX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8557)
inline void IRConcrWallOpening::PutLX ( double ret ) {
    HRESULT _hr = put_LX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8558)
inline double IRConcrWallOpening::GetLz ( ) {
    double _result = 0;
    HRESULT _hr = get_Lz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8559)
inline void IRConcrWallOpening::PutLz ( double ret ) {
    HRESULT _hr = put_Lz(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8560)
inline double IRConcrWallOpening::GetPosX ( ) {
    double _result = 0;
    HRESULT _hr = get_PosX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8561)
inline void IRConcrWallOpening::PutPosX ( double ret ) {
    HRESULT _hr = put_PosX(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8562)
inline double IRConcrWallOpening::GetPosZ ( ) {
    double _result = 0;
    HRESULT _hr = get_PosZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8563)
inline void IRConcrWallOpening::PutPosZ ( double ret ) {
    HRESULT _hr = put_PosZ(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrWallOpenings wrapper method implementations
//

#pragma implementation_key(8564)
inline IUnknownPtr IRConcrWallOpenings::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8565)
inline IRConcrWallOpeningPtr IRConcrWallOpenings::Getitem ( long index ) {
    struct IRConcrWallOpening * _result = 0;
    HRESULT _hr = get_item(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrWallOpeningPtr(_result, false);
}

#pragma implementation_key(8566)
inline long IRConcrWallOpenings::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8567)
inline IRConcrWallOpeningPtr IRConcrWallOpenings::Add ( ) {
    struct IRConcrWallOpening * _result = 0;
    HRESULT _hr = raw_Add(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrWallOpeningPtr(_result, false);
}

//
// interface IRConcrWallGeometry wrapper method implementations
//

#pragma implementation_key(8568)
inline double IRConcrWallGeometry::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8569)
inline void IRConcrWallGeometry::PutLength ( double ret ) {
    HRESULT _hr = put_Length(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8570)
inline double IRConcrWallGeometry::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8571)
inline void IRConcrWallGeometry::PutHeight ( double ret ) {
    HRESULT _hr = put_Height(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8572)
inline double IRConcrWallGeometry::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8573)
inline void IRConcrWallGeometry::PutThickness ( double ret ) {
    HRESULT _hr = put_Thickness(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8574)
inline _bstr_t IRConcrWallGeometry::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8575)
inline void IRConcrWallGeometry::PutName ( _bstr_t ret ) {
    HRESULT _hr = put_Name(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8576)
inline double IRConcrWallGeometry::GetLeftBoundaryThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_LeftBoundaryThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8577)
inline void IRConcrWallGeometry::PutLeftBoundaryThickness ( double ret ) {
    HRESULT _hr = put_LeftBoundaryThickness(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8578)
inline double IRConcrWallGeometry::GetRightBoundaryThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_RightBoundaryThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8579)
inline void IRConcrWallGeometry::PutRightBoundaryThickness ( double ret ) {
    HRESULT _hr = put_RightBoundaryThickness(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8580)
inline double IRConcrWallGeometry::GetLeftBoundaryLength ( ) {
    double _result = 0;
    HRESULT _hr = get_LeftBoundaryLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8581)
inline void IRConcrWallGeometry::PutLeftBoundaryLength ( double ret ) {
    HRESULT _hr = put_LeftBoundaryLength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8582)
inline double IRConcrWallGeometry::GetRightBoundaryLength ( ) {
    double _result = 0;
    HRESULT _hr = get_RightBoundaryLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8583)
inline void IRConcrWallGeometry::PutRightBoundaryLength ( double ret ) {
    HRESULT _hr = put_RightBoundaryLength(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8584)
inline IRConcrWallOpeningsPtr IRConcrWallGeometry::GetOpenings ( ) {
    struct IRConcrWallOpenings * _result = 0;
    HRESULT _hr = get_Openings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrWallOpeningsPtr(_result, false);
}

//
// interface IRConcrWall wrapper method implementations
//

#pragma implementation_key(8585)
inline IRConcrReinforcementPtr IRConcrWall::GetReinforcement ( ) {
    struct IRConcrReinforcement * _result = 0;
    HRESULT _hr = get_Reinforcement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcementPtr(_result, false);
}

#pragma implementation_key(8586)
inline IRConcrSteelPtr IRConcrWall::GetSteel ( ) {
    struct IRConcrSteel * _result = 0;
    HRESULT _hr = get_Steel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelPtr(_result, false);
}

#pragma implementation_key(8587)
inline IRConcrConcretePtr IRConcrWall::GetConcrete ( ) {
    struct IRConcrConcrete * _result = 0;
    HRESULT _hr = get_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrConcretePtr(_result, false);
}

#pragma implementation_key(8588)
inline _bstr_t IRConcrWall::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8589)
inline IRConcrWallGeometryPtr IRConcrWall::GetGeometry ( ) {
    struct IRConcrWallGeometry * _result = 0;
    HRESULT _hr = get_Geometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrWallGeometryPtr(_result, false);
}

#pragma implementation_key(8590)
inline long IRConcrWall::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8591)
inline VARIANT_BOOL IRConcrWall::CreateCalculationNoteRtf ( _bstr_t _fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateCalculationNoteRtf(_fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8592)
inline HRESULT IRConcrWall::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8593)
inline VARIANT_BOOL IRConcrWall::CreateFromObjects ( _bstr_t _selTaxt ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateFromObjects(_selTaxt, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8594)
inline HRESULT IRConcrWall::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8595)
inline long IRConcrWall::Verify ( VARIANT_BOOL _showErrors ) {
    long _result = 0;
    HRESULT _hr = raw_Verify(_showErrors, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8596)
inline VARIANT_BOOL IRConcrWall::Calculate ( VARIANT_BOOL _createReinforcement ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Calculate(_createReinforcement, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8597)
inline VARIANT_BOOL IRConcrWall::GetIsSelected ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSelected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8598)
inline void IRConcrWall::PutIsSelected ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSelected(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRConcrDeepBeam wrapper method implementations
//

#pragma implementation_key(8599)
inline IRConcrReinforcementPtr IRConcrDeepBeam::GetReinforcement ( ) {
    struct IRConcrReinforcement * _result = 0;
    HRESULT _hr = get_Reinforcement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrReinforcementPtr(_result, false);
}

#pragma implementation_key(8600)
inline IRConcrSteelPtr IRConcrDeepBeam::GetSteel ( ) {
    struct IRConcrSteel * _result = 0;
    HRESULT _hr = get_Steel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrSteelPtr(_result, false);
}

#pragma implementation_key(8601)
inline IRConcrConcretePtr IRConcrDeepBeam::GetConcrete ( ) {
    struct IRConcrConcrete * _result = 0;
    HRESULT _hr = get_Concrete(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrConcretePtr(_result, false);
}

#pragma implementation_key(8602)
inline _bstr_t IRConcrDeepBeam::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8603)
inline VARIANT_BOOL IRConcrDeepBeam::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8604)
inline IRConcrDeepBeamGeometryPtr IRConcrDeepBeam::GetGeometry ( ) {
    struct IRConcrDeepBeamGeometry * _result = 0;
    HRESULT _hr = get_Geometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrDeepBeamGeometryPtr(_result, false);
}

#pragma implementation_key(8605)
inline long IRConcrDeepBeam::GetUniqueId ( ) {
    long _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8606)
inline VARIANT_BOOL IRConcrDeepBeam::CreateCalculationNoteRtf ( _bstr_t _fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateCalculationNoteRtf(_fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8607)
inline HRESULT IRConcrDeepBeam::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8608)
inline VARIANT_BOOL IRConcrDeepBeam::CreateFromObjects ( _bstr_t _selText ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateFromObjects(_selText, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8609)
inline HRESULT IRConcrDeepBeam::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8610)
inline VARIANT_BOOL IRConcrDeepBeam::GetIsSelected ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSelected(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8611)
inline void IRConcrDeepBeam::PutIsSelected ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_IsSelected(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotStructure wrapper method implementations
//

#pragma implementation_key(8612)
inline IRobotLabelServerPtr IRobotStructure::GetLabels ( ) {
    struct IRobotLabelServer * _result = 0;
    HRESULT _hr = get_Labels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotLabelServerPtr(_result, false);
}

#pragma implementation_key(8613)
inline IRobotNodeServerPtr IRobotStructure::GetNodes ( ) {
    struct IRobotNodeServer * _result = 0;
    HRESULT _hr = get_Nodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotNodeServerPtr(_result, false);
}

#pragma implementation_key(8614)
inline IRobotBarServerPtr IRobotStructure::GetBars ( ) {
    struct IRobotBarServer * _result = 0;
    HRESULT _hr = get_Bars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBarServerPtr(_result, false);
}

#pragma implementation_key(8615)
inline IRobotCaseServerPtr IRobotStructure::GetCases ( ) {
    struct IRobotCaseServer * _result = 0;
    HRESULT _hr = get_Cases(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCaseServerPtr(_result, false);
}

#pragma implementation_key(8616)
inline IRobotResultServerPtr IRobotStructure::GetResults ( ) {
    struct IRobotResultServer * _result = 0;
    HRESULT _hr = get_Results(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotResultServerPtr(_result, false);
}

#pragma implementation_key(8617)
inline IRobotSelectionFactoryPtr IRobotStructure::GetSelections ( ) {
    struct IRobotSelectionFactory * _result = 0;
    HRESULT _hr = get_Selections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotSelectionFactoryPtr(_result, false);
}

#pragma implementation_key(8618)
inline IRobotObjObjectServerPtr IRobotStructure::GetObjects ( ) {
    struct IRobotObjObjectServer * _result = 0;
    HRESULT _hr = get_Objects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotObjObjectServerPtr(_result, false);
}

#pragma implementation_key(8619)
inline IRobotFiniteElementServerPtr IRobotStructure::GetFiniteElems ( ) {
    struct IRobotFiniteElementServer * _result = 0;
    HRESULT _hr = get_FiniteElems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFiniteElementServerPtr(_result, false);
}

#pragma implementation_key(8620)
inline IRobotGroupServerPtr IRobotStructure::GetGroups ( ) {
    struct IRobotGroupServer * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGroupServerPtr(_result, false);
}

#pragma implementation_key(8621)
inline IRobotStructureEditToolsPtr IRobotStructure::GetEdit ( ) {
    struct IRobotStructureEditTools * _result = 0;
    HRESULT _hr = get_Edit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructureEditToolsPtr(_result, false);
}

#pragma implementation_key(8622)
inline IRobotStructureCachePtr IRobotStructure::CreateCache ( ) {
    struct IRobotStructureCache * _result = 0;
    HRESULT _hr = raw_CreateCache(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructureCachePtr(_result, false);
}

#pragma implementation_key(8623)
inline IRobotStructureApplyInfoPtr IRobotStructure::ApplyCache ( struct IRobotStructureCache * _struct_cache ) {
    struct IRobotStructureApplyInfo * _result = 0;
    HRESULT _hr = raw_ApplyCache(_struct_cache, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructureApplyInfoPtr(_result, false);
}

#pragma implementation_key(8624)
inline VARIANT_BOOL IRobotStructure::GetResultsFreeze ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ResultsFreeze(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8625)
inline void IRobotStructure::PutResultsFreeze ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_ResultsFreeze(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8626)
inline HRESULT IRobotStructure::ExportXml ( _bstr_t _input_xml, _bstr_t _output_xml ) {
    HRESULT _hr = raw_ExportXml(_input_xml, _output_xml);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8627)
inline IRobotStoreyMngrPtr IRobotStructure::GetStoreys ( ) {
    struct IRobotStoreyMngr * _result = 0;
    HRESULT _hr = get_Storeys(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStoreyMngrPtr(_result, false);
}

#pragma implementation_key(8628)
inline HRESULT IRobotStructure::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8629)
inline IRobotGroupObjectServerPtr IRobotStructure::GetGroupObjects ( ) {
    struct IRobotGroupObjectServer * _result = 0;
    HRESULT _hr = get_GroupObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotGroupObjectServerPtr(_result, false);
}

#pragma implementation_key(8630)
inline IRobotStructureQuantitySurveyPtr IRobotStructure::GetQuantitySurvey ( ) {
    struct IRobotStructureQuantitySurvey * _result = 0;
    HRESULT _hr = get_QuantitySurvey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructureQuantitySurveyPtr(_result, false);
}

#pragma implementation_key(8631)
inline HRESULT IRobotStructure::Merge ( struct IRobotStructureMergeData * _data, IUnknown * _params ) {
    HRESULT _hr = raw_Merge(_data, _params);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8632)
inline enum IRobotProjectType IRobotStructure::GetType ( ) {
    enum IRobotProjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8633)
inline IRobotParamServerPtr IRobotStructure::GetExtParams ( ) {
    struct IRobotParamServer * _result = 0;
    HRESULT _hr = get_ExtParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotParamServerPtr(_result, false);
}

#pragma implementation_key(8634)
inline VARIANT_BOOL IRobotStructure::GetIsCalcModelGenerated ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCalcModelGenerated(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotStructureMergeData wrapper method implementations
//

#pragma implementation_key(8635)
inline IRobotStructurePtr IRobotStructureMergeData::GetStructure ( ) {
    struct IRobotStructure * _result = 0;
    HRESULT _hr = get_Structure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructurePtr(_result, false);
}

#pragma implementation_key(8636)
inline VARIANT_BOOL IRobotStructureMergeData::CreateStructure ( enum IRobotProjectType _type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CreateStructure(_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8637)
inline VARIANT_BOOL IRobotStructureMergeData::LoadStructure ( _bstr_t _rtd_fpath ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadStructure(_rtd_fpath, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotKernel wrapper method implementations
//

#pragma implementation_key(8638)
inline double IRobotKernel::GetVersion ( ) {
    double _result = 0;
    HRESULT _hr = get_Version(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8639)
inline IRobotKernelPreferencesPtr IRobotKernel::GetPreferences ( ) {
    struct IRobotKernelPreferences * _result = 0;
    HRESULT _hr = get_Preferences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotKernelPreferencesPtr(_result, false);
}

#pragma implementation_key(8640)
inline IRobotProjectPreferencesPtr IRobotKernel::GetProjectPreferences ( ) {
    struct IRobotProjectPreferences * _result = 0;
    HRESULT _hr = get_ProjectPreferences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotProjectPreferencesPtr(_result, false);
}

#pragma implementation_key(8641)
inline IRobotStructurePtr IRobotKernel::GetStructure ( ) {
    struct IRobotStructure * _result = 0;
    HRESULT _hr = get_Structure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructurePtr(_result, false);
}

#pragma implementation_key(8642)
inline IRobotComponentFactoryPtr IRobotKernel::GetCmpntFactory ( ) {
    struct IRobotComponentFactory * _result = 0;
    HRESULT _hr = get_CmpntFactory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotComponentFactoryPtr(_result, false);
}

#pragma implementation_key(8643)
inline IRobotCalcEnginePtr IRobotKernel::GetCalcEngine ( ) {
    struct IRobotCalcEngine * _result = 0;
    HRESULT _hr = get_CalcEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCalcEnginePtr(_result, false);
}

#pragma implementation_key(8644)
inline _bstr_t IRobotKernel::GetProjectUniqueId ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProjectUniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8645)
inline VARIANT_BOOL IRobotKernel::ProjectNew ( enum IRobotProjectType _prj_type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ProjectNew(_prj_type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8646)
inline VARIANT_BOOL IRobotKernel::ProjectOpen ( _bstr_t _file_path ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ProjectOpen(_file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8647)
inline HRESULT IRobotKernel::ProjectSave ( ) {
    HRESULT _hr = raw_ProjectSave();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8648)
inline HRESULT IRobotKernel::ProjectSaveAs ( _bstr_t _file_path ) {
    HRESULT _hr = raw_ProjectSaveAs(_file_path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8649)
inline IDispatchPtr IRobotKernel::GetExtension ( _bstr_t _extmdl_name ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetExtension(_extmdl_name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8650)
inline IRobotAuthenticateServicePtr IRobotKernel::GetAuthenticateService ( ) {
    struct IRobotAuthenticateService * _result = 0;
    HRESULT _hr = get_AuthenticateService(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotAuthenticateServicePtr(_result, false);
}

#pragma implementation_key(8651)
inline VARIANT_BOOL IRobotKernel::ProjectNewFromTemplate ( _bstr_t _tmpl_file ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ProjectNewFromTemplate(_tmpl_file, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8652)
inline _bstr_t IRobotKernel::GetProgramVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProgramVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8653)
inline _bstr_t IRobotKernel::GetProgramName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProgramName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8654)
inline IRConcrCalcEnginePtr IRobotKernel::GetConcrReinfEngine ( ) {
    struct IRConcrCalcEngine * _result = 0;
    HRESULT _hr = get_ConcrReinfEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrCalcEnginePtr(_result, false);
}

#pragma implementation_key(8655)
inline _bstr_t IRobotKernel::GetProgramPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProgramPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8656)
inline enum IRobotActiveModelType IRobotKernel::GetProjectActiveModel ( ) {
    enum IRobotActiveModelType _result;
    HRESULT _hr = get_ProjectActiveModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8657)
inline void IRobotKernel::PutProjectActiveModel ( enum IRobotActiveModelType ret ) {
    HRESULT _hr = put_ProjectActiveModel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotProject wrapper method implementations
//

#pragma implementation_key(8658)
inline HRESULT IRobotProject::New ( enum IRobotProjectType pt ) {
    HRESULT _hr = raw_New(pt);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8659)
inline HRESULT IRobotProject::Open ( _bstr_t file_name ) {
    HRESULT _hr = raw_Open(file_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8660)
inline HRESULT IRobotProject::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8661)
inline HRESULT IRobotProject::SaveAs ( _bstr_t file_name ) {
    HRESULT _hr = raw_SaveAs(file_name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8662)
inline HRESULT IRobotProject::Close ( ) {
    HRESULT _hr = raw_Close();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8663)
inline IRobotProjectComponentMngrPtr IRobotProject::GetComponentMngr ( ) {
    struct IRobotProjectComponentMngr * _result = 0;
    HRESULT _hr = get_ComponentMngr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotProjectComponentMngrPtr(_result, false);
}

#pragma implementation_key(8664)
inline IRobotViewMngrPtr IRobotProject::GetViewMngr ( ) {
    struct IRobotViewMngr * _result = 0;
    HRESULT _hr = get_ViewMngr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotViewMngrPtr(_result, false);
}

#pragma implementation_key(8665)
inline IRobotPrintEnginePtr IRobotProject::GetPrintEngine ( ) {
    struct IRobotPrintEngine * _result = 0;
    HRESULT _hr = get_PrintEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPrintEnginePtr(_result, false);
}

#pragma implementation_key(8666)
inline IRobotStructurePtr IRobotProject::GetStructure ( ) {
    struct IRobotStructure * _result = 0;
    HRESULT _hr = get_Structure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructurePtr(_result, false);
}

#pragma implementation_key(8667)
inline _bstr_t IRobotProject::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8668)
inline _bstr_t IRobotProject::GetFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8669)
inline IRobotFileInsertParamsPtr IRobotProject::GetFileInsertParams ( ) {
    struct IRobotFileInsertParams * _result = 0;
    HRESULT _hr = get_FileInsertParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotFileInsertParamsPtr(_result, false);
}

#pragma implementation_key(8670)
inline IDispatchPtr IRobotProject::GetExtFileParams ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ExtFileParams(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8671)
inline long IRobotProject::ReadExtFileParams ( _bstr_t file_path, enum IRobotExternalFileFormat file_format ) {
    long _result = 0;
    HRESULT _hr = raw_ReadExtFileParams(file_path, file_format, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8672)
inline long IRobotProject::OpenExtFile ( _bstr_t file_path, enum IRobotExternalFileFormat format, long ignore_warnings ) {
    long _result = 0;
    HRESULT _hr = raw_OpenExtFile(file_path, format, ignore_warnings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8673)
inline HRESULT IRobotProject::SaveAsExtFile ( _bstr_t file_path, enum IRobotExternalFileFormat format ) {
    HRESULT _hr = raw_SaveAsExtFile(file_path, format);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8674)
inline IRobotCalcEnginePtr IRobotProject::GetCalcEngine ( ) {
    struct IRobotCalcEngine * _result = 0;
    HRESULT _hr = get_CalcEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotCalcEnginePtr(_result, false);
}

#pragma implementation_key(8675)
inline enum IRobotProjectType IRobotProject::GetType ( ) {
    enum IRobotProjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8676)
inline long IRobotProject::GetIsActive ( ) {
    long _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8677)
inline IRJointConnectionServerPtr IRobotProject::GetConnections ( ) {
    struct IRJointConnectionServer * _result = 0;
    HRESULT _hr = get_Connections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRJointConnectionServerPtr(_result, false);
}

#pragma implementation_key(8678)
inline _bstr_t IRobotProject::GetExtFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExtFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8679)
inline IRobotProjectPreferencesPtr IRobotProject::GetPreferences ( ) {
    struct IRobotProjectPreferences * _result = 0;
    HRESULT _hr = get_Preferences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotProjectPreferencesPtr(_result, false);
}

#pragma implementation_key(8680)
inline _bstr_t IRobotProject::GetUniqueId ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UniqueId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8681)
inline HRESULT IRobotProject::NewFromTemplate ( _bstr_t tmpl_file ) {
    HRESULT _hr = raw_NewFromTemplate(tmpl_file);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8682)
inline VARIANT_BOOL IRobotProject::InsertExtFile ( _bstr_t _file_path, enum IRobotExternalFileFormat _file_format, VARIANT_BOOL _ignore_warnings, VARIANT_BOOL _only_geometry ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_InsertExtFile(_file_path, _file_format, _ignore_warnings, _only_geometry, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8683)
inline IRDimServerPtr IRobotProject::GetDimServer ( ) {
    struct IRDimServer * _result = 0;
    HRESULT _hr = get_DimServer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRDimServerPtr(_result, false);
}

#pragma implementation_key(8684)
inline VARIANT_BOOL IRobotProject::SaveToFormat ( enum IRobotProjectSaveFormat _file_format, _bstr_t _file_path ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SaveToFormat(_file_format, _file_path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8685)
inline IRConcrCalcEnginePtr IRobotProject::GetConcrReinfEngine ( ) {
    struct IRConcrCalcEngine * _result = 0;
    HRESULT _hr = get_ConcrReinfEngine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRConcrCalcEnginePtr(_result, false);
}

#pragma implementation_key(8686)
inline IRobotStructuralAxisGridMngrPtr IRobotProject::GetAxisMngr ( ) {
    struct IRobotStructuralAxisGridMngr * _result = 0;
    HRESULT _hr = get_AxisMngr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotStructuralAxisGridMngrPtr(_result, false);
}

#pragma implementation_key(8687)
inline IRobotBackgroundServerPtr IRobotProject::GetBackgrounds ( ) {
    struct IRobotBackgroundServer * _result = 0;
    HRESULT _hr = get_Backgrounds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotBackgroundServerPtr(_result, false);
}

#pragma implementation_key(8688)
inline enum IRobotActiveModelType IRobotProject::GetActiveModel ( ) {
    enum IRobotActiveModelType _result;
    HRESULT _hr = get_ActiveModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8689)
inline void IRobotProject::PutActiveModel ( enum IRobotActiveModelType ret ) {
    HRESULT _hr = put_ActiveModel(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRobotApplication wrapper method implementations
//

#pragma implementation_key(8690)
inline long IRobotApplication::GetVisible ( ) {
    long _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8691)
inline void IRobotApplication::PutVisible ( long __MIDL__IRobotApplication0000 ) {
    HRESULT _hr = put_Visible(__MIDL__IRobotApplication0000);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8692)
inline long IRobotApplication::GetInteractive ( ) {
    long _result = 0;
    HRESULT _hr = get_Interactive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8693)
inline void IRobotApplication::PutInteractive ( long ret ) {
    HRESULT _hr = put_Interactive(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8694)
inline IRobotProjectPtr IRobotApplication::GetProject ( ) {
    struct IRobotProject * _result = 0;
    HRESULT _hr = get_Project(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotProjectPtr(_result, false);
}

#pragma implementation_key(8695)
inline double IRobotApplication::GetVersion ( ) {
    double _result = 0;
    HRESULT _hr = get_Version(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8696)
inline IRobotPreferencesPtr IRobotApplication::GetPreferences ( ) {
    struct IRobotPreferences * _result = 0;
    HRESULT _hr = get_Preferences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotPreferencesPtr(_result, false);
}

#pragma implementation_key(8697)
inline IRobotWindowPtr IRobotApplication::GetWindow ( ) {
    struct IRobotWindow * _result = 0;
    HRESULT _hr = get_Window(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotWindowPtr(_result, false);
}

#pragma implementation_key(8698)
inline HRESULT IRobotApplication::Quit ( enum IRobotQuitOption quit_option ) {
    HRESULT _hr = raw_Quit(quit_option);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8699)
inline IRobotComponentFactoryPtr IRobotApplication::GetCmpntFactory ( ) {
    struct IRobotComponentFactory * _result = 0;
    HRESULT _hr = get_CmpntFactory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotComponentFactoryPtr(_result, false);
}

#pragma implementation_key(8700)
inline IRobotKernelPtr IRobotApplication::GetKernel ( ) {
    struct IRobotKernel * _result = 0;
    HRESULT _hr = get_Kernel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRobotKernelPtr(_result, false);
}

#pragma implementation_key(8701)
inline _bstr_t IRobotApplication::GetProgramVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProgramVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8702)
inline VARIANT_BOOL IRobotApplication::GetUserControl ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UserControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8703)
inline void IRobotApplication::PutUserControl ( VARIANT_BOOL ret ) {
    HRESULT _hr = put_UserControl(ret);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8704)
inline VARIANT_BOOL IRobotApplication::GetIs360 ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Is360(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8705)
inline enum IRobotLicenseEntitlementStatus IRobotApplication::LicenseCheckEntitlement ( enum IRobotLicenseEntitlement _entitlement ) {
    enum IRobotLicenseEntitlementStatus _result;
    HRESULT _hr = raw_LicenseCheckEntitlement(_entitlement, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRobotAddIn wrapper method implementations
//

#pragma implementation_key(8706)
inline double IRobotAddIn::GetExpectedVersion ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetExpectedVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8707)
inline VARIANT_BOOL IRobotAddIn::Connect ( struct IRobotApplication * robot_app, long add_in_id, VARIANT_BOOL first_time ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Connect(robot_app, add_in_id, first_time, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8708)
inline long IRobotAddIn::InstallCommands ( struct IRobotCmdList * cmd_list ) {
    long _result = 0;
    HRESULT _hr = raw_InstallCommands(cmd_list, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8709)
inline VARIANT_BOOL IRobotAddIn::Disconnect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Disconnect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8710)
inline HRESULT IRobotAddIn::DoCommand ( long cmd_id ) {
    HRESULT _hr = raw_DoCommand(cmd_id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}
